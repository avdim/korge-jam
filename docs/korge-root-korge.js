(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'kotlin', 'korim-root-korim', 'klock-root-klock', 'korgw-root-korgw', 'korma-root-korma', 'korinject-root-korinject', 'korio-root-korio', 'klogger-root-klogger', 'kotlinx-coroutines-core', 'kds-root-kds', 'kmem-root-kmem', 'korau-root-korau'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('kotlin'), require('korim-root-korim'), require('klock-root-klock'), require('korgw-root-korgw'), require('korma-root-korma'), require('korinject-root-korinject'), require('korio-root-korio'), require('klogger-root-klogger'), require('kotlinx-coroutines-core'), require('kds-root-kds'), require('kmem-root-kmem'), require('korau-root-korau'));
  else {
    if (typeof kotlin === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korim-root-korim'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korim-root-korim' was not found. Please, check whether 'korim-root-korim' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['klock-root-klock'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'klock-root-klock' was not found. Please, check whether 'klock-root-klock' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korgw-root-korgw'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korgw-root-korgw' was not found. Please, check whether 'korgw-root-korgw' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korma-root-korma'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korma-root-korma' was not found. Please, check whether 'korma-root-korma' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korinject-root-korinject'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korinject-root-korinject' was not found. Please, check whether 'korinject-root-korinject' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korio-root-korio'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korio-root-korio' was not found. Please, check whether 'korio-root-korio' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['klogger-root-klogger'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'klogger-root-klogger' was not found. Please, check whether 'klogger-root-klogger' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['kotlinx-coroutines-core'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'kotlinx-coroutines-core' was not found. Please, check whether 'kotlinx-coroutines-core' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['kds-root-kds'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'kds-root-kds' was not found. Please, check whether 'kds-root-kds' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['kmem-root-kmem'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'kmem-root-kmem' was not found. Please, check whether 'kmem-root-kmem' is loaded prior to 'korge-root-korge'.");
    }if (typeof this['korau-root-korau'] === 'undefined') {
      throw new Error("Error loading module 'korge-root-korge'. Its dependency 'korau-root-korau' was not found. Please, check whether 'korau-root-korau' is loaded prior to 'korge-root-korge'.");
    }root['korge-root-korge'] = factory(typeof this['korge-root-korge'] === 'undefined' ? {} : this['korge-root-korge'], kotlin, this['korim-root-korim'], this['klock-root-klock'], this['korgw-root-korgw'], this['korma-root-korma'], this['korinject-root-korinject'], this['korio-root-korio'], this['klogger-root-klogger'], this['kotlinx-coroutines-core'], this['kds-root-kds'], this['kmem-root-kmem'], this['korau-root-korau']);
  }
}(this, function (_, Kotlin, $module$korim_root_korim, $module$klock_root_klock, $module$korgw_root_korgw, $module$korma_root_korma, $module$korinject_root_korinject, $module$korio_root_korio, $module$klogger_root_klogger, $module$kotlinx_coroutines_core, $module$kds_root_kds, $module$kmem_root_kmem, $module$korau_root_korau) {
  'use strict';
  var $$importsForInline$$ = _.$$importsForInline$$ || (_.$$importsForInline$$ = {});
  var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
  var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
  var ImageFormats = $module$korim_root_korim.com.soywiz.korim.format.ImageFormats;
  var format = $module$korim_root_korim.com.soywiz.korim.format;
  var getKClass = Kotlin.getKClass;
  var Unit = Kotlin.kotlin.Unit;
  var ImageFormats_init = $module$korim_root_korim.com.soywiz.korim.format.ImageFormats_init_56bozu$;
  var GameWindow$Quality = $module$korgw_root_korgw.com.soywiz.korgw.GameWindow.Quality;
  var Anchor = $module$korma_root_korma.com.soywiz.korma.geom.Anchor;
  var ScaleMode = $module$korma_root_korma.com.soywiz.korma.geom.ScaleMode;
  var color = $module$korim_root_korim.com.soywiz.korim.color;
  var HRTimeProvider = $module$klock_root_klock.com.soywiz.klock.hr.HRTimeProvider;
  var AsyncInjector = $module$korinject_root_korinject.com.soywiz.korinject.AsyncInjector;
  var util = $module$korio_root_korio.com.soywiz.korio.util;
  var std = $module$korio_root_korio.com.soywiz.korio.file.std;
  var GameWindow = $module$korgw_root_korgw.com.soywiz.korgw.GameWindow;
  var CreateDefaultGameWindow = $module$korgw_root_korgw.com.soywiz.korgw.CreateDefaultGameWindow;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var configure = $module$korgw_root_korgw.com.soywiz.korgw.configure_3adi1j$;
  var render = $module$korim_root_korim.com.soywiz.korim.vector.render_iha9l$;
  var ensureNotNull = Kotlin.ensureNotNull;
  var readBitmapOptimized = $module$korim_root_korim.com.soywiz.korim.format.readBitmapOptimized_c6jndg$;
  var printStackTrace = $module$korio_root_korio.com.soywiz.korio.lang.printStackTrace_dbl4o4$;
  var Throwable = Error;
  var SupervisorJob = $module$kotlinx_coroutines_core.kotlinx.coroutines.SupervisorJob_5dx9e$;
  var KDynamic = $module$korio_root_korio.com.soywiz.korio.dynamic.KDynamic;
  var AG = $module$korgw_root_korgw.com.soywiz.korag.AG;
  var TimeProvider = $module$klock_root_klock.com.soywiz.klock.TimeProvider;
  var CoroutineContext = Kotlin.kotlin.coroutines.CoroutineContext;
  var SizeInt = $module$korma_root_korma.com.soywiz.korma.geom.SizeInt;
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var coroutineScope = $module$kotlinx_coroutines_core.kotlinx.coroutines.coroutineScope_awg8ri$;
  var launchImmediately = $module$korio_root_korio.com.soywiz.korio.async.launchImmediately_hilpzi$;
  var delay = $module$korio_root_korio.com.soywiz.korio.async.delay_boqi9f$;
  var TimeSpan = $module$klock_root_klock.com.soywiz.klock.TimeSpan;
  var Point = $module$korma_root_korma.com.soywiz.korma.geom.Point;
  var DateTime = $module$klock_root_klock.com.soywiz.klock.DateTime;
  var equals = Kotlin.equals;
  var MouseEvent$Type = $module$korgw_root_korgw.com.soywiz.korev.MouseEvent.Type;
  var MouseEvent = $module$korgw_root_korgw.com.soywiz.korev.MouseEvent;
  var KeyEvent = $module$korgw_root_korgw.com.soywiz.korev.KeyEvent;
  var ResumeEvent = $module$korgw_root_korgw.com.soywiz.korev.ResumeEvent;
  var PauseEvent = $module$korgw_root_korgw.com.soywiz.korev.PauseEvent;
  var StopEvent = $module$korgw_root_korgw.com.soywiz.korev.StopEvent;
  var DestroyEvent = $module$korgw_root_korgw.com.soywiz.korev.DestroyEvent;
  var first = Kotlin.kotlin.collections.first_7wnvza$;
  var numberToInt = Kotlin.numberToInt;
  var MouseButton = $module$korgw_root_korgw.com.soywiz.korev.MouseButton;
  var TouchEvent = $module$korgw_root_korgw.com.soywiz.korev.TouchEvent;
  var GamePadConnectionEvent = $module$korgw_root_korgw.com.soywiz.korev.GamePadConnectionEvent;
  var GamePadUpdateEvent = $module$korgw_root_korgw.com.soywiz.korev.GamePadUpdateEvent;
  var ReshapeEvent = $module$korgw_root_korgw.com.soywiz.korev.ReshapeEvent;
  var CompletableDeferred = $module$kotlinx_coroutines_core.kotlinx.coroutines.CompletableDeferred_xptg6w$;
  var RenderEvent = $module$korgw_root_korgw.com.soywiz.korev.RenderEvent;
  var Logger = $module$klogger_root_klogger.com.soywiz.klogger.Logger;
  var Kind_OBJECT = Kotlin.Kind.OBJECT;
  var copyToArray = Kotlin.kotlin.collections.copyToArray;
  var Logger$Level = $module$klogger_root_klogger.com.soywiz.klogger.Logger.Level;
  var emptyList = Kotlin.kotlin.collections.emptyList_287e2$;
  var DummyAG = $module$korgw_root_korgw.com.soywiz.korag.log.DummyAG;
  var Kind_INTERFACE = Kotlin.Kind.INTERFACE;
  var throwCCE = Kotlin.throwCCE;
  var toString = Kotlin.toString;
  var bitmap = $module$korim_root_korim.com.soywiz.korim.bitmap;
  var PropertyMetadata = Kotlin.PropertyMetadata;
  var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
  var Extra$Property = $module$kds_root_kds.com.soywiz.kds.Extra.Property;
  var asyncImmediately = $module$korio_root_korio.com.soywiz.korio.async.asyncImmediately_uddi5$;
  var Signal = $module$korio_root_korio.com.soywiz.korio.async.Signal;
  var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
  var firstOrNull = Kotlin.kotlin.collections.firstOrNull_7wnvza$;
  var AG$StencilState = $module$korgw_root_korgw.com.soywiz.korag.AG.StencilState;
  var AG$ColorMaskState = $module$korgw_root_korgw.com.soywiz.korag.AG.ColorMaskState;
  var AG$CompareMode = $module$korgw_root_korgw.com.soywiz.korag.AG.CompareMode;
  var AG$StencilOp = $module$korgw_root_korgw.com.soywiz.korag.AG.StencilOp;
  var get_indices = Kotlin.kotlin.collections.get_indices_l1lu5t$;
  var toSet = Kotlin.kotlin.collections.toSet_us0mfu$;
  var Once = $module$korio_root_korio.com.soywiz.korio.util.Once;
  var Job = $module$kotlinx_coroutines_core.kotlinx.coroutines.Job_5dx9e$;
  var toList = Kotlin.kotlin.collections.toList_us0mfu$;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_mqih57$;
  var Matrix = $module$korma_root_korma.com.soywiz.korma.geom.Matrix;
  var RedirectMutableField_init = $module$korio_root_korio.com.soywiz.korio.util.RedirectMutableField;
  var Any = Object;
  var setExtra = $module$kds_root_kds.com.soywiz.kds.setExtra_46skc7$;
  var Math_0 = Math;
  var Array_0 = Array;
  var booleanArray = Kotlin.booleanArray;
  var get_lastIndex = Kotlin.kotlin.collections.get_lastIndex_tmsbgo$;
  var get_lastIndex_0 = Kotlin.kotlin.collections.get_lastIndex_l1lu5t$;
  var arrayfill = $module$kmem_root_kmem.com.soywiz.kmem.arrayfill_9l0r9l$;
  var ArrayList_init_0 = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  var emptySet = Kotlin.kotlin.collections.emptySet_287e2$;
  var ArrayList_init_1 = Kotlin.kotlin.collections.ArrayList_init_287e2$;
  var Extra = $module$kds_root_kds.com.soywiz.kds.Extra;
  var Extra$Mixin = $module$kds_root_kds.com.soywiz.kds.Extra.Mixin;
  var sound = $module$korau_root_korau.com.soywiz.korau.sound;
  var AudioData = $module$korau_root_korau.com.soywiz.korau.sound.AudioData;
  var AsyncOnce = $module$korio_root_korio.com.soywiz.korio.util.AsyncOnce;
  var interpolate = $module$korma_root_korma.com.soywiz.korma.interpolation.interpolate_nig4hr$;
  var LinkedHashMap_init = Kotlin.kotlin.collections.LinkedHashMap_init_q3lmfv$;
  var arrayListOf = Kotlin.kotlin.collections.arrayListOf_i5x0yv$;
  var firstOrNull_0 = Kotlin.kotlin.collections.firstOrNull_2p1efm$;
  var RuntimeException_init = Kotlin.kotlin.RuntimeException_init_pdl1vj$;
  var invalidOp = $module$korio_root_korio.com.soywiz.korio.lang.invalidOp_61zpoe$;
  var numberToDouble = Kotlin.numberToDouble;
  var ColorTransform_init = $module$korim_root_korim.com.soywiz.korim.color.ColorTransform;
  var HashMap_init = Kotlin.kotlin.collections.HashMap_init_q3lmfv$;
  var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;
  var get_lastIndex_1 = Kotlin.kotlin.collections.get_lastIndex_55thoc$;
  var Annotation = Kotlin.kotlin.Annotation;
  var Easing = $module$korma_root_korma.com.soywiz.korma.interpolation.Easing;
  var Enum = Kotlin.kotlin.Enum;
  var throwISE = Kotlin.throwISE;
  var CancellationException = $module$kotlinx_coroutines_core.kotlinx.coroutines.CancellationException;
  var launchImmediately_0 = $module$korio_root_korio.com.soywiz.korio.async.launchImmediately_ykkwzu$;
  var joinAll = $module$kotlinx_coroutines_core.kotlinx.coroutines.joinAll_k943iz$;
  var defineInlineFunction = Kotlin.defineInlineFunction;
  var wrapFunction = Kotlin.wrapFunction;
  var lazy = Kotlin.kotlin.lazy_klfg04$;
  var plus = $module$korma_root_korma.com.soywiz.korma.geom.plus_e486mh$;
  var TGenDeque_init = $module$kds_root_kds.com.soywiz.kds.TGenDeque_init_287e2$;
  var getCallableRef = Kotlin.getCallableRef;
  var zip = Kotlin.kotlin.collections.zip_45mdf7$;
  var binarySearch = $module$kds_root_kds.com.soywiz.kds.binarySearch_aunrz$;
  var clamp = $module$kmem_root_kmem.com.soywiz.kmem.clamp_e4yvb3$;
  var IntArrayList = $module$kds_root_kds.com.soywiz.kds.IntArrayList;
  var FastByteArrayInputStream = $module$korio_root_korio.com.soywiz.korio.stream.FastByteArrayInputStream;
  var readSound = $module$korau_root_korau.com.soywiz.korau.sound.readSound_rbebel$;
  var readAll = $module$korio_root_korio.com.soywiz.korio.stream.readAll_ucmi9i$;
  var extract = $module$kmem_root_kmem.com.soywiz.kmem.extract_dqglrj$;
  var until = Kotlin.kotlin.ranges.until_dqglrj$;
  var plus_0 = Kotlin.kotlin.collections.plus_b32j0n$;
  var slice = $module$korim_root_korim.com.soywiz.korim.bitmap.slice_umqjjl$;
  var to = Kotlin.kotlin.to_ujzrz7$;
  var IntArrayList_init = $module$kds_root_kds.com.soywiz.kds.IntArrayList_init_pmhfmb$;
  var DoubleArrayList_init = $module$kds_root_kds.com.soywiz.kds.DoubleArrayList_init_yqxtqz$;
  var VectorPath = $module$korma_root_korma.com.soywiz.korma.geom.vector.VectorPath;
  var Rectangle = $module$korma_root_korma.com.soywiz.korma.geom.Rectangle;
  var Bitmap32 = $module$korim_root_korim.com.soywiz.korim.bitmap.Bitmap32;
  var json = $module$korio_root_korio.com.soywiz.korio.serialization.json;
  var MutableMap = Kotlin.kotlin.collections.MutableMap;
  var toMap = Kotlin.kotlin.collections.toMap_6hr0sd$;
  var RectangleInt = $module$korma_root_korma.com.soywiz.korma.geom.RectangleInt;
  var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
  var ImageEncodingProps = $module$korim_root_korim.com.soywiz.korim.format.ImageEncodingProps;
  var writeBitmap = $module$korim_root_korim.com.soywiz.korim.format.writeBitmap_d6890c$;
  var writeS_VL = $module$korio_root_korio.com.soywiz.korio.stream.writeS_VL_n5df9z$;
  var writeStringz = $module$korio_root_korio.com.soywiz.korio.stream.writeStringz_5iah4l$;
  var writeU_VL = $module$korio_root_korio.com.soywiz.korio.stream.writeU_VL_n5df9z$;
  var insert = $module$kmem_root_kmem.com.soywiz.kmem.insert_kvkj6u$;
  var drop = Kotlin.kotlin.collections.drop_8ujjk8$;
  var writeStringVL = $module$korio_root_korio.com.soywiz.korio.stream.writeStringVL_61lhbb$;
  var listOf = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var filterNotNull = Kotlin.kotlin.collections.filterNotNull_m3lr2h$;
  var distinct = Kotlin.kotlin.collections.distinct_7wnvza$;
  var withIndex = Kotlin.kotlin.collections.withIndex_7wnvza$;
  var writeF32LE = $module$korio_root_korio.com.soywiz.korio.stream.writeF32LE_dpexvo$;
  var write8 = $module$korio_root_korio.com.soywiz.korio.stream.write8_n5df9z$;
  var toList_0 = Kotlin.kotlin.collections.toList_7wnvza$;
  var write16LE = $module$korio_root_korio.com.soywiz.korio.stream.write16LE_n5df9z$;
  var clamp_0 = $module$kmem_root_kmem.com.soywiz.kmem.clamp_nig4hr$;
  var ByteArrayBuilder_init = $module$korio_root_korio.$$importsForInline$$['kmem-root-kmem'].com.soywiz.kmem.ByteArrayBuilder_init_za3lpa$;
  var MemorySyncStream = $module$korio_root_korio.com.soywiz.korio.stream.MemorySyncStream_i9anm0$;
  var addAll = Kotlin.kotlin.collections.addAll_ipc267$;
  var IllegalStateException_init = Kotlin.kotlin.IllegalStateException_init;
  var Map = Kotlin.kotlin.collections.Map;
  var sortedWith = Kotlin.kotlin.collections.sortedWith_eknfly$;
  var Comparator = Kotlin.kotlin.Comparator;
  var BitmapSlice = $module$korim_root_korim.com.soywiz.korim.bitmap.BitmapSlice;
  var startsWith = Kotlin.kotlin.text.startsWith_7epoxm$;
  var firstOrNull_1 = Kotlin.kotlin.text.firstOrNull_gw00vp$;
  var readBitmapSlice = $module$korim_root_korim.com.soywiz.korim.format.readBitmapSlice_2axf5n$;
  var mapCapacity = Kotlin.kotlin.collections.mapCapacity_za3lpa$;
  var coerceAtLeast = Kotlin.kotlin.ranges.coerceAtLeast_dqglrj$;
  var LinkedHashMap_init_0 = Kotlin.kotlin.collections.LinkedHashMap_init_bwtc7$;
  var IllegalStateException_init_0 = Kotlin.kotlin.IllegalStateException_init_pdl1vj$;
  var readBitmap = $module$korim_root_korim.com.soywiz.korim.format.readBitmap_vi5npc$;
  var sliceWithSize = $module$korim_root_korim.com.soywiz.korim.bitmap.sliceWithSize_lunxvd$;
  var Size = $module$korma_root_korma.com.soywiz.korma.geom.Size;
  var Xml = $module$korio_root_korio.com.soywiz.korio.serialization.xml.Xml_61zpoe$;
  var plus_1 = Kotlin.kotlin.collections.plus_q4559j$;
  var BitmapFont$Kerning = $module$korim_root_korim.com.soywiz.korim.font.BitmapFont.Kerning;
  var get_indices_0 = Kotlin.kotlin.text.get_indices_gw00vp$;
  var toBoxedChar = Kotlin.toBoxedChar;
  var get_lastIndex_2 = Kotlin.kotlin.text.get_lastIndex_gw00vp$;
  var unboxChar = Kotlin.unboxChar;
  var Closeable = $module$korio_root_korio.com.soywiz.korio.lang.Closeable;
  var SuspendFunction1 = Function;
  var get_hr = $module$klock_root_klock.com.soywiz.klock.hr.get_hr_5bmjl6$;
  var ArrayList = Kotlin.kotlin.collections.ArrayList;
  var removeAll = Kotlin.kotlin.collections.removeAll_qafx1e$;
  var MutableCollection = Kotlin.kotlin.collections.MutableCollection;
  var getExtra = $module$kds_root_kds.com.soywiz.kds.getExtra_mr3xxn$;
  var LinkedHashSet_init = Kotlin.kotlin.collections.LinkedHashSet_init_287e2$;
  var CoroutineScope = $module$kotlinx_coroutines_core.kotlinx.coroutines.CoroutineScope_1fupul$;
  var addSuspend = $module$korio_root_korio.com.soywiz.korio.async.addSuspend_lurw3q$;
  var readBitmapFont = $module$korim_root_korim.com.soywiz.korim.font.readBitmapFont_2axf5n$;
  var mipmaps = $module$korim_root_korim.com.soywiz.korim.bitmap.mipmaps_6tbmt4$;
  var Computed = $module$kds_root_kds.com.soywiz.kds.Computed;
  var Computed$WithParent = $module$kds_root_kds.com.soywiz.kds.Computed.WithParent;
  var bounds = $module$korma_root_korma.com.soywiz.korma.geom.bounds_kobt9m$;
  var get_isText = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_isText_byavcz$;
  var get_isComment = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_isComment_byavcz$;
  var get_isNode = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_isNode_byavcz$;
  var trim = Kotlin.kotlin.text.trim_gw00vp$;
  var Language = $module$korio_root_korio.com.soywiz.korio.util.i18n.Language;
  var joinToString = Kotlin.kotlin.collections.joinToString_fmv235$;
  var CompoundShape = $module$korim_root_korim.com.soywiz.korim.vector.CompoundShape;
  var FillShape = $module$korim_root_korim.com.soywiz.korim.vector.FillShape;
  var vector = $module$korim_root_korim.com.soywiz.korim.vector;
  var PolylineShape = $module$korim_root_korim.com.soywiz.korim.vector.PolylineShape;
  var TextShape = $module$korim_root_korim.com.soywiz.korim.vector.TextShape;
  var StyledShape = $module$korim_root_korim.com.soywiz.korim.vector.StyledShape;
  var Extra$PropertyThis = $module$kds_root_kds.com.soywiz.kds.Extra.PropertyThis;
  var addSuspend_0 = $module$korio_root_korio.com.soywiz.korio.async.addSuspend_w4tsgb$;
  var Touch = $module$korgw_root_korgw.com.soywiz.korev.Touch;
  var throwUPAE = Kotlin.throwUPAE;
  var GamePadButtonEvent$Type = $module$korgw_root_korgw.com.soywiz.korev.GamePadButtonEvent.Type;
  var GamePadConnectionEvent$Type = $module$korgw_root_korgw.com.soywiz.korev.GamePadConnectionEvent.Type;
  var GameButton = $module$korgw_root_korgw.com.soywiz.korev.GameButton;
  var GameStick = $module$korgw_root_korgw.com.soywiz.korev.GameStick;
  var GamePadStickEvent = $module$korgw_root_korgw.com.soywiz.korev.GamePadStickEvent;
  var GamePadButtonEvent = $module$korgw_root_korgw.com.soywiz.korev.GamePadButtonEvent;
  var IPointInt = $module$korma_root_korma.com.soywiz.korma.geom.IPointInt;
  var HRTimeSpan = $module$klock_root_klock.com.soywiz.klock.hr.HRTimeSpan;
  var rangeTo = Kotlin.kotlin.ranges.rangeTo_38ydlf$;
  var korag = $module$korgw_root_korgw.com.soywiz.korag;
  var GamepadInfo = $module$korgw_root_korgw.com.soywiz.korev.GamepadInfo;
  var Key = $module$korgw_root_korgw.com.soywiz.korev.Key;
  var NoSuchElementException_init = Kotlin.kotlin.NoSuchElementException;
  var arrayCopy = Kotlin.kotlin.collections.arrayCopy;
  var AsyncSignal = $module$korio_root_korio.com.soywiz.korio.async.AsyncSignal;
  var preventDefault = $module$korgw_root_korgw.com.soywiz.korev.preventDefault_s8jyv4$;
  var RGBA = $module$korim_root_korim.com.soywiz.korim.color.RGBA;
  var playAndWait = $module$korau_root_korau.com.soywiz.korau.sound.playAndWait_7dsnk8$;
  var Event = $module$korgw_root_korgw.com.soywiz.korev.Event;
  var readNativeSoundOptimized = $module$korau_root_korau.com.soywiz.korau.sound.readNativeSoundOptimized_rbebel$;
  var Logger$Level$valueOf = $module$klogger_root_klogger.com.soywiz.klogger.Logger.Level.valueOf_61zpoe$;
  var split = Kotlin.kotlin.text.split_ip8yn$;
  var startsWith_0 = Kotlin.kotlin.text.startsWith_sgbm27$;
  var isBlank = Kotlin.kotlin.text.isBlank_gw00vp$;
  var split_0 = Kotlin.kotlin.text.split_o64adg$;
  var lang = $module$korio_root_korio.com.soywiz.korio.lang;
  var IPoint = $module$korma_root_korma.com.soywiz.korma.geom.IPoint;
  var readXml = $module$korio_root_korio.com.soywiz.korio.serialization.xml.readXml_yirdke$;
  var AG$BlendFactor = $module$korgw_root_korgw.com.soywiz.korag.AG.BlendFactor;
  var Angle = $module$korma_root_korma.com.soywiz.korma.geom.Angle;
  var AG$AG$Blending_init = $module$korgw_root_korgw.com.soywiz.korag.AG.Blending_init_6oerul$;
  var get_x = $module$korma_root_korma.com.soywiz.korma.geom.get_x_qai0ns$;
  var get_y = $module$korma_root_korma.com.soywiz.korma.geom.get_y_qai0ns$;
  var Random = Kotlin.kotlin.random.Random;
  var Random_0 = Kotlin.kotlin.random.Random_s8cxhz$;
  var RGBAf = $module$korim_root_korim.com.soywiz.korim.color.RGBAf;
  var Collection = Kotlin.kotlin.collections.Collection;
  var checkCountOverflow = Kotlin.kotlin.collections.checkCountOverflow_za3lpa$;
  var RedirectField_init = $module$korio_root_korio.com.soywiz.korio.util.RedirectField;
  var clear = $module$kds_root_kds.com.soywiz.kds.clear_s48pn1$;
  var FastIdentityMap = $module$kds_root_kds.com.soywiz.kds.FastIdentityMap_q3lmfv$;
  var Pool = $module$kds_root_kds.com.soywiz.kds.Pool;
  var get_0 = $module$kds_root_kds.com.soywiz.kds.get_svge65$;
  var remove = $module$kds_root_kds.com.soywiz.kds.remove_svge65$;
  var set = $module$kds_root_kds.com.soywiz.kds.set_13yjyg$;
  var toShort = Kotlin.toShort;
  var FBuffer = $module$kmem_root_kmem.com.soywiz.kmem.FBuffer;
  var toRenderFboIntoBack = $module$korgw_root_korgw.com.soywiz.korag.toRenderFboIntoBack_56elpi$;
  var FragmentShader = $module$korgw_root_korgw.com.soywiz.korag.shader.FragmentShader_8zzl3$;
  var VarType = $module$korgw_root_korgw.com.soywiz.korag.shader.VarType;
  var Attribute_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Attribute_init_do1xv$;
  var Varying_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Varying_init_hkcue2$;
  var VertexLayout_init = $module$korgw_root_korgw.com.soywiz.korag.shader.VertexLayout_init_f1u95s$;
  var VertexShader = $module$korgw_root_korgw.com.soywiz.korag.shader.VertexShader_8zzl3$;
  var Program = $module$korgw_root_korgw.com.soywiz.korag.shader.Program;
  var toRenderImageIntoFbo = $module$korgw_root_korgw.com.soywiz.korag.toRenderImageIntoFbo_56elpi$;
  var AG$DrawType = $module$korgw_root_korgw.com.soywiz.korag.AG.DrawType;
  var Matrix3D = $module$korma_root_korma.com.soywiz.korma.geom.Matrix3D;
  var AG$TextureUnit = $module$korgw_root_korgw.com.soywiz.korag.AG.TextureUnit;
  var AG$AG$UniformValues_init = $module$korgw_root_korgw.com.soywiz.korag.AG.UniformValues_init_t0ouyw$;
  var AG$UniformValues = $module$korgw_root_korgw.com.soywiz.korag.AG.UniformValues;
  var BoundsBuilder = $module$korma_root_korma.com.soywiz.korma.geom.BoundsBuilder;
  var Program$Program$Builder_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Program.Builder;
  var Program$Stm$Program$Stm$Stms_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Program.Stm.Stms;
  var Program$Stm$Program$Stm$If_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Program.Stm.If;
  var get_isPowerOfTwo = $module$kmem_root_kmem.com.soywiz.kmem.get_isPowerOfTwo_s8ev3n$;
  var get_nextPowerOfTwo = $module$kmem_root_kmem.com.soywiz.kmem.get_nextPowerOfTwo_s8ev3n$;
  var coroutines = Kotlin.kotlin.coroutines;
  var Pool_init = $module$kds_root_kds.com.soywiz.kds.Pool_init_rz0iom$;
  var AG$Blending = $module$korgw_root_korgw.com.soywiz.korag.AG.Blending;
  var AG$Scissor = $module$korgw_root_korgw.com.soywiz.korag.AG.Scissor;
  var MountableVfs = $module$korio_root_korio.com.soywiz.korio.file.std.MountableVfs_uljl60$;
  var PathInfo = $module$korio_root_korio.com.soywiz.korio.file.PathInfo;
  var get_extensionLC = $module$korio_root_korio.com.soywiz.korio.file.get_extensionLC_a72sjq$;
  var fullPathWithExtension = $module$korio_root_korio.com.soywiz.korio.file.fullPathWithExtension_iyj1fo$;
  var AsyncDependency = $module$korinject_root_korinject.com.soywiz.korinject.AsyncDependency;
  var Deferred = $module$kotlinx_coroutines_core.kotlinx.coroutines.Deferred;
  var fromBase64 = $module$korio_root_korio.com.soywiz.korio.util.encoding.fromBase64_pdl1vz$;
  var BitmapFont = $module$korim_root_korim.com.soywiz.korim.font.BitmapFont;
  var BitmapFont$Glyph = $module$korim_root_korim.com.soywiz.korim.font.BitmapFont.Glyph;
  var toIntMap = $module$kds_root_kds.com.soywiz.kds.toIntMap_hx7udi$;
  var IntMap_init = $module$kds_root_kds.com.soywiz.kds.IntMap_init_42wstk$;
  var listOf_0 = Kotlin.kotlin.collections.listOf_mh5how$;
  var cancel = $module$kotlinx_coroutines_core.kotlinx.coroutines.cancel_x105z1$;
  var Job_0 = $module$kotlinx_coroutines_core.kotlinx.coroutines.Job;
  var InjectorAsyncDependency = $module$korinject_root_korinject.com.soywiz.korinject.InjectorAsyncDependency;
  var CoroutineScope_0 = $module$kotlinx_coroutines_core.kotlinx.coroutines.CoroutineScope;
  var ISize = $module$korma_root_korma.com.soywiz.korma.geom.ISize;
  var async = $module$korio_root_korio.com.soywiz.korio.async.async_uddi5$;
  var KClass = Kotlin.kotlin.reflect.KClass;
  var KeyNotFoundException = $module$korio_root_korio.com.soywiz.korio.lang.KeyNotFoundException;
  var parseTyped = $module$korio_root_korio.com.soywiz.korio.dynamic.serialization.parseTyped_avcktl$;
  var Continuation = Kotlin.kotlin.coroutines.Continuation;
  var startCoroutine = Kotlin.kotlin.coroutines.startCoroutine_x18nsh$;
  var CoroutineDispatcher = $module$kotlinx_coroutines_core.kotlinx.coroutines.CoroutineDispatcher;
  var L0 = Kotlin.Long.ZERO;
  var TGenPriorityQueue = $module$kds_root_kds.com.soywiz.kds.TGenPriorityQueue;
  var ContinuationInterceptor = Kotlin.kotlin.coroutines.ContinuationInterceptor;
  var Delay = $module$kotlinx_coroutines_core.kotlinx.coroutines.Delay;
  var Result = Kotlin.kotlin.Result;
  var withTimeout = $module$korio_root_korio.com.soywiz.korio.async.withTimeout_dy9d39$;
  var suspendTest = $module$korio_root_korio.com.soywiz.korio.async.suspendTest_3q5nlj$;
  var delay_0 = $module$korio_root_korio.com.soywiz.korio.async.delay_fv8bff$;
  var get_hrMilliseconds = $module$klock_root_klock.com.soywiz.klock.hr.get_hrMilliseconds_yrwdxr$;
  var GameWindowCoroutineDispatcher = $module$korgw_root_korgw.com.soywiz.korgw.GameWindowCoroutineDispatcher;
  var EventDispatcher = $module$korgw_root_korgw.com.soywiz.korev.EventDispatcher;
  var LogAG = $module$korgw_root_korgw.com.soywiz.korag.log.LogAG;
  var Runnable = $module$kotlinx_coroutines_core.kotlinx.coroutines.Runnable;
  var createFailure = Kotlin.kotlin.createFailure_tcv7n7$;
  var max = Kotlin.kotlin.collections.max_exjks8$;
  var Regex_init = Kotlin.kotlin.text.Regex_init_61zpoe$;
  var toIntOrNull = Kotlin.kotlin.text.toIntOrNull_pdl1vz$;
  var toDoubleOrNull = Kotlin.kotlin.text.toDoubleOrNull_pdl1vz$;
  var toIntArray = Kotlin.kotlin.collections.toIntArray_fx3nzu$;
  var toUInt = Kotlin.kotlin.text.toUInt_pdl1vz$;
  var GZIP = $module$korio_root_korio.com.soywiz.korio.compression.deflate.GZIP;
  var uncompress = $module$korio_root_korio.com.soywiz.korio.compression.uncompress_ms6xh0$;
  var ZLib = $module$korio_root_korio.com.soywiz.korio.compression.deflate.ZLib;
  var readIntArrayLE = $module$kmem_root_kmem.com.soywiz.kmem.readIntArrayLE_ietg8x$;
  var RgbaArray = $module$korim_root_korim.com.soywiz.korim.color.RgbaArray;
  var toUIntOrNull = Kotlin.kotlin.text.toUIntOrNull_pdl1vz$;
  var get_degrees = $module$korma_root_korma.com.soywiz.korma.geom.get_degrees_yrwdxr$;
  var get_hrNanoseconds = $module$klock_root_klock.com.soywiz.klock.hr.get_hrNanoseconds_s8ev3n$;
  var intercepted = Kotlin.kotlin.coroutines.intrinsics.intercepted_f9mg25$;
  var CancellableContinuationImpl_init = $module$kotlinx_coroutines_core.kotlinx.coroutines.CancellableContinuationImpl;
  var SafeContinuation_init = Kotlin.kotlin.coroutines.SafeContinuation_init_wj8d80$;
  var get_hrMilliseconds_0 = $module$klock_root_klock.com.soywiz.klock.hr.get_hrMilliseconds_s8ev3n$;
  var clamp_1 = $module$klock_root_klock.com.soywiz.klock.hr.clamp_xberjo$;
  var max_0 = Kotlin.kotlin.collections.max_l63kqw$;
  var get_hrNanoseconds_0 = $module$klock_root_klock.com.soywiz.klock.hr.get_hrNanoseconds_yrwdxr$;
  var withTimeout_0 = $module$kotlinx_coroutines_core.kotlinx.coroutines.withTimeout_ms3uf5$;
  var TimeoutCancellationException = $module$kotlinx_coroutines_core.kotlinx.coroutines.TimeoutCancellationException;
  var asyncImmediately_0 = $module$korio_root_korio.com.soywiz.korio.async.asyncImmediately_nt96rv$;
  var interpolate_0 = $module$korma_root_korma.com.soywiz.korma.interpolation.interpolate_mwqh4r$;
  var interpolateAny = $module$korma_root_korma.com.soywiz.korma.interpolation.interpolateAny_i7pzeh$;
  var indexOf = Kotlin.kotlin.collections.indexOf_bv23uc$;
  var clamp01 = $module$kmem_root_kmem.com.soywiz.kmem.clamp01_yrwdxr$;
  var cancellable = $module$korio_root_korio.com.soywiz.korio.lang.cancellable_6257sj$;
  var cancel_0 = $module$korio_root_korio.com.soywiz.korio.lang.cancel_8d280p$;
  var Cancellable = $module$korio_root_korio.com.soywiz.korio.lang.Cancellable;
  var IntArray2 = $module$kds_root_kds.com.soywiz.kds.IntArray2;
  var AG$BlendEquation = $module$korgw_root_korgw.com.soywiz.korag.AG.BlendEquation;
  var circle = $module$korma_root_korma.com.soywiz.korma.geom.vector.circle_m5r0a8$;
  var lastOrNull = Kotlin.kotlin.collections.lastOrNull_2p1efm$;
  var sortWith = Kotlin.kotlin.collections.sortWith_nqfjgj$;
  var add = $module$korma_root_korma.com.soywiz.korma.geom.add_wm3ouy$;
  var ellipse = $module$korma_root_korma.com.soywiz.korma.geom.vector.ellipse_clsz36$;
  var color_0 = $module$korgw_root_korgw.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
  var get_niceStr = $module$korio_root_korio.com.soywiz.korio.util.get_niceStr_yrwdxr$;
  var SystemFont = $module$korim_root_korim.com.soywiz.korim.font.SystemFont;
  var CharacterSet = $module$korim_root_korim.com.soywiz.korim.font.CharacterSet;
  var ColorPaint = $module$korim_root_korim.com.soywiz.korim.vector.paint.ColorPaint;
  var NativeImage = $module$korim_root_korim.com.soywiz.korim.bitmap.NativeImage_vux9f0$;
  var GraphicsPath = $module$korim_root_korim.com.soywiz.korim.vector.GraphicsPath;
  var LineScaleMode = $module$korim_root_korim.com.soywiz.korim.vector.LineScaleMode;
  var LineCap = $module$korma_root_korma.com.soywiz.korma.geom.vector.LineCap;
  var LineJoin = $module$korma_root_korma.com.soywiz.korma.geom.vector.LineJoin;
  var Matrix$Transform = $module$korma_root_korma.com.soywiz.korma.geom.Matrix.Transform;
  var VectorBuilder = $module$korma_root_korma.com.soywiz.korma.geom.vector.VectorBuilder;
  var Uint16BufferAlloc = $module$kmem_root_kmem.com.soywiz.kmem.Uint16BufferAlloc_za3lpa$;
  var sliceFloat32Buffer = $module$kmem_root_kmem.com.soywiz.kmem.sliceFloat32Buffer_3gn6rj$;
  var ArrayBuffer_init = ArrayBuffer;
  var setTo = $module$korma_root_korma.com.soywiz.korma.geom.setTo_woi95f$;
  var roundRect = $module$korma_root_korma.com.soywiz.korma.geom.vector.roundRect_eslsqu$;
  var umod = $module$kmem_root_kmem.com.soywiz.kmem.umod_dqglrj$;
  var EventDispatcher$Mixin = $module$korgw_root_korgw.com.soywiz.korev.EventDispatcher.Mixin;
  var font = $module$korim_root_korim.com.soywiz.korim.font;
  var HorizontalAlign = $module$korim_root_korim.com.soywiz.korim.vector.HorizontalAlign;
  var VerticalAlign = $module$korim_root_korim.com.soywiz.korim.vector.VerticalAlign;
  var renderTextToBitmap = $module$korim_root_korim.com.soywiz.korim.font.renderTextToBitmap_wsx2ss$;
  var TextRendererActions = $module$korim_root_korim.com.soywiz.korim.font.TextRendererActions;
  var doubleArrayListOf = $module$kds_root_kds.com.soywiz.kds.doubleArrayListOf_yqxtqz$;
  var get_radians = $module$korma_root_korma.com.soywiz.korma.geom.get_radians_yrwdxr$;
  var get_degrees_0 = $module$korma_root_korma.com.soywiz.korma.geom.get_degrees_72g52s$;
  var get_portableSimpleName = $module$korio_root_korio.com.soywiz.korio.lang.get_portableSimpleName_1yb8b7$;
  var get_shex = $module$korio_root_korio.com.soywiz.korio.util.encoding.get_shex_s8ev3n$;
  var toStringDecimal = $module$korio_root_korio.com.soywiz.korio.util.toStringDecimal_9rbwic$;
  var get_radians_0 = $module$korma_root_korma.com.soywiz.korma.geom.get_radians_s8ev3n$;
  var MustOverrideException = $module$korio_root_korio.com.soywiz.korio.lang.MustOverrideException;
  var get_timeSpan = $module$klock_root_klock.com.soywiz.klock.hr.get_timeSpan_si6tuw$;
  var copyFrom = $module$korma_root_korma.com.soywiz.korma.geom.copyFrom_kh6thv$;
  var rect = $module$korma_root_korma.com.soywiz.korma.geom.vector.rect_clsz36$;
  var threadLocal = $module$korio_root_korio.com.soywiz.korio.lang.threadLocal;
  var AsyncCloseable = $module$korio_root_korio.com.soywiz.korio.async.AsyncCloseable;
  var PreventDefaultException = $module$korgw_root_korgw.com.soywiz.korev.PreventDefaultException;
  var invoke = $module$korio_root_korio.com.soywiz.korio.async.invoke_4l50cw$;
  var setTo_0 = $module$korma_root_korma.com.soywiz.korma.geom.setTo_94azt1$;
  var DialogInterface = $module$korgw_root_korgw.com.soywiz.korgw.DialogInterface;
  var Korio = $module$korio_root_korio.com.soywiz.korio.Korio_3q5nlj$;
  var Uniform_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Uniform_init_hkcue2$;
  var storageForMatrix3D = $module$korgw_root_korgw.com.soywiz.korag.shader.storageForMatrix3D_8nu70c$;
  var appending = $module$korgw_root_korgw.com.soywiz.korag.shader.appending_8cn1qe$;
  var storageFor = $module$korgw_root_korgw.com.soywiz.korag.shader.storageFor_pq722g$;
  var math = Kotlin.kotlin.math;
  var toIntCeil = $module$kmem_root_kmem.com.soywiz.kmem.toIntCeil_yrwdxr$;
  var setToInterpolated = $module$korma_root_korma.com.soywiz.korma.geom.setToInterpolated_89iisx$;
  var times = $module$korma_root_korma.com.soywiz.korma.geom.times_2zf9fo$;
  var IntRange = Kotlin.kotlin.ranges.IntRange;
  var first_0 = Kotlin.kotlin.collections.first_2p1efm$;
  var putWithBorder = $module$korim_root_korim.com.soywiz.korim.bitmap.putWithBorder_cxfkob$;
  var get_degrees_1 = $module$korma_root_korma.com.soywiz.korma.geom.get_degrees_s8ev3n$;
  var FastStringMap = $module$kds_root_kds.com.soywiz.kds.FastStringMap_287e2$;
  var equals_0 = Kotlin.kotlin.text.equals_igcy3c$;
  var Vector3D = $module$korma_root_korma.com.soywiz.korma.geom.Vector3D;
  var setToColor = $module$korim_root_korim.com.soywiz.korim.color.setToColor_1r9l2y$;
  var VertexLayout_init_0 = $module$korgw_root_korgw.com.soywiz.korag.shader.VertexLayout_init_agxe9a$;
  var floatArrayListOf = $module$kds_root_kds.com.soywiz.kds.floatArrayListOf_8cqhcw$;
  var ShaderType = $module$korgw_root_korgw.com.soywiz.korag.shader.ShaderType;
  var GlslGenerator = $module$korgw_root_korgw.com.soywiz.korag.shader.gl.GlslGenerator;
  var Uniform = $module$korgw_root_korgw.com.soywiz.korag.shader.Uniform;
  var Program$Program$Func_init = $module$korgw_root_korgw.com.soywiz.korag.shader.Program.Func_init_ohzs2t$;
  var Program$ArrayAccess = $module$korgw_root_korgw.com.soywiz.korag.shader.Program.ArrayAccess;
  var geom = $module$korma_root_korma.com.soywiz.korma.geom;
  var scale = $module$korma_root_korma.com.soywiz.korma.geom.scale_nur0j3$;
  var plus_2 = Kotlin.kotlin.collections.plus_mydzjv$;
  var invert = $module$korma_root_korma.com.soywiz.korma.geom.invert_3whwsx$;
  var setToColorPremultiplied = $module$korim_root_korim.com.soywiz.korim.color.setToColorPremultiplied_1r9l2y$;
  var scale_0 = $module$korma_root_korma.com.soywiz.korma.geom.scale_vruifh$;
  var setTRS = $module$korma_root_korma.com.soywiz.korma.geom.setTRS_rva2x3$;
  var getTRS = $module$korma_root_korma.com.soywiz.korma.geom.getTRS_rva2x3$;
  var setQuaternion = $module$korma_root_korma.com.soywiz.korma.geom.setQuaternion_7rcat6$;
  var setTo_1 = $module$korma_root_korma.com.soywiz.korma.geom.setTo_xxrgjv$;
  var setEuler = $module$korma_root_korma.com.soywiz.korma.geom.setEuler_u932wa$;
  var setEuler_0 = $module$korma_root_korma.com.soywiz.korma.geom.setEuler_ku1bf4$;
  var setToLookAt = $module$korma_root_korma.com.soywiz.korma.geom.setToLookAt_gaeos1$;
  var setFromRotationMatrix = $module$korma_root_korma.com.soywiz.korma.geom.setFromRotationMatrix_xk3rp9$;
  var setToInterpolated_0 = $module$korma_root_korma.com.soywiz.korma.geom.setToInterpolated_wtbb0t$;
  var setToInterpolated_1 = $module$korma_root_korma.com.soywiz.korma.geom.setToInterpolated_vyz9gj$;
  var Quaternion = $module$korma_root_korma.com.soywiz.korma.geom.Quaternion;
  var EulerRotation = $module$korma_root_korma.com.soywiz.korma.geom.EulerRotation;
  var sequence = Kotlin.kotlin.sequences.sequence_o0x0bg$;
  var AG$RenderState = $module$korgw_root_korgw.com.soywiz.korag.AG.RenderState;
  var getOrNull_0 = Kotlin.kotlin.collections.getOrNull_rblqex$;
  var getCyclic = $module$kds_root_kds.com.soywiz.kds.getCyclic_r20n03$;
  var max_1 = Kotlin.kotlin.collections.max_rjqryz$;
  var FloatArrayList = $module$kds_root_kds.com.soywiz.kds.FloatArrayList;
  var nextMultipleOf = $module$korma_root_korma.com.soywiz.korma.math.nextMultipleOf_dqglrj$;
  var zip_0 = Kotlin.kotlin.collections.zip_xiheex$;
  var get_1 = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_h00kq4$;
  var trim_0 = Kotlin.kotlin.text.trim_wqw3xr$;
  var reader = $module$korio_root_korio.com.soywiz.korio.util.reader_4hqpxb$;
  var intArrayListOf = $module$kds_root_kds.com.soywiz.kds.intArrayListOf_pmhfmb$;
  var toMap_0 = Kotlin.kotlin.collections.toMap_abgq59$;
  var get_text = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_text_ibjdnu$;
  var get_firstText = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_firstText_ibjdnu$;
  var get_values = $module$kds_root_kds.com.soywiz.kds.get_values_kqxxnk$;
  var get_allNodeChildren = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_allNodeChildren_ibjdnu$;
  var get_allChildren = $module$korio_root_korio.com.soywiz.korio.serialization.xml.get_allChildren_ibjdnu$;
  var setTo_2 = $module$korma_root_korma.com.soywiz.korma.geom.setTo_u932wa$;
  var setTo_3 = $module$korma_root_korma.com.soywiz.korma.geom.setTo_h3kiav$;
  var get_degrees_2 = $module$korma_root_korma.com.soywiz.korma.geom.get_degrees_81szk$;
  var FloatArrayList_init = $module$kds_root_kds.com.soywiz.kds.FloatArrayList_init_8cqhcw$;
  var times_0 = $module$korma_root_korma.com.soywiz.korma.geom.times_gh9cj6$;
  var IndexedTable = $module$kds_root_kds.com.soywiz.kds.IndexedTable;
  var writeString = $module$korio_root_korio.com.soywiz.korio.stream.writeString_61lhbb$;
  var write32LE = $module$korio_root_korio.com.soywiz.korio.stream.write32LE_n5df9z$;
  var kotlin_js_internal_FloatCompanionObject = Kotlin.kotlin.js.internal.FloatCompanionObject;
  Korge$invoke$lambda$ObjectLiteral.prototype = Object.create(Module.prototype);
  Korge$invoke$lambda$ObjectLiteral.prototype.constructor = Korge$invoke$lambda$ObjectLiteral;
  KorgeHeadless$HeadlessGameWindow.prototype = Object.create(GameWindow.prototype);
  KorgeHeadless$HeadlessGameWindow.prototype.constructor = KorgeHeadless$HeadlessGameWindow;
  AnBaseShape.prototype = Object.create(View.prototype);
  AnBaseShape.prototype.constructor = AnBaseShape;
  AnShape.prototype = Object.create(AnBaseShape.prototype);
  AnShape.prototype.constructor = AnShape;
  AnMorphShape.prototype = Object.create(AnBaseShape.prototype);
  AnMorphShape.prototype.constructor = AnMorphShape;
  DummyView.prototype = Object.create(View.prototype);
  DummyView.prototype.constructor = DummyView;
  AnEmptyView.prototype = Object.create(DummyView.prototype);
  AnEmptyView.prototype.constructor = AnEmptyView;
  Container.prototype = Object.create(View.prototype);
  Container.prototype.constructor = Container;
  AnTextField.prototype = Object.create(Container.prototype);
  AnTextField.prototype.constructor = AnTextField;
  AnSimpleAnimation.prototype = Object.create(Container.prototype);
  AnSimpleAnimation.prototype.constructor = AnSimpleAnimation;
  AnMovieClip.prototype = Object.create(Container.prototype);
  AnMovieClip.prototype.constructor = AnMovieClip;
  AnSymbolEmpty.prototype = Object.create(AnSymbol.prototype);
  AnSymbolEmpty.prototype.constructor = AnSymbolEmpty;
  AnSymbolSound.prototype = Object.create(AnSymbol.prototype);
  AnSymbolSound.prototype.constructor = AnSymbolSound;
  AnTextFieldSymbol.prototype = Object.create(AnSymbol.prototype);
  AnTextFieldSymbol.prototype.constructor = AnTextFieldSymbol;
  AnSymbolBaseShape.prototype = Object.create(AnSymbol.prototype);
  AnSymbolBaseShape.prototype.constructor = AnSymbolBaseShape;
  AnSymbolShape.prototype = Object.create(AnSymbolBaseShape.prototype);
  AnSymbolShape.prototype.constructor = AnSymbolShape;
  AnSymbolMorphShape.prototype = Object.create(AnSymbolBaseShape.prototype);
  AnSymbolMorphShape.prototype.constructor = AnSymbolMorphShape;
  AnSymbolBitmap.prototype = Object.create(AnSymbol.prototype);
  AnSymbolBitmap.prototype.constructor = AnSymbolBitmap;
  AnDepthTimeline.prototype = Object.create(Timed.prototype);
  AnDepthTimeline.prototype.constructor = AnDepthTimeline;
  AnSymbolMovieClip.prototype = Object.create(AnSymbol.prototype);
  AnSymbolMovieClip.prototype.constructor = AnSymbolMovieClip;
  Animator$NodeKind.prototype = Object.create(Enum.prototype);
  Animator$NodeKind.prototype.constructor = Animator$NodeKind;
  SwipeDirection.prototype = Object.create(Enum.prototype);
  SwipeDirection.prototype.constructor = SwipeDirection;
  LipSyncEvent.prototype = Object.create(Event.prototype);
  LipSyncEvent.prototype.constructor = LipSyncEvent;
  ParticleEmitter$Type.prototype = Object.create(Enum.prototype);
  ParticleEmitter$Type.prototype.constructor = ParticleEmitter$Type;
  ParticleEmitterView.prototype = Object.create(View.prototype);
  ParticleEmitterView.prototype.constructor = ParticleEmitterView;
  CompletableScene.prototype = Object.create(Scene.prototype);
  CompletableScene.prototype.constructor = CompletableScene;
  KorgeModule.prototype = Object.create(Module.prototype);
  KorgeModule.prototype.constructor = KorgeModule;
  ScaledScene.prototype = Object.create(Scene.prototype);
  ScaledScene.prototype.constructor = ScaledScene;
  EmptyScene.prototype = Object.create(Scene.prototype);
  EmptyScene.prototype.constructor = EmptyScene;
  LogScene.prototype = Object.create(Scene.prototype);
  LogScene.prototype.constructor = LogScene;
  SceneContainer.prototype = Object.create(Container.prototype);
  SceneContainer.prototype.constructor = SceneContainer;
  TransitionView.prototype = Object.create(Container.prototype);
  TransitionView.prototype.constructor = TransitionView;
  NativeProcess.prototype = Object.create(NativeProcessBase.prototype);
  NativeProcess.prototype.constructor = NativeProcess;
  StorageBase.prototype = Object.create(InmemoryStorage.prototype);
  StorageBase.prototype.constructor = StorageBase;
  KorgeTest.prototype = Object.create(ViewsForTesting.prototype);
  KorgeTest.prototype.constructor = KorgeTest;
  TestCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  TestCoroutineDispatcher.prototype.constructor = TestCoroutineDispatcher;
  ViewsForTesting$viewsTest$lambda$ObjectLiteral.prototype = Object.create(Module.prototype);
  ViewsForTesting$viewsTest$lambda$ObjectLiteral.prototype.constructor = ViewsForTesting$viewsTest$lambda$ObjectLiteral;
  ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype = Object.create(GameWindowCoroutineDispatcher.prototype);
  ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype.constructor = ViewsForTesting$FastGameWindowCoroutineDispatcher;
  GameWindowLog.prototype = Object.create(GameWindow.prototype);
  GameWindowLog.prototype.constructor = GameWindowLog;
  ViewsForTesting$gameWindow$ObjectLiteral.prototype = Object.create(GameWindowLog.prototype);
  ViewsForTesting$gameWindow$ObjectLiteral.prototype.constructor = ViewsForTesting$gameWindow$ObjectLiteral;
  TiledMap$Layer$Patterns.prototype = Object.create(TiledMap$Layer.prototype);
  TiledMap$Layer$Patterns.prototype.constructor = TiledMap$Layer$Patterns;
  TiledMap$Layer$Objects.prototype = Object.create(TiledMap$Layer.prototype);
  TiledMap$Layer$Objects.prototype.constructor = TiledMap$Layer$Objects;
  TiledMap$Layer$Image.prototype = Object.create(TiledMap$Layer.prototype);
  TiledMap$Layer$Image.prototype.constructor = TiledMap$Layer$Image;
  RKind.prototype = Object.create(Enum.prototype);
  RKind.prototype.constructor = RKind;
  TiledMapView.prototype = Object.create(Container.prototype);
  TiledMapView.prototype.constructor = TiledMapView;
  UIView.prototype = Object.create(Container.prototype);
  UIView.prototype.constructor = UIView;
  UIButton.prototype = Object.create(UIView.prototype);
  UIButton.prototype.constructor = UIButton;
  IconButton.prototype = Object.create(UIButton.prototype);
  IconButton.prototype.constructor = IconButton;
  TextButton.prototype = Object.create(UIButton.prototype);
  TextButton.prototype.constructor = TextButton;
  UICheckBox.prototype = Object.create(UIView.prototype);
  UICheckBox.prototype.constructor = UICheckBox;
  UIComboBox.prototype = Object.create(UIView.prototype);
  UIComboBox.prototype.constructor = UIComboBox;
  UIProgressBar.prototype = Object.create(UIView.prototype);
  UIProgressBar.prototype.constructor = UIProgressBar;
  UIScrollBar$Direction.prototype = Object.create(Enum.prototype);
  UIScrollBar$Direction.prototype.constructor = UIScrollBar$Direction;
  UIScrollBar.prototype = Object.create(UIView.prototype);
  UIScrollBar.prototype.constructor = UIScrollBar;
  UIScrollableArea.prototype = Object.create(UIView.prototype);
  UIScrollableArea.prototype.constructor = UIScrollableArea;
  UIText.prototype = Object.create(UIView.prototype);
  UIText.prototype.constructor = UIText;
  BlendMode.prototype = Object.create(Enum.prototype);
  BlendMode.prototype.constructor = BlendMode;
  Camera.prototype = Object.create(Container.prototype);
  Camera.prototype.constructor = Camera;
  RectBase.prototype = Object.create(Container.prototype);
  RectBase.prototype.constructor = RectBase;
  Image.prototype = Object.create(RectBase.prototype);
  Image.prototype.constructor = Image;
  Graphics.prototype = Object.create(Image.prototype);
  Graphics.prototype.constructor = Graphics;
  Circle.prototype = Object.create(Graphics.prototype);
  Circle.prototype.constructor = Circle;
  FixedSizeContainer.prototype = Object.create(Container.prototype);
  FixedSizeContainer.prototype.constructor = FixedSizeContainer;
  ClipContainer.prototype = Object.create(FixedSizeContainer.prototype);
  ClipContainer.prototype.constructor = ClipContainer;
  Ellipse.prototype = Object.create(Graphics.prototype);
  Ellipse.prototype.constructor = Ellipse;
  FilteredContainer.prototype = Object.create(Container.prototype);
  FilteredContainer.prototype.constructor = FilteredContainer;
  Mesh$DrawModes.prototype = Object.create(Enum.prototype);
  Mesh$DrawModes.prototype.constructor = Mesh$DrawModes;
  Mesh.prototype = Object.create(View.prototype);
  Mesh.prototype.constructor = Mesh;
  NinePatch.prototype = Object.create(View.prototype);
  NinePatch.prototype.constructor = NinePatch;
  NinePatchEx.prototype = Object.create(View.prototype);
  NinePatchEx.prototype.constructor = NinePatchEx;
  RoundRect.prototype = Object.create(Graphics.prototype);
  RoundRect.prototype.constructor = RoundRect;
  ScaleView.prototype = Object.create(FixedSizeContainer.prototype);
  ScaleView.prototype.constructor = ScaleView;
  SolidRect.prototype = Object.create(RectBase.prototype);
  SolidRect.prototype.constructor = SolidRect;
  Sprite.prototype = Object.create(Image.prototype);
  Sprite.prototype.constructor = Sprite;
  AnimationType.prototype = Object.create(Enum.prototype);
  AnimationType.prototype.constructor = AnimationType;
  Stage.prototype = Object.create(Container.prototype);
  Stage.prototype.constructor = Stage;
  Text.prototype = Object.create(View.prototype);
  Text.prototype.constructor = Text;
  Text2.prototype = Object.create(Container.prototype);
  Text2.prototype.constructor = Text2;
  Text2TextRendererActions.prototype = Object.create(TextRendererActions.prototype);
  Text2TextRendererActions.prototype.constructor = Text2TextRendererActions;
  View$HitTestType.prototype = Object.create(Enum.prototype);
  View$HitTestType.prototype.constructor = View$HitTestType;
  CollisionKind.prototype = Object.create(Enum.prototype);
  CollisionKind.prototype.constructor = CollisionKind;
  EffectView.prototype = Object.create(Container.prototype);
  EffectView.prototype.constructor = EffectView;
  BlurEffectView.prototype = Object.create(EffectView.prototype);
  BlurEffectView.prototype.constructor = BlurEffectView;
  ColorMatrixEffectView.prototype = Object.create(EffectView.prototype);
  ColorMatrixEffectView.prototype.constructor = ColorMatrixEffectView;
  Convolute3EffectView.prototype = Object.create(EffectView.prototype);
  Convolute3EffectView.prototype.constructor = Convolute3EffectView;
  SwizzleColorsEffectView.prototype = Object.create(EffectView.prototype);
  SwizzleColorsEffectView.prototype.constructor = SwizzleColorsEffectView;
  WaveEffectView.prototype = Object.create(EffectView.prototype);
  WaveEffectView.prototype.constructor = WaveEffectView;
  ColorMatrixFilter.prototype = Object.create(ShaderFilter.prototype);
  ColorMatrixFilter.prototype.constructor = ColorMatrixFilter;
  Convolute3Filter.prototype = Object.create(ShaderFilter.prototype);
  Convolute3Filter.prototype.constructor = Convolute3Filter;
  PageFilter.prototype = Object.create(ShaderFilter.prototype);
  PageFilter.prototype.constructor = PageFilter;
  SwizzleColorsFilter$ProxySwizzle.prototype = Object.create(ShaderFilter.prototype);
  SwizzleColorsFilter$ProxySwizzle.prototype.constructor = SwizzleColorsFilter$ProxySwizzle;
  WaveFilter.prototype = Object.create(ShaderFilter.prototype);
  WaveFilter.prototype.constructor = WaveFilter;
  TileMap$Repeat.prototype = Object.create(Enum.prototype);
  TileMap$Repeat.prototype.constructor = TileMap$Repeat;
  TileMap.prototype = Object.create(View.prototype);
  TileMap.prototype.constructor = TileMap;
  Camera3D.prototype = Object.create(View3D.prototype);
  Camera3D.prototype.constructor = Camera3D;
  Camera3D$Perspective.prototype = Object.create(Camera3D.prototype);
  Camera3D$Perspective.prototype.constructor = Camera3D$Perspective;
  Container3D.prototype = Object.create(View3D.prototype);
  Container3D.prototype.constructor = Container3D;
  Library3D$Scene3D.prototype = Object.create(Library3D$Instance3D.prototype);
  Library3D$Scene3D.prototype.constructor = Library3D$Scene3D;
  Library3D$ImageDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$ImageDef.prototype.constructor = Library3D$ImageDef;
  Library3D$ObjectDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$ObjectDef.prototype.constructor = Library3D$ObjectDef;
  Library3D$MaterialDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$MaterialDef.prototype.constructor = Library3D$MaterialDef;
  Library3D$LightDef.prototype = Object.create(Library3D$ObjectDef.prototype);
  Library3D$LightDef.prototype.constructor = Library3D$LightDef;
  Library3D$CameraDef.prototype = Object.create(Library3D$ObjectDef.prototype);
  Library3D$CameraDef.prototype.constructor = Library3D$CameraDef;
  Library3D$PerspectiveCameraDef.prototype = Object.create(Library3D$CameraDef.prototype);
  Library3D$PerspectiveCameraDef.prototype.constructor = Library3D$PerspectiveCameraDef;
  Library3D$EffectDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$EffectDef.prototype.constructor = Library3D$EffectDef;
  Library3D$StandardEffectDef.prototype = Object.create(Library3D$EffectDef.prototype);
  Library3D$StandardEffectDef.prototype.constructor = Library3D$StandardEffectDef;
  Library3D$GeometryDef.prototype = Object.create(Library3D$ObjectDef.prototype);
  Library3D$GeometryDef.prototype.constructor = Library3D$GeometryDef;
  Library3D$BoneDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$BoneDef.prototype.constructor = Library3D$BoneDef;
  Library3D$SkinDef.prototype = Object.create(Library3D$Def.prototype);
  Library3D$SkinDef.prototype.constructor = Library3D$SkinDef;
  Library3D$PointLightDef.prototype = Object.create(Library3D$LightDef.prototype);
  Library3D$PointLightDef.prototype.constructor = Library3D$PointLightDef;
  Library3D$AmbientLightDef.prototype = Object.create(Library3D$LightDef.prototype);
  Library3D$AmbientLightDef.prototype.constructor = Library3D$AmbientLightDef;
  Light3D.prototype = Object.create(View3D.prototype);
  Light3D.prototype.constructor = Light3D;
  Material3D$LightColor.prototype = Object.create(Material3D$Light.prototype);
  Material3D$LightColor.prototype.constructor = Material3D$LightColor;
  Material3D$LightTexture.prototype = Object.create(Material3D$Light.prototype);
  Material3D$LightTexture.prototype.constructor = Material3D$LightTexture;
  AbstractStandardShader3D.prototype = Object.create(BaseShader3D.prototype);
  AbstractStandardShader3D.prototype.constructor = AbstractStandardShader3D;
  StandardShader3D.prototype = Object.create(AbstractStandardShader3D.prototype);
  StandardShader3D.prototype.constructor = StandardShader3D;
  ViewWithMesh3D.prototype = Object.create(View3D.prototype);
  ViewWithMesh3D.prototype.constructor = ViewWithMesh3D;
  Cube3D.prototype = Object.create(ViewWithMesh3D.prototype);
  Cube3D.prototype.constructor = Cube3D;
  Joint3D.prototype = Object.create(Container3D.prototype);
  Joint3D.prototype.constructor = Joint3D;
  Skeleton3D.prototype = Object.create(View3D.prototype);
  Skeleton3D.prototype.constructor = Skeleton3D;
  Stage3D.prototype = Object.create(Container3D.prototype);
  Stage3D.prototype.constructor = Stage3D;
  Stage3DView.prototype = Object.create(View.prototype);
  Stage3DView.prototype.constructor = Stage3DView;
  Animation3D.prototype = Object.create(Library3D$Def.prototype);
  Animation3D.prototype.constructor = Animation3D;
  function Korge() {
    Korge_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('Korge');
  }
  function Coroutine$Korge$invoke$lambda$lambda(closure$sc_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$sc = closure$sc_0;
  }
  Coroutine$Korge$invoke$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda$lambda.prototype.constructor = Coroutine$Korge$invoke$lambda$lambda;
  Coroutine$Korge$invoke$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.local$closure$sc;
            var injects = [];
            var time;
            var transition;
            time = TimeSpan.Companion.fromSeconds_14dthe$(0);
            transition = $this.defaultTransition;
            this.state_0 = 2;
            this.result_0 = $this.changeTo_oszfv1$(getKClass(EmptyScene), injects.slice(), time, transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda$lambda(closure$sc_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Korge$invoke$lambda$lambda(closure$sc_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Korge$invoke$lambda(closure$config_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$config = closure$config_0;
    this.local$sc = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Korge$invoke$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda.prototype.constructor = Coroutine$Korge$invoke$lambda;
  Coroutine$Korge$invoke$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            format.RegisteredImageFormats.register_56bozu$(copyToArray(this.local$closure$config.module.imageFormats).slice());
            var injector = this.local$closure$config.injector;
            injector.mapInstance_b1ce0a$(getKClass(Module), this.local$closure$config.module).mapInstance_b1ce0a$(getKClass(Korge$Config), this.local$closure$config);
            this.local$closure$config.constructedViews(this.local$$receiver.views);
            this.state_0 = 2;
            this.result_0 = this.local$closure$config.module.configure_5qt7s4$(injector, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$sc = new SceneContainer(this.local$$receiver.views, void 0, 'rootSceneContainer');
            this.local$$receiver.views.stage.plusAssign_l5rad2$(this.local$sc);
            this.state_0 = 3;
            this.result_0 = this.local$sc.changeTo_oszfv1$(this.local$closure$config.sceneClass, copyToArray(this.local$closure$config.sceneInjects).slice(), TimeSpan.Companion.fromMilliseconds_14dthe$(0), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$$receiver.views.onClose_g2bo5h$(Korge$invoke$lambda$lambda(this.local$sc)), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda(closure$config_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Korge$invoke$lambda(closure$config_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$invoke_dnucxw$($this, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$config = config_0;
  }
  Coroutine$invoke_dnucxw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_dnucxw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_dnucxw$.prototype.constructor = Coroutine$invoke_dnucxw$;
  Coroutine$invoke_dnucxw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6;
            tmp$_6 = Korge_getInstance();
            tmp$ = this.local$config.module.title;
            tmp$_0 = this.local$config.module.windowSize.width;
            tmp$_1 = this.local$config.module.windowSize.height;
            tmp$_2 = this.local$config.module.size.width;
            tmp$_3 = this.local$config.module.size.height;
            tmp$_4 = this.local$config.module.bgcolor;
            tmp$_5 = this.local$config.module.quality;
            this.state_0 = 2;
            this.result_0 = tmp$_6.invoke_hyfg37$(tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, null, this.local$config.module.icon, this.local$config.module.iconImage, new ImageFormats(this.local$config.module.imageFormats), tmp$_5, this.local$config.module.targetFps, this.local$config.module.scaleAnchor, this.local$config.module.scaleMode, this.local$config.module.clipBorders, tmp$_4, this.local$config.debug, this.local$config.module.fullscreen, this.local$config.args, this.local$config.gameWindow, this.local$config.timeProvider, this.local$config.injector, Korge$invoke$lambda(this.local$config), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Korge.prototype.invoke_dnucxw$ = function (config_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_dnucxw$(this, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$Korge$invoke$lambda$lambda_0($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$Korge$invoke$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda$lambda_0.prototype.constructor = Coroutine$Korge$invoke$lambda$lambda_0;
  Coroutine$Korge$invoke$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return new ResourcesRoot();
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda$lambda_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Korge$invoke$lambda$lambda_0($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$Korge$invoke$lambda$lambda_1($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$Korge$invoke$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda$lambda_1.prototype.constructor = Coroutine$Korge$invoke$lambda$lambda_1;
  Coroutine$Korge$invoke$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return new EmptyScene();
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda$lambda_1($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$Korge$invoke$lambda$lambda_1($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Korge$invoke$lambda$ObjectLiteral(closure$title, closure$fullscreen, closure$width, closure$height, closure$virtualWidth, closure$virtualHeight) {
    Module.call(this);
    this.title_x07noq$_0 = closure$title;
    this.fullscreen_ub0kd3$_0 = closure$fullscreen;
    this.windowSize_5cs875$_0 = SizeInt.Companion.invoke_vux9f0$(closure$width, closure$height);
    this.size_esphg1$_0 = SizeInt.Companion.invoke_vux9f0$(closure$virtualWidth, closure$virtualHeight);
  }
  Object.defineProperty(Korge$invoke$lambda$ObjectLiteral.prototype, 'title', {
    get: function () {
      return this.title_x07noq$_0;
    }
  });
  Object.defineProperty(Korge$invoke$lambda$ObjectLiteral.prototype, 'fullscreen', {
    get: function () {
      return this.fullscreen_ub0kd3$_0;
    }
  });
  Object.defineProperty(Korge$invoke$lambda$ObjectLiteral.prototype, 'windowSize', {
    get: function () {
      return this.windowSize_5cs875$_0;
    }
  });
  Object.defineProperty(Korge$invoke$lambda$ObjectLiteral.prototype, 'size', {
    get: function () {
      return this.size_esphg1$_0;
    }
  });
  Korge$invoke$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Module]
  };
  function Coroutine$Korge$invoke$lambda$lambda$lambda(closure$entry_0, closure$views_0, closure$gameWindow_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$entry = closure$entry_0;
    this.local$closure$views = closure$views_0;
    this.local$closure$gameWindow = closure$gameWindow_0;
  }
  Coroutine$Korge$invoke$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda$lambda$lambda.prototype.constructor = Coroutine$Korge$invoke$lambda$lambda$lambda;
  Coroutine$Korge$invoke$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$entry(this.local$closure$views.stage, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$closure$gameWindow.waitClose(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda$lambda$lambda(closure$entry_0, closure$views_0, closure$gameWindow_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Korge$invoke$lambda$lambda$lambda(closure$entry_0, closure$views_0, closure$gameWindow_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Korge$invoke$lambda$lambda_2(closure$entry_0, closure$views_0, closure$gameWindow_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$entry = closure$entry_0;
    this.local$closure$views = closure$views_0;
    this.local$closure$gameWindow = closure$gameWindow_0;
  }
  Coroutine$Korge$invoke$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda$lambda_2.prototype.constructor = Coroutine$Korge$invoke$lambda$lambda_2;
  Coroutine$Korge$invoke$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = coroutineScope(Korge$invoke$lambda$lambda$lambda(this.local$closure$entry, this.local$closure$views, this.local$closure$gameWindow), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda$lambda_2(closure$entry_0, closure$views_0, closure$gameWindow_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Korge$invoke$lambda$lambda_2(closure$entry_0, closure$views_0, closure$gameWindow_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Korge$invoke$lambda_0(closure$realGameWindow_0, closure$width_0, closure$height_0, closure$title_0, closure$icon_0, closure$fullscreen_0, closure$iconDrawable_0, closure$iconPath_0, closure$imageFormats_0, this$Korge_0, closure$quality_0, closure$injector_0, closure$timeProvider_0, closure$args_0, closure$virtualWidth_0, closure$virtualHeight_0, closure$debug_0, closure$scaleAnchor_0, closure$scaleMode_0, closure$clipBorders_0, closure$targetFps_0, closure$bgcolor_0, closure$entry_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 8;
    this.local$closure$realGameWindow = closure$realGameWindow_0;
    this.local$closure$width = closure$width_0;
    this.local$closure$height = closure$height_0;
    this.local$closure$title = closure$title_0;
    this.local$closure$icon = closure$icon_0;
    this.local$closure$fullscreen = closure$fullscreen_0;
    this.local$closure$iconDrawable = closure$iconDrawable_0;
    this.local$closure$iconPath = closure$iconPath_0;
    this.local$closure$imageFormats = closure$imageFormats_0;
    this.local$this$Korge = this$Korge_0;
    this.local$closure$quality = closure$quality_0;
    this.local$closure$injector = closure$injector_0;
    this.local$closure$timeProvider = closure$timeProvider_0;
    this.local$closure$args = closure$args_0;
    this.local$closure$virtualWidth = closure$virtualWidth_0;
    this.local$closure$virtualHeight = closure$virtualHeight_0;
    this.local$closure$debug = closure$debug_0;
    this.local$closure$scaleAnchor = closure$scaleAnchor_0;
    this.local$closure$scaleMode = closure$scaleMode_0;
    this.local$closure$clipBorders = closure$clipBorders_0;
    this.local$closure$targetFps = closure$targetFps_0;
    this.local$closure$bgcolor = closure$bgcolor_0;
    this.local$closure$entry = closure$entry_0;
    this.local$gameWindow = void 0;
    this.local$views = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Korge$invoke$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$invoke$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$invoke$lambda_0.prototype.constructor = Coroutine$Korge$invoke$lambda_0;
  Coroutine$Korge$invoke$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$gameWindow = this.local$$receiver;
            if (util.OS.isNative)
              println('Korui[0]');
            configure(this.local$closure$realGameWindow, this.local$closure$width, this.local$closure$height, this.local$closure$title, this.local$closure$icon, this.local$closure$fullscreen);
            this.exceptionState_0 = 4;
            if (this.local$closure$iconDrawable != null) {
              this.local$$receiver.icon = render(this.local$closure$iconDrawable);
              this.state_0 = 3;
              continue;
            } else {
              if (this.local$closure$iconPath != null) {
                this.state_0 = 1;
                this.result_0 = readBitmapOptimized(std.resourcesVfs.get_61zpoe$(ensureNotNull(this.local$closure$iconPath)), this.local$closure$imageFormats, void 0, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              } else {
                this.state_0 = 2;
                continue;
              }
            }

          case 1:
            this.local$$receiver.icon = this.result_0;
            this.state_0 = 2;
            continue;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            this.exceptionState_0 = 8;
            this.state_0 = 5;
            continue;
          case 4:
            this.exceptionState_0 = 8;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              var $this = this.local$this$Korge.logger;
              var level = Logger$Level.ERROR;
              if ($this.isEnabled_fs4ikx$(level)) {
                $this.actualLog_pwm3k3$(level, "Couldn't get the application icon");
              }printStackTrace(e);
            } else
              throw e;
            this.state_0 = 5;
            continue;
          case 5:
            this.local$$receiver.quality = this.local$closure$quality;
            if (util.OS.isNative)
              println('CanvasApplicationEx.IN[0]');
            var input = new Input();
            var stats = new Stats();
            this.local$views = new Views(this.context.plus_1fupul$(this.local$gameWindow.coroutineDispatcher).plus_1fupul$(SupervisorJob()), this.local$$receiver.ag, this.local$closure$injector, input, this.local$closure$timeProvider, stats, this.local$gameWindow);
            if (util.OS.isJsBrowser) {
              var $receiver = KDynamic.Companion;
              $receiver.set_30cd51$($receiver.global, 'views', this.local$views);
            }
            var $this_0 = this.local$closure$injector.mapInstance_b1ce0a$(getKClass(AG), this.local$$receiver.ag).mapInstance_b1ce0a$(getKClass(TimeProvider), toTimeProvider(this.local$closure$timeProvider)).mapInstance_b1ce0a$(getKClass(HRTimeProvider), this.local$closure$timeProvider).mapInstance_b1ce0a$(getKClass(Views), this.local$views).mapInstance_b1ce0a$(getKClass(Input), input).mapInstance_b1ce0a$(getKClass(Stats), stats);
            var instance = new Korge$ModuleArgs(this.local$closure$args);
            var $this_1 = $this_0.mapInstance_b1ce0a$(getKClass(Korge$ModuleArgs), instance).mapInstance_b1ce0a$(getKClass(CoroutineContext), this.local$views.coroutineContext).mapInstance_b1ce0a$(getKClass(GameWindow), this.local$gameWindow).mapSingleton_siz2e9$(getKClass(ResourcesRoot), Korge$invoke$lambda$lambda_0).mapPrototype_siz2e9$(getKClass(EmptyScene), Korge$invoke$lambda$lambda_1);
            var instance_0 = new Korge$invoke$lambda$ObjectLiteral(this.local$closure$title, this.local$closure$fullscreen, this.local$closure$width, this.local$closure$height, this.local$closure$virtualWidth, this.local$closure$virtualHeight);
            $this_1.mapInstance_b1ce0a$(getKClass(Module), instance_0);
            this.local$views.debugViews = this.local$closure$debug;
            this.local$views.virtualWidth = this.local$closure$virtualWidth;
            this.local$views.virtualHeight = this.local$closure$virtualHeight;
            this.local$views.scaleAnchor = this.local$closure$scaleAnchor;
            this.local$views.scaleMode = this.local$closure$scaleMode;
            this.local$views.clipBorders = this.local$closure$clipBorders;
            this.local$views.targetFps = this.local$closure$targetFps;
            this.state_0 = 6;
            this.result_0 = this.local$this$Korge.prepareViews_fgqc3$(this.local$views, this.local$gameWindow, this.local$closure$bgcolor != null, this.local$closure$bgcolor != null ? this.local$closure$bgcolor : color.Colors.TRANSPARENT_BLACK, void 0, true, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            launchImmediately(this.local$views, Korge$invoke$lambda$lambda_2(this.local$closure$entry, this.local$views, this.local$gameWindow));
            if (util.OS.isNative)
              println('CanvasApplicationEx.IN[1]');
            if (util.OS.isNative)
              println('Korui[1]');
            this.state_0 = 7;
            this.result_0 = this.local$gameWindow.waitClose(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            return this.result_0;
          case 8:
            throw this.exception_0;
          default:this.state_0 = 8;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 8) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$invoke$lambda_0(closure$realGameWindow_0, closure$width_0, closure$height_0, closure$title_0, closure$icon_0, closure$fullscreen_0, closure$iconDrawable_0, closure$iconPath_0, closure$imageFormats_0, this$Korge_0, closure$quality_0, closure$injector_0, closure$timeProvider_0, closure$args_0, closure$virtualWidth_0, closure$virtualHeight_0, closure$debug_0, closure$scaleAnchor_0, closure$scaleMode_0, closure$clipBorders_0, closure$targetFps_0, closure$bgcolor_0, closure$entry_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Korge$invoke$lambda_0(closure$realGameWindow_0, closure$width_0, closure$height_0, closure$title_0, closure$icon_0, closure$fullscreen_0, closure$iconDrawable_0, closure$iconPath_0, closure$imageFormats_0, this$Korge_0, closure$quality_0, closure$injector_0, closure$timeProvider_0, closure$args_0, closure$virtualWidth_0, closure$virtualHeight_0, closure$debug_0, closure$scaleAnchor_0, closure$scaleMode_0, closure$clipBorders_0, closure$targetFps_0, closure$bgcolor_0, closure$entry_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$invoke_hyfg37$($this, title_0, width_0, height_0, virtualWidth_0, virtualHeight_0, icon_0, iconPath_0, iconDrawable_0, imageFormats_0, quality_0, targetFps_0, scaleAnchor_0, scaleMode_0, clipBorders_0, bgcolor_0, debug_0, fullscreen_0, args_0, gameWindow_0, timeProvider_0, injector_0, entry_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$title = title_0;
    this.local$width = width_0;
    this.local$height = height_0;
    this.local$virtualWidth = virtualWidth_0;
    this.local$virtualHeight = virtualHeight_0;
    this.local$icon = icon_0;
    this.local$iconPath = iconPath_0;
    this.local$iconDrawable = iconDrawable_0;
    this.local$imageFormats = imageFormats_0;
    this.local$quality = quality_0;
    this.local$targetFps = targetFps_0;
    this.local$scaleAnchor = scaleAnchor_0;
    this.local$scaleMode = scaleMode_0;
    this.local$clipBorders = clipBorders_0;
    this.local$bgcolor = bgcolor_0;
    this.local$debug = debug_0;
    this.local$fullscreen = fullscreen_0;
    this.local$args = args_0;
    this.local$gameWindow = gameWindow_0;
    this.local$timeProvider = timeProvider_0;
    this.local$injector = injector_0;
    this.local$entry = entry_0;
  }
  Coroutine$invoke_hyfg37$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_hyfg37$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_hyfg37$.prototype.constructor = Coroutine$invoke_hyfg37$;
  Coroutine$invoke_hyfg37$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$title === void 0)
              this.local$title = 'Korge';
            if (this.local$width === void 0)
              this.local$width = 1280;
            if (this.local$height === void 0)
              this.local$height = 720;
            if (this.local$virtualWidth === void 0)
              this.local$virtualWidth = this.local$width;
            if (this.local$virtualHeight === void 0)
              this.local$virtualHeight = this.local$height;
            if (this.local$icon === void 0)
              this.local$icon = null;
            if (this.local$iconPath === void 0)
              this.local$iconPath = null;
            if (this.local$iconDrawable === void 0)
              this.local$iconDrawable = null;
            if (this.local$imageFormats === void 0)
              this.local$imageFormats = ImageFormats_init([format.PNG]);
            if (this.local$quality === void 0)
              this.local$quality = GameWindow$Quality.AUTOMATIC;
            if (this.local$targetFps === void 0)
              this.local$targetFps = 0.0;
            if (this.local$scaleAnchor === void 0)
              this.local$scaleAnchor = Anchor.Companion.MIDDLE_CENTER;
            if (this.local$scaleMode === void 0)
              this.local$scaleMode = ScaleMode.Companion.SHOW_ALL;
            if (this.local$clipBorders === void 0)
              this.local$clipBorders = true;
            if (this.local$bgcolor === void 0)
              this.local$bgcolor = color.Colors.BLACK;
            if (this.local$debug === void 0)
              this.local$debug = false;
            if (this.local$fullscreen === void 0)
              this.local$fullscreen = null;
            if (this.local$args === void 0)
              this.local$args = [];
            if (this.local$gameWindow === void 0)
              this.local$gameWindow = null;
            if (this.local$timeProvider === void 0)
              this.local$timeProvider = HRTimeProvider.Companion;
            if (this.local$injector === void 0)
              this.local$injector = new AsyncInjector();
            var tmp$;
            if (!util.OS.isJsBrowser) {
              this.state_0 = 2;
              this.result_0 = configureLoggerFromProperties_0(std.localCurrentDirVfs.get_61zpoe$('klogger.properties'), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            var realGameWindow = (tmp$ = this.local$gameWindow != null ? this.local$gameWindow : this.context.get_j3r2sn$(GameWindow.CoroutineKey)) != null ? tmp$ : CreateDefaultGameWindow();
            this.state_0 = 4;
            this.result_0 = realGameWindow.loop_179clj$(Korge$invoke$lambda_0(realGameWindow, this.local$width, this.local$height, this.local$title, this.local$icon, this.local$fullscreen, this.local$iconDrawable, this.local$iconPath, this.local$imageFormats, this.$this, this.local$quality, this.local$injector, this.local$timeProvider, this.local$args, this.local$virtualWidth, this.local$virtualHeight, this.local$debug, this.local$scaleAnchor, this.local$scaleMode, this.local$clipBorders, this.local$targetFps, this.local$bgcolor, this.local$entry), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Korge.prototype.invoke_hyfg37$ = function (title_0, width_0, height_0, virtualWidth_0, virtualHeight_0, icon_0, iconPath_0, iconDrawable_0, imageFormats_0, quality_0, targetFps_0, scaleAnchor_0, scaleMode_0, clipBorders_0, bgcolor_0, debug_0, fullscreen_0, args_0, gameWindow_0, timeProvider_0, injector_0, entry_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_hyfg37$(this, title_0, width_0, height_0, virtualWidth_0, virtualHeight_0, icon_0, iconPath_0, iconDrawable_0, imageFormats_0, quality_0, targetFps_0, scaleAnchor_0, scaleMode_0, clipBorders_0, bgcolor_0, debug_0, fullscreen_0, args_0, gameWindow_0, timeProvider_0, injector_0, entry_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$waitClose_o1m7b$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$waitClose_o1m7b$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitClose_o1m7b$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitClose_o1m7b$.prototype.constructor = Coroutine$waitClose_o1m7b$;
  Coroutine$waitClose_o1m7b$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$$receiver.running) {
              this.state_0 = 4;
              continue;
            }
            this.state_0 = 3;
            this.result_0 = delay(this.local$$receiver, TimeSpan.Companion.fromMilliseconds_14dthe$(100), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Korge.prototype.waitClose_o1m7b$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$waitClose_o1m7b$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Korge$prepareViews$getRealX(closure$ag) {
    return function (x, scaleCoords) {
      return scaleCoords ? x * closure$ag.devicePixelRatio : x;
    };
  }
  function Korge$prepareViews$getRealY(closure$ag) {
    return function (y, scaleCoords) {
      return scaleCoords ? y * closure$ag.devicePixelRatio : y;
    };
  }
  function Korge$prepareViews$updateTouch(closure$input) {
    return function (id, x, y, start, end) {
      var touch = closure$input.getTouch_za3lpa$(id);
      var now = DateTime.Companion.now();
      touch.id = id;
      touch.active = !end;
      if (start) {
        touch.startTime = now;
        touch.start.setTo_lu1900$(x, y);
      }touch.currentTime = now;
      touch.current.setTo_lu1900$(x, y);
      closure$input.updateTouches();
    };
  }
  function Korge$prepareViews$mouseDown(closure$views, closure$downPos, closure$downTime) {
    return function (type, x, y) {
      closure$views.input.mouseButtons = 1;
      closure$views.input.mouse.setTo_lu1900$(x, y);
      closure$views.mouseUpdated();
      closure$downPos.copyFrom_4l17gg$(closure$views.input.mouse);
      closure$downTime.v = DateTime.Companion.now();
      closure$views.input.mouseInside = true;
    };
  }
  function Korge$prepareViews$mouseUp(closure$views, closure$upPos, closure$upTime, closure$downTime) {
    return function (type, x, y) {
      closure$views.input.mouseButtons = 0;
      closure$views.input.mouse.setTo_lu1900$(x, y);
      closure$views.mouseUpdated();
      closure$upPos.copyFrom_4l17gg$(closure$views.input.mouse);
      if (equals(type, 'onTouchEnd')) {
        closure$upTime.v = DateTime.Companion.now();
        if (closure$downTime.v.minus_mw5vjr$(closure$upTime.v).compareTo_11rb$(TimeSpan.Companion.fromMilliseconds_14dthe$(40)) <= 0) {
          var $receiver = closure$views;
          var event = new MouseEvent(MouseEvent$Type.CLICK);
          $receiver.dispatch_nipq8w$(getKClass(MouseEvent), event);
        }}};
  }
  function Korge$prepareViews$mouseMove(closure$views, closure$moveMouseOutsideInNextFrame, closure$moveTime) {
    return function (type, x, y, inside) {
      closure$views.input.mouse.setTo_lu1900$(x, y);
      closure$views.input.mouseInside = inside;
      if (!inside) {
        closure$moveMouseOutsideInNextFrame.v = true;
      }closure$views.mouseUpdated();
      closure$moveTime.v = DateTime.Companion.now();
    };
  }
  function Korge$prepareViews$mouseDrag(closure$views, closure$moveTime) {
    return function (type, x, y) {
      closure$views.input.mouse.setTo_lu1900$(x, y);
      closure$views.mouseUpdated();
      closure$moveTime.v = DateTime.Companion.now();
    };
  }
  function Korge$prepareViews$lambda(this$Korge, closure$getRealX, closure$getRealY, closure$mouseDown, closure$mouseTouchId, closure$updateTouch, closure$mouseUp, closure$mouseDrag, closure$mouseMove, closure$views) {
    return function (e) {
      var $this = this$Korge.logger;
      var level = Logger$Level.TRACE;
      if ($this.isEnabled_fs4ikx$(level)) {
        $this.actualLog_pwm3k3$(level, 'eventDispatcher.addEventListener<MouseEvent>:' + e);
      }var x = closure$getRealX(e.x, e.scaleCoords);
      var y = closure$getRealY(e.y, e.scaleCoords);
      switch (e.type.name) {
        case 'DOWN':
          closure$mouseDown('mouseDown', x, y);
          closure$updateTouch(closure$mouseTouchId, x, y, true, false);
          break;
        case 'UP':
          closure$mouseUp('mouseUp', x, y);
          closure$updateTouch(closure$mouseTouchId, x, y, false, true);
          break;
        case 'DRAG':
          closure$mouseDrag('onMouseDrag', x, y);
          closure$updateTouch(closure$mouseTouchId, x, y, false, false);
          break;
        case 'MOVE':
          closure$mouseMove('mouseMove', x, y, true);
          break;
        case 'CLICK':
          break;
        case 'ENTER':
          closure$mouseMove('mouseEnter', x, y, true);
          break;
        case 'EXIT':
          closure$mouseMove('mouseExit', x, y, false);
          break;
        case 'SCROLL':
          break;
      }
      closure$views.dispatch_nipq8w$(getKClass(MouseEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_0(this$Korge, closure$views) {
    return function (e) {
      var $this = this$Korge.logger;
      var level = Logger$Level.TRACE;
      if ($this.isEnabled_fs4ikx$(level)) {
        $this.actualLog_pwm3k3$(level, 'eventDispatcher.addEventListener<KeyEvent>:' + e);
      }closure$views.dispatch_nipq8w$(getKClass(KeyEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_1(closure$views) {
    return function (e) {
      closure$views.dispatch_nipq8w$(getKClass(ResumeEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_2(closure$views) {
    return function (e) {
      closure$views.dispatch_nipq8w$(getKClass(PauseEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_3(closure$views) {
    return function (e) {
      closure$views.dispatch_nipq8w$(getKClass(StopEvent), e);
      return Unit;
    };
  }
  function Coroutine$Korge$prepareViews$lambda$lambda(closure$views_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$views = closure$views_0;
  }
  Coroutine$Korge$prepareViews$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korge$prepareViews$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korge$prepareViews$lambda$lambda.prototype.constructor = Coroutine$Korge$prepareViews$lambda$lambda;
  Coroutine$Korge$prepareViews$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$views.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korge$prepareViews$lambda$lambda(closure$views_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Korge$prepareViews$lambda$lambda(closure$views_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Korge$prepareViews$lambda_4(closure$views) {
    return function (e) {
      try {
        closure$views.dispatch_nipq8w$(getKClass(DestroyEvent), e);
      }finally {
        launchImmediately(closure$views, Korge$prepareViews$lambda$lambda(closure$views));
      }
      return Unit;
    };
  }
  function Korge$prepareViews$touch(closure$updateTouch, closure$mouseDown, closure$mouseUp, closure$moveMouseOutsideInNextFrame, closure$mouseMove) {
    return function (e, start, end) {
      var t = first(e.touches);
      var x = t.current.x;
      var y = t.current.y;
      closure$updateTouch(t.id, x, y, start, end);
      if (start)
        closure$mouseDown('onTouchStart', x, y);
      else if (end) {
        closure$mouseUp('onTouchEnd', x, y);
        closure$moveMouseOutsideInNextFrame.v = true;
      } else {
        closure$mouseMove('onTouchMove', x, y, true);
      }
    };
  }
  function Korge$prepareViews$lambda_5(this$Korge, closure$getRealX, closure$touch, closure$views) {
    return function (e) {
      var $this = this$Korge.logger;
      var level = Logger$Level.TRACE;
      if ($this.isEnabled_fs4ikx$(level)) {
        $this.actualLog_pwm3k3$(level, 'eventDispatcher.addEventListener<TouchEvent>:' + e);
      }var touch = first(e.touches);
      var ix = numberToInt(closure$getRealX(touch.current.x, e.scaleCoords));
      var iy = numberToInt(closure$getRealX(touch.current.y, e.scaleCoords));
      switch (e.type.name) {
        case 'START':
          closure$touch(e, true, false);
          var $receiver = closure$views;
          var event = new MouseEvent(MouseEvent$Type.DOWN, 0, ix, iy, MouseButton.LEFT, 1);
          $receiver.dispatch_nipq8w$(getKClass(MouseEvent), event);
          break;
        case 'MOVE':
          closure$touch(e, false, false);
          var $receiver_0 = closure$views;
          var event_0 = new MouseEvent(MouseEvent$Type.DRAG, 0, ix, iy, MouseButton.LEFT, 1);
          $receiver_0.dispatch_nipq8w$(getKClass(MouseEvent), event_0);
          break;
        case 'END':
          closure$touch(e, false, true);
          var $receiver_1 = closure$views;
          var event_1 = new MouseEvent(MouseEvent$Type.UP, 0, ix, iy, MouseButton.LEFT, 0);
          $receiver_1.dispatch_nipq8w$(getKClass(MouseEvent), event_1);
          break;
      }
      closure$views.dispatch_nipq8w$(getKClass(TouchEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$gamepadUpdated(closure$input) {
    return function (e) {
      var $receiver = e.gamepads;
      var tmp$;
      var n = 0;
      while (n < $receiver.length) {
        var closure$input_0 = closure$input;
        var gamepad = $receiver[tmp$ = n, n = tmp$ + 1 | 0, tmp$];
        closure$input_0.gamepads[gamepad.index].copyFrom_u2qnca$(gamepad);
      }
      closure$input.updateConnectedGamepads();
    };
  }
  function Korge$prepareViews$lambda_6(this$Korge, closure$views) {
    return function (e) {
      var $this = this$Korge.logger;
      var level = Logger$Level.TRACE;
      if ($this.isEnabled_fs4ikx$(level)) {
        $this.actualLog_pwm3k3$(level, 'eventDispatcher.addEventListener<GamePadConnectionEvent>:' + e);
      }closure$views.dispatch_nipq8w$(getKClass(GamePadConnectionEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_7(closure$gamepadUpdated, closure$views) {
    return function (e) {
      closure$gamepadUpdated(e);
      closure$views.dispatch_nipq8w$(getKClass(GamePadUpdateEvent), e);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_8(closure$views, closure$ag) {
    return function (e) {
      closure$views.resized_vux9f0$(closure$ag.backWidth, closure$ag.backHeight);
      return Unit;
    };
  }
  function Korge$prepareViews$lambda_9(closure$renderShown, closure$firstRenderDeferred, closure$views, closure$fixedSizeStep, closure$moveMouseOutsideInNextFrame) {
    return function (it) {
      if (!closure$renderShown.v) {
        closure$renderShown.v = true;
        closure$firstRenderDeferred.complete_11rb$(Unit);
      }try {
        closure$views.frameUpdateAndRender_fv8bff$(closure$fixedSizeStep);
        if (closure$moveMouseOutsideInNextFrame.v) {
          closure$moveMouseOutsideInNextFrame.v = false;
          closure$views.input.mouseInside = false;
          closure$views.mouseUpdated();
        }} catch (e) {
        if (Kotlin.isType(e, Throwable)) {
          printStackTrace(e);
        } else
          throw e;
      }
      return Unit;
    };
  }
  function Coroutine$prepareViews_fgqc3$($this, views_0, eventDispatcher_0, clearEachFrame_0, bgcolor_0, fixedSizeStep_0, waitForFirstRender_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$views = views_0;
    this.local$eventDispatcher = eventDispatcher_0;
    this.local$clearEachFrame = clearEachFrame_0;
    this.local$bgcolor = bgcolor_0;
    this.local$fixedSizeStep = fixedSizeStep_0;
    this.local$waitForFirstRender = waitForFirstRender_0;
  }
  Coroutine$prepareViews_fgqc3$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$prepareViews_fgqc3$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$prepareViews_fgqc3$.prototype.constructor = Coroutine$prepareViews_fgqc3$;
  Coroutine$prepareViews_fgqc3$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$clearEachFrame === void 0)
              this.local$clearEachFrame = true;
            if (this.local$bgcolor === void 0)
              this.local$bgcolor = color.Colors.TRANSPARENT_BLACK;
            if (this.local$fixedSizeStep === void 0)
              this.local$fixedSizeStep = TimeSpan.Companion.NULL;
            if (this.local$waitForFirstRender === void 0)
              this.local$waitForFirstRender = true;
            var input = this.local$views.input;
            var ag = this.local$views.ag;
            var downPos = Point.Companion.invoke();
            var upPos = Point.Companion.invoke();
            var downTime = {v: DateTime.Companion.EPOCH};
            var moveTime = {v: DateTime.Companion.EPOCH};
            var upTime = {v: DateTime.Companion.EPOCH};
            var moveMouseOutsideInNextFrame = {v: false};
            var mouseTouchId = -1;
            var getRealX = Korge$prepareViews$getRealX(ag);
            var getRealY = Korge$prepareViews$getRealY(ag);
            var updateTouch = Korge$prepareViews$updateTouch(input);
            var mouseDown = Korge$prepareViews$mouseDown(this.local$views, downPos, downTime);
            var mouseUp = Korge$prepareViews$mouseUp(this.local$views, upPos, upTime, downTime);
            var mouseMove = Korge$prepareViews$mouseMove(this.local$views, moveMouseOutsideInNextFrame, moveTime);
            var mouseDrag = Korge$prepareViews$mouseDrag(this.local$views, moveTime);
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(MouseEvent), Korge$prepareViews$lambda(this.$this, getRealX, getRealY, mouseDown, mouseTouchId, updateTouch, mouseUp, mouseDrag, mouseMove, this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(KeyEvent), Korge$prepareViews$lambda_0(this.$this, this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(ResumeEvent), Korge$prepareViews$lambda_1(this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(PauseEvent), Korge$prepareViews$lambda_2(this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(StopEvent), Korge$prepareViews$lambda_3(this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(DestroyEvent), Korge$prepareViews$lambda_4(this.local$views));
            var touch = Korge$prepareViews$touch(updateTouch, mouseDown, mouseUp, moveMouseOutsideInNextFrame, mouseMove);
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(TouchEvent), Korge$prepareViews$lambda_5(this.$this, getRealX, touch, this.local$views));
            var gamepadUpdated = Korge$prepareViews$gamepadUpdated(input);
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(GamePadConnectionEvent), Korge$prepareViews$lambda_6(this.$this, this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(GamePadUpdateEvent), Korge$prepareViews$lambda_7(gamepadUpdated, this.local$views));
            this.local$eventDispatcher.addEventListener_xa594f$(getKClass(ReshapeEvent), Korge$prepareViews$lambda_8(this.local$views, ag));
            var event = new ReshapeEvent(0, 0, this.local$views.nativeWidth, this.local$views.nativeHeight);
            this.local$eventDispatcher.dispatch_nipq8w$(getKClass(ReshapeEvent), event);
            var renderShown = {v: false};
            this.local$views.clearEachFrame = this.local$clearEachFrame;
            this.local$views.clearColor = this.local$bgcolor;
            var firstRenderDeferred = CompletableDeferred();
            this.local$views.gameWindow.addEventListener_xa594f$(getKClass(RenderEvent), Korge$prepareViews$lambda_9(renderShown, firstRenderDeferred, this.local$views, this.local$fixedSizeStep, moveMouseOutsideInNextFrame));
            if (this.local$waitForFirstRender) {
              this.state_0 = 2;
              this.result_0 = firstRenderDeferred.await(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Korge.prototype.prepareViews_fgqc3$ = function (views_0, eventDispatcher_0, clearEachFrame_0, bgcolor_0, fixedSizeStep_0, waitForFirstRender_0, continuation_0, suspended) {
    var instance = new Coroutine$prepareViews_fgqc3$(this, views_0, eventDispatcher_0, clearEachFrame_0, bgcolor_0, fixedSizeStep_0, waitForFirstRender_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Korge$Config(module_0, args, imageFormats, gameWindow, sceneClass, sceneInjects, timeProvider, injector, debug, trace, context, fullscreen, constructedViews) {
    if (args === void 0)
      args = [];
    if (imageFormats === void 0)
      imageFormats = format.RegisteredImageFormats;
    if (gameWindow === void 0)
      gameWindow = null;
    if (sceneClass === void 0)
      sceneClass = module_0.mainScene;
    if (sceneInjects === void 0) {
      sceneInjects = emptyList();
    }if (timeProvider === void 0)
      timeProvider = HRTimeProvider.Companion;
    if (injector === void 0)
      injector = new AsyncInjector();
    if (debug === void 0)
      debug = false;
    if (trace === void 0)
      trace = false;
    if (context === void 0)
      context = null;
    if (fullscreen === void 0)
      fullscreen = null;
    if (constructedViews === void 0)
      constructedViews = Korge$Korge$Config_init$lambda;
    this.module = module_0;
    this.args = args;
    this.imageFormats = imageFormats;
    this.gameWindow = gameWindow;
    this.sceneClass = sceneClass;
    this.sceneInjects = sceneInjects;
    this.timeProvider = timeProvider;
    this.injector = injector;
    this.debug = debug;
    this.trace = trace;
    this.context = context;
    this.fullscreen = fullscreen;
    this.constructedViews = constructedViews;
  }
  function Korge$Korge$Config_init$lambda(it) {
    return Unit;
  }
  Korge$Config.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Config',
    interfaces: []
  };
  Korge$Config.prototype.component1 = function () {
    return this.module;
  };
  Korge$Config.prototype.component2 = function () {
    return this.args;
  };
  Korge$Config.prototype.component3 = function () {
    return this.imageFormats;
  };
  Korge$Config.prototype.component4 = function () {
    return this.gameWindow;
  };
  Korge$Config.prototype.component5 = function () {
    return this.sceneClass;
  };
  Korge$Config.prototype.component6 = function () {
    return this.sceneInjects;
  };
  Korge$Config.prototype.component7 = function () {
    return this.timeProvider;
  };
  Korge$Config.prototype.component8 = function () {
    return this.injector;
  };
  Korge$Config.prototype.component9 = function () {
    return this.debug;
  };
  Korge$Config.prototype.component10 = function () {
    return this.trace;
  };
  Korge$Config.prototype.component11 = function () {
    return this.context;
  };
  Korge$Config.prototype.component12 = function () {
    return this.fullscreen;
  };
  Korge$Config.prototype.component13 = function () {
    return this.constructedViews;
  };
  Korge$Config.prototype.copy_w7kr6z$ = function (module_0, args, imageFormats, gameWindow, sceneClass, sceneInjects, timeProvider, injector, debug, trace, context, fullscreen, constructedViews) {
    return new Korge$Config(module_0 === void 0 ? this.module : module_0, args === void 0 ? this.args : args, imageFormats === void 0 ? this.imageFormats : imageFormats, gameWindow === void 0 ? this.gameWindow : gameWindow, sceneClass === void 0 ? this.sceneClass : sceneClass, sceneInjects === void 0 ? this.sceneInjects : sceneInjects, timeProvider === void 0 ? this.timeProvider : timeProvider, injector === void 0 ? this.injector : injector, debug === void 0 ? this.debug : debug, trace === void 0 ? this.trace : trace, context === void 0 ? this.context : context, fullscreen === void 0 ? this.fullscreen : fullscreen, constructedViews === void 0 ? this.constructedViews : constructedViews);
  };
  Korge$Config.prototype.toString = function () {
    return 'Config(module=' + Kotlin.toString(this.module) + (', args=' + Kotlin.toString(this.args)) + (', imageFormats=' + Kotlin.toString(this.imageFormats)) + (', gameWindow=' + Kotlin.toString(this.gameWindow)) + (', sceneClass=' + Kotlin.toString(this.sceneClass)) + (', sceneInjects=' + Kotlin.toString(this.sceneInjects)) + (', timeProvider=' + Kotlin.toString(this.timeProvider)) + (', injector=' + Kotlin.toString(this.injector)) + (', debug=' + Kotlin.toString(this.debug)) + (', trace=' + Kotlin.toString(this.trace)) + (', context=' + Kotlin.toString(this.context)) + (', fullscreen=' + Kotlin.toString(this.fullscreen)) + (', constructedViews=' + Kotlin.toString(this.constructedViews)) + ')';
  };
  Korge$Config.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.module) | 0;
    result = result * 31 + Kotlin.hashCode(this.args) | 0;
    result = result * 31 + Kotlin.hashCode(this.imageFormats) | 0;
    result = result * 31 + Kotlin.hashCode(this.gameWindow) | 0;
    result = result * 31 + Kotlin.hashCode(this.sceneClass) | 0;
    result = result * 31 + Kotlin.hashCode(this.sceneInjects) | 0;
    result = result * 31 + Kotlin.hashCode(this.timeProvider) | 0;
    result = result * 31 + Kotlin.hashCode(this.injector) | 0;
    result = result * 31 + Kotlin.hashCode(this.debug) | 0;
    result = result * 31 + Kotlin.hashCode(this.trace) | 0;
    result = result * 31 + Kotlin.hashCode(this.context) | 0;
    result = result * 31 + Kotlin.hashCode(this.fullscreen) | 0;
    result = result * 31 + Kotlin.hashCode(this.constructedViews) | 0;
    return result;
  };
  Korge$Config.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.module, other.module) && Kotlin.equals(this.args, other.args) && Kotlin.equals(this.imageFormats, other.imageFormats) && Kotlin.equals(this.gameWindow, other.gameWindow) && Kotlin.equals(this.sceneClass, other.sceneClass) && Kotlin.equals(this.sceneInjects, other.sceneInjects) && Kotlin.equals(this.timeProvider, other.timeProvider) && Kotlin.equals(this.injector, other.injector) && Kotlin.equals(this.debug, other.debug) && Kotlin.equals(this.trace, other.trace) && Kotlin.equals(this.context, other.context) && Kotlin.equals(this.fullscreen, other.fullscreen) && Kotlin.equals(this.constructedViews, other.constructedViews)))));
  };
  function Korge$ModuleArgs(args) {
    this.args = args;
  }
  Korge$ModuleArgs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModuleArgs',
    interfaces: []
  };
  Korge$ModuleArgs.prototype.component1 = function () {
    return this.args;
  };
  Korge$ModuleArgs.prototype.copy_kand9s$ = function (args) {
    return new Korge$ModuleArgs(args === void 0 ? this.args : args);
  };
  Korge$ModuleArgs.prototype.toString = function () {
    return 'ModuleArgs(args=' + Kotlin.toString(this.args) + ')';
  };
  Korge$ModuleArgs.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.args) | 0;
    return result;
  };
  Korge$ModuleArgs.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.args, other.args))));
  };
  Korge.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Korge',
    interfaces: []
  };
  var Korge_instance = null;
  function Korge_getInstance() {
    if (Korge_instance === null) {
      new Korge();
    }return Korge_instance;
  }
  function KorgeHeadless() {
    KorgeHeadless_instance = this;
  }
  function KorgeHeadless$HeadlessGameWindow(width, height) {
    if (width === void 0)
      width = 640;
    if (height === void 0)
      height = 480;
    GameWindow.call(this);
    this.width_axh6o6$_0 = width;
    this.height_p81ehr$_0 = height;
    this.ag_oaqt32$_0 = new DummyAG(this.width, this.height);
  }
  Object.defineProperty(KorgeHeadless$HeadlessGameWindow.prototype, 'width', {
    get: function () {
      return this.width_axh6o6$_0;
    }
  });
  Object.defineProperty(KorgeHeadless$HeadlessGameWindow.prototype, 'height', {
    get: function () {
      return this.height_p81ehr$_0;
    }
  });
  Object.defineProperty(KorgeHeadless$HeadlessGameWindow.prototype, 'ag', {
    get: function () {
      return this.ag_oaqt32$_0;
    }
  });
  KorgeHeadless$HeadlessGameWindow.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HeadlessGameWindow',
    interfaces: [GameWindow]
  };
  KorgeHeadless.prototype.invoke_dnucxw$ = function (config, continuation) {
    return Korge_getInstance().invoke_dnucxw$(config.copy_w7kr6z$(void 0, void 0, void 0, new KorgeHeadless$HeadlessGameWindow()), continuation);
  };
  KorgeHeadless.prototype.invoke_scuy04$ = function (title, width, height, virtualWidth, virtualHeight, icon, iconPath, iconDrawable, imageFormats, quality, targetFps, scaleAnchor, scaleMode, clipBorders, bgcolor, debug, fullscreen, args, timeProvider, injector, entry, continuation) {
    if (title === void 0)
      title = 'Korge';
    if (width === void 0)
      width = 1280;
    if (height === void 0)
      height = 720;
    if (virtualWidth === void 0)
      virtualWidth = width;
    if (virtualHeight === void 0)
      virtualHeight = height;
    if (icon === void 0)
      icon = null;
    if (iconPath === void 0)
      iconPath = null;
    if (iconDrawable === void 0)
      iconDrawable = null;
    if (imageFormats === void 0)
      imageFormats = ImageFormats_init([format.PNG]);
    if (quality === void 0)
      quality = GameWindow$Quality.AUTOMATIC;
    if (targetFps === void 0)
      targetFps = 0.0;
    if (scaleAnchor === void 0)
      scaleAnchor = Anchor.Companion.MIDDLE_CENTER;
    if (scaleMode === void 0)
      scaleMode = ScaleMode.Companion.SHOW_ALL;
    if (clipBorders === void 0)
      clipBorders = true;
    if (bgcolor === void 0)
      bgcolor = color.Colors.BLACK;
    if (debug === void 0)
      debug = false;
    if (fullscreen === void 0)
      fullscreen = null;
    if (args === void 0)
      args = [];
    if (timeProvider === void 0)
      timeProvider = HRTimeProvider.Companion;
    if (injector === void 0)
      injector = new AsyncInjector();
    return Korge_getInstance().invoke_hyfg37$(title, width, height, virtualWidth, virtualHeight, icon, iconPath, iconDrawable, imageFormats, quality, targetFps, scaleAnchor, scaleMode, clipBorders, bgcolor, debug, fullscreen, args, new KorgeHeadless$HeadlessGameWindow(), timeProvider, injector, entry, continuation);
  };
  KorgeHeadless.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KorgeHeadless',
    interfaces: []
  };
  var KorgeHeadless_instance = null;
  function KorgeHeadless_getInstance() {
    if (KorgeHeadless_instance === null) {
      new KorgeHeadless();
    }return KorgeHeadless_instance;
  }
  function get_VERSION($receiver) {
    return '1.0.0-beta-3';
  }
  function AnElement() {
  }
  AnElement.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AnElement',
    interfaces: []
  };
  function createDuplicated($receiver) {
    return $receiver.symbol.create_k19av$($receiver.library);
  }
  function createDuplicatedView($receiver) {
    var tmp$;
    return Kotlin.isType(tmp$ = $receiver.symbol.create_k19av$($receiver.library), View) ? tmp$ : throwCCE();
  }
  function AnBaseShape(library, symbol) {
    View_init(this);
    this.library_fl1jbj$_0 = library;
    this.symbol_jmf2xa$_0 = symbol;
    this.ninePatch = null;
    this.posCuts = [new Point(0.0, 0.0), new Point(0.25, 0.25), new Point(0.75, 0.75), new Point(1.0, 1.0)];
    this.texCuts = [new Point(0.0, 0.0), new Point(0.25, 0.25), new Point(0.75, 0.75), new Point(1.0, 1.0)];
    this.hitShape_2ak1w$_0 = null;
  }
  Object.defineProperty(AnBaseShape.prototype, 'library', {
    get: function () {
      return this.library_fl1jbj$_0;
    }
  });
  Object.defineProperty(AnBaseShape.prototype, 'symbol', {
    get: function () {
      return this.symbol_jmf2xa$_0;
    }
  });
  AnBaseShape.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    if (this.ninePatch != null) {
      var np = ensureNotNull(this.ninePatch);
      var lm = ensureNotNull(this.parent).localMatrix;
      var npLeft = np.left - this.dx;
      var npTop = np.top - this.dy;
      var npRight = np.right - this.dx;
      var npBottom = np.bottom - this.dy;
      var ascaleX = lm.a;
      var ascaleY = lm.d;
      this.posCuts[1].setTo_lu1900$(npLeft / this.texWidth / ascaleX, npTop / this.texHeight / ascaleY);
      this.posCuts[2].setTo_lu1900$(1.0 - (this.texWidth - npRight) / this.texWidth / ascaleX, 1.0 - (this.texHeight - npBottom) / this.texHeight / ascaleY);
      this.texCuts[1].setTo_lu1900$(npLeft / this.texWidth, npTop / this.texHeight);
      this.texCuts[2].setTo_lu1900$(npRight / this.texWidth, npBottom / this.texWidth);
      ctx.batch.drawNinePatch_3jdr9x$(ctx.getTex_9byvhi$(this.tex), this.dx, this.dy, this.texWidth, this.texHeight, this.posCuts, this.texCuts, this.globalMatrix, this.smoothing, this.renderColorMul, this.renderColorAdd, this.renderBlendMode.factors);
    } else {
      ctx.batch.drawQuad_w9nimi$(ctx.getTex_9byvhi$(this.tex), this.dx, this.dy, this.texWidth, this.texHeight, this.globalMatrix, this.smoothing, this.renderColorMul, this.renderColorAdd, this.renderBlendMode.factors);
    }
  };
  Object.defineProperty(AnBaseShape.prototype, 'hitShape', {
    get: function () {
      var tmp$;
      return (tmp$ = this.hitShape_2ak1w$_0) != null ? tmp$ : this.symbol.path;
    },
    set: function (value) {
      this.hitShape_2ak1w$_0 = value;
    }
  });
  AnBaseShape.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_7b5o5w$(this.dx, this.dy, this.texWidth, this.texHeight);
  };
  AnBaseShape.prototype.toString = function () {
    return View.prototype.toString.call(this) + ':symbol=' + toString(this.symbol);
  };
  AnBaseShape.prototype.createInstance = function () {
    var tmp$;
    return Kotlin.isType(tmp$ = this.symbol.create_k19av$(this.library), View) ? tmp$ : throwCCE();
  };
  AnBaseShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnBaseShape',
    interfaces: [AnElement, View]
  };
  function AnShape(library, shapeSymbol) {
    AnBaseShape.call(this, library, shapeSymbol);
    this.shapeSymbol = shapeSymbol;
    this.dx_759g6x$_0 = this.shapeSymbol.bounds.x;
    this.dy_759g62$_0 = this.shapeSymbol.bounds.y;
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    this.tex_8fiwsu$_0 = (tmp$_0 = (tmp$ = this.shapeSymbol.textureWithBitmap) != null ? tmp$.texture : null) != null ? tmp$_0 : bitmap.Bitmaps.transparent;
    this.texScale_lpomjc$_0 = (tmp$_2 = (tmp$_1 = this.shapeSymbol.textureWithBitmap) != null ? tmp$_1.scale : null) != null ? tmp$_2 : 1.0;
    this.texWidth_np7yn0$_0 = this.tex.width / this.texScale;
    this.texHeight_figemj$_0 = this.tex.height / this.texScale;
    this.smoothing_spgvph$_0 = true;
  }
  Object.defineProperty(AnShape.prototype, 'dx', {
    get: function () {
      return this.dx_759g6x$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'dy', {
    get: function () {
      return this.dy_759g62$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'tex', {
    get: function () {
      return this.tex_8fiwsu$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'texScale', {
    get: function () {
      return this.texScale_lpomjc$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'texWidth', {
    get: function () {
      return this.texWidth_np7yn0$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'texHeight', {
    get: function () {
      return this.texHeight_figemj$_0;
    }
  });
  Object.defineProperty(AnShape.prototype, 'smoothing', {
    get: function () {
      return this.smoothing_spgvph$_0;
    }
  });
  AnShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnShape',
    interfaces: [AnBaseShape, AnElement]
  };
  function AnMorphShape(library, morphSymbol) {
    AnBaseShape.call(this, library, morphSymbol);
    this.morphSymbol = morphSymbol;
    this.timedResult_0 = new Timed$Result();
    this.texWBS = null;
    this.dx_fp5e2l$_0 = 0.0;
    this.dy_fp5e1q$_0 = 0.0;
    this.tex_akf4ty$_0 = bitmap.Bitmaps.transparent;
    this.texScale_2bj60c$_0 = 1.0;
    this.texWidth_bztwo$_0 = 0.0;
    this.texHeight_j84mk1$_0 = 0.0;
    this.smoothing_6145h3$_0 = true;
    this.ratio_3bfsoe$_0 = 0.0;
    this.updatedRatio_0();
  }
  Object.defineProperty(AnMorphShape.prototype, 'dx', {
    get: function () {
      return this.dx_fp5e2l$_0;
    },
    set: function (dx) {
      this.dx_fp5e2l$_0 = dx;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'dy', {
    get: function () {
      return this.dy_fp5e1q$_0;
    },
    set: function (dy) {
      this.dy_fp5e1q$_0 = dy;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'tex', {
    get: function () {
      return this.tex_akf4ty$_0;
    },
    set: function (tex) {
      this.tex_akf4ty$_0 = tex;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'texScale', {
    get: function () {
      return this.texScale_2bj60c$_0;
    },
    set: function (texScale) {
      this.texScale_2bj60c$_0 = texScale;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'texWidth', {
    get: function () {
      return this.texWidth_bztwo$_0;
    },
    set: function (texWidth) {
      this.texWidth_bztwo$_0 = texWidth;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'texHeight', {
    get: function () {
      return this.texHeight_j84mk1$_0;
    },
    set: function (texHeight) {
      this.texHeight_j84mk1$_0 = texHeight;
    }
  });
  Object.defineProperty(AnMorphShape.prototype, 'smoothing', {
    get: function () {
      return this.smoothing_6145h3$_0;
    },
    set: function (smoothing) {
      this.smoothing_6145h3$_0 = smoothing;
    }
  });
  AnMorphShape.prototype.updatedRatio_0 = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11;
    var result = this.morphSymbol.texturesWithBitmap.find_xgt0ho$(numberToInt(this.ratio * 1000), this.timedResult_0);
    this.texWBS = (tmp$ = result.left) != null ? tmp$ : result.right;
    this.dx = (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$_0 = this.texWBS) != null ? tmp$_0.bounds : null) != null ? tmp$_1.x : null) != null ? tmp$_2 : null) != null ? tmp$_3 : 0.0;
    this.dy = (tmp$_7 = (tmp$_6 = (tmp$_5 = (tmp$_4 = this.texWBS) != null ? tmp$_4.bounds : null) != null ? tmp$_5.y : null) != null ? tmp$_6 : null) != null ? tmp$_7 : 0.0;
    this.tex = (tmp$_9 = (tmp$_8 = this.texWBS) != null ? tmp$_8.texture : null) != null ? tmp$_9 : bitmap.Bitmaps.transparent;
    this.texScale = (tmp$_11 = (tmp$_10 = this.texWBS) != null ? tmp$_10.scale : null) != null ? tmp$_11 : 1.0;
    this.texWidth = this.tex.width / this.texScale;
    this.texHeight = this.tex.height / this.texScale;
    this.smoothing = true;
  };
  Object.defineProperty(AnMorphShape.prototype, 'ratio', {
    get: function () {
      return this.ratio_3bfsoe$_0;
    },
    set: function (value) {
      this.ratio_3bfsoe$_0 = value;
      this.updatedRatio_0();
    }
  });
  AnMorphShape.prototype.createInstance = function () {
    return new AnMorphShape(this.library, this.morphSymbol);
  };
  AnMorphShape.prototype.copyPropsFrom_l5rad2$ = function (source) {
    var tmp$;
    var src = Kotlin.isType(tmp$ = source, AnMorphShape) ? tmp$ : throwCCE();
    this.dx = src.dx;
    this.dy = src.dy;
    this.tex = src.tex;
    this.texScale = src.texScale;
    this.texWidth = src.texWidth;
    this.texHeight = src.texHeight;
    this.smoothing = src.smoothing;
  };
  AnMorphShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnMorphShape',
    interfaces: [AnBaseShape, AnElement]
  };
  function AnEmptyView(library, symbol) {
    if (symbol === void 0)
      symbol = AnSymbolEmpty_getInstance();
    DummyView.call(this);
    this.library_l7aqcz$_0 = library;
    this.symbol_9cp9vw$_0 = symbol;
  }
  Object.defineProperty(AnEmptyView.prototype, 'library', {
    get: function () {
      return this.library_l7aqcz$_0;
    }
  });
  Object.defineProperty(AnEmptyView.prototype, 'symbol', {
    get: function () {
      return this.symbol_9cp9vw$_0;
    }
  });
  AnEmptyView.prototype.createInstance = function () {
    var tmp$;
    return Kotlin.isType(tmp$ = this.symbol.create_k19av$(this.library), View) ? tmp$ : throwCCE();
  };
  AnEmptyView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnEmptyView',
    interfaces: [AnElement, DummyView]
  };
  function AnTextField(library, symbol) {
    Container.call(this);
    this.library_jepa2a$_0 = library;
    this.symbol_h7ho29$_0 = symbol;
    var $receiver = Text$Companion_getInstance().invoke_8ii8iq$('', 16.0);
    $receiver.textBounds.copyFrom_2da8yn$(this.symbol.bounds);
    $receiver.html = this.symbol.initialHtml;
    $receiver.relayout();
    this.textField_0 = $receiver;
    this.plusAssign_l5rad2$(this.textField_0);
    this.format_f6ank$_0 = new RedirectMutableField_init(getPropertyCallableRef('format', 0, function ($receiver) {
      return $receiver.format;
    }.bind(null, this.textField_0), function ($receiver, value) {
      $receiver.format = value;
    }.bind(null, this.textField_0)));
    this.text_ry9arq$_0 = new RedirectMutableField_init(getPropertyCallableRef('text', 0, function ($receiver) {
      return $receiver.text;
    }.bind(null, this.textField_0), function ($receiver, value) {
      $receiver.text = value;
    }.bind(null, this.textField_0)));
    this.html_s4lhfo$_0 = new RedirectMutableField_init(getPropertyCallableRef('html', 0, function ($receiver) {
      return $receiver.html;
    }.bind(null, this.textField_0), function ($receiver, value) {
      $receiver.html = value;
    }.bind(null, this.textField_0)));
  }
  Object.defineProperty(AnTextField.prototype, 'library', {
    get: function () {
      return this.library_jepa2a$_0;
    }
  });
  Object.defineProperty(AnTextField.prototype, 'symbol', {
    get: function () {
      return this.symbol_h7ho29$_0;
    }
  });
  Object.defineProperty(AnTextField.prototype, 'format', {
    get: function () {
      return this.format_f6ank$_0.redirect.get();
    },
    set: function (format) {
      this.format_f6ank$_0.redirect.set(format);
    }
  });
  Object.defineProperty(AnTextField.prototype, 'text', {
    get: function () {
      return this.text_ry9arq$_0.redirect.get();
    },
    set: function (text) {
      this.text_ry9arq$_0.redirect.set(text);
    }
  });
  Object.defineProperty(AnTextField.prototype, 'html', {
    get: function () {
      return this.html_s4lhfo$_0.redirect.get();
    },
    set: function (html) {
      this.html_s4lhfo$_0.redirect.set(html);
    }
  });
  AnTextField.prototype.createInstance = function () {
    var tmp$;
    return Kotlin.isType(tmp$ = this.symbol.create_k19av$(this.library), View) ? tmp$ : throwCCE();
  };
  AnTextField.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnTextField',
    interfaces: [IHtml, IText, AnElement, Container]
  };
  function stencilIndex$lambda() {
    return 0;
  }
  var stencilIndex;
  var stencilIndex_metadata = new PropertyMetadata('stencilIndex');
  function get_stencilIndex($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = stencilIndex.name) != null ? tmp$ : stencilIndex_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = stencilIndex.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = stencilIndex.name) != null ? tmp$_3 : stencilIndex_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_stencilIndex($receiver, stencilIndex_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = stencilIndex.name) != null ? tmp$ : stencilIndex_metadata.callableName, (tmp$_0 = stencilIndex_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function TimelineRunner(view, symbol) {
    this.view = view;
    this.symbol = symbol;
    this.library = this.view.library;
    this.views = this.library.views;
    this.currentTime = 0;
    this.currentStateName = null;
    this.currentSubtimeline = null;
    this.onStop = new Signal();
    this.onChangeState = new Signal();
    this.onEvent = new Signal();
    this.running_c9mhrn$_0 = true;
    this.gotoAndPlay_bm4lxs$('default');
    this.tempRangeResult_0 = new Timed$RangeResult();
  }
  Object.defineProperty(TimelineRunner.prototype, 'currentStateTotalTime', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.currentSubtimeline) != null ? tmp$.totalTime : null) != null ? tmp$_0 : 0;
    }
  });
  Object.defineProperty(TimelineRunner.prototype, 'running', {
    get: function () {
      return this.running_c9mhrn$_0;
    },
    set: function (value) {
      this.running_c9mhrn$_0 = value;
      if (!value) {
        this.onStop.invoke_11rb$(Unit);
      }}
  });
  TimelineRunner.prototype.getStateTime_61zpoe$ = function (name) {
    var tmp$;
    tmp$ = this.symbol.states.get_11rb$(name);
    if (tmp$ == null) {
      return 0;
    }var substate = tmp$;
    return substate.subTimeline.totalTime - substate.startTime | 0;
  };
  TimelineRunner.prototype.gotoAndRunning_xvbo1r$ = function (running, name, time) {
    if (time === void 0)
      time = 0;
    var substate = this.symbol.states.get_11rb$(name);
    if (substate != null) {
      this.currentStateName = substate.name;
      this.currentSubtimeline = substate.subTimeline;
      this.currentTime = substate.startTime + time | 0;
      this.running = running;
      this.update_za3lpa$(0);
      this.onChangeState.invoke_11rb$(name);
    }};
  TimelineRunner.prototype.gotoAndPlay_bm4lxs$ = function (name, time) {
    if (time === void 0)
      time = 0;
    this.gotoAndRunning_xvbo1r$(true, name, time);
  };
  TimelineRunner.prototype.gotoAndStop_bm4lxs$ = function (name, time) {
    if (time === void 0)
      time = 0;
    this.gotoAndRunning_xvbo1r$(false, name, time);
  };
  TimelineRunner.prototype.update_za3lpa$ = function (time) {
    if (!this.running)
      return;
    if (this.currentSubtimeline == null)
      return;
    var cs = ensureNotNull(this.currentSubtimeline);
    var tmp$ = this.currentTime;
    var a = this.currentStateTotalTime;
    var b = this.currentTime + time | 0;
    this.eval_0(tmp$, Math_0.min(a, b));
    this.currentTime = this.currentTime + time | 0;
    if (this.currentTime >= this.currentStateTotalTime) {
      var accumulatedTime = this.currentTime - this.currentStateTotalTime | 0;
      var nextState = cs.nextState;
      if (nextState == null) {
        this.running = false;
      } else {
        this.gotoAndRunning_xvbo1r$(cs.nextStatePlay, nextState, 0);
        this.currentTime = this.currentTime + accumulatedTime | 0;
        this.eval_0(this.currentTime - accumulatedTime | 0, this.currentTime);
      }
    }};
  function Coroutine$TimelineRunner$eval$lambda(this$TimelineRunner_0, closure$action_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$TimelineRunner = this$TimelineRunner_0;
    this.local$closure$action = closure$action_0;
  }
  Coroutine$TimelineRunner$eval$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TimelineRunner$eval$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TimelineRunner$eval$lambda.prototype.constructor = Coroutine$TimelineRunner$eval$lambda;
  Coroutine$TimelineRunner$eval$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$_0 = (tmp$ = this.local$this$TimelineRunner.library.symbolsById.get_za3lpa$(this.local$closure$action.soundId)) == null || Kotlin.isType(tmp$, AnSymbolSound) ? tmp$ : throwCCE()) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$_0.getNativeSound(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            var data = this.result_0;
            if (data != null) {
              return data.play_gfl8bq$(), Unit;
            } else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TimelineRunner$eval$lambda(this$TimelineRunner_0, closure$action_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TimelineRunner$eval$lambda(this$TimelineRunner_0, closure$action_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TimelineRunner.prototype.eval_0 = function (prev, current) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    if (prev >= current)
      return;
    tmp$_0 = (tmp$ = this.currentSubtimeline) != null ? tmp$.actions : null;
    if (tmp$_0 == null) {
      return;
    }var actionsTimeline = tmp$_0;
    var result = actionsTimeline.getRangeIndices_b4nn5q$(prev, current - 1 | 0, this.tempRangeResult_0);
    tmp$_1 = result.startIndex;
    tmp$_2 = result.endIndex;
    execution: for (var n = tmp$_1; n <= tmp$_2; n++) {
      var action = actionsTimeline.objects.get_za3lpa$(n);
      if (Kotlin.isType(action, AnPlaySoundAction))
        asyncImmediately(this.library.views, TimelineRunner$eval$lambda(this, action));
      else if (Kotlin.isType(action, AnEventAction))
        this.onEvent.invoke_11rb$(action.event);
    }
  };
  TimelineRunner.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimelineRunner',
    interfaces: []
  };
  function AnPlayable() {
  }
  AnPlayable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AnPlayable',
    interfaces: []
  };
  function AnSimpleAnimation(frameTime, animations, anchor) {
    if (anchor === void 0)
      anchor = Anchor.Companion.TOP_LEFT;
    Container.call(this);
    this.frameTime = frameTime;
    this.animations = animations;
    this.anchor = anchor;
    this.image = new Image(bitmap.Bitmaps.transparent);
    var tmp$;
    this.defaultAnimation = (tmp$ = firstOrNull(this.animations.values)) != null ? tmp$ : emptyList();
    this.animation = this.defaultAnimation;
    this.elapsedTime_0 = 0;
    this.image.anchorX = this.anchor.sx;
    this.image.anchorY = this.anchor.sy;
    this.myupdate_0();
    this.plusAssign_l5rad2$(this.image);
    this.addUpdatable_b4k9x1$(AnSimpleAnimation_init$lambda(this));
  }
  AnSimpleAnimation.prototype.createInstance = function () {
    return new AnSimpleAnimation(this.frameTime, this.animations, this.anchor);
  };
  Object.defineProperty(AnSimpleAnimation.prototype, 'numberOfFrames', {
    get: function () {
      return this.animation.size;
    }
  });
  AnSimpleAnimation.prototype.play_61zpoe$ = function (name) {
    var tmp$;
    this.animation = (tmp$ = this.animations.get_11rb$(name)) != null ? tmp$ : this.defaultAnimation;
  };
  AnSimpleAnimation.prototype.myupdate_0 = function () {
    var tmp$;
    var frameNum = this.elapsedTime_0 / this.frameTime | 0;
    var bmpSlice = (tmp$ = getOrNull(this.animation, frameNum % this.numberOfFrames)) != null ? tmp$ : bitmap.Bitmaps.transparent;
    this.image.bitmap = bmpSlice;
  };
  function AnSimpleAnimation_init$lambda(this$AnSimpleAnimation) {
    return function (dtMs) {
      this$AnSimpleAnimation.elapsedTime_0 = (this$AnSimpleAnimation.elapsedTime_0 + dtMs | 0) % Kotlin.imul(this$AnSimpleAnimation.numberOfFrames, this$AnSimpleAnimation.frameTime);
      this$AnSimpleAnimation.myupdate_0();
      return Unit;
    };
  }
  AnSimpleAnimation.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSimpleAnimation',
    interfaces: [AnPlayable, Container]
  };
  function AnMovieClip(library, symbol) {
    AnMovieClip$Companion_getInstance();
    Container.call(this);
    this.library_kjq3lr$_0 = library;
    this.symbol_aapdmm$_0 = symbol;
    this.tempTimedResult_0 = new Timed$Result();
    this.totalDepths = this.symbol.limits.totalDepths;
    this.totalUids = this.symbol.limits.totalUids;
    var array = Array_0(this.totalDepths);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new DummyView();
    }
    this.dummyDepths = array;
    var array_0 = new Int32Array(this.totalDepths + 10 | 0);
    var tmp$_0;
    tmp$_0 = array_0.length - 1 | 0;
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      array_0[i_0] = -1;
    }
    this.maskPushDepths = array_0;
    var array_1 = booleanArray(this.totalDepths + 10 | 0, false);
    var tmp$_1;
    tmp$_1 = array_1.length - 1 | 0;
    for (var i_1 = 0; i_1 <= tmp$_1; i_1++) {
      array_1[i_1] = false;
    }
    this.maskPopDepths = array_1;
    var array_2 = Array_0(this.totalUids);
    var tmp$_2;
    tmp$_2 = array_2.length - 1 | 0;
    for (var i_2 = 0; i_2 <= tmp$_2; i_2++) {
      var tmp$_3;
      var info = this.symbol.uidInfo[i_2];
      var view = Kotlin.isType(tmp$_3 = this.library.create_za3lpa$(info.characterId), View) ? tmp$_3 : throwCCE();
      view.addProps_zb9t9x$(info.extraProps);
      array_2[i_2] = view;
    }
    this.viewUids = array_2;
    this.firstUpdate = true;
    this.smoothing = this.library.defaultSmoothing;
    this.singleFrame = this.symbol.limits.totalFrames <= 1;
    this.unsortedChildren = ArrayList_init(toList(this.dummyDepths));
    this.timelineRunner = new TimelineRunner(this, this.symbol);
    var $receiver = this.dummyDepths;
    var tmp$_4;
    var n = 0;
    while (n < $receiver.length) {
      this.plusAssign_l5rad2$($receiver[tmp$_4 = n, n = tmp$_4 + 1 | 0, tmp$_4]);
    }
    this.addUpdatable_b4k9x1$(AnMovieClip_init$lambda(this));
    this.tempMatrix_0 = new Matrix();
  }
  Object.defineProperty(AnMovieClip.prototype, 'library', {
    get: function () {
      return this.library_kjq3lr$_0;
    }
  });
  Object.defineProperty(AnMovieClip.prototype, 'symbol', {
    get: function () {
      return this.symbol_aapdmm$_0;
    }
  });
  AnMovieClip.prototype.clone = function () {
    var $receiver = this.createInstance();
    $receiver.copyPropsFrom_l5rad2$($receiver);
    return $receiver;
  };
  AnMovieClip.prototype.createInstance = function () {
    var tmp$;
    return Kotlin.isType(tmp$ = this.symbol.create_k19av$(this.library), View) ? tmp$ : throwCCE();
  };
  Object.defineProperty(AnMovieClip.prototype, 'onStop', {
    get: function () {
      return this.timelineRunner.onStop;
    }
  });
  Object.defineProperty(AnMovieClip.prototype, 'onEvent', {
    get: function () {
      return this.timelineRunner.onEvent;
    }
  });
  Object.defineProperty(AnMovieClip.prototype, 'onChangeState', {
    get: function () {
      return this.timelineRunner.onChangeState;
    }
  });
  Object.defineProperty(AnMovieClip.prototype, 'currentState', {
    get: function () {
      return this.timelineRunner.currentStateName;
    }
  });
  AnMovieClip.prototype.replaceDepth_0 = function (depth, view) {
    var result = replaceWith(this.unsortedChildren.get_za3lpa$(depth), view);
    this.unsortedChildren.set_wxm5ur$(depth, view);
    return result;
  };
  AnMovieClip.prototype.reset = function () {
    var tmp$;
    Container.prototype.reset.call(this);
    var $receiver = this.viewUids;
    var tmp$_0;
    var n = 0;
    while (n < $receiver.length) {
      $receiver[tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0].reset();
    }
    tmp$ = this.unsortedChildren.size;
    for (var n_0 = 0; n_0 < tmp$; n_0++) {
      this.replaceDepth_0(n_0, this.dummyDepths[n_0]);
    }
  };
  function AnMovieClip$Companion() {
    AnMovieClip$Companion_instance = this;
    this.STATE_NONE = new AnMovieClip$Companion$RenderState(new AG$StencilState(false), new AG$ColorMaskState(true, true, true, true));
    this.STATE_SHAPE = new AnMovieClip$Companion$RenderState(new AG$StencilState(true, void 0, AG$CompareMode.ALWAYS, AG$StencilOp.SET, AG$StencilOp.SET, AG$StencilOp.SET, 0, 0, 255), new AG$ColorMaskState(false, false, false, false));
    this.STATE_CONTENT = new AnMovieClip$Companion$RenderState(new AG$StencilState(true, void 0, AG$CompareMode.EQUAL, AG$StencilOp.KEEP, AG$StencilOp.KEEP, AG$StencilOp.KEEP, 0, 255, 0), new AG$ColorMaskState(true, true, true, true));
  }
  function AnMovieClip$Companion$RenderState(stencil, colorMask) {
    this.stencil = stencil;
    this.colorMask = colorMask;
  }
  AnMovieClip$Companion$RenderState.prototype.set_b4eeiz$ = function (ctx, referenceValue) {
    ctx.flush();
    if (ctx.masksEnabled) {
      this.stencil.referenceValue = referenceValue;
      ctx.batch.stencil = this.stencil;
      ctx.batch.colorMask = this.colorMask;
    } else {
      this.stencil.referenceValue = 0;
      ctx.batch.stencil = AnMovieClip$Companion_getInstance().STATE_NONE.stencil;
      ctx.batch.colorMask = AnMovieClip$Companion_getInstance().STATE_NONE.colorMask;
    }
  };
  AnMovieClip$Companion$RenderState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RenderState',
    interfaces: []
  };
  AnMovieClip$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AnMovieClip$Companion_instance = null;
  function AnMovieClip$Companion_getInstance() {
    if (AnMovieClip$Companion_instance === null) {
      new AnMovieClip$Companion();
    }return AnMovieClip$Companion_instance;
  }
  AnMovieClip.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    var $receiver = this.maskPopDepths;
    arrayfill($receiver, false, 0, $receiver.length);
    var usedStencil = {v: false};
    var state = {v: 0};
    var tmp$;
    if ((tmp$ = this._children) != null) {
      var n = 0;
      while (n < tmp$.size) {
        var depth = n;
        var child = tmp$.get_za3lpa$(n);
        var tmp$_0;
        var $receiver_0 = this.maskPushDepths;
        var maskDepth = depth >= 0 && depth <= get_lastIndex($receiver_0) ? $receiver_0[depth] : -1;
        if (maskDepth >= 0) {
          if (get_indices(this.maskPopDepths).contains_mef7kx$(maskDepth)) {
            this.maskPopDepths[maskDepth] = true;
            set_stencilIndex(ctx, get_stencilIndex(ctx) + 1 | 0);
            usedStencil.v = true;
            AnMovieClip$Companion_getInstance().STATE_SHAPE.set_b4eeiz$(ctx, get_stencilIndex(ctx));
            state.v = 1;
          }}if (ctx.masksEnabled)
          tmp$_0 = true;
        else {
          tmp$_0 = true;
        }
        var showChild = tmp$_0;
        if (showChild) {
          child.render_8isv09$(ctx);
        }if (maskDepth >= 0) {
          AnMovieClip$Companion_getInstance().STATE_CONTENT.set_b4eeiz$(ctx, get_stencilIndex(ctx));
          state.v = 2;
        }var $receiver_1 = this.maskPopDepths;
        if (depth >= 0 && depth <= get_lastIndex_0($receiver_1) ? $receiver_1[depth] : false) {
          AnMovieClip$Companion_getInstance().STATE_NONE.set_b4eeiz$(ctx, 0);
          set_stencilIndex(ctx, get_stencilIndex(ctx) - 1 | 0);
          state.v = 0;
        }n = n + 1 | 0;
      }
    }if (usedStencil.v && get_stencilIndex(ctx) <= 0) {
      set_stencilIndex(ctx, 0);
      ctx.ag.clear_yvqa77$(void 0, void 0, get_stencilIndex(ctx), false, false, true);
    }};
  AnMovieClip.prototype.update_0 = function () {
    var tmp$, tmp$_0, tmp$_1;
    tmp$ = this.totalDepths;
    for (var depth = 0; depth < tmp$; depth++) {
      tmp$_1 = (tmp$_0 = this.timelineRunner.currentSubtimeline) != null ? tmp$_0.timelines : null;
      if (tmp$_1 == null) {
        continue;
      }var timelines = tmp$_1;
      var timeline = timelines[depth];
      if (timeline.size <= 0)
        continue;
      var hasMultipleFrames = timeline.size > 1;
      if (this.smoothing) {
        var tmp$_2 = timeline.find_xgt0ho$(this.timelineRunner.currentTime, this.tempTimedResult_0);
        var index = tmp$_2.component1()
        , left = tmp$_2.component2()
        , right = tmp$_2.component3()
        , ratio = tmp$_2.component4();
        if (left != null)
          this.maskPushDepths[left.depth] = left.clipDepth;
        var view = left != null && left.uid >= 0 ? this.viewUids[left.uid] : this.dummyDepths[depth];
        var placed = this.replaceDepth_0(depth, view);
        if (placed || hasMultipleFrames) {
          if (left != null && right != null && left.uid === right.uid) {
            AnSymbolTimelineFrame$Companion_getInstance().setToViewInterpolated_odkdvs$(view, left, right, ratio);
          } else {
            left != null ? (left.setToView_l5rad2$(view), Unit) : null;
          }
          if (this.symbol.ninePatch != null && Kotlin.isType(view, AnBaseShape))
            view.ninePatch = this.symbol.ninePatch;
        }} else {
        var tmp$_3 = timeline.findWithoutInterpolation_xgt0ho$(this.timelineRunner.currentTime, this.tempTimedResult_0);
        var index_0 = tmp$_3.component1()
        , left_0 = tmp$_3.component2();
        if (left_0 != null)
          this.maskPushDepths[left_0.depth] = left_0.clipDepth;
        var view_0 = left_0 != null && left_0.uid >= 0 ? this.viewUids[left_0.uid] : this.dummyDepths[depth];
        var placed_0 = this.replaceDepth_0(depth, view_0);
        if (placed_0 || hasMultipleFrames) {
          left_0 != null ? (left_0.setToView_l5rad2$(view_0), Unit) : null;
          if (this.symbol.ninePatch != null && Kotlin.isType(view_0, AnBaseShape))
            view_0.ninePatch = this.symbol.ninePatch;
        }}
    }
  };
  Object.defineProperty(AnMovieClip.prototype, 'stateNames', {
    get: function () {
      var $receiver = this.symbol.states;
      var destination = ArrayList_init_0($receiver.size);
      var tmp$;
      tmp$ = $receiver.entries.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(item.value.name);
      }
      return destination;
    }
  });
  AnMovieClip.prototype.play_61zpoe$ = function (name) {
    this.timelineRunner.gotoAndPlay_bm4lxs$(name);
    this.update_0();
  };
  function Coroutine$playAndWaitStop_61zpoe$($this, name_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$name = name_0;
  }
  Coroutine$playAndWaitStop_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$playAndWaitStop_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$playAndWaitStop_61zpoe$.prototype.constructor = Coroutine$playAndWaitStop_61zpoe$;
  Coroutine$playAndWaitStop_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.playAndWaitEvent_qwyf15$(this.local$name, emptySet(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AnMovieClip.prototype.playAndWaitStop_61zpoe$ = function (name_0, continuation_0, suspended) {
    var instance = new Coroutine$playAndWaitStop_61zpoe$(this, name_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  AnMovieClip.prototype.playAndWaitEvent_60y5e1$ = function (name, events, continuation) {
    return this.playAndWaitEvent_qwyf15$(name, toSet(events), continuation);
  };
  function AnMovieClip$playAndWaitEvent$lambda(closure$name, this$AnMovieClip) {
    return function () {
      this$AnMovieClip.play_61zpoe$(closure$name);
      return Unit;
    };
  }
  AnMovieClip.prototype.playAndWaitEvent_qwyf15$ = function (name, eventsSet, continuation) {
    return this._waitEvent_0(eventsSet, AnMovieClip$playAndWaitEvent$lambda(name, this), continuation);
  };
  AnMovieClip.prototype.waitStop = function (continuation) {
    return this._waitEvent_0(emptySet(), void 0, continuation);
  };
  AnMovieClip.prototype.waitEvent_vqirvp$ = function (events, continuation) {
    return this._waitEvent_0(toSet(events), void 0, continuation);
  };
  AnMovieClip.prototype.waitEvent_ywdfdh$ = function (eventsSet, continuation) {
    return this._waitEvent_0(eventsSet, void 0, continuation);
  };
  function AnMovieClip$_waitEvent$lambda() {
    return Unit;
  }
  function AnMovieClip$_waitEvent$lambda_0(closure$once, closure$deferred) {
    return function (it) {
      var $this = closure$once;
      if (!$this.completed) {
        $this.completed = true;
        closure$deferred.complete_11rb$(null);
      }return Unit;
    };
  }
  function AnMovieClip$_waitEvent$lambda_1(closure$eventsSet, closure$once, closure$deferred) {
    return function (it) {
      if (closure$eventsSet.contains_11rb$(it)) {
        var $this = closure$once;
        if (!$this.completed) {
          $this.completed = true;
          closure$deferred.complete_11rb$(it);
        }}return Unit;
    };
  }
  function AnMovieClip$_waitEvent$lambda_2(closure$eventsSet, closure$once, closure$deferred) {
    return function (it) {
      if (closure$eventsSet.contains_11rb$(it)) {
        var $this = closure$once;
        if (!$this.completed) {
          $this.completed = true;
          closure$deferred.complete_11rb$(it);
        }}return Unit;
    };
  }
  function Coroutine$_waitEvent_0($this, eventsSet_0, afterSignals_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$closeables = void 0;
    this.local$eventsSet = eventsSet_0;
    this.local$afterSignals = afterSignals_0;
  }
  Coroutine$_waitEvent_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_waitEvent_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_waitEvent_0.prototype.constructor = Coroutine$_waitEvent_0;
  Coroutine$_waitEvent_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$afterSignals === void 0)
              this.local$afterSignals = AnMovieClip$_waitEvent$lambda;
            var once = new Once();
            var deferred = CompletableDeferred(Job());
            this.local$closeables = ArrayList_init_1();
            var element = this.$this.onStop.invoke_qlkmfe$(AnMovieClip$_waitEvent$lambda_0(once, deferred));
            this.local$closeables.add_11rb$(element);
            if (!this.local$eventsSet.isEmpty()) {
              var element_0 = this.$this.onChangeState.invoke_qlkmfe$(AnMovieClip$_waitEvent$lambda_1(this.local$eventsSet, once, deferred));
              this.local$closeables.add_11rb$(element_0);
              var element_1 = this.$this.onEvent.invoke_qlkmfe$(AnMovieClip$_waitEvent$lambda_2(this.local$eventsSet, once, deferred));
              this.local$closeables.add_11rb$(element_1);
            }
            this.exceptionState_0 = 4;
            this.local$afterSignals();
            this.state_0 = 1;
            this.result_0 = deferred.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [2];
            this.state_0 = 5;
            this.$returnValue = this.result_0;
            continue;
          case 2:
            return this.$returnValue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            var tmp$;
            var n = 0;
            while (n < this.local$closeables.size) {
              this.local$closeables.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).close();
            }

            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AnMovieClip.prototype._waitEvent_0 = function (eventsSet_0, afterSignals_0, continuation_0, suspended) {
    var instance = new Coroutine$_waitEvent_0(this, eventsSet_0, afterSignals_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  AnMovieClip.prototype.seekStill_io5o9c$ = function (name, ratio) {
    if (ratio === void 0)
      ratio = 0.0;
    var totalTime = this.timelineRunner.getStateTime_61zpoe$(name);
    this.timelineRunner.gotoAndStop_bm4lxs$(name, numberToInt(totalTime * ratio));
    this.update_0();
  };
  AnMovieClip.prototype.updateInternal_0 = function (dtMs) {
    if (this.timelineRunner.running && (this.firstUpdate || !this.singleFrame)) {
      this.firstUpdate = false;
      this.timelineRunner.update_za3lpa$(dtMs * 1000 | 0);
      this.update_0();
    }};
  AnMovieClip.prototype.toString = function () {
    return Container.prototype.toString.call(this) + ':symbol=' + toString(this.symbol);
  };
  function AnMovieClip_init$lambda(this$AnMovieClip) {
    return function (it) {
      this$AnMovieClip.updateInternal_0(it);
      return Unit;
    };
  }
  AnMovieClip.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnMovieClip',
    interfaces: [AnPlayable, AnElement, Container]
  };
  function play($receiver, name) {
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = $receiver) == null || Kotlin.isType(tmp$, AnPlayable) ? tmp$ : null) != null ? (tmp$_0.play_61zpoe$(name), Unit) : null;
  }
  function Coroutine$playAndWaitStop($receiver_0, name_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$name = name_0;
  }
  Coroutine$playAndWaitStop.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$playAndWaitStop.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$playAndWaitStop.prototype.constructor = Coroutine$playAndWaitStop;
  Coroutine$playAndWaitStop.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$_0 = (tmp$ = this.local$$receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$_0.playAndWaitStop_61zpoe$(this.local$name, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.result_0 = Unit;
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function playAndWaitStop($receiver_0, name_0, continuation_0, suspended) {
    var instance = new Coroutine$playAndWaitStop($receiver_0, name_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$playAndWaitEvent($receiver_0, name_0, events_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$name = name_0;
    this.local$events = events_0;
  }
  Coroutine$playAndWaitEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$playAndWaitEvent.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$playAndWaitEvent.prototype.constructor = Coroutine$playAndWaitEvent;
  Coroutine$playAndWaitEvent.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$_0 = (tmp$ = this.local$$receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$_0.playAndWaitEvent_60y5e1$(this.local$name, this.local$events.slice(), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function playAndWaitEvent($receiver_0, name_0, events_0, continuation_0, suspended) {
    var instance = new Coroutine$playAndWaitEvent($receiver_0, name_0, events_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitStop($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$waitStop.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitStop.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitStop.prototype.constructor = Coroutine$waitStop;
  Coroutine$waitStop.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$_0 = (tmp$ = this.local$$receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$_0.waitStop(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitStop($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$waitStop($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitEvent($receiver_0, events_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$events = events_0;
  }
  Coroutine$waitEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitEvent.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitEvent.prototype.constructor = Coroutine$waitEvent;
  Coroutine$waitEvent.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$_0 = (tmp$ = this.local$$receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$_0.waitEvent_vqirvp$(this.local$events.slice(), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitEvent($receiver_0, events_0, continuation_0, suspended) {
    var instance = new Coroutine$waitEvent($receiver_0, events_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function get_playingName($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    return (tmp$_1 = (tmp$_0 = (tmp$ = $receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null ? tmp$_0.timelineRunner : null) != null ? tmp$_1.currentStateName : null;
  }
  function seekStill($receiver, name, ratio) {
    if (ratio === void 0)
      ratio = 0.0;
    var tmp$, tmp$_0;
    (tmp$_0 = (tmp$ = $receiver) == null || Kotlin.isType(tmp$, AnMovieClip) ? tmp$ : null) != null ? (tmp$_0.seekStill_io5o9c$(name, ratio), Unit) : null;
  }
  function AnSymbol(id, name) {
    if (id === void 0)
      id = -1;
    if (name === void 0)
      name = null;
    this.id = id;
    this.name = name;
    this.$delegate_lvjwfe$_0 = new Extra$Mixin();
  }
  AnSymbol.prototype.create_k19av$ = function (library) {
    return new AnEmptyView(library);
  };
  AnSymbol.prototype.toString = function () {
    return 'Symbol(id=' + this.id + ', name=' + toString(this.name) + ')';
  };
  Object.defineProperty(AnSymbol.prototype, 'extra', {
    get: function () {
      return this.$delegate_lvjwfe$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_lvjwfe$_0.extra = tmp$;
    }
  });
  AnSymbol.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbol',
    interfaces: [Extra]
  };
  function AnSymbolEmpty() {
    AnSymbolEmpty_instance = this;
    AnSymbol.call(this, -1, '');
  }
  AnSymbolEmpty.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AnSymbolEmpty',
    interfaces: [AnSymbol]
  };
  var AnSymbolEmpty_instance = null;
  function AnSymbolEmpty_getInstance() {
    if (AnSymbolEmpty_instance === null) {
      new AnSymbolEmpty();
    }return AnSymbolEmpty_instance;
  }
  function AnSymbolSound(id, name, inputSound, dataBytes) {
    AnSymbol.call(this, id, name);
    this.inputSound_0 = inputSound;
    this.dataBytes = dataBytes;
    this.nativeSoundCache_0 = new AsyncOnce();
  }
  function Coroutine$AnSymbolSound$getNativeSound$lambda(this$AnSymbolSound_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.local$this$AnSymbolSound = this$AnSymbolSound_0;
    this.local$tmp$_0 = void 0;
  }
  Coroutine$AnSymbolSound$getNativeSound$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AnSymbolSound$getNativeSound$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AnSymbolSound$getNativeSound$lambda.prototype.constructor = Coroutine$AnSymbolSound$getNativeSound$lambda;
  Coroutine$AnSymbolSound$getNativeSound$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (this.local$this$AnSymbolSound.inputSound_0 == null) {
              this.exceptionState_0 = 2;
              this.state_0 = 1;
              this.result_0 = sound.nativeSoundProvider.createSound_eit78h$((tmp$ = this.local$this$AnSymbolSound.dataBytes) != null ? tmp$ : new Int8Array([]), void 0, void 0, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 6;
              continue;
            }

          case 1:
            this.local$tmp$_0 = this.result_0;
            this.exceptionState_0 = 7;
            this.state_0 = 5;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              this.state_0 = 3;
              this.result_0 = sound.nativeSoundProvider.createSound_7xzv69$(AudioData.Companion.DUMMY, void 0, void 0, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              throw e;
            }

          case 3:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.local$this$AnSymbolSound.inputSound_0 = this.local$tmp$_0;
            this.state_0 = 6;
            continue;
          case 6:
            return ensureNotNull(this.local$this$AnSymbolSound.inputSound_0);
          case 7:
            throw this.exception_0;
          default:this.state_0 = 7;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AnSymbolSound$getNativeSound$lambda(this$AnSymbolSound_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AnSymbolSound$getNativeSound$lambda(this$AnSymbolSound_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  AnSymbolSound.prototype.getNativeSound = function (continuation) {
    return this.nativeSoundCache_0.invoke_cbny1b$(AnSymbolSound$getNativeSound$lambda(this), continuation);
  };
  AnSymbolSound.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolSound',
    interfaces: [AnSymbol]
  };
  function AnTextFieldSymbol(id, name, initialHtml, bounds) {
    AnSymbol.call(this, id, name);
    this.initialHtml = initialHtml;
    this.bounds = bounds;
  }
  AnTextFieldSymbol.prototype.create_k19av$ = function (library) {
    return new AnTextField(library, this);
  };
  AnTextFieldSymbol.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnTextFieldSymbol',
    interfaces: [AnSymbol]
  };
  function AnSymbolBaseShape(id, name, bounds, path) {
    if (path === void 0)
      path = null;
    AnSymbol.call(this, id, name);
    this.bounds = bounds;
    this.path = path;
  }
  AnSymbolBaseShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolBaseShape',
    interfaces: [AnSymbol]
  };
  function AnSymbolShape(id, name, bounds, textureWithBitmap, path) {
    if (path === void 0)
      path = null;
    AnSymbolBaseShape.call(this, id, name, bounds, path);
    this.textureWithBitmap = textureWithBitmap;
  }
  AnSymbolShape.prototype.create_k19av$ = function (library) {
    return new AnShape(library, this);
  };
  AnSymbolShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolShape',
    interfaces: [AnSymbolBaseShape]
  };
  function AnSymbolMorphShape(id, name, bounds, texturesWithBitmap, path) {
    if (texturesWithBitmap === void 0)
      texturesWithBitmap = new Timed();
    if (path === void 0)
      path = null;
    AnSymbolBaseShape.call(this, id, name, bounds, path);
    this.texturesWithBitmap = texturesWithBitmap;
  }
  AnSymbolMorphShape.prototype.create_k19av$ = function (library) {
    return new AnMorphShape(library, this);
  };
  AnSymbolMorphShape.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolMorphShape',
    interfaces: [AnSymbolBaseShape]
  };
  function AnSymbolBitmap(id, name, bmp) {
    AnSymbol.call(this, id, name);
    this.bmp = bmp;
  }
  AnSymbolBitmap.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolBitmap',
    interfaces: [AnSymbol]
  };
  function AnConstantPool(stringPool) {
    this.stringPool = stringPool;
  }
  AnConstantPool.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnConstantPool',
    interfaces: []
  };
  function AnSymbolTimelineFrame(depth, uid, clipDepth, ratio, transform, name, colorTransform, blendMode) {
    AnSymbolTimelineFrame$Companion_getInstance();
    if (depth === void 0)
      depth = -1;
    if (uid === void 0)
      uid = -1;
    if (clipDepth === void 0)
      clipDepth = -1;
    if (ratio === void 0)
      ratio = 0.0;
    if (transform === void 0)
      transform = new Matrix();
    if (name === void 0)
      name = null;
    if (colorTransform === void 0) {
      colorTransform = new ColorTransform_init(numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToInt(0), numberToInt(0), numberToInt(0), numberToInt(0));
    }if (blendMode === void 0)
      blendMode = BlendMode$INHERIT_getInstance();
    this.depth = depth;
    this.uid = uid;
    this.clipDepth = clipDepth;
    this.ratio = ratio;
    this.transform = transform;
    this.name = name;
    this.colorTransform = colorTransform;
    this.blendMode = blendMode;
  }
  AnSymbolTimelineFrame.prototype.setToInterpolated_5zcn26$ = function (l, r, ratio) {
    this.transform.setToInterpolated_bs4suk$(ratio, l.transform, r.transform);
    this.colorTransform.setToInterpolated_bs4suk$(ratio, l.colorTransform, r.colorTransform);
    this.ratio = interpolate(ratio, l.ratio, r.ratio);
    this.name = l.name;
    this.blendMode = l.blendMode;
  };
  function AnSymbolTimelineFrame$Companion() {
    AnSymbolTimelineFrame$Companion_instance = this;
  }
  AnSymbolTimelineFrame$Companion.prototype.setToViewInterpolated_odkdvs$ = function (view, l, r, ratio) {
    view.setMatrixInterpolated_n2skke$(ratio, l.transform, r.transform);
    view.colorTransform = view.colorTransform.setToInterpolated_bs4suk$(ratio, l.colorTransform, r.colorTransform);
    view.ratio = interpolate(ratio, l.ratio, r.ratio);
    view.name = l.name;
    view.blendMode = l.blendMode;
  };
  AnSymbolTimelineFrame$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AnSymbolTimelineFrame$Companion_instance = null;
  function AnSymbolTimelineFrame$Companion_getInstance() {
    if (AnSymbolTimelineFrame$Companion_instance === null) {
      new AnSymbolTimelineFrame$Companion();
    }return AnSymbolTimelineFrame$Companion_instance;
  }
  AnSymbolTimelineFrame.prototype.setToView_l5rad2$ = function (view) {
    view.ratio = this.ratio;
    view.setMatrix_1ktkmn$(this.transform);
    view.name = this.name;
    view.colorTransform = this.colorTransform;
    view.blendMode = this.blendMode;
  };
  AnSymbolTimelineFrame.prototype.copyFrom_68sf8e$ = function (other) {
    this.depth = other.depth;
    this.uid = other.uid;
    this.clipDepth = other.clipDepth;
    this.ratio = other.ratio;
    this.transform.copyFrom_1ktkmn$(other.transform);
    this.name = other.name;
    this.colorTransform.copyFrom_54kf7e$(other.colorTransform);
    this.blendMode = other.blendMode;
  };
  AnSymbolTimelineFrame.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolTimelineFrame',
    interfaces: []
  };
  AnSymbolTimelineFrame.prototype.component1 = function () {
    return this.depth;
  };
  AnSymbolTimelineFrame.prototype.component2 = function () {
    return this.uid;
  };
  AnSymbolTimelineFrame.prototype.component3 = function () {
    return this.clipDepth;
  };
  AnSymbolTimelineFrame.prototype.component4 = function () {
    return this.ratio;
  };
  AnSymbolTimelineFrame.prototype.component5 = function () {
    return this.transform;
  };
  AnSymbolTimelineFrame.prototype.component6 = function () {
    return this.name;
  };
  AnSymbolTimelineFrame.prototype.component7 = function () {
    return this.colorTransform;
  };
  AnSymbolTimelineFrame.prototype.component8 = function () {
    return this.blendMode;
  };
  AnSymbolTimelineFrame.prototype.copy_512yad$ = function (depth, uid, clipDepth, ratio, transform, name, colorTransform, blendMode) {
    return new AnSymbolTimelineFrame(depth === void 0 ? this.depth : depth, uid === void 0 ? this.uid : uid, clipDepth === void 0 ? this.clipDepth : clipDepth, ratio === void 0 ? this.ratio : ratio, transform === void 0 ? this.transform : transform, name === void 0 ? this.name : name, colorTransform === void 0 ? this.colorTransform : colorTransform, blendMode === void 0 ? this.blendMode : blendMode);
  };
  AnSymbolTimelineFrame.prototype.toString = function () {
    return 'AnSymbolTimelineFrame(depth=' + Kotlin.toString(this.depth) + (', uid=' + Kotlin.toString(this.uid)) + (', clipDepth=' + Kotlin.toString(this.clipDepth)) + (', ratio=' + Kotlin.toString(this.ratio)) + (', transform=' + Kotlin.toString(this.transform)) + (', name=' + Kotlin.toString(this.name)) + (', colorTransform=' + Kotlin.toString(this.colorTransform)) + (', blendMode=' + Kotlin.toString(this.blendMode)) + ')';
  };
  AnSymbolTimelineFrame.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.depth) | 0;
    result = result * 31 + Kotlin.hashCode(this.uid) | 0;
    result = result * 31 + Kotlin.hashCode(this.clipDepth) | 0;
    result = result * 31 + Kotlin.hashCode(this.ratio) | 0;
    result = result * 31 + Kotlin.hashCode(this.transform) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorTransform) | 0;
    result = result * 31 + Kotlin.hashCode(this.blendMode) | 0;
    return result;
  };
  AnSymbolTimelineFrame.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.depth, other.depth) && Kotlin.equals(this.uid, other.uid) && Kotlin.equals(this.clipDepth, other.clipDepth) && Kotlin.equals(this.ratio, other.ratio) && Kotlin.equals(this.transform, other.transform) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.colorTransform, other.colorTransform) && Kotlin.equals(this.blendMode, other.blendMode)))));
  };
  function AnAction() {
  }
  AnAction.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AnAction',
    interfaces: []
  };
  function AnPlaySoundAction(soundId) {
    this.soundId = soundId;
  }
  AnPlaySoundAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnPlaySoundAction',
    interfaces: [AnAction]
  };
  AnPlaySoundAction.prototype.component1 = function () {
    return this.soundId;
  };
  AnPlaySoundAction.prototype.copy_za3lpa$ = function (soundId) {
    return new AnPlaySoundAction(soundId === void 0 ? this.soundId : soundId);
  };
  AnPlaySoundAction.prototype.toString = function () {
    return 'AnPlaySoundAction(soundId=' + Kotlin.toString(this.soundId) + ')';
  };
  AnPlaySoundAction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.soundId) | 0;
    return result;
  };
  AnPlaySoundAction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.soundId, other.soundId))));
  };
  function AnEventAction(event) {
    this.event = event;
  }
  AnEventAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnEventAction',
    interfaces: [AnAction]
  };
  AnEventAction.prototype.component1 = function () {
    return this.event;
  };
  AnEventAction.prototype.copy_61zpoe$ = function (event) {
    return new AnEventAction(event === void 0 ? this.event : event);
  };
  AnEventAction.prototype.toString = function () {
    return 'AnEventAction(event=' + Kotlin.toString(this.event) + ')';
  };
  AnEventAction.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.event) | 0;
    return result;
  };
  AnEventAction.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.event, other.event))));
  };
  function AnDepthTimeline(depth) {
    Timed.call(this);
    this.depth = depth;
  }
  AnDepthTimeline.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnDepthTimeline',
    interfaces: [Timed]
  };
  function AnSymbolLimits(totalDepths, totalFrames, totalUids, totalTime) {
    this.totalDepths = totalDepths;
    this.totalFrames = totalFrames;
    this.totalUids = totalUids;
    this.totalTime = totalTime;
  }
  AnSymbolLimits.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolLimits',
    interfaces: []
  };
  function AnSymbolUidDef(characterId, extraProps) {
    if (extraProps === void 0)
      extraProps = LinkedHashMap_init();
    this.characterId = characterId;
    this.extraProps = extraProps;
  }
  AnSymbolUidDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolUidDef',
    interfaces: []
  };
  function AnSymbolMovieClipSubTimeline(totalDepths) {
    this.totalTime = 0;
    var array = Array_0(totalDepths);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new AnDepthTimeline(i);
    }
    this.timelines = array;
    this.actions = new Timed();
    this.nextState = null;
    this.nextStatePlay = false;
  }
  AnSymbolMovieClipSubTimeline.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolMovieClipSubTimeline',
    interfaces: []
  };
  function AnSymbolMovieClipState(name, subTimeline, startTime) {
    this.name = name;
    this.subTimeline = subTimeline;
    this.startTime = startTime;
  }
  AnSymbolMovieClipState.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolMovieClipState',
    interfaces: []
  };
  function AnSymbolMovieClip(id, name, limits) {
    AnSymbol.call(this, id, name);
    this.limits = limits;
    this.ninePatch = null;
    this.states = HashMap_init();
    var array = Array_0(this.limits.totalUids);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new AnSymbolUidDef(-1, HashMap_init());
    }
    this.uidInfo = array;
  }
  AnSymbolMovieClip.prototype.create_k19av$ = function (library) {
    return new AnMovieClip(library, this);
  };
  AnSymbolMovieClip.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnSymbolMovieClip',
    interfaces: [AnSymbol]
  };
  function Coroutine$animateLibraryLoaders$lambda$lambda$lambda($receiver_0, content_0, views_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$content = content_0;
    this.local$views = views_0;
  }
  Coroutine$animateLibraryLoaders$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$animateLibraryLoaders$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$animateLibraryLoaders$lambda$lambda$lambda.prototype.constructor = Coroutine$animateLibraryLoaders$lambda$lambda$lambda;
  Coroutine$animateLibraryLoaders$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readAni(this.local$$receiver, this.local$views, this.local$content, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function animateLibraryLoaders$lambda$lambda$lambda($receiver_0, content_0, views_0, continuation_0, suspended) {
    var instance = new Coroutine$animateLibraryLoaders$lambda$lambda$lambda($receiver_0, content_0, views_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$animateLibraryLoaders$lambda$lambda(s_0, injector_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$s = s_0;
  }
  Coroutine$animateLibraryLoaders$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$animateLibraryLoaders$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$animateLibraryLoaders$lambda$lambda.prototype.constructor = Coroutine$animateLibraryLoaders$lambda$lambda;
  Coroutine$animateLibraryLoaders$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (equals(this.local$s.readString_uyw3ma$(8), AniFile_getInstance().MAGIC))
              return new KorgeFileLoader('ani', animateLibraryLoaders$lambda$lambda$lambda);
            else
              return null;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function animateLibraryLoaders$lambda$lambda(s_0, injector_0, continuation_0, suspended) {
    var instance = new Coroutine$animateLibraryLoaders$lambda$lambda(s_0, injector_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function animateLibraryLoaders$lambda() {
    return arrayListOf([new KorgeFileLoaderTester('core/ani', animateLibraryLoaders$lambda$lambda)]);
  }
  var animateLibraryLoaders;
  var animateLibraryLoaders_metadata = new PropertyMetadata('animateLibraryLoaders');
  function get_animateLibraryLoaders($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = animateLibraryLoaders.name) != null ? tmp$ : animateLibraryLoaders_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = animateLibraryLoaders.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = animateLibraryLoaders.name) != null ? tmp$_3 : animateLibraryLoaders_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function AnLibrary(views, width, height, fps) {
    this.views = views;
    this.width = width;
    this.height = height;
    this.fps = fps;
    this.$delegate_k19av$_0 = new Extra$Mixin();
    this.msPerFrameDouble = 1000 / this.fps;
    this.msPerFrame = numberToInt(this.msPerFrameDouble);
    this.bgcolor = color.Colors.WHITE;
    this.symbolsById = ArrayList_init_1();
    this.symbolsByName = HashMap_init();
    this.defaultSmoothing = true;
  }
  AnLibrary.prototype.addSymbol_lvjwfe$ = function (symbol) {
    while (this.symbolsById.size <= symbol.id) {
      var $receiver = this.symbolsById;
      var element = AnSymbolEmpty_getInstance();
      $receiver.add_11rb$(element);
    }
    if (symbol.id >= 0)
      this.symbolsById.set_wxm5ur$(symbol.id, symbol);
  };
  AnLibrary.prototype.processSymbolNames = function () {
    var $receiver = this.symbolsById;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      var symbol = $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      if (symbol.name != null) {
        var $receiver_0 = this.symbolsByName;
        var key = ensureNotNull(symbol.name);
        $receiver_0.put_xwzc9p$(key, symbol);
      }}
  };
  AnLibrary.prototype.findFirstTexture_w4zmgr$ = function ($receiver) {
    var tmp$, tmp$_0;
    if (Kotlin.isType($receiver, AnSymbolEmpty))
      return null;
    else if (Kotlin.isType($receiver, AnSymbolSound))
      return null;
    else if (Kotlin.isType($receiver, AnTextFieldSymbol))
      return null;
    else if (Kotlin.isType($receiver, AnSymbolShape))
      return (tmp$ = $receiver.textureWithBitmap) != null ? tmp$.texture : null;
    else if (Kotlin.isType($receiver, AnSymbolMorphShape))
      return (tmp$_0 = firstOrNull_0($receiver.texturesWithBitmap.objects)) != null ? tmp$_0.texture : null;
    else if (Kotlin.isType($receiver, AnSymbolBitmap))
      return null;
    else if (Kotlin.isType($receiver, AnSymbolMovieClip)) {
      var $receiver_0 = $receiver.uidInfo;
      var tmp$_1;
      var n = 0;
      while (n < $receiver_0.length) {
        var res = this.findFirstTexture_vkl01n$(this.create_za3lpa$($receiver_0[tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1].characterId));
        if (res != null)
          return res;
      }
      return null;
    } else
      throw RuntimeException_init("Don't know how to handle " + Kotlin.getKClassFromExpression($receiver));
  };
  AnLibrary.prototype.findFirstTexture_vkl01n$ = function ($receiver) {
    return this.findFirstTexture_w4zmgr$($receiver.symbol);
  };
  AnLibrary.prototype.create_za3lpa$ = function (id) {
    var tmp$;
    if (id < 0) {
      throw new NotImplementedError_init();
    } else {
      var $receiver = this.symbolsById;
      tmp$ = (id >= 0 && id <= get_lastIndex_1($receiver) ? $receiver.get_za3lpa$(id) : AnSymbolEmpty_getInstance()).create_k19av$(this);
    }
    return tmp$;
  };
  AnLibrary.prototype.createShape_za3lpa$ = function (id) {
    var tmp$;
    return Kotlin.isType(tmp$ = this.create_za3lpa$(id), AnShape) ? tmp$ : throwCCE();
  };
  AnLibrary.prototype.createMovieClip_za3lpa$ = function (id) {
    var tmp$;
    return Kotlin.isType(tmp$ = this.create_za3lpa$(id), AnMovieClip) ? tmp$ : throwCCE();
  };
  AnLibrary.prototype.getTexture_za3lpa$ = function (id) {
    return this.findFirstTexture_vkl01n$(this.create_za3lpa$(id));
  };
  AnLibrary.prototype.create_61zpoe$ = function (name) {
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.symbolsByName.get_11rb$(name)) != null ? tmp$.create_k19av$(this) : null) != null ? tmp$_0 : invalidOp("Can't find symbol with name '" + name + "'");
  };
  AnLibrary.prototype.createShape_61zpoe$ = function (name) {
    var tmp$;
    return Kotlin.isType(tmp$ = this.create_61zpoe$(name), AnShape) ? tmp$ : throwCCE();
  };
  AnLibrary.prototype.createMovieClip_61zpoe$ = function (name) {
    var tmp$;
    return Kotlin.isType(tmp$ = this.create_61zpoe$(name), AnMovieClip) ? tmp$ : throwCCE();
  };
  AnLibrary.prototype.getTexture_61zpoe$ = function (name) {
    return this.findFirstTexture_vkl01n$(this.create_61zpoe$(name));
  };
  AnLibrary.prototype.getBitmap_za3lpa$ = function (id) {
    var tmp$;
    return (Kotlin.isType(tmp$ = this.symbolsById.get_za3lpa$(id), AnSymbolBitmap) ? tmp$ : throwCCE()).bmp;
  };
  AnLibrary.prototype.getBitmap_61zpoe$ = function (name) {
    var tmp$;
    return (Kotlin.isType(tmp$ = this.symbolsByName.get_11rb$(name), AnSymbolBitmap) ? tmp$ : throwCCE()).bmp;
  };
  AnLibrary.prototype.createMainTimeLine = function () {
    return this.createMovieClip_za3lpa$(0);
  };
  Object.defineProperty(AnLibrary.prototype, 'extra', {
    get: function () {
      return this.$delegate_k19av$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_k19av$_0.extra = tmp$;
    }
  });
  AnLibrary.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnLibrary',
    interfaces: [Extra]
  };
  function AnimatorDslMarker() {
  }
  AnimatorDslMarker.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnimatorDslMarker',
    interfaces: [Annotation]
  };
  function BaseAnimatorNode() {
  }
  BaseAnimatorNode.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'BaseAnimatorNode',
    interfaces: []
  };
  function Animator(root, time, speed, easing, completeOnCancel, kind, init) {
    Animator$Companion_getInstance();
    if (time === void 0)
      time = Animator$Companion_getInstance().DEFAULT_TIME;
    if (speed === void 0)
      speed = Animator$Companion_getInstance().DEFAULT_SPEED;
    if (easing === void 0)
      easing = Animator$Companion_getInstance().DEFAULT_EASING;
    if (completeOnCancel === void 0)
      completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
    if (kind === void 0)
      kind = Animator$NodeKind$Sequence_getInstance();
    if (init === void 0)
      init = Animator_init$lambda;
    this.root = root;
    this.time = time;
    this.speed = speed;
    this.easing = easing;
    this.completeOnCancel = completeOnCancel;
    this.kind = kind;
    this.init = init;
    this.initialized_ie36l4$_0 = false;
    this._onCancel_m45lng$_0 = Animator$_onCancel$lambda;
    this.nodes = TGenDeque_init();
  }
  function Animator$Companion() {
    Animator$Companion_instance = this;
    this.DEFAULT_TIME = TimeSpan.Companion.fromMilliseconds_14dthe$(500);
    this.DEFAULT_SPEED = 128.0;
    this.DEFAULT_EASING = Easing.Companion.EASE_IN_OUT_QUAD;
    this.DEFAULT_COMPLETE_ON_CANCEL = true;
  }
  Animator$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Animator$Companion_instance = null;
  function Animator$Companion_getInstance() {
    if (Animator$Companion_instance === null) {
      new Animator$Companion();
    }return Animator$Companion_instance;
  }
  function Animator$NodeKind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Animator$NodeKind_initFields() {
    Animator$NodeKind_initFields = function () {
    };
    Animator$NodeKind$Parallel_instance = new Animator$NodeKind('Parallel', 0);
    Animator$NodeKind$Sequence_instance = new Animator$NodeKind('Sequence', 1);
  }
  var Animator$NodeKind$Parallel_instance;
  function Animator$NodeKind$Parallel_getInstance() {
    Animator$NodeKind_initFields();
    return Animator$NodeKind$Parallel_instance;
  }
  var Animator$NodeKind$Sequence_instance;
  function Animator$NodeKind$Sequence_getInstance() {
    Animator$NodeKind_initFields();
    return Animator$NodeKind$Sequence_instance;
  }
  Animator$NodeKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeKind',
    interfaces: [Enum]
  };
  function Animator$NodeKind$values() {
    return [Animator$NodeKind$Parallel_getInstance(), Animator$NodeKind$Sequence_getInstance()];
  }
  Animator$NodeKind.values = Animator$NodeKind$values;
  function Animator$NodeKind$valueOf(name) {
    switch (name) {
      case 'Parallel':
        return Animator$NodeKind$Parallel_getInstance();
      case 'Sequence':
        return Animator$NodeKind$Sequence_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.animate.Animator.NodeKind.' + name);
    }
  }
  Animator$NodeKind.valueOf_61zpoe$ = Animator$NodeKind$valueOf;
  Animator.prototype.onCancel_o14v8n$ = function (action) {
    this._onCancel_m45lng$_0 = action;
  };
  function Coroutine$Animator$execute$lambda(closure$node_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$node = closure$node_0;
  }
  Coroutine$Animator$execute$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Animator$execute$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Animator$execute$lambda.prototype.constructor = Coroutine$Animator$execute$lambda;
  Coroutine$Animator$execute$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$node.execute(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Animator$execute$lambda(closure$node_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Animator$execute$lambda(closure$node_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$execute($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 10;
    this.$this = $this;
  }
  Coroutine$execute.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$execute.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$execute.prototype.constructor = Coroutine$execute;
  Coroutine$execute.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (!this.$this.initialized_ie36l4$_0) {
              this.$this.init(this.$this);
              this.$this.initialized_ie36l4$_0 = true;
            }
            switch (this.$this.kind.name) {
              case 'Sequence':
                this.exceptionState_0 = 7;
                this.state_0 = 4;
                continue;
              case 'Parallel':
                this.exceptionState_0 = 2;
                var jobs = ArrayList_init_1();
                while (!this.$this.nodes.isEmpty()) {
                  var node = this.$this.nodes.removeFirst();
                  var element = launchImmediately_0(this.context, Animator$execute$lambda(node));
                  jobs.add_11rb$(element);
                }

                this.state_0 = 1;
                this.result_0 = joinAll(jobs, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
            }

          case 1:
            this.exceptionState_0 = 10;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 10;
            var e = this.exception_0;
            if (Kotlin.isType(e, CancellationException)) {
              this.$this._onCancel_m45lng$_0();
              if (this.$this.completeOnCancel) {
                while (!this.$this.nodes.isEmpty()) {
                  this.$this.nodes.removeFirst().executeImmediately();
                }
              }} else
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 9;
            continue;
          case 4:
            if (this.$this.nodes.isEmpty()) {
              this.state_0 = 6;
              continue;
            }
            this.state_0 = 5;
            this.result_0 = this.$this.nodes.removeFirst().execute(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 4;
            continue;
          case 6:
            this.exceptionState_0 = 10;
            this.state_0 = 8;
            continue;
          case 7:
            this.exceptionState_0 = 10;
            var e = this.exception_0;
            if (Kotlin.isType(e, CancellationException)) {
              this.$this._onCancel_m45lng$_0();
              if (this.$this.completeOnCancel) {
                while (!this.$this.nodes.isEmpty()) {
                  this.$this.nodes.removeFirst().executeImmediately();
                }
              }} else
              throw e;
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            return;
          case 10:
            throw this.exception_0;
          default:this.state_0 = 10;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 10) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Animator.prototype.execute = function (continuation_0, suspended) {
    var instance = new Coroutine$execute(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Animator.prototype.executeImmediately = function () {
    if (!this.initialized_ie36l4$_0) {
      this.init(this);
      this.initialized_ie36l4$_0 = true;
    }while (!this.nodes.isEmpty()) {
      this.nodes.removeFirst().executeImmediately();
    }
  };
  Animator.prototype.parallel_b7mte4$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.parallel_b7mte4$', wrapFunction(function () {
    var Animator$NodeKind = _.com.soywiz.korge.animate.Animator.NodeKind;
    var Animator_init = _.com.soywiz.korge.animate.Animator;
    return function (time, speed, easing, completeOnCancel, callback) {
      if (time === void 0)
        time = this.time;
      if (speed === void 0)
        speed = this.speed;
      if (easing === void 0)
        easing = this.easing;
      if (completeOnCancel === void 0)
        completeOnCancel = this.completeOnCancel;
      var $receiver = new Animator_init(this.root, time, speed, easing, completeOnCancel, Animator$NodeKind.Parallel);
      callback($receiver);
      this.nodes.add_11rb$($receiver);
      return $receiver;
    };
  }));
  Animator.prototype.sequence_b7mte4$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.sequence_b7mte4$', wrapFunction(function () {
    var Animator$NodeKind = _.com.soywiz.korge.animate.Animator.NodeKind;
    var Animator_init = _.com.soywiz.korge.animate.Animator;
    return function (time, speed, easing, completeOnCancel, callback) {
      if (time === void 0)
        time = this.time;
      if (speed === void 0)
        speed = this.speed;
      if (easing === void 0)
        easing = this.easing;
      if (completeOnCancel === void 0)
        completeOnCancel = this.completeOnCancel;
      var $receiver = new Animator_init(this.root, time, speed, easing, completeOnCancel, Animator$NodeKind.Sequence);
      callback($receiver);
      this.nodes.add_11rb$($receiver);
      return $receiver;
    };
  }));
  Animator.prototype.parallelLazy_b7mte4$ = function (time, speed, easing, completeOnCancel, init) {
    if (time === void 0)
      time = this.time;
    if (speed === void 0)
      speed = this.speed;
    if (easing === void 0)
      easing = this.easing;
    if (completeOnCancel === void 0)
      completeOnCancel = this.completeOnCancel;
    var $receiver = new Animator(this.root, time, speed, easing, completeOnCancel, Animator$NodeKind$Parallel_getInstance(), init);
    this.nodes.add_11rb$($receiver);
    return $receiver;
  };
  Animator.prototype.sequenceLazy_b7mte4$ = function (time, speed, easing, completeOnCancel, init) {
    if (time === void 0)
      time = this.time;
    if (speed === void 0)
      speed = this.speed;
    if (easing === void 0)
      easing = this.easing;
    if (completeOnCancel === void 0)
      completeOnCancel = this.completeOnCancel;
    var $receiver = new Animator(this.root, time, speed, easing, completeOnCancel, Animator$NodeKind$Sequence_getInstance(), init);
    this.nodes.add_11rb$($receiver);
    return $receiver;
  };
  function Animator$TweenNode($outer, view, vs, lazyVs, time, lazyTime, easing) {
    this.$outer = $outer;
    if (lazyVs === void 0)
      lazyVs = null;
    if (time === void 0) {
      time = TimeSpan.Companion.fromMilliseconds_14dthe$(1000);
    }if (lazyTime === void 0)
      lazyTime = null;
    this.view = view;
    this.vs = vs;
    this.lazyVs = lazyVs;
    this.time = time;
    this.lazyTime = lazyTime;
    this.easing = easing;
    this.computedVs_kiv91p$_0 = lazy(Animator$TweenNode$computedVs$lambda(this));
  }
  Object.defineProperty(Animator$TweenNode.prototype, 'computedVs', {
    get: function () {
      return this.computedVs_kiv91p$_0.value;
    }
  });
  function Coroutine$execute_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 4;
    this.$this = $this;
  }
  Coroutine$execute_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$execute_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$execute_0.prototype.constructor = Coroutine$execute_0;
  Coroutine$execute_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.exceptionState_0 = 2;
            var rtime = (tmp$_0 = (tmp$ = this.$this.lazyTime) != null ? tmp$() : null) != null ? tmp$_0 : this.$this.time;
            this.state_0 = 1;
            this.result_0 = tween(this.$this.view, this.$this.computedVs.slice(), rtime, this.$this.easing, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 4;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 4;
            var e = this.exception_0;
            if (Kotlin.isType(e, CancellationException)) {
              if (this.$this.$outer.completeOnCancel) {
                this.$this.executeImmediately();
              }} else
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            return;
          case 4:
            throw this.exception_0;
          default:this.state_0 = 4;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 4) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Animator$TweenNode.prototype.execute = function (continuation_0, suspended) {
    var instance = new Coroutine$execute_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Animator$TweenNode.prototype.executeImmediately = function () {
    var $receiver = this.computedVs;
    var tmp$;
    var n = 0;
    while (n < $receiver.length) {
      $receiver[tmp$ = n, n = tmp$ + 1 | 0, tmp$].set_14dthe$(1.0);
    }
  };
  function Animator$TweenNode$computedVs$lambda(this$TweenNode) {
    return function () {
      var tmp$;
      if (this$TweenNode.lazyVs != null) {
        var size = this$TweenNode.lazyVs.length;
        var array = Array_0(size);
        var tmp$_0;
        tmp$_0 = array.length - 1 | 0;
        for (var i = 0; i <= tmp$_0; i++) {
          array[i] = this$TweenNode.lazyVs[i]();
        }
        tmp$ = array;
      } else
        tmp$ = this$TweenNode.vs;
      return tmp$;
    };
  }
  Animator$TweenNode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TweenNode',
    interfaces: [BaseAnimatorNode]
  };
  Animator.prototype.__tween_prxpgp$ = function (vs, lazyVs, time, lazyTime, easing) {
    if (lazyVs === void 0)
      lazyVs = null;
    if (time === void 0)
      time = this.time;
    if (lazyTime === void 0)
      lazyTime = null;
    if (easing === void 0)
      easing = this.easing;
    this.nodes.add_11rb$(new Animator$TweenNode(this, this.root, vs.slice(), lazyVs, time, lazyTime, easing));
  };
  Animator.prototype.__tween_txsq10$ = function (vs, time, lazyTime, easing) {
    if (time === void 0)
      time = this.time;
    if (lazyTime === void 0)
      lazyTime = null;
    if (easing === void 0)
      easing = this.easing;
    this.nodes.add_11rb$(new Animator$TweenNode(this, this.root, [], vs, time, lazyTime, easing));
  };
  Animator.prototype.tween_66hm6c$ = function (vs, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_prxpgp$(vs.slice(), void 0, time, void 0, easing);
  };
  function Animator$tween$lambda(this$Animator) {
    return function () {
      return this$Animator.time;
    };
  }
  Animator.prototype.tween_qi5y0a$ = function (vs, time, easing) {
    if (time === void 0)
      time = Animator$tween$lambda(this);
    if (easing === void 0)
      easing = this.easing;
    this.__tween_prxpgp$(vs.slice(), void 0, void 0, time, easing);
  };
  Animator.prototype.tween_gjgiv0$ = function (vs, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$(vs.slice(), time, void 0, easing);
  };
  function Animator$tween$lambda_0(this$Animator) {
    return function () {
      return this$Animator.time;
    };
  }
  Animator.prototype.tween_7qifea$ = function (vs, time, easing) {
    if (time === void 0)
      time = Animator$tween$lambda_0(this);
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$(vs.slice(), void 0, time, easing);
  };
  function Animator$scaleBy$lambda(this$scaleBy, closure$scaleX) {
    return function () {
      var $receiver = getPropertyCallableRef('scaleX', 0, function ($receiver) {
        return $receiver.scaleX;
      }.bind(null, this$scaleBy), function ($receiver, value) {
        $receiver.scaleX = value;
      }.bind(null, this$scaleBy));
      var end = this$scaleBy.scaleX + closure$scaleX;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$scaleBy$lambda_0(this$scaleBy, closure$scaleY) {
    return function () {
      var $receiver = getPropertyCallableRef('scaleY', 0, function ($receiver) {
        return $receiver.scaleY;
      }.bind(null, this$scaleBy), function ($receiver, value) {
        $receiver.scaleY = value;
      }.bind(null, this$scaleBy));
      var end = this$scaleBy.scaleY + closure$scaleY;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.scaleBy_mo66qj$ = function ($receiver, scaleX, scaleY, time, easing) {
    if (scaleY === void 0)
      scaleY = scaleX;
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$scaleBy$lambda($receiver, scaleX), Animator$scaleBy$lambda_0($receiver, scaleY)], time, void 0, easing);
  };
  function Animator$rotateBy$lambda(this$rotateBy, closure$rotation) {
    return function () {
      var $receiver = getPropertyCallableRef('rotation', 0, function ($receiver) {
        return $receiver.rotation;
      }.bind(null, this$rotateBy), function ($receiver, value) {
        $receiver.rotation = value;
      }.bind(null, this$rotateBy));
      var end = plus(this$rotateBy.rotation, closure$rotation);
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolateAngle', function (ratio_0, l_0, r_0) {
        return _interpolateAngle(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.rotateBy_ei9i4u$ = function ($receiver, rotation, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$rotateBy$lambda($receiver, rotation)], time, void 0, easing);
  };
  function Animator$moveBy$lambda(this$moveBy, closure$x) {
    return function () {
      var $receiver = getPropertyCallableRef('x', 0, function ($receiver) {
        return $receiver.x;
      }.bind(null, this$moveBy), function ($receiver, value) {
        $receiver.x = value;
      }.bind(null, this$moveBy));
      var end = this$moveBy.x + closure$x;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveBy$lambda_0(this$moveBy, closure$y) {
    return function () {
      var $receiver = getPropertyCallableRef('y', 0, function ($receiver) {
        return $receiver.y;
      }.bind(null, this$moveBy), function ($receiver, value) {
        $receiver.y = value;
      }.bind(null, this$moveBy));
      var end = this$moveBy.y + closure$y;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.moveBy_mo66qj$ = function ($receiver, x, y, time, easing) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$moveBy$lambda($receiver, x), Animator$moveBy$lambda_0($receiver, y)], time, void 0, easing);
  };
  function Animator$moveByWithSpeed$lambda(this$moveByWithSpeed, closure$x) {
    return function () {
      var $receiver = getPropertyCallableRef('x', 0, function ($receiver) {
        return $receiver.x;
      }.bind(null, this$moveByWithSpeed), function ($receiver, value) {
        $receiver.x = value;
      }.bind(null, this$moveByWithSpeed));
      var end = this$moveByWithSpeed.x + closure$x;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveByWithSpeed$lambda_0(this$moveByWithSpeed, closure$y) {
    return function () {
      var $receiver = getPropertyCallableRef('y', 0, function ($receiver) {
        return $receiver.y;
      }.bind(null, this$moveByWithSpeed), function ($receiver, value) {
        $receiver.y = value;
      }.bind(null, this$moveByWithSpeed));
      var end = this$moveByWithSpeed.y + closure$y;
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveByWithSpeed$lambda_1(closure$x, closure$y, closure$speed) {
    return function () {
      var x = closure$x;
      var y = closure$y;
      var $receiver = Math_0.hypot(x, y) / closure$speed;
      return TimeSpan.Companion.fromSeconds_14dthe$($receiver);
    };
  }
  Animator.prototype.moveByWithSpeed_ppfd84$ = function ($receiver, x, y, speed, easing) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (speed === void 0)
      speed = this.speed;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$moveByWithSpeed$lambda($receiver, x), Animator$moveByWithSpeed$lambda_0($receiver, y)], void 0, Animator$moveByWithSpeed$lambda_1(x, y, speed), easing);
  };
  Animator.prototype.scaleTo_mo66qj$ = function ($receiver, scaleX, scaleY, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    var $receiver_0 = getPropertyCallableRef('scaleX', 0, function ($receiver) {
      return $receiver.scaleX;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.scaleX = value;
    }.bind(null, $receiver));
    var tmp$ = new V2($receiver_0, $receiver_0.get(), scaleX, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_1 = getPropertyCallableRef('scaleY', 0, function ($receiver) {
      return $receiver.scaleY;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.scaleY = value;
    }.bind(null, $receiver));
    this.__tween_prxpgp$([tmp$, new V2($receiver_1, $receiver_1.get(), scaleY, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], void 0, time, void 0, easing);
  };
  Animator.prototype.rotateTo_ei9i4u$ = function ($receiver, angle, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    var $receiver_0 = getPropertyCallableRef('rotation', 0, function ($receiver) {
      return $receiver.rotation;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.rotation = value;
    }.bind(null, $receiver));
    this.__tween_prxpgp$([new V2($receiver_0, $receiver_0.get(), angle, getCallableRef('_interpolateAngle', function (ratio_0, l_0, r_0) {
      return _interpolateAngle(ratio_0, l_0, r_0);
    }), false)], void 0, time, void 0, easing);
  };
  Animator.prototype.moveTo_mo66qj$ = function ($receiver, x, y, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
      return $receiver.x;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.x = value;
    }.bind(null, $receiver));
    var tmp$ = new V2($receiver_0, $receiver_0.get(), x, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_1 = getPropertyCallableRef('y', 0, function ($receiver) {
      return $receiver.y;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.y = value;
    }.bind(null, $receiver));
    this.__tween_prxpgp$([tmp$, new V2($receiver_1, $receiver_1.get(), y, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], void 0, time, void 0, easing);
  };
  function Animator$moveToWithSpeed$lambda(this$moveToWithSpeed, closure$x, closure$y, closure$speed) {
    return function () {
      var x = this$moveToWithSpeed.x - closure$x;
      var y = this$moveToWithSpeed.y - closure$y;
      var $receiver = Math_0.hypot(x, y) / closure$speed;
      return TimeSpan.Companion.fromSeconds_14dthe$($receiver);
    };
  }
  Animator.prototype.moveToWithSpeed_ppfd84$ = function ($receiver, x, y, speed, easing) {
    if (speed === void 0)
      speed = this.speed;
    if (easing === void 0)
      easing = this.easing;
    var $receiver_0 = getPropertyCallableRef('x', 0, function ($receiver) {
      return $receiver.x;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.x = value;
    }.bind(null, $receiver));
    var tmp$ = new V2($receiver_0, $receiver_0.get(), x, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_1 = getPropertyCallableRef('y', 0, function ($receiver) {
      return $receiver.y;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.y = value;
    }.bind(null, $receiver));
    this.__tween_prxpgp$([tmp$, new V2($receiver_1, $receiver_1.get(), y, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], void 0, void 0, Animator$moveToWithSpeed$lambda($receiver, x, y, speed), easing);
  };
  Animator.prototype.alpha_bukqd3$ = function ($receiver, alpha, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    var $receiver_0 = getPropertyCallableRef('alpha', 0, function ($receiver) {
      return $receiver.alpha;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.alpha = value;
    }.bind(null, $receiver));
    this.__tween_prxpgp$([new V2($receiver_0, $receiver_0.get(), alpha, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], void 0, time, void 0, easing);
  };
  function Animator$scaleTo$lambda(this$scaleTo, closure$scaleX) {
    return function () {
      var $receiver = getPropertyCallableRef('scaleX', 0, function ($receiver) {
        return $receiver.scaleX;
      }.bind(null, this$scaleTo), function ($receiver, value) {
        $receiver.scaleX = value;
      }.bind(null, this$scaleTo));
      var end = numberToDouble(closure$scaleX());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$scaleTo$lambda_0(this$scaleTo, closure$scaleY) {
    return function () {
      var $receiver = getPropertyCallableRef('scaleY', 0, function ($receiver) {
        return $receiver.scaleY;
      }.bind(null, this$scaleTo), function ($receiver, value) {
        $receiver.scaleY = value;
      }.bind(null, this$scaleTo));
      var end = numberToDouble(closure$scaleY());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.scaleTo_zgco09$ = function ($receiver, scaleX, scaleY, time, lazyTime, easing) {
    if (scaleY === void 0)
      scaleY = scaleX;
    if (time === void 0)
      time = this.time;
    if (lazyTime === void 0)
      lazyTime = null;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$scaleTo$lambda($receiver, scaleX), Animator$scaleTo$lambda_0($receiver, scaleY)], time, lazyTime, easing);
  };
  function Animator$rotateTo$lambda(this$rotateTo, closure$rotation) {
    return function () {
      var $receiver = getPropertyCallableRef('rotation', 0, function ($receiver) {
        return $receiver.rotation;
      }.bind(null, this$rotateTo), function ($receiver, value) {
        $receiver.rotation = value;
      }.bind(null, this$rotateTo));
      var end = closure$rotation();
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolateAngle', function (ratio_0, l_0, r_0) {
        return _interpolateAngle(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.rotateTo_ko7euq$ = function ($receiver, rotation, time, lazyTime, easing) {
    if (time === void 0)
      time = this.time;
    if (lazyTime === void 0)
      lazyTime = null;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$rotateTo$lambda($receiver, rotation)], time, lazyTime, easing);
  };
  function Animator$moveTo$lambda(this$moveTo) {
    return function () {
      return this$moveTo.x;
    };
  }
  function Animator$moveTo$lambda_0(this$moveTo) {
    return function () {
      return this$moveTo.y;
    };
  }
  function Animator$moveTo$lambda_1(this$moveTo, closure$x) {
    return function () {
      var $receiver = getPropertyCallableRef('x', 0, function ($receiver) {
        return $receiver.x;
      }.bind(null, this$moveTo), function ($receiver, value) {
        $receiver.x = value;
      }.bind(null, this$moveTo));
      var end = numberToDouble(closure$x());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveTo$lambda_2(this$moveTo, closure$y) {
    return function () {
      var $receiver = getPropertyCallableRef('y', 0, function ($receiver) {
        return $receiver.y;
      }.bind(null, this$moveTo), function ($receiver, value) {
        $receiver.y = value;
      }.bind(null, this$moveTo));
      var end = numberToDouble(closure$y());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  Animator.prototype.moveTo_zgco09$ = function ($receiver, x, y, time, lazyTime, easing) {
    if (x === void 0)
      x = Animator$moveTo$lambda($receiver);
    if (y === void 0)
      y = Animator$moveTo$lambda_0($receiver);
    if (time === void 0)
      time = this.time;
    if (lazyTime === void 0)
      lazyTime = null;
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$moveTo$lambda_1($receiver, x), Animator$moveTo$lambda_2($receiver, y)], time, lazyTime, easing);
  };
  function Animator$moveToWithSpeed$lambda_0(this$moveToWithSpeed) {
    return function () {
      return this$moveToWithSpeed.x;
    };
  }
  function Animator$moveToWithSpeed$lambda_1(this$moveToWithSpeed) {
    return function () {
      return this$moveToWithSpeed.y;
    };
  }
  function Animator$moveToWithSpeed$lambda_2(this$Animator) {
    return function () {
      return this$Animator.speed;
    };
  }
  function Animator$moveToWithSpeed$lambda_3(this$moveToWithSpeed, closure$x) {
    return function () {
      var $receiver = getPropertyCallableRef('x', 0, function ($receiver) {
        return $receiver.x;
      }.bind(null, this$moveToWithSpeed), function ($receiver, value) {
        $receiver.x = value;
      }.bind(null, this$moveToWithSpeed));
      var end = numberToDouble(closure$x());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveToWithSpeed$lambda_4(this$moveToWithSpeed, closure$y) {
    return function () {
      var $receiver = getPropertyCallableRef('y', 0, function ($receiver) {
        return $receiver.y;
      }.bind(null, this$moveToWithSpeed), function ($receiver, value) {
        $receiver.y = value;
      }.bind(null, this$moveToWithSpeed));
      var end = numberToDouble(closure$y());
      return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }
  function Animator$moveToWithSpeed$lambda_5(this$moveToWithSpeed, closure$x, closure$y, closure$speed) {
    return function () {
      var x = this$moveToWithSpeed.x - numberToDouble(closure$x());
      var y = this$moveToWithSpeed.y - numberToDouble(closure$y());
      var $receiver = Math_0.hypot(x, y) / numberToDouble(closure$speed());
      return TimeSpan.Companion.fromSeconds_14dthe$($receiver);
    };
  }
  Animator.prototype.moveToWithSpeed_tipyna$ = function ($receiver, x, y, speed, easing) {
    if (x === void 0)
      x = Animator$moveToWithSpeed$lambda_0($receiver);
    if (y === void 0)
      y = Animator$moveToWithSpeed$lambda_1($receiver);
    if (speed === void 0)
      speed = Animator$moveToWithSpeed$lambda_2(this);
    if (easing === void 0)
      easing = this.easing;
    this.__tween_txsq10$([Animator$moveToWithSpeed$lambda_3($receiver, x), Animator$moveToWithSpeed$lambda_4($receiver, y)], void 0, Animator$moveToWithSpeed$lambda_5($receiver, x, y, speed), easing);
  };
  Animator.prototype.show_yz29kn$ = function ($receiver, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.alpha_bukqd3$($receiver, numberToDouble(1), time, easing);
  };
  Animator.prototype.hide_yz29kn$ = function ($receiver, time, easing) {
    if (time === void 0)
      time = this.time;
    if (easing === void 0)
      easing = this.easing;
    this.alpha_bukqd3$($receiver, numberToDouble(0), time, easing);
  };
  Animator.prototype.scaleTo_58is8l$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.scaleTo_58is8l$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function ($receiver, scaleX, scaleY, time, easing) {
      if (scaleY === void 0)
        scaleY = scaleX;
      if (time === void 0)
        time = this.time;
      if (easing === void 0)
        easing = this.easing;
      this.scaleTo_mo66qj$($receiver, numberToDouble(scaleX), numberToDouble(scaleY), time, easing);
    };
  }));
  Animator.prototype.moveTo_58is8l$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.moveTo_58is8l$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function ($receiver, x, y, time, easing) {
      if (time === void 0)
        time = this.time;
      if (easing === void 0)
        easing = this.easing;
      this.moveTo_mo66qj$($receiver, numberToDouble(x), numberToDouble(y), time, easing);
    };
  }));
  Animator.prototype.moveToWithSpeed_j05y58$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.moveToWithSpeed_j05y58$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function ($receiver, x, y, speed, easing) {
      if (speed === void 0)
        speed = this.speed;
      if (easing === void 0)
        easing = this.easing;
      this.moveToWithSpeed_ppfd84$($receiver, numberToDouble(x), numberToDouble(y), numberToDouble(speed), easing);
    };
  }));
  Animator.prototype.alpha_9g1ptr$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Animator.alpha_9g1ptr$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function ($receiver, alpha, time, easing) {
      if (time === void 0)
        time = this.time;
      if (easing === void 0)
        easing = this.easing;
      this.alpha_bukqd3$($receiver, numberToDouble(alpha), time, easing);
    };
  }));
  Animator.prototype.wait_fv8bff$ = function (time) {
    if (time === void 0)
      time = this.time;
    this.__tween_txsq10$([], time);
  };
  Animator.prototype.wait_scuhsd$ = function (time) {
    this.__tween_txsq10$([], void 0, time);
  };
  function Animator$block$ObjectLiteral(closure$callback) {
    this.closure$callback = closure$callback;
  }
  Animator$block$ObjectLiteral.prototype.execute = function (continuation) {
    return this.closure$callback();
  };
  Animator$block$ObjectLiteral.prototype.executeImmediately = function () {
    this.closure$callback();
  };
  Animator$block$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [BaseAnimatorNode]
  };
  Animator.prototype.block_o14v8n$ = function (callback) {
    this.nodes.add_11rb$(new Animator$block$ObjectLiteral(callback));
  };
  function Animator_init$lambda($receiver) {
    return Unit;
  }
  function Animator$_onCancel$lambda() {
    return Unit;
  }
  Animator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Animator',
    interfaces: [BaseAnimatorNode]
  };
  function animator$lambda($receiver) {
    return Unit;
  }
  function animator($receiver, time, speed, easing, completeOnCancel, kind, block) {
    if (time === void 0)
      time = Animator$Companion_getInstance().DEFAULT_TIME;
    if (speed === void 0)
      speed = Animator$Companion_getInstance().DEFAULT_SPEED;
    if (easing === void 0)
      easing = Animator$Companion_getInstance().DEFAULT_EASING;
    if (completeOnCancel === void 0)
      completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
    if (kind === void 0)
      kind = Animator$NodeKind$Sequence_getInstance();
    if (block === void 0)
      block = animator$lambda;
    var $receiver_0 = new Animator($receiver, time, speed, easing, completeOnCancel, kind);
    block($receiver_0);
    return $receiver_0;
  }
  function launchAnimate$lambda($receiver) {
    return Unit;
  }
  function Coroutine$launchAnimate$lambda(closure$time_0, closure$speed_0, closure$easing_0, closure$completeOnCancel_0, closure$kind_0, closure$block_0, this$launchAnimate_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$time = closure$time_0;
    this.local$closure$speed = closure$speed_0;
    this.local$closure$easing = closure$easing_0;
    this.local$closure$completeOnCancel = closure$completeOnCancel_0;
    this.local$closure$kind = closure$kind_0;
    this.local$closure$block = closure$block_0;
    this.local$this$launchAnimate = this$launchAnimate_0;
  }
  Coroutine$launchAnimate$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$launchAnimate$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$launchAnimate$lambda.prototype.constructor = Coroutine$launchAnimate$lambda;
  Coroutine$launchAnimate$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = animate(this.local$this$launchAnimate, this.local$closure$time, this.local$closure$speed, this.local$closure$easing, this.local$closure$completeOnCancel, this.local$closure$kind, this.local$closure$block, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function launchAnimate$lambda_0(closure$time_0, closure$speed_0, closure$easing_0, closure$completeOnCancel_0, closure$kind_0, closure$block_0, this$launchAnimate_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$launchAnimate$lambda(closure$time_0, closure$speed_0, closure$easing_0, closure$completeOnCancel_0, closure$kind_0, closure$block_0, this$launchAnimate_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function launchAnimate($receiver, time, speed, easing, completeOnCancel, kind, block, continuation) {
    if (time === void 0)
      time = Animator$Companion_getInstance().DEFAULT_TIME;
    if (speed === void 0)
      speed = Animator$Companion_getInstance().DEFAULT_SPEED;
    if (easing === void 0)
      easing = Animator$Companion_getInstance().DEFAULT_EASING;
    if (completeOnCancel === void 0)
      completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
    if (kind === void 0)
      kind = Animator$NodeKind$Sequence_getInstance();
    if (block === void 0)
      block = launchAnimate$lambda;
    return launchImmediately_0(continuation.context, launchAnimate$lambda_0(time, speed, easing, completeOnCancel, kind, block, $receiver));
  }
  function animate$lambda($receiver) {
    return Unit;
  }
  function Coroutine$animate($receiver_0, time_0, speed_0, easing_0, completeOnCancel_0, kind_0, block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver_0 = void 0;
    this.local$$receiver = $receiver_0;
    this.local$time = time_0;
    this.local$speed = speed_0;
    this.local$easing = easing_0;
    this.local$completeOnCancel = completeOnCancel_0;
    this.local$kind = kind_0;
    this.local$block = block_0;
  }
  Coroutine$animate.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$animate.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$animate.prototype.constructor = Coroutine$animate;
  Coroutine$animate.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$time === void 0)
              this.local$time = Animator$Companion_getInstance().DEFAULT_TIME;
            if (this.local$speed === void 0)
              this.local$speed = Animator$Companion_getInstance().DEFAULT_SPEED;
            if (this.local$easing === void 0)
              this.local$easing = Animator$Companion_getInstance().DEFAULT_EASING;
            if (this.local$completeOnCancel === void 0)
              this.local$completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
            if (this.local$kind === void 0)
              this.local$kind = Animator$NodeKind$Sequence_getInstance();
            if (this.local$block === void 0)
              this.local$block = animate$lambda;
            this.local$$receiver_0 = new Animator(this.local$$receiver, this.local$time, this.local$speed, this.local$easing, this.local$completeOnCancel, this.local$kind);
            this.local$block(this.local$$receiver_0);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver_0.execute(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function animate($receiver_0, time_0, speed_0, easing_0, completeOnCancel_0, kind_0, block_0, continuation_0, suspended) {
    var instance = new Coroutine$animate($receiver_0, time_0, speed_0, easing_0, completeOnCancel_0, kind_0, block_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function animateSequence$lambda($receiver) {
    return Unit;
  }
  function animateSequence($receiver, time, speed, easing, completeOnCancel, block, continuation) {
    if (time === void 0)
      time = Animator$Companion_getInstance().DEFAULT_TIME;
    if (speed === void 0)
      speed = Animator$Companion_getInstance().DEFAULT_SPEED;
    if (easing === void 0)
      easing = Animator$Companion_getInstance().DEFAULT_EASING;
    if (completeOnCancel === void 0)
      completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
    if (block === void 0)
      block = animateSequence$lambda;
    return animate($receiver, time, speed, easing, completeOnCancel, Animator$NodeKind$Sequence_getInstance(), block, continuation);
  }
  function animateParallel$lambda($receiver) {
    return Unit;
  }
  function animateParallel($receiver, time, speed, easing, completeOnCancel, block, continuation) {
    if (time === void 0)
      time = Animator$Companion_getInstance().DEFAULT_TIME;
    if (speed === void 0)
      speed = Animator$Companion_getInstance().DEFAULT_SPEED;
    if (easing === void 0)
      easing = Animator$Companion_getInstance().DEFAULT_EASING;
    if (completeOnCancel === void 0)
      completeOnCancel = Animator$Companion_getInstance().DEFAULT_COMPLETE_ON_CANCEL;
    if (block === void 0)
      block = animateParallel$lambda;
    return animate($receiver, time, speed, easing, completeOnCancel, Animator$NodeKind$Parallel_getInstance(), block, continuation);
  }
  function Timed(initialCapacity) {
    if (initialCapacity === void 0)
      initialCapacity = 7;
    this.times = new IntArrayList(initialCapacity);
    this.objects = ArrayList_init_0(initialCapacity);
  }
  Object.defineProperty(Timed.prototype, 'size', {
    get: function () {
      return this.times.size;
    }
  });
  Object.defineProperty(Timed.prototype, 'entries', {
    get: function () {
      return zip(this.times, this.objects);
    }
  });
  Timed.prototype.add_wxm5ur$ = function (time, obj) {
    this.times.add_za3lpa$(time);
    this.objects.add_11rb$(obj);
    var m = this.times.size - 2 | 0;
    while (m >= 0 && time < this.times.get_za3lpa$(m)) {
      this.swap_t3p0pr$_0(m, m + 1 | 0);
      m = m - 1 | 0;
    }
  };
  Timed.prototype.swap_t3p0pr$_0 = function (a, b) {
    var tempTime = this.times.get_za3lpa$(b);
    var tempObject = this.objects.get_za3lpa$(b);
    this.times.set_vux9f0$(b, this.times.get_za3lpa$(a));
    this.objects.set_wxm5ur$(b, this.objects.get_za3lpa$(a));
    this.times.set_vux9f0$(a, tempTime);
    this.objects.set_wxm5ur$(a, tempObject);
  };
  Timed.prototype.findNearIndex_za3lpa$ = function (time) {
    var res = binarySearch(this.times, time).raw;
    return res < 0 ? clamp((-res | 0) - 1 | 0, 0, this.times.size - 1 | 0) : res;
  };
  function Timed$RangeResult(startIndex, endIndex) {
    if (startIndex === void 0)
      startIndex = 0;
    if (endIndex === void 0)
      endIndex = 0;
    this.startIndex = startIndex;
    this.endIndex = endIndex;
  }
  Timed$RangeResult.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RangeResult',
    interfaces: []
  };
  Timed$RangeResult.prototype.component1 = function () {
    return this.startIndex;
  };
  Timed$RangeResult.prototype.component2 = function () {
    return this.endIndex;
  };
  Timed$RangeResult.prototype.copy_vux9f0$ = function (startIndex, endIndex) {
    return new Timed$RangeResult(startIndex === void 0 ? this.startIndex : startIndex, endIndex === void 0 ? this.endIndex : endIndex);
  };
  Timed$RangeResult.prototype.toString = function () {
    return 'RangeResult(startIndex=' + Kotlin.toString(this.startIndex) + (', endIndex=' + Kotlin.toString(this.endIndex)) + ')';
  };
  Timed$RangeResult.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.startIndex) | 0;
    result = result * 31 + Kotlin.hashCode(this.endIndex) | 0;
    return result;
  };
  Timed$RangeResult.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.startIndex, other.startIndex) && Kotlin.equals(this.endIndex, other.endIndex)))));
  };
  Timed.prototype.getRangeValues_ex6w2q$ = function (startTime, endTime, out) {
    if (out === void 0) {
      out = ArrayList_init_1();
    }var tmp$, tmp$_0;
    var range = this.getRangeIndices_b4nn5q$(startTime, endTime);
    tmp$ = range.startIndex;
    tmp$_0 = range.endIndex;
    for (var n = tmp$; n <= tmp$_0; n++) {
      var element = this.objects.get_za3lpa$(n);
      out.add_11rb$(element);
    }
    return out;
  };
  Timed.prototype.getRangeIndices_b4nn5q$ = function (startTime, endTime, out) {
    if (out === void 0)
      out = new Timed$RangeResult();
    var startIndex = clamp(this.findNearIndex_za3lpa$(startTime) - 1 | 0, 0, this.size - 1 | 0);
    var endIndex = clamp(this.findNearIndex_za3lpa$(endTime) + 1 | 0, 0, this.size - 1 | 0);
    var min = 2147483647;
    var max = -2147483648;
    for (var n = startIndex; n <= endIndex; n++) {
      var time = this.times.get_za3lpa$(n);
      if (startTime <= time && time <= endTime) {
        var a = min;
        min = Math_0.min(a, n);
        var a_0 = max;
        max = Math_0.max(a_0, n);
      }}
    out.startIndex = min;
    out.endIndex = max;
    return out;
  };
  Timed.prototype.forEachInRange_x63f18$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Timed.forEachInRange_x63f18$', wrapFunction(function () {
    var clamp = _.$$importsForInline$$['kmem-root-kmem'].com.soywiz.kmem.clamp_e4yvb3$;
    return function (startTime, endTime, maxCalls, callback) {
      if (maxCalls === void 0)
        maxCalls = 2147483647;
      var startIndex = clamp(this.findNearIndex_za3lpa$(startTime) - 1 | 0, 0, this.size - 1 | 0);
      var endIndex = clamp(this.findNearIndex_za3lpa$(endTime) + 1 | 0, 0, this.size - 1 | 0);
      var totalCalls = 0;
      for (var n = startIndex; n <= endIndex; n++) {
        var time = this.times.get_za3lpa$(n);
        var obj = this.objects.get_za3lpa$(n);
        if ((startTime + 1 | 0) <= time && time <= endTime) {
          callback(n, time, obj);
          totalCalls = totalCalls + 1 | 0;
          if (totalCalls >= maxCalls)
            break;
        }}
    };
  }));
  function Timed$Result(index, left, right, ratio) {
    if (index === void 0)
      index = 0;
    if (left === void 0)
      left = null;
    if (right === void 0)
      right = null;
    if (ratio === void 0)
      ratio = 0.0;
    this.index = index;
    this.left = left;
    this.right = right;
    this.ratio = ratio;
  }
  Timed$Result.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Result',
    interfaces: []
  };
  Timed$Result.prototype.component1 = function () {
    return this.index;
  };
  Timed$Result.prototype.component2 = function () {
    return this.left;
  };
  Timed$Result.prototype.component3 = function () {
    return this.right;
  };
  Timed$Result.prototype.component4 = function () {
    return this.ratio;
  };
  Timed$Result.prototype.copy_rnsoye$ = function (index, left, right, ratio) {
    return new Timed$Result(index === void 0 ? this.index : index, left === void 0 ? this.left : left, right === void 0 ? this.right : right, ratio === void 0 ? this.ratio : ratio);
  };
  Timed$Result.prototype.toString = function () {
    return 'Result(index=' + Kotlin.toString(this.index) + (', left=' + Kotlin.toString(this.left)) + (', right=' + Kotlin.toString(this.right)) + (', ratio=' + Kotlin.toString(this.ratio)) + ')';
  };
  Timed$Result.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.index) | 0;
    result = result * 31 + Kotlin.hashCode(this.left) | 0;
    result = result * 31 + Kotlin.hashCode(this.right) | 0;
    result = result * 31 + Kotlin.hashCode(this.ratio) | 0;
    return result;
  };
  Timed$Result.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.index, other.index) && Kotlin.equals(this.left, other.left) && Kotlin.equals(this.right, other.right) && Kotlin.equals(this.ratio, other.ratio)))));
  };
  Timed.prototype.find_xgt0ho$ = function (time, out) {
    if (out === void 0)
      out = new Timed$Result();
    var findAndHandle_rankz6$result;
    findAndHandle_rankz6$break: do {
      if (this.objects.isEmpty()) {
        out.index = 0;
        out.left = null;
        out.right = null;
        out.ratio = 0.0;
        findAndHandle_rankz6$result = out;
        break findAndHandle_rankz6$break;
      }var index = this.findNearIndex_za3lpa$(time);
      var timeAtIndex = this.times.get_za3lpa$(index);
      if (time < timeAtIndex && index <= 0) {
        var right = this.objects.get_za3lpa$(0);
        out.index = 0;
        out.left = null;
        out.right = right;
        out.ratio = 0.0;
        findAndHandle_rankz6$result = out;
      } else {
        var idx = time < timeAtIndex ? index - 1 | 0 : index;
        var curTimeAtIndex = this.times.get_za3lpa$(idx + 0 | 0);
        if (curTimeAtIndex === time) {
          var left = this.objects.get_za3lpa$(idx);
          out.index = idx;
          out.left = left;
          out.right = null;
          out.ratio = 0.0;
          findAndHandle_rankz6$result = out;
        } else {
          if (idx >= (this.times.size - 1 | 0)) {
            var index_0 = this.objects.size;
            var left_0 = this.objects.get_za3lpa$(this.objects.size - 1 | 0);
            out.index = index_0;
            out.left = left_0;
            out.right = null;
            out.ratio = 1.0;
            findAndHandle_rankz6$result = out;
          } else {
            var nextTimeAtIndex = this.times.get_za3lpa$(idx + 1 | 0);
            var elapsedTime = time - curTimeAtIndex | 0;
            var totalTime = nextTimeAtIndex - curTimeAtIndex | 0;
            var left_1 = this.objects.get_za3lpa$(idx);
            var right_0 = this.objects.get_za3lpa$(idx + 1 | 0);
            var ratio = elapsedTime / totalTime;
            out.index = idx;
            out.left = left_1;
            out.right = right_0;
            out.ratio = ratio;
            findAndHandle_rankz6$result = out;
          }
        }
      }
    }
     while (false);
    return findAndHandle_rankz6$result;
  };
  Timed.prototype.findAndHandle_rankz6$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Timed.findAndHandle_rankz6$', function (time, callback) {
    if (this.objects.isEmpty())
      return callback(0, null, null, 0.0);
    var index = this.findNearIndex_za3lpa$(time);
    var timeAtIndex = this.times.get_za3lpa$(index);
    if (time < timeAtIndex && index <= 0) {
      return callback(0, null, this.objects.get_za3lpa$(0), 0.0);
    } else {
      var idx = time < timeAtIndex ? index - 1 | 0 : index;
      var curTimeAtIndex = this.times.get_za3lpa$(idx + 0 | 0);
      if (curTimeAtIndex === time) {
        return callback(idx, this.objects.get_za3lpa$(idx), null, 0.0);
      } else {
        if (idx >= (this.times.size - 1 | 0)) {
          return callback(this.objects.size, this.objects.get_za3lpa$(this.objects.size - 1 | 0), null, 1.0);
        } else {
          var nextTimeAtIndex = this.times.get_za3lpa$(idx + 1 | 0);
          var elapsedTime = time - curTimeAtIndex | 0;
          var totalTime = nextTimeAtIndex - curTimeAtIndex | 0;
          return callback(idx, this.objects.get_za3lpa$(idx), this.objects.get_za3lpa$(idx + 1 | 0), elapsedTime / totalTime);
        }
      }
    }
  });
  Timed.prototype.findWithoutInterpolation_xgt0ho$ = function (time, out) {
    if (out === void 0)
      out = new Timed$Result();
    var findAndHandleWithoutInterpolation_gqpst9$result;
    findAndHandleWithoutInterpolation_gqpst9$break: do {
      var tmp$;
      if (this.objects.isEmpty()) {
        out.index = 0;
        out.left = null;
        out.right = null;
        out.ratio = 0.0;
        findAndHandleWithoutInterpolation_gqpst9$result = out;
        break findAndHandleWithoutInterpolation_gqpst9$break;
      }var index = this.findNearIndex_za3lpa$(time);
      var timeAtIndex = this.times.get_za3lpa$(index);
      if (time < timeAtIndex && index <= 0) {
        out.index = 0;
        out.left = null;
        out.right = null;
        out.ratio = 0.0;
        tmp$ = out;
      } else {
        var idx = time < timeAtIndex ? index - 1 | 0 : index;
        var curTimeAtIndex = this.times.get_za3lpa$(idx + 0 | 0);
        if (curTimeAtIndex === time) {
          var left = this.objects.get_za3lpa$(idx);
          out.index = idx;
          out.left = left;
          out.right = null;
          out.ratio = 0.0;
          tmp$ = out;
        } else if (idx >= (this.times.size - 1 | 0)) {
          var index_0 = this.objects.size;
          var left_0 = this.objects.get_za3lpa$(this.objects.size - 1 | 0);
          out.index = index_0;
          out.left = left_0;
          out.right = null;
          out.ratio = 0.0;
          tmp$ = out;
        } else {
          var left_1 = this.objects.get_za3lpa$(idx);
          out.index = idx;
          out.left = left_1;
          out.right = null;
          out.ratio = 0.0;
          tmp$ = out;
        }
      }
      findAndHandleWithoutInterpolation_gqpst9$result = tmp$;
    }
     while (false);
    return findAndHandleWithoutInterpolation_gqpst9$result;
  };
  Timed.prototype.findAndHandleWithoutInterpolation_gqpst9$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.animate.Timed.findAndHandleWithoutInterpolation_gqpst9$', function (time, callback) {
    var tmp$;
    if (this.objects.isEmpty())
      return callback(0, null);
    var index = this.findNearIndex_za3lpa$(time);
    var timeAtIndex = this.times.get_za3lpa$(index);
    if (time < timeAtIndex && index <= 0) {
      tmp$ = callback(0, null);
    } else {
      var idx = time < timeAtIndex ? index - 1 | 0 : index;
      var curTimeAtIndex = this.times.get_za3lpa$(idx + 0 | 0);
      if (curTimeAtIndex === time)
        tmp$ = callback(idx, this.objects.get_za3lpa$(idx));
      else if (idx >= (this.times.size - 1 | 0))
        tmp$ = callback(this.objects.size, this.objects.get_za3lpa$(this.objects.size - 1 | 0));
      else
        tmp$ = callback(idx, this.objects.get_za3lpa$(idx));
    }
    return tmp$;
  });
  Timed.prototype.toString = function () {
    return 'Timed(' + this.entries + ')';
  };
  Timed.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Timed',
    interfaces: []
  };
  function Coroutine$readAni$lambda(closure$file_0, closure$views_0, index_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$file = closure$file_0;
    this.local$closure$views = closure$views_0;
    this.local$index = index_0;
  }
  Coroutine$readAni$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAni$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAni$lambda.prototype.constructor = Coroutine$readAni$lambda;
  Coroutine$readAni$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBitmapOptimized(this.local$closure$file.withExtension_61zpoe$('ani.' + this.local$index + '.png'), this.local$closure$views.imageFormats, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAni$lambda(closure$file_0, closure$views_0) {
    return function (index_0, continuation_0, suspended) {
      var instance = new Coroutine$readAni$lambda(closure$file_0, closure$views_0, index_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$readAni$lambda_0(closure$file_0, index_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$file = closure$file_0;
    this.local$index = index_0;
  }
  Coroutine$readAni$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAni$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAni$lambda_0.prototype.constructor = Coroutine$readAni$lambda_0;
  Coroutine$readAni$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSound(this.local$closure$file.withExtension_61zpoe$('ani.' + this.local$index + '.mp3'), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAni$lambda_0(closure$file_0) {
    return function (index_0, continuation_0, suspended) {
      var instance = new Coroutine$readAni$lambda_0(closure$file_0, index_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$readAni($receiver_0, views_0, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$file = void 0;
    this.local$$receiver = $receiver_0;
    this.local$views = views_0;
    this.local$content = content_0;
  }
  Coroutine$readAni.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAni.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAni.prototype.constructor = Coroutine$readAni;
  Coroutine$readAni.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$content === void 0)
              this.local$content = null;
            this.local$file = this.local$$receiver;
            this.local$tmp$ = AnLibraryDeserializer_getInstance();
            if (this.local$content == null) {
              this.state_0 = 2;
              this.result_0 = this.local$$receiver.readBytes(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$content = new FastByteArrayInputStream(this.result_0);
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$tmp$.read_splst$(this.local$content, this.local$views, new AnLibraryDeserializer$ExternalReaders(readAni$lambda(this.local$file, this.local$views), readAni$lambda_0(this.local$file)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAni($receiver_0, views_0, content_0, continuation_0, suspended) {
    var instance = new Coroutine$readAni($receiver_0, views_0, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function AnLibraryDeserializer() {
    AnLibraryDeserializer_instance = this;
  }
  function AnLibraryDeserializer$ExternalReaders(atlasReader, readSound) {
    this.atlasReader = atlasReader;
    this.readSound = readSound;
  }
  AnLibraryDeserializer$ExternalReaders.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ExternalReaders',
    interfaces: []
  };
  AnLibraryDeserializer.prototype.read_yyxl0s$ = function (s, views, externalReaders, continuation) {
    return this.readLibrary_0(new FastByteArrayInputStream(s), views, externalReaders, continuation);
  };
  AnLibraryDeserializer.prototype.read_61jkx5$ = function (s, views, externalReaders, continuation) {
    return this.readLibrary_0(new FastByteArrayInputStream(readAll(s)), views, externalReaders, continuation);
  };
  AnLibraryDeserializer.prototype.read_splst$ = function (s, views, externalReaders, continuation) {
    return this.readLibrary_0(s, views, externalReaders, continuation);
  };
  function Coroutine$readLibrary_0($this, $receiver_0, views_0, externalReaders_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$library = void 0;
    this.local$strings = void 0;
    this.local$destination = void 0;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$atlases = void 0;
    this.local$destination_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$$receiver = $receiver_0;
    this.local$views = views_0;
    this.local$externalReaders = externalReaders_0;
  }
  Coroutine$readLibrary_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readLibrary_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readLibrary_0.prototype.constructor = Coroutine$readLibrary_0;
  Coroutine$readLibrary_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var magic = this.local$$receiver.readStringz_uyw3ma$(8);
            if (!equals(magic, AniFile_getInstance().MAGIC))
              invalidOp('Not a KORGEANI file');
            if (this.local$$receiver.readU_VL() !== 16)
              invalidOp('Just supported KORGEANI version 16');
            var msPerFrame = this.local$$receiver.readU_VL();
            var width = this.local$$receiver.readU_VL();
            var height = this.local$$receiver.readU_VL();
            var fileFlags = this.local$$receiver.readU_VL();
            var mipmaps = extract(fileFlags, 0);
            var smoothInterpolation = !extract(fileFlags, 1);
            var $receiver = new AnLibrary(this.local$views, width, height, 1000.0 / msPerFrame);
            $receiver.defaultSmoothing = smoothInterpolation;
            this.local$library = $receiver;
            var $receiver_0 = until(1, this.local$$receiver.readU_VL());
            var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
            var tmp$;
            tmp$ = $receiver_0.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              destination.add_11rb$(this.local$$receiver.readStringVL_qa9gbo$());
            }

            this.local$strings = plus_0([null], destination);
            var $receiver_1 = until(0, this.local$$receiver.readU_VL());
            this.local$destination = ArrayList_init_0(collectionSizeOrDefault($receiver_1, 10));
            this.local$tmp$ = $receiver_1.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 4;
              continue;
            }
            var item_0 = this.local$tmp$.next();
            this.local$tmp$_0 = this.local$destination.add_11rb$;
            this.state_0 = 3;
            this.result_0 = this.local$externalReaders.atlasReader(item_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var bmp = this.result_0;
            this.local$tmp$_0.call(this.local$destination, to(bmp, slice(bmp)));
            this.state_0 = 2;
            continue;
          case 4:
            this.local$atlases = this.local$destination;
            var $receiver_2 = until(0, this.local$$receiver.readU_VL());
            this.local$destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_2, 10));
            this.local$tmp$_1 = $receiver_2.iterator();
            this.state_0 = 5;
            continue;
          case 5:
            if (!this.local$tmp$_1.hasNext()) {
              this.state_0 = 7;
              continue;
            }
            var item_1 = this.local$tmp$_1.next();
            this.local$tmp$_2 = this.local$destination_0.add_11rb$;
            this.state_0 = 6;
            this.result_0 = this.local$externalReaders.readSound(item_1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.local$tmp$_2.call(this.local$destination_0, this.result_0);
            this.state_0 = 5;
            continue;
          case 7:
            var sounds = this.local$destination_0;
            var $receiver_3 = until(0, this.local$$receiver.readU_VL());
            var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_3, 10));
            var tmp$_0;
            tmp$_0 = $receiver_3.iterator();
            while (tmp$_0.hasNext()) {
              var item_2 = tmp$_0.next();
              destination_0.add_11rb$(this.$this.readSymbol_0(this.local$$receiver, this.local$strings, this.local$atlases, sounds));
            }

            var symbols = destination_0;
            var tmp$_1;
            var n = 0;
            while (n < symbols.size) {
              this.local$library.addSymbol_lvjwfe$(symbols.get_za3lpa$((tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1)));
            }

            this.local$library.processSymbolNames();
            return this.local$library;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AnLibraryDeserializer.prototype.readLibrary_0 = function ($receiver_0, views_0, externalReaders_0, continuation_0, suspended) {
    var instance = new Coroutine$readLibrary_0(this, $receiver_0, views_0, externalReaders_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  AnLibraryDeserializer.prototype.readSymbol_0 = function ($receiver, strings, atlases, sounds) {
    var tmp$, tmp$_0;
    var symbolId = $receiver.readU_VL();
    var symbolName = strings[$receiver.readU_VL()];
    var type = $receiver.readU_VL();
    switch (type) {
      case 0:
        tmp$_0 = AnSymbolEmpty_getInstance();
        break;
      case 1:
        var soundId = $receiver.readU_VL();
        tmp$_0 = new AnSymbolSound(symbolId, symbolName, sounds.get_za3lpa$(soundId), null);
        break;
      case 2:
        var initialText = strings[$receiver.readU_VL()];
        var bounds = this.readRect_l4re4c$($receiver);
        tmp$_0 = new AnTextFieldSymbol(symbolId, symbolName, initialText != null ? initialText : '', bounds);
        break;
      case 3:
        var scale = $receiver.readF32LE();
        var bitmapId = $receiver.readU_VL();
        var atlas = atlases.get_za3lpa$(bitmapId);
        var textureBounds = this.readIRect_l4re4c$($receiver);
        var bounds_0 = this.readRect_l4re4c$($receiver);
        var bitmap = atlas.first;
        var texture = atlas.second;
        switch ($receiver.readU_VL()) {
          case 0:
            tmp$ = null;
            break;
          case 1:
            var cmds = new Int32Array($receiver.readU_VL());
            for (var n = 0; n < cmds.length; n++)
              cmds[n] = $receiver.readU8();
            var data = new Float64Array($receiver.readU_VL());
            for (var n_0 = 0; n_0 < data.length; n_0++)
              data[n_0] = $receiver.readF32LE();
            tmp$ = new VectorPath(IntArrayList_init(cmds.slice()), DoubleArrayList_init(data.slice()));
            break;
          default:tmp$ = null;
            break;
        }

        var path = tmp$;
        tmp$_0 = new AnSymbolShape(symbolId, symbolName, bounds_0, new TextureWithBitmapSlice(texture.slice_t9mhyo$(textureBounds), slice(bitmap, textureBounds), scale, bounds_0), path);
        break;
      case 6:
        var nframes = $receiver.readU_VL();
        var texturesWithBitmap = new Timed(nframes);
        for (var n_1 = 0; n_1 < nframes; n_1++) {
          var ratio1000 = $receiver.readU_VL();
          var scale_0 = $receiver.readF32LE();
          var bitmapId_0 = $receiver.readU_VL();
          var bounds_1 = this.readRect_l4re4c$($receiver);
          var textureBounds_0 = this.readIRect_l4re4c$($receiver);
          var atlas_0 = atlases.get_za3lpa$(bitmapId_0);
          var bitmap_0 = atlas_0.first;
          var texture_0 = atlas_0.second;
          texturesWithBitmap.add_wxm5ur$(ratio1000, new TextureWithBitmapSlice(texture_0.slice_t9mhyo$(textureBounds_0), slice(bitmap_0, textureBounds_0), scale_0, bounds_1));
        }

        tmp$_0 = new AnSymbolMorphShape(symbolId, symbolName, Rectangle.Companion.invoke(), texturesWithBitmap, null);
        break;
      case 4:
        tmp$_0 = new AnSymbolBitmap(symbolId, symbolName, new Bitmap32(1, 1));
        break;
      case 5:
        tmp$_0 = this.readMovieClip_0($receiver, symbolId, symbolName, strings);
        break;
      default:throw new NotImplementedError_init('An operation is not implemented: ' + ('Type: ' + type));
    }
    var symbol = tmp$_0;
    return symbol;
  };
  AnLibraryDeserializer.prototype.readMovieClip_0 = function ($receiver, symbolId, symbolName, strings) {
    var mcFlags = $receiver.readU8();
    var totalDepths = $receiver.readU_VL();
    var totalFrames = $receiver.readU_VL();
    var totalTime = $receiver.readU_VL();
    var totalUids = $receiver.readU_VL();
    var $receiver_0 = until(0, totalUids);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var tmp$_1;
      var charId = $receiver.readU_VL();
      var extraPropsString = $receiver.readStringVL_qa9gbo$();
      var extraProps = extraPropsString.length === 0 ? LinkedHashMap_init() : Kotlin.isType(tmp$_1 = json.Json.parse_61zpoe$(extraPropsString), MutableMap) ? tmp$_1 : throwCCE();
      tmp$_0.call(destination, new AnSymbolUidDef(charId, extraProps));
    }
    var uidsToCharacterIds = copyToArray(destination);
    var mc = new AnSymbolMovieClip(symbolId, symbolName, new AnSymbolLimits(totalDepths, totalFrames, totalUids, totalTime));
    if (extract(mcFlags, 0)) {
      mc.ninePatch = this.readRect_l4re4c$($receiver);
    }var $receiver_1 = until(0, $receiver.readU_VL());
    var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_1, 10));
    var tmp$_2;
    tmp$_2 = $receiver_1.iterator();
    while (tmp$_2.hasNext()) {
      var item_0 = tmp$_2.next();
      var tmp$_3 = destination_0.add_11rb$;
      var tmp$_4, tmp$_5;
      var ss = new AnSymbolMovieClipSubTimeline(totalDepths);
      ss.totalTime = $receiver.readU_VL();
      var stateFlags = $receiver.readU8();
      ss.nextStatePlay = extract(stateFlags, 0);
      ss.nextState = strings[$receiver.readU_VL()];
      var numberOfActionFrames = $receiver.readU_VL();
      var lastFrameTimeInMs = 0;
      for (var n = 0; n < numberOfActionFrames; n++) {
        var deltaTime = $receiver.readU_VL();
        var timeInMs = lastFrameTimeInMs + deltaTime | 0;
        lastFrameTimeInMs = timeInMs;
        var $receiver_2 = until(0, $receiver.readU_VL());
        var destination_1 = ArrayList_init_0(collectionSizeOrDefault($receiver_2, 10));
        var tmp$_6;
        tmp$_6 = $receiver_2.iterator();
        loop_label: while (tmp$_6.hasNext()) {
          var item_1 = tmp$_6.next();
          var tmp$_7 = destination_1.add_11rb$;
          var transform$result;
          transform$break: do {
            var tmp$_8;
            var action = $receiver.readU8();
            switch (action) {
              case 0:
                transform$result = new AnPlaySoundAction($receiver.readU_VL());
                break transform$break;
              case 1:
                transform$result = new AnEventAction((tmp$_8 = strings[$receiver.readU_VL()]) != null ? tmp$_8 : '');
                break transform$break;
              default:throw new NotImplementedError_init();
            }
          }
           while (false);
          tmp$_7.call(destination_1, transform$result);
        }
        var actions = destination_1;
        var tmp$_9;
        var n_0 = 0;
        while (n_0 < actions.size) {
          ss.actions.add_wxm5ur$(timeInMs * 1000 | 0, actions.get_za3lpa$((tmp$_9 = n_0, n_0 = tmp$_9 + 1 | 0, tmp$_9)));
        }
      }
      for (var depth = 0; depth < totalDepths; depth++) {
        var timeline = ss.timelines[depth];
        var lastUid = -1;
        var lastName = null;
        var lastColorTransform = new ColorTransform_init(numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToInt(0), numberToInt(0), numberToInt(0), numberToInt(0));
        var lastMatrix = new Matrix();
        var lastClipDepth = -1;
        var lastRatio = 0.0;
        var lastFrameTime = 0;
        var lastBlendMode = BlendMode$INHERIT_getInstance();
        tmp$_4 = $receiver.readU_VL();
        for (var frameIndex = 0; frameIndex < tmp$_4; frameIndex++) {
          var deltaFrameTime = $receiver.readU_VL();
          var frameTime = lastFrameTime + deltaFrameTime | 0;
          lastFrameTime = frameTime;
          var flags = $receiver.readU_VL();
          var hasUid = extract(flags, 0);
          var hasName = extract(flags, 1);
          var hasColorTransform = extract(flags, 2);
          var hasMatrix = extract(flags, 3);
          var hasClipDepth = extract(flags, 4);
          var hasRatio = extract(flags, 5);
          var hasAlpha = extract(flags, 6);
          var hasBlendMode = extract(flags, 7);
          if (hasUid)
            lastUid = $receiver.readU_VL();
          if (hasClipDepth)
            lastClipDepth = $receiver.readS16LE();
          if (hasName)
            lastName = strings[$receiver.readU_VL()];
          if (hasAlpha) {
            var ct = lastColorTransform.copy_s3cjg4$();
            ct.mA = $receiver.readU8() / 255.0;
            lastColorTransform = ct;
          } else if (hasColorTransform) {
            var ct_0 = lastColorTransform.copy_s3cjg4$();
            var ctFlags = $receiver.readU8();
            if (extract(ctFlags, 0))
              ct_0.mR = $receiver.readU8() / 255.0;
            if (extract(ctFlags, 1))
              ct_0.mG = $receiver.readU8() / 255.0;
            if (extract(ctFlags, 2))
              ct_0.mB = $receiver.readU8() / 255.0;
            if (extract(ctFlags, 3))
              ct_0.mA = $receiver.readU8() / 255.0;
            if (extract(ctFlags, 4))
              ct_0.aR = $receiver.readS8() * 2 | 0;
            if (extract(ctFlags, 5))
              ct_0.aG = $receiver.readS8() * 2 | 0;
            if (extract(ctFlags, 6))
              ct_0.aB = $receiver.readS8() * 2 | 0;
            if (extract(ctFlags, 7))
              ct_0.aR = $receiver.readS8() * 2 | 0;
            lastColorTransform = ct_0;
          }if (hasMatrix) {
            var lm = lastMatrix.copy_15yvbs$();
            var matrixFlags = $receiver.readU8();
            if (extract(matrixFlags, 0))
              lm.a = $receiver.readS_VL() / 16384.0;
            if (extract(matrixFlags, 1))
              lm.b = $receiver.readS_VL() / 16384.0;
            if (extract(matrixFlags, 2))
              lm.c = $receiver.readS_VL() / 16384.0;
            if (extract(matrixFlags, 3))
              lm.d = $receiver.readS_VL() / 16384.0;
            if (extract(matrixFlags, 4))
              lm.tx = $receiver.readS_VL() / 20.0;
            if (extract(matrixFlags, 5))
              lm.ty = $receiver.readS_VL() / 20.0;
            lastMatrix = lm;
          }if (hasRatio)
            lastRatio = $receiver.readU8() / 255.0;
          if (hasBlendMode) {
            lastBlendMode = (tmp$_5 = BlendMode$Companion_getInstance().BY_ORDINAL.get_11rb$($receiver.readU8())) != null ? tmp$_5 : BlendMode$INHERIT_getInstance();
          }timeline.add_wxm5ur$(frameTime * 1000 | 0, new AnSymbolTimelineFrame(depth, lastUid, lastClipDepth, lastRatio, lastMatrix, lastName, lastColorTransform, lastBlendMode));
        }
      }
      tmp$_3.call(destination_0, ss);
    }
    var symbolStates = destination_0;
    for (var n_1 = 0; n_1 < uidsToCharacterIds.length; n_1++)
      mc.uidInfo[n_1] = uidsToCharacterIds[n_1];
    var tmp$_10 = mc.states;
    var $receiver_3 = until(0, $receiver.readU_VL());
    var destination_2 = ArrayList_init_0(collectionSizeOrDefault($receiver_3, 10));
    var tmp$_11;
    tmp$_11 = $receiver_3.iterator();
    while (tmp$_11.hasNext()) {
      var item_2 = tmp$_11.next();
      var tmp$_12 = destination_2.add_11rb$;
      var tmp$_13;
      var name = (tmp$_13 = strings[$receiver.readU_VL()]) != null ? tmp$_13 : '';
      var startTime = $receiver.readU_VL();
      var stateIndex = $receiver.readU_VL();
      symbolStates.get_za3lpa$(stateIndex).actions.add_wxm5ur$(startTime, new AnEventAction(name));
      tmp$_12.call(destination_2, to(name, new AnSymbolMovieClipState(name, symbolStates.get_za3lpa$(stateIndex), startTime)));
    }
    var map = toMap(destination_2);
    tmp$_10.putAll_a2k3zr$(map);
    return mc;
  };
  AnLibraryDeserializer.prototype.readRect_l4re4c$ = function ($receiver) {
    return new Rectangle($receiver.readS_VL() / 20.0, $receiver.readS_VL() / 20.0, $receiver.readS_VL() / 20.0, $receiver.readS_VL() / 20.0);
  };
  AnLibraryDeserializer.prototype.readIRect_l4re4c$ = function ($receiver) {
    return RectangleInt.Companion.invoke_tjonv8$($receiver.readS_VL(), $receiver.readS_VL(), $receiver.readS_VL(), $receiver.readS_VL());
  };
  AnLibraryDeserializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AnLibraryDeserializer',
    interfaces: []
  };
  var AnLibraryDeserializer_instance = null;
  function AnLibraryDeserializer_getInstance() {
    if (AnLibraryDeserializer_instance === null) {
      new AnLibraryDeserializer();
    }return AnLibraryDeserializer_instance;
  }
  function Coroutine$writeTo$lambda(closure$file_0, closure$format_0, closure$props_0, index_0, atlas_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$file = closure$file_0;
    this.local$closure$format = closure$format_0;
    this.local$closure$props = closure$props_0;
    this.local$index = index_0;
    this.local$atlas = atlas_0;
  }
  Coroutine$writeTo$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeTo$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeTo$lambda.prototype.constructor = Coroutine$writeTo$lambda;
  Coroutine$writeTo$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = writeBitmap(this.local$closure$file.withExtension_61zpoe$('ani.' + this.local$index + '.png'), this.local$atlas, this.local$closure$format, this.local$closure$props, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeTo$lambda(closure$file_0, closure$format_0, closure$props_0) {
    return function (index_0, atlas_0, continuation_0, suspended) {
      var instance = new Coroutine$writeTo$lambda(closure$file_0, closure$format_0, closure$props_0, index_0, atlas_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$writeTo$lambda_0(closure$file_0, index_0, soundData_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$file = closure$file_0;
    this.local$index = index_0;
    this.local$soundData = soundData_0;
  }
  Coroutine$writeTo$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeTo$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeTo$lambda_0.prototype.constructor = Coroutine$writeTo$lambda_0;
  Coroutine$writeTo$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$file.withExtension_61zpoe$('ani.' + this.local$index + '.mp3').write_bdsgvo$(this.local$soundData, [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeTo$lambda_0(closure$file_0) {
    return function (index_0, soundData_0, continuation_0, suspended) {
      var instance = new Coroutine$writeTo$lambda_0(closure$file_0, index_0, soundData_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$writeTo($receiver_0, file_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$file = file_0;
    this.local$config = config_0;
  }
  Coroutine$writeTo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeTo.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeTo.prototype.constructor = Coroutine$writeTo;
  Coroutine$writeTo.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$config === void 0)
              this.local$config = new AnLibrarySerializer$Config();
            var format_0 = format.PNG;
            var props = new ImageEncodingProps(void 0, this.local$config.compression);
            this.state_0 = 2;
            this.result_0 = AnLibrarySerializer_getInstance().gen_y7lps0$(this.local$$receiver, this.local$config, new AnLibrarySerializer$ExternalWriters(writeTo$lambda(this.local$file, format_0, props), writeTo$lambda_0(this.local$file)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$file.write_bdsgvo$(this.result_0, [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeTo($receiver_0, file_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$writeTo($receiver_0, file_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function AnLibrarySerializer() {
    AnLibrarySerializer_instance = this;
  }
  function AnLibrarySerializer$ExternalWriters(writeAtlas, writeSound) {
    this.writeAtlas = writeAtlas;
    this.writeSound = writeSound;
  }
  AnLibrarySerializer$ExternalWriters.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ExternalWriters',
    interfaces: []
  };
  function AnLibrarySerializer$Config(compression, keepPaths, mipmaps, smoothInterpolation) {
    if (compression === void 0)
      compression = 1.0;
    if (keepPaths === void 0)
      keepPaths = false;
    if (mipmaps === void 0)
      mipmaps = true;
    if (smoothInterpolation === void 0)
      smoothInterpolation = true;
    this.compression = compression;
    this.keepPaths = keepPaths;
    this.mipmaps = mipmaps;
    this.smoothInterpolation = smoothInterpolation;
  }
  AnLibrarySerializer$Config.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Config',
    interfaces: []
  };
  function Coroutine$gen_y7lps0$($this, library_0, config_0, externalWriters_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = void 0;
    this.local$library = library_0;
    this.local$config = config_0;
    this.local$externalWriters = externalWriters_0;
  }
  Coroutine$gen_y7lps0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$gen_y7lps0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$gen_y7lps0$.prototype.constructor = Coroutine$gen_y7lps0$;
  Coroutine$gen_y7lps0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$config === void 0)
              this.local$config = new AnLibrarySerializer$Config();
            this.local$buffer = ByteArrayBuilder_init(4096);
            var s = MemorySyncStream(this.local$buffer);
            this.state_0 = 2;
            this.result_0 = this.$this.write_t81cod$(s, this.local$library, this.local$config, this.local$externalWriters, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$buffer.toByteArray();
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AnLibrarySerializer.prototype.gen_y7lps0$ = function (library_0, config_0, externalWriters_0, continuation_0, suspended) {
    var instance = new Coroutine$gen_y7lps0$(this, library_0, config_0, externalWriters_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  AnLibrarySerializer.prototype.write_t81cod$ = function (s, library, config, externalWriters, continuation) {
    if (config === void 0)
      config = new AnLibrarySerializer$Config();
    return this.writeLibrary_0(s, library, config, externalWriters, continuation);
  };
  AnLibrarySerializer.prototype.writeRect_0 = function ($receiver, r) {
    writeS_VL($receiver, numberToInt(r.x * 20));
    writeS_VL($receiver, numberToInt(r.y * 20));
    writeS_VL($receiver, numberToInt(r.width * 20));
    writeS_VL($receiver, numberToInt(r.height * 20));
  };
  AnLibrarySerializer.prototype.writeIRect_0 = function ($receiver, r) {
    writeS_VL($receiver, r.x);
    writeS_VL($receiver, r.y);
    writeS_VL($receiver, r.width);
    writeS_VL($receiver, r.height);
  };
  function Coroutine$writeLibrary_0($this, $receiver_0, lib_0, config_0, externalWriters_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$strings = void 0;
    this.local$atlasBitmapsToId = void 0;
    this.local$soundsToId = void 0;
    this.local$$receiver = $receiver_0;
    this.local$lib = lib_0;
    this.local$config = config_0;
    this.local$externalWriters = externalWriters_0;
  }
  Coroutine$writeLibrary_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeLibrary_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeLibrary_0.prototype.constructor = Coroutine$writeLibrary_0;
  Coroutine$writeLibrary_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14;
            writeStringz(this.local$$receiver, AniFile_getInstance().MAGIC, 8);
            writeU_VL(this.local$$receiver, 16);
            writeU_VL(this.local$$receiver, this.local$lib.msPerFrame);
            writeU_VL(this.local$$receiver, this.local$lib.width);
            writeU_VL(this.local$$receiver, this.local$lib.height);
            writeU_VL(this.local$$receiver, insert(insert(0, this.local$config.mipmaps, 0), !this.local$config.smoothInterpolation, 1));
            this.local$strings = new OptimizedStringAllocator();
            var $receiver = this.local$lib.symbolsById;
            var tmp$_15;
            var n = 0;
            while (n < $receiver.size) {
              var symbol = $receiver.get_za3lpa$((tmp$_15 = n, n = tmp$_15 + 1 | 0, tmp$_15));
              var tmp$_16, tmp$_17, tmp$_18, tmp$_19, tmp$_20;
              this.local$strings.add_pdl1vj$(symbol.name);
              if (Kotlin.isType(symbol, AnSymbolMovieClip)) {
                tmp$_16 = symbol.states.entries.iterator();
                while (tmp$_16.hasNext()) {
                  var ss = tmp$_16.next();
                  this.local$strings.add_pdl1vj$(ss.key);
                  this.local$strings.add_pdl1vj$(ss.value.subTimeline.nextState);
                  tmp$_17 = ss.value.subTimeline.timelines;
                  for (tmp$_18 = 0; tmp$_18 !== tmp$_17.length; ++tmp$_18) {
                    var timeline = tmp$_17[tmp$_18];
                    tmp$_19 = timeline.entries.iterator();
                    while (tmp$_19.hasNext()) {
                      var entry = tmp$_19.next();
                      this.local$strings.add_pdl1vj$(entry.second.name);
                    }
                  }
                  tmp$_20 = ss.value.subTimeline.actions.objects.iterator();
                  while (tmp$_20.hasNext()) {
                    var action = tmp$_20.next();
                    if (Kotlin.isType(action, AnEventAction))
                      this.local$strings.add_pdl1vj$(action.event);
                  }
                }
              } else if (Kotlin.isType(symbol, AnTextFieldSymbol))
                this.local$strings.add_pdl1vj$(symbol.initialHtml);
            }

            this.local$strings.finalize();
            writeU_VL(this.local$$receiver, this.local$strings.strings.length);
            tmp$ = drop(this.local$strings.strings, 1).iterator();
            while (tmp$.hasNext()) {
              var str = tmp$.next();
              writeStringVL(this.local$$receiver, ensureNotNull(str));
            }

            var $receiver_0 = this.local$lib.symbolsById;
            var destination = ArrayList_init_1();
            var tmp$_21;
            tmp$_21 = $receiver_0.iterator();
            while (tmp$_21.hasNext()) {
              var element = tmp$_21.next();
              if (Kotlin.isType(element, AnSymbolShape))
                destination.add_11rb$(element);
            }

            var destination_0 = ArrayList_init_0(collectionSizeOrDefault(destination, 10));
            var tmp$_22;
            tmp$_22 = destination.iterator();
            while (tmp$_22.hasNext()) {
              var item = tmp$_22.next();
              var tmp$_23, tmp$_24;
              destination_0.add_11rb$((tmp$_24 = (tmp$_23 = item.textureWithBitmap) != null ? tmp$_23.bitmapSlice : null) != null ? tmp$_24.bmp : null);
            }

            var $receiver_1 = this.local$lib.symbolsById;
            var destination_1 = ArrayList_init_1();
            var tmp$_25;
            tmp$_25 = $receiver_1.iterator();
            while (tmp$_25.hasNext()) {
              var element_0 = tmp$_25.next();
              if (Kotlin.isType(element_0, AnSymbolMorphShape))
                destination_1.add_11rb$(element_0);
            }

            var destination_2 = ArrayList_init_1();
            var tmp$_26;
            tmp$_26 = destination_1.iterator();
            while (tmp$_26.hasNext()) {
              var element_1 = tmp$_26.next();
              var $receiver_2 = element_1.texturesWithBitmap.entries;
              var destination_3 = ArrayList_init_0(collectionSizeOrDefault($receiver_2, 10));
              var tmp$_27;
              tmp$_27 = $receiver_2.iterator();
              while (tmp$_27.hasNext()) {
                var item_0 = tmp$_27.next();
                destination_3.add_11rb$(item_0.second.bitmapSlice.bmp);
              }
              var list = destination_3;
              addAll(destination_2, list);
            }

            var $receiver_3 = listOf([destination_0, destination_2]);
            var destination_4 = ArrayList_init_1();
            var tmp$_28;
            tmp$_28 = $receiver_3.iterator();
            while (tmp$_28.hasNext()) {
              var element_2 = tmp$_28.next();
              var list_0 = element_2;
              addAll(destination_4, list_0);
            }

            var atlasBitmaps = distinct(filterNotNull(destination_4));
            var $receiver_4 = withIndex(atlasBitmaps);
            var destination_5 = ArrayList_init_0(collectionSizeOrDefault($receiver_4, 10));
            var tmp$_29;
            tmp$_29 = $receiver_4.iterator();
            while (tmp$_29.hasNext()) {
              var item_1 = tmp$_29.next();
              destination_5.add_11rb$(to(item_1.value, item_1.index));
            }

            this.local$atlasBitmapsToId = toMap(destination_5);
            writeU_VL(this.local$$receiver, atlasBitmaps.size);
            this.local$tmp$_0 = this.local$atlasBitmapsToId.entries.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 4;
              continue;
            }
            var tmp$_30 = this.local$tmp$_0.next();
            var atlas = tmp$_30.key;
            var index = tmp$_30.value;
            this.state_0 = 3;
            this.result_0 = this.local$externalWriters.writeAtlas(index, atlas, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            var $receiver_5 = this.local$lib.symbolsById;
            var destination_6 = ArrayList_init_1();
            var tmp$_31;
            tmp$_31 = $receiver_5.iterator();
            while (tmp$_31.hasNext()) {
              var element_3 = tmp$_31.next();
              if (Kotlin.isType(element_3, AnSymbolSound))
                destination_6.add_11rb$(element_3);
            }

            var $receiver_6 = withIndex(destination_6);
            var destination_7 = ArrayList_init_0(collectionSizeOrDefault($receiver_6, 10));
            var tmp$_32;
            tmp$_32 = $receiver_6.iterator();
            while (tmp$_32.hasNext()) {
              var item_2 = tmp$_32.next();
              destination_7.add_11rb$(to(item_2.value, item_2.index));
            }

            this.local$soundsToId = toMap(destination_7);
            writeU_VL(this.local$$receiver, this.local$soundsToId.size);
            this.local$tmp$_1 = this.local$soundsToId.entries.iterator();
            this.state_0 = 5;
            continue;
          case 5:
            if (!this.local$tmp$_1.hasNext()) {
              this.state_0 = 7;
              continue;
            }
            var tmp$_33 = this.local$tmp$_1.next();
            var sound = tmp$_33.key;
            var index_0 = tmp$_33.value;
            this.state_0 = 6;
            this.result_0 = this.local$externalWriters.writeSound(index_0, (tmp$_0 = sound.dataBytes) != null ? tmp$_0 : new Int8Array([]), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 5;
            continue;
          case 7:
            var morphShapeCount = 0;
            var shapeCount = 0;
            var movieClipCount = 0;
            var totalFrameCount = 0;
            var totalTimelines = 0;
            writeU_VL(this.local$$receiver, this.local$lib.symbolsById.size);
            tmp$_1 = this.local$lib.symbolsById.iterator();
            while (tmp$_1.hasNext()) {
              var symbol_0 = tmp$_1.next();
              writeU_VL(this.local$$receiver, symbol_0.id);
              writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(symbol_0.name));
              if (Kotlin.isType(symbol_0, AnSymbolEmpty))
                writeU_VL(this.local$$receiver, 0);
              else if (Kotlin.isType(symbol_0, AnSymbolSound)) {
                writeU_VL(this.local$$receiver, 1);
                writeU_VL(this.local$$receiver, ensureNotNull(this.local$soundsToId.get_11rb$(symbol_0)));
              } else if (Kotlin.isType(symbol_0, AnTextFieldSymbol)) {
                writeU_VL(this.local$$receiver, 2);
                writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(symbol_0.initialHtml));
                this.$this.writeRect_0(this.local$$receiver, symbol_0.bounds);
              } else if (Kotlin.isType(symbol_0, AnSymbolShape)) {
                shapeCount = shapeCount + 1 | 0;
                writeU_VL(this.local$$receiver, 3);
                writeF32LE(this.local$$receiver, ensureNotNull(symbol_0.textureWithBitmap).scale);
                writeU_VL(this.local$$receiver, ensureNotNull(this.local$atlasBitmapsToId.get_11rb$(ensureNotNull(symbol_0.textureWithBitmap).bitmapSlice.bmp)));
                this.$this.writeIRect_0(this.local$$receiver, ensureNotNull(symbol_0.textureWithBitmap).bitmapSlice.bounds);
                this.$this.writeRect_0(this.local$$receiver, symbol_0.bounds);
                var path = symbol_0.path;
                if (this.local$config.keepPaths && path != null) {
                  writeU_VL(this.local$$receiver, 1);
                  writeU_VL(this.local$$receiver, path.commands.size);
                  tmp$_2 = path.commands.iterator();
                  while (tmp$_2.hasNext()) {
                    var cmd = tmp$_2.next();
                    write8(this.local$$receiver, cmd);
                  }
                  writeU_VL(this.local$$receiver, path.data.size);
                  tmp$_3 = path.data.iterator();
                  while (tmp$_3.hasNext()) {
                    var v = tmp$_3.next();
                    writeF32LE(this.local$$receiver, v);
                  }
                } else {
                  writeU_VL(this.local$$receiver, 0);
                }
              } else if (Kotlin.isType(symbol_0, AnSymbolMorphShape)) {
                morphShapeCount = morphShapeCount + 1 | 0;
                writeU_VL(this.local$$receiver, 6);
                var entries = symbol_0.texturesWithBitmap.entries;
                writeU_VL(this.local$$receiver, entries.size);
                tmp$_4 = entries.iterator();
                while (tmp$_4.hasNext()) {
                  var tmp$_34 = tmp$_4.next();
                  var ratio1000 = tmp$_34.component1()
                  , textureWithBitmap = tmp$_34.component2();
                  writeU_VL(this.local$$receiver, ratio1000);
                  writeF32LE(this.local$$receiver, textureWithBitmap.scale);
                  writeU_VL(this.local$$receiver, ensureNotNull(this.local$atlasBitmapsToId.get_11rb$(textureWithBitmap.bitmapSlice.bmp)));
                  this.$this.writeRect_0(this.local$$receiver, textureWithBitmap.bounds);
                  this.$this.writeIRect_0(this.local$$receiver, textureWithBitmap.bitmapSlice.bounds);
                }
              } else if (Kotlin.isType(symbol_0, AnSymbolBitmap))
                writeU_VL(this.local$$receiver, 4);
              else if (Kotlin.isType(symbol_0, AnSymbolMovieClip)) {
                movieClipCount = movieClipCount + 1 | 0;
                writeU_VL(this.local$$receiver, 5);
                var hasNinePatchRect = symbol_0.ninePatch != null;
                write8(this.local$$receiver, insert(0, hasNinePatchRect, 0));
                var limits = symbol_0.limits;
                writeU_VL(this.local$$receiver, limits.totalDepths);
                writeU_VL(this.local$$receiver, limits.totalFrames);
                writeU_VL(this.local$$receiver, limits.totalTime);
                writeU_VL(this.local$$receiver, limits.totalUids);
                tmp$_5 = symbol_0.uidInfo;
                for (tmp$_6 = 0; tmp$_6 !== tmp$_5.length; ++tmp$_6) {
                  var uidInfo = tmp$_5[tmp$_6];
                  writeU_VL(this.local$$receiver, uidInfo.characterId);
                  writeStringVL(this.local$$receiver, !uidInfo.extraProps.isEmpty() ? json.Json.stringify_oud20p$(uidInfo.extraProps) : '');
                }
                var $receiver_7 = symbol_0.states;
                var destination_8 = ArrayList_init_0($receiver_7.size);
                var tmp$_35;
                tmp$_35 = $receiver_7.entries.iterator();
                while (tmp$_35.hasNext()) {
                  var item_3 = tmp$_35.next();
                  destination_8.add_11rb$(item_3.value.subTimeline);
                }
                var symbolStates = distinct(toList_0(destination_8));
                var $receiver_8 = withIndex(symbolStates);
                var destination_9 = ArrayList_init_0(collectionSizeOrDefault($receiver_8, 10));
                var tmp$_36;
                tmp$_36 = $receiver_8.iterator();
                while (tmp$_36.hasNext()) {
                  var item_4 = tmp$_36.next();
                  destination_9.add_11rb$(to(item_4.value, item_4.index));
                }
                var symbolStateToIndex = toMap(destination_9);
                if (hasNinePatchRect) {
                  this.$this.writeRect_0(this.local$$receiver, ensureNotNull(symbol_0.ninePatch));
                }writeU_VL(this.local$$receiver, symbolStates.size);
                tmp$_7 = symbolStates.iterator();
                while (tmp$_7.hasNext()) {
                  var ss_0 = tmp$_7.next();
                  writeU_VL(this.local$$receiver, ss_0.totalTime);
                  write8(this.local$$receiver, insert(0, ss_0.nextStatePlay, 0));
                  writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(ss_0.nextState));
                  var lastFrameTimeMs = 0;
                  var $receiver_9 = ss_0.actions.entries;
                  var destination_10 = LinkedHashMap_init();
                  var tmp$_37;
                  tmp$_37 = $receiver_9.iterator();
                  while (tmp$_37.hasNext()) {
                    var element_4 = tmp$_37.next();
                    var key = element_4.first;
                    var tmp$_0_0;
                    var value = destination_10.get_11rb$(key);
                    if (value == null) {
                      var answer = ArrayList_init_1();
                      destination_10.put_xwzc9p$(key, answer);
                      tmp$_0_0 = answer;
                    } else {
                      tmp$_0_0 = value;
                    }
                    var list_1 = tmp$_0_0;
                    list_1.add_11rb$(element_4);
                  }
                  var actionsPerTime = destination_10;
                  writeU_VL(this.local$$receiver, actionsPerTime.size);
                  tmp$_8 = actionsPerTime.entries.iterator();
                  while (tmp$_8.hasNext()) {
                    var tmp$_38 = tmp$_8.next();
                    var timeInMicro = tmp$_38.key;
                    var actions = tmp$_38.value;
                    var timeInMs = timeInMicro / 1000 | 0;
                    writeU_VL(this.local$$receiver, timeInMs - lastFrameTimeMs | 0);
                    lastFrameTimeMs = timeInMs;
                    writeU_VL(this.local$$receiver, actions.size);
                    tmp$_9 = actions.iterator();
                    while (tmp$_9.hasNext()) {
                      var actionInfo = tmp$_9.next();
                      var action_0 = actionInfo.second;
                      if (Kotlin.isType(action_0, AnPlaySoundAction)) {
                        write8(this.local$$receiver, 0);
                        writeU_VL(this.local$$receiver, action_0.soundId);
                      } else if (Kotlin.isType(action_0, AnEventAction)) {
                        write8(this.local$$receiver, 1);
                        writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(action_0.event));
                      } else {
                        throw new NotImplementedError_init();
                      }
                    }
                  }
                  tmp$_10 = ss_0.timelines;
                  for (tmp$_11 = 0; tmp$_11 !== tmp$_10.length; ++tmp$_11) {
                    var timeline_0 = tmp$_10[tmp$_11];
                    totalTimelines = totalTimelines + 1 | 0;
                    var frames = timeline_0.entries;
                    var lastUid = -1;
                    var lastName = null;
                    var lastColorTransform = new ColorTransform_init(numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToInt(0), numberToInt(0), numberToInt(0), numberToInt(0));
                    var lastMatrix = new Matrix();
                    var lastClipDepth = -1;
                    var lastRatio = 0.0;
                    var lastBlendMode = BlendMode$INHERIT_getInstance();
                    writeU_VL(this.local$$receiver, frames.size);
                    var lastFrameTime = 0;
                    tmp$_12 = frames.iterator();
                    while (tmp$_12.hasNext()) {
                      var tmp$_39 = tmp$_12.next();
                      var frameTime = tmp$_39.component1()
                      , frame = tmp$_39.component2();
                      var storeFrameTime = frameTime / 1000 | 0;
                      totalFrameCount = totalFrameCount + 1 | 0;
                      writeU_VL(this.local$$receiver, storeFrameTime - lastFrameTime | 0);
                      lastFrameTime = storeFrameTime;
                      var ct = frame.colorTransform;
                      var m = frame.transform;
                      var hasUid = frame.uid !== lastUid;
                      var hasName = !equals(frame.name, lastName);
                      var hasColorTransform = !(ct != null ? ct.equals(lastColorTransform) : null);
                      var hasBlendMode = frame.blendMode !== lastBlendMode;
                      var hasAlpha = ct.mR === lastColorTransform.mR && ct.mG === lastColorTransform.mG && ct.mB === lastColorTransform.mB && ct.mA !== lastColorTransform.mA && ct.aR === lastColorTransform.aR && ct.aG === lastColorTransform.aG && ct.aB === lastColorTransform.aB && ct.aA === lastColorTransform.aA;
                      var hasClipDepth = frame.clipDepth !== lastClipDepth;
                      var hasRatio = frame.ratio !== lastRatio;
                      var hasMatrix = !(m != null ? m.equals(lastMatrix) : null);
                      write8(this.local$$receiver, insert(insert(insert(insert(insert(insert(insert(insert(0, hasUid, 0), hasName, 1), hasColorTransform, 2), hasMatrix, 3), hasClipDepth, 4), hasRatio, 5), hasAlpha, 6), hasBlendMode, 7));
                      if (hasUid)
                        writeU_VL(this.local$$receiver, frame.uid);
                      if (hasClipDepth)
                        write16LE(this.local$$receiver, frame.clipDepth);
                      if (hasName)
                        writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(frame.name));
                      if (hasAlpha) {
                        write8(this.local$$receiver, clamp(numberToInt(ct.mA * 255.0), 0, 255));
                      } else if (hasColorTransform) {
                        var hasMR = ct.mR !== lastColorTransform.mR;
                        var hasMG = ct.mG !== lastColorTransform.mG;
                        var hasMB = ct.mB !== lastColorTransform.mB;
                        var hasMA = ct.mA !== lastColorTransform.mA;
                        var hasAR = ct.aR !== lastColorTransform.aR;
                        var hasAG = ct.aG !== lastColorTransform.aG;
                        var hasAB = ct.aB !== lastColorTransform.aB;
                        var hasAA = ct.aA !== lastColorTransform.aA;
                        write8(this.local$$receiver, insert(insert(insert(insert(insert(insert(insert(insert(0, hasMR, 0), hasMG, 1), hasMB, 2), hasMA, 3), hasAR, 4), hasAG, 5), hasAB, 6), hasAA, 7));
                        if (hasMR)
                          write8(this.local$$receiver, numberToInt(clamp_0(ct.mR, 0.0, 1.0) * 255.0));
                        if (hasMG)
                          write8(this.local$$receiver, numberToInt(clamp_0(ct.mG, 0.0, 1.0) * 255.0));
                        if (hasMB)
                          write8(this.local$$receiver, numberToInt(clamp_0(ct.mB, 0.0, 1.0) * 255.0));
                        if (hasMA)
                          write8(this.local$$receiver, numberToInt(clamp_0(ct.mA, 0.0, 1.0) * 255.0));
                        if (hasAR)
                          write8(this.local$$receiver, clamp(ct.aR, -255, 255) / 2 | 0);
                        if (hasAG)
                          write8(this.local$$receiver, clamp(ct.aG, -255, 255) / 2 | 0);
                        if (hasAB)
                          write8(this.local$$receiver, clamp(ct.aB, -255, 255) / 2 | 0);
                        if (hasAA)
                          write8(this.local$$receiver, clamp(ct.aA, -255, 255) / 2 | 0);
                      }if (hasMatrix) {
                        var hasMatrixA = m.a !== lastMatrix.a;
                        var hasMatrixB = m.b !== lastMatrix.b;
                        var hasMatrixC = m.c !== lastMatrix.c;
                        var hasMatrixD = m.d !== lastMatrix.d;
                        var hasMatrixTX = m.tx !== lastMatrix.tx;
                        var hasMatrixTY = m.ty !== lastMatrix.ty;
                        write8(this.local$$receiver, insert(insert(insert(insert(insert(insert(0, hasMatrixA, 0), hasMatrixB, 1), hasMatrixC, 2), hasMatrixD, 3), hasMatrixTX, 4), hasMatrixTY, 5));
                        if (hasMatrixA)
                          writeS_VL(this.local$$receiver, numberToInt(m.a * 16384));
                        if (hasMatrixB)
                          writeS_VL(this.local$$receiver, numberToInt(m.b * 16384));
                        if (hasMatrixC)
                          writeS_VL(this.local$$receiver, numberToInt(m.c * 16384));
                        if (hasMatrixD)
                          writeS_VL(this.local$$receiver, numberToInt(m.d * 16384));
                        if (hasMatrixTX)
                          writeS_VL(this.local$$receiver, numberToInt(m.tx * 20));
                        if (hasMatrixTY)
                          writeS_VL(this.local$$receiver, numberToInt(m.ty * 20));
                      }if (hasRatio)
                        write8(this.local$$receiver, clamp(numberToInt(frame.ratio * 255), 0, 255));
                      if (hasBlendMode) {
                        write8(this.local$$receiver, frame.blendMode.ordinal);
                      }lastUid = frame.uid;
                      lastName = frame.name;
                      lastColorTransform = frame.colorTransform;
                      lastMatrix = m;
                      lastClipDepth = frame.clipDepth;
                      lastRatio = frame.ratio;
                      lastBlendMode = frame.blendMode;
                    }
                  }
                }
                writeU_VL(this.local$$receiver, symbol_0.states.size);
                tmp$_13 = symbol_0.states.entries.iterator();
                while (tmp$_13.hasNext()) {
                  var tmp$_40 = tmp$_13.next();
                  var name = tmp$_40.key;
                  var ssi = tmp$_40.value;
                  var stateIndex = (tmp$_14 = symbolStateToIndex.get_11rb$(ssi.subTimeline)) != null ? tmp$_14 : 0;
                  writeU_VL(this.local$$receiver, this.local$strings.get_pdl1vj$(name));
                  writeU_VL(this.local$$receiver, ssi.startTime);
                  writeU_VL(this.local$$receiver, stateIndex);
                }
              }}

            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AnLibrarySerializer.prototype.writeLibrary_0 = function ($receiver_0, lib_0, config_0, externalWriters_0, continuation_0, suspended) {
    var instance = new Coroutine$writeLibrary_0(this, $receiver_0, lib_0, config_0, externalWriters_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  AnLibrarySerializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AnLibrarySerializer',
    interfaces: []
  };
  var AnLibrarySerializer_instance = null;
  function AnLibrarySerializer_getInstance() {
    if (AnLibrarySerializer_instance === null) {
      new AnLibrarySerializer();
    }return AnLibrarySerializer_instance;
  }
  function AniFile() {
    AniFile_instance = this;
    this.MAGIC = 'KORGEANI';
    this.VERSION = 16;
    this.SYMBOL_TYPE_EMPTY = 0;
    this.SYMBOL_TYPE_SOUND = 1;
    this.SYMBOL_TYPE_TEXT = 2;
    this.SYMBOL_TYPE_SHAPE = 3;
    this.SYMBOL_TYPE_BITMAP = 4;
    this.SYMBOL_TYPE_MOVIE_CLIP = 5;
    this.SYMBOL_TYPE_MORPH_SHAPE = 6;
  }
  AniFile.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AniFile',
    interfaces: []
  };
  var AniFile_instance = null;
  function AniFile_getInstance() {
    if (AniFile_instance === null) {
      new AniFile();
    }return AniFile_instance;
  }
  function Comparator$ObjectLiteral(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareByDescending$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(b), selector(a));
      };
    };
  });
  function OptimizedStringAllocator() {
    this.finalized_0 = false;
    this.stringsCount_0 = HashMap_init();
    this.strings_pn0ab4$_0 = [];
    this.stringsToIndex_0 = HashMap_init();
  }
  Object.defineProperty(OptimizedStringAllocator.prototype, 'strings', {
    get: function () {
      return this.strings_pn0ab4$_0;
    },
    set: function (strings) {
      this.strings_pn0ab4$_0 = strings;
    }
  });
  OptimizedStringAllocator.prototype.add_pdl1vj$ = function (str) {
    if (this.finalized_0)
      throw IllegalStateException_init();
    if (str != null) {
      var $receiver = this.stringsCount_0;
      var tmp$;
      if (!(Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).containsKey_11rb$(str)) {
        this.stringsCount_0.put_xwzc9p$(str, 0);
      }var $receiver_0 = this.stringsCount_0;
      var value = ensureNotNull(this.stringsCount_0.get_11rb$(str)) + 1 | 0;
      $receiver_0.put_xwzc9p$(str, value);
    }};
  OptimizedStringAllocator.prototype.get_pdl1vj$ = function (str) {
    return this.getIndex_pdl1vj$(str);
  };
  OptimizedStringAllocator.prototype.getIndex_pdl1vj$ = function (str) {
    if (!this.finalized_0)
      throw IllegalStateException_init();
    if (str == null) {
      return 0;
    } else {
      return ensureNotNull(this.stringsToIndex_0.get_11rb$(str));
    }
  };
  function OptimizedStringAllocator$finalize$lambda(it) {
    return it.value;
  }
  OptimizedStringAllocator.prototype.finalize = function () {
    var tmp$;
    var $receiver = sortedWith(this.stringsCount_0.entries, new Comparator$ObjectLiteral(compareByDescending$lambda(OptimizedStringAllocator$finalize$lambda)));
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item.key);
    }
    var toTypedArray$result;
    toTypedArray$result = copyToArray(destination);
    this.strings = [null].concat(toTypedArray$result);
    tmp$ = this.strings.length;
    for (var n = 1; n < tmp$; n++) {
      var $receiver_0 = this.stringsToIndex_0;
      var key = ensureNotNull(this.strings[n]);
      $receiver_0.put_xwzc9p$(key, n);
    }
    this.finalized_0 = true;
  };
  OptimizedStringAllocator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OptimizedStringAllocator',
    interfaces: []
  };
  function KorgeExperimental() {
  }
  KorgeExperimental.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeExperimental',
    interfaces: [Annotation]
  };
  function Atlas(info, texture) {
    this.info = info;
    this.texture = texture;
    var $receiver = this.info.frames;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new Atlas$Entry(this, item));
    }
    this.entries = destination;
    var $receiver_0 = this.entries;
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver_0, 10)), 16);
    var destination_0 = LinkedHashMap_init_0(capacity);
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      destination_0.put_xwzc9p$(element.filename, element);
    }
    this.entriesMap = destination_0;
  }
  function Atlas$Entry($outer, info) {
    this.$outer = $outer;
    this.info = info;
    var it = this.$outer.texture.slice_2da8yn$(this.info.frame.rect);
    this.slice = new BitmapSlice(it.bmp, it.bounds, this.info.filename, this.info.rotated);
  }
  Object.defineProperty(Atlas$Entry.prototype, 'filename', {
    get: function () {
      return this.info.filename;
    }
  });
  Atlas$Entry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Entry',
    interfaces: []
  };
  Atlas.prototype.tryGetEntryByName_61zpoe$ = function (name) {
    return this.entriesMap.get_11rb$(name);
  };
  Atlas.prototype.tryGet_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.tryGetEntryByName_61zpoe$(name)) != null ? tmp$.slice : null;
  };
  Atlas.prototype.get_61zpoe$ = function (name) {
    var tmp$;
    var tmp$_0;
    if ((tmp$ = this.tryGet_61zpoe$(name)) != null)
      tmp$_0 = tmp$;
    else {
      throw IllegalStateException_init_0(("Can't find '" + name + "' it atlas").toString());
    }
    return tmp$_0;
  };
  Atlas.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Atlas',
    interfaces: []
  };
  function readAtlas($receiver, views, continuation) {
    return readAtlas_0($receiver, continuation);
  }
  function Coroutine$readAtlas($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$info = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readAtlas.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAtlas.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAtlas.prototype.constructor = Coroutine$readAtlas;
  Coroutine$readAtlas.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.readString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var content = this.result_0;
            if (startsWith(content, '{'))
              tmp$_0 = AtlasInfo$Companion_getInstance().loadJsonSpriter_61zpoe$(content);
            else if (startsWith(content, '<'))
              tmp$_0 = AtlasInfo$Companion_getInstance().loadXml_61zpoe$(content);
            else {
              throw IllegalStateException_init_0(("Unexpected atlas starting with '" + ((tmp$ = firstOrNull_1(content)) === null ? null : String.fromCharCode(tmp$)) + "'").toString());
            }

            this.local$info = tmp$_0;
            var folder = this.local$$receiver.parent;
            this.state_0 = 3;
            this.result_0 = readBitmapSlice(folder.get_61zpoe$(this.local$info.image), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var atlasTex = this.result_0;
            return new Atlas(this.local$info, atlasTex);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAtlas_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readAtlas($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readAtlas2($receiver_0, views_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$entries = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readAtlas2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAtlas2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAtlas2.prototype.constructor = Coroutine$readAtlas2;
  Coroutine$readAtlas2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = json.Json;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.readString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var json_0 = this.local$tmp$.parse_61zpoe$(this.result_0);
            var $receiver = KDynamic.Companion;
            var sprites = $receiver.get_list_mzud1t$($receiver.get_uozw8h$(json_0, 'sprites'));
            var destination = ArrayList_init_0(collectionSizeOrDefault(sprites, 10));
            var tmp$;
            tmp$ = sprites.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              var tmp$_0 = destination.add_11rb$;
              var tmp$_1;
              tmp$_1 = $receiver.toBool_mzud1t$($receiver.get_uozw8h$(item, 'rotated'));
              tmp$_0.call(destination, new Atlas2$Entry($receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'x')), $receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'y')), $receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'w')), $receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'h')), $receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'margin')), $receiver.toInt_mzud1t$($receiver.get_uozw8h$(item, 'extruded')), toString($receiver.get_uozw8h$(item, 'name')), tmp$_1));
            }

            this.local$entries = destination;
            var width = $receiver.toInt_mzud1t$($receiver.get_uozw8h$(json_0, 'width'));
            var height = $receiver.toInt_mzud1t$($receiver.get_uozw8h$(json_0, 'height'));
            var file = toString($receiver.get_uozw8h$(json_0, 'file'));
            this.state_0 = 3;
            this.result_0 = readBitmap(this.local$$receiver.parent.get_61zpoe$(file), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var imageFile = this.result_0;
            var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(this.local$entries, 10)), 16);
            var destination_0 = LinkedHashMap_init_0(capacity);
            var tmp$_2;
            tmp$_2 = this.local$entries.iterator();
            while (tmp$_2.hasNext()) {
              var element = tmp$_2.next();
              var pair = to(element.name, sliceWithSize(imageFile, element.x, element.y, element.w, element.h));
              destination_0.put_xwzc9p$(pair.first, pair.second);
            }

            return new Atlas2(this.local$entries, destination_0);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAtlas2($receiver_0, views_0, continuation_0, suspended) {
    var instance = new Coroutine$readAtlas2($receiver_0, views_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Atlas2(entries, textures) {
    this.entries = entries;
    this.textures = textures;
  }
  function Atlas2$Entry(x, y, w, h, margin, extruded, name, rotated) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.margin = margin;
    this.extruded = extruded;
    this.name = name;
    this.rotated = rotated;
  }
  Atlas2$Entry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Entry',
    interfaces: []
  };
  Atlas2$Entry.prototype.component1 = function () {
    return this.x;
  };
  Atlas2$Entry.prototype.component2 = function () {
    return this.y;
  };
  Atlas2$Entry.prototype.component3 = function () {
    return this.w;
  };
  Atlas2$Entry.prototype.component4 = function () {
    return this.h;
  };
  Atlas2$Entry.prototype.component5 = function () {
    return this.margin;
  };
  Atlas2$Entry.prototype.component6 = function () {
    return this.extruded;
  };
  Atlas2$Entry.prototype.component7 = function () {
    return this.name;
  };
  Atlas2$Entry.prototype.component8 = function () {
    return this.rotated;
  };
  Atlas2$Entry.prototype.copy_mszkzb$ = function (x, y, w, h, margin, extruded, name, rotated) {
    return new Atlas2$Entry(x === void 0 ? this.x : x, y === void 0 ? this.y : y, w === void 0 ? this.w : w, h === void 0 ? this.h : h, margin === void 0 ? this.margin : margin, extruded === void 0 ? this.extruded : extruded, name === void 0 ? this.name : name, rotated === void 0 ? this.rotated : rotated);
  };
  Atlas2$Entry.prototype.toString = function () {
    return 'Entry(x=' + Kotlin.toString(this.x) + (', y=' + Kotlin.toString(this.y)) + (', w=' + Kotlin.toString(this.w)) + (', h=' + Kotlin.toString(this.h)) + (', margin=' + Kotlin.toString(this.margin)) + (', extruded=' + Kotlin.toString(this.extruded)) + (', name=' + Kotlin.toString(this.name)) + (', rotated=' + Kotlin.toString(this.rotated)) + ')';
  };
  Atlas2$Entry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.x) | 0;
    result = result * 31 + Kotlin.hashCode(this.y) | 0;
    result = result * 31 + Kotlin.hashCode(this.w) | 0;
    result = result * 31 + Kotlin.hashCode(this.h) | 0;
    result = result * 31 + Kotlin.hashCode(this.margin) | 0;
    result = result * 31 + Kotlin.hashCode(this.extruded) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.rotated) | 0;
    return result;
  };
  Atlas2$Entry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.x, other.x) && Kotlin.equals(this.y, other.y) && Kotlin.equals(this.w, other.w) && Kotlin.equals(this.h, other.h) && Kotlin.equals(this.margin, other.margin) && Kotlin.equals(this.extruded, other.extruded) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.rotated, other.rotated)))));
  };
  Atlas2.prototype.get_61zpoe$ = function (name) {
    var tmp$;
    var tmp$_0;
    if ((tmp$ = this.textures.get_11rb$(name)) != null)
      tmp$_0 = tmp$;
    else {
      throw IllegalStateException_init_0(("Can't find '" + name + "' in atlas").toString());
    }
    return tmp$_0;
  };
  Atlas2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Atlas2',
    interfaces: []
  };
  function AtlasInfo(frames, meta) {
    AtlasInfo$Companion_getInstance();
    this.frames = frames;
    this.meta = meta;
    var $receiver = this.frames;
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver, 10)), 16);
    var destination = LinkedHashMap_init_0(capacity);
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      destination.put_xwzc9p$(element.filename, element);
    }
    this.framesMap = destination;
  }
  function AtlasInfo$Rect(x, y, w, h) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
  }
  Object.defineProperty(AtlasInfo$Rect.prototype, 'rect', {
    get: function () {
      return new Rectangle(this.x, this.y, this.w, this.h);
    }
  });
  AtlasInfo$Rect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Rect',
    interfaces: []
  };
  AtlasInfo$Rect.prototype.component1 = function () {
    return this.x;
  };
  AtlasInfo$Rect.prototype.component2 = function () {
    return this.y;
  };
  AtlasInfo$Rect.prototype.component3 = function () {
    return this.w;
  };
  AtlasInfo$Rect.prototype.component4 = function () {
    return this.h;
  };
  AtlasInfo$Rect.prototype.copy_tjonv8$ = function (x, y, w, h) {
    return new AtlasInfo$Rect(x === void 0 ? this.x : x, y === void 0 ? this.y : y, w === void 0 ? this.w : w, h === void 0 ? this.h : h);
  };
  AtlasInfo$Rect.prototype.toString = function () {
    return 'Rect(x=' + Kotlin.toString(this.x) + (', y=' + Kotlin.toString(this.y)) + (', w=' + Kotlin.toString(this.w)) + (', h=' + Kotlin.toString(this.h)) + ')';
  };
  AtlasInfo$Rect.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.x) | 0;
    result = result * 31 + Kotlin.hashCode(this.y) | 0;
    result = result * 31 + Kotlin.hashCode(this.w) | 0;
    result = result * 31 + Kotlin.hashCode(this.h) | 0;
    return result;
  };
  AtlasInfo$Rect.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.x, other.x) && Kotlin.equals(this.y, other.y) && Kotlin.equals(this.w, other.w) && Kotlin.equals(this.h, other.h)))));
  };
  function AtlasInfo$Size(w, h) {
    this.w = w;
    this.h = h;
  }
  Object.defineProperty(AtlasInfo$Size.prototype, 'size', {
    get: function () {
      return Size.Companion.invoke_vux9f0$(this.w, this.h);
    }
  });
  AtlasInfo$Size.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Size',
    interfaces: []
  };
  AtlasInfo$Size.prototype.component1 = function () {
    return this.w;
  };
  AtlasInfo$Size.prototype.component2 = function () {
    return this.h;
  };
  AtlasInfo$Size.prototype.copy_vux9f0$ = function (w, h) {
    return new AtlasInfo$Size(w === void 0 ? this.w : w, h === void 0 ? this.h : h);
  };
  AtlasInfo$Size.prototype.toString = function () {
    return 'Size(w=' + Kotlin.toString(this.w) + (', h=' + Kotlin.toString(this.h)) + ')';
  };
  AtlasInfo$Size.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.w) | 0;
    result = result * 31 + Kotlin.hashCode(this.h) | 0;
    return result;
  };
  AtlasInfo$Size.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.w, other.w) && Kotlin.equals(this.h, other.h)))));
  };
  function AtlasInfo$Meta(app, format, image, scale, size, version) {
    AtlasInfo$Meta$Companion_getInstance();
    this.app = app;
    this.format = format;
    this.image = image;
    this.scale = scale;
    this.size = size;
    this.version = version;
  }
  function AtlasInfo$Meta$Companion() {
    AtlasInfo$Meta$Companion_instance = this;
    this.VERSION = '1.0.0';
  }
  AtlasInfo$Meta$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AtlasInfo$Meta$Companion_instance = null;
  function AtlasInfo$Meta$Companion_getInstance() {
    if (AtlasInfo$Meta$Companion_instance === null) {
      new AtlasInfo$Meta$Companion();
    }return AtlasInfo$Meta$Companion_instance;
  }
  AtlasInfo$Meta.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Meta',
    interfaces: []
  };
  AtlasInfo$Meta.prototype.component1 = function () {
    return this.app;
  };
  AtlasInfo$Meta.prototype.component2 = function () {
    return this.format;
  };
  AtlasInfo$Meta.prototype.component3 = function () {
    return this.image;
  };
  AtlasInfo$Meta.prototype.component4 = function () {
    return this.scale;
  };
  AtlasInfo$Meta.prototype.component5 = function () {
    return this.size;
  };
  AtlasInfo$Meta.prototype.component6 = function () {
    return this.version;
  };
  AtlasInfo$Meta.prototype.copy_qfz0c5$ = function (app, format, image, scale, size, version) {
    return new AtlasInfo$Meta(app === void 0 ? this.app : app, format === void 0 ? this.format : format, image === void 0 ? this.image : image, scale === void 0 ? this.scale : scale, size === void 0 ? this.size : size, version === void 0 ? this.version : version);
  };
  AtlasInfo$Meta.prototype.toString = function () {
    return 'Meta(app=' + Kotlin.toString(this.app) + (', format=' + Kotlin.toString(this.format)) + (', image=' + Kotlin.toString(this.image)) + (', scale=' + Kotlin.toString(this.scale)) + (', size=' + Kotlin.toString(this.size)) + (', version=' + Kotlin.toString(this.version)) + ')';
  };
  AtlasInfo$Meta.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.app) | 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    result = result * 31 + Kotlin.hashCode(this.image) | 0;
    result = result * 31 + Kotlin.hashCode(this.scale) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    return result;
  };
  AtlasInfo$Meta.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.app, other.app) && Kotlin.equals(this.format, other.format) && Kotlin.equals(this.image, other.image) && Kotlin.equals(this.scale, other.scale) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.version, other.version)))));
  };
  function AtlasInfo$Entry(filename, frame, rotated, sourceSize, spriteSourceSize, trimmed) {
    this.filename = filename;
    this.frame = frame;
    this.rotated = rotated;
    this.sourceSize = sourceSize;
    this.spriteSourceSize = spriteSourceSize;
    this.trimmed = trimmed;
  }
  AtlasInfo$Entry.prototype.applyRotation = function () {
    if (this.rotated) {
      return this.copy_ily03r$(void 0, this.frame.copy_tjonv8$(void 0, void 0, this.frame.h, this.frame.w), void 0, void 0, this.spriteSourceSize.copy_tjonv8$(this.spriteSourceSize.y, this.spriteSourceSize.x, this.spriteSourceSize.h, this.spriteSourceSize.w));
    } else {
      return this;
    }
  };
  AtlasInfo$Entry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Entry',
    interfaces: []
  };
  AtlasInfo$Entry.prototype.component1 = function () {
    return this.filename;
  };
  AtlasInfo$Entry.prototype.component2 = function () {
    return this.frame;
  };
  AtlasInfo$Entry.prototype.component3 = function () {
    return this.rotated;
  };
  AtlasInfo$Entry.prototype.component4 = function () {
    return this.sourceSize;
  };
  AtlasInfo$Entry.prototype.component5 = function () {
    return this.spriteSourceSize;
  };
  AtlasInfo$Entry.prototype.component6 = function () {
    return this.trimmed;
  };
  AtlasInfo$Entry.prototype.copy_ily03r$ = function (filename, frame, rotated, sourceSize, spriteSourceSize, trimmed) {
    return new AtlasInfo$Entry(filename === void 0 ? this.filename : filename, frame === void 0 ? this.frame : frame, rotated === void 0 ? this.rotated : rotated, sourceSize === void 0 ? this.sourceSize : sourceSize, spriteSourceSize === void 0 ? this.spriteSourceSize : spriteSourceSize, trimmed === void 0 ? this.trimmed : trimmed);
  };
  AtlasInfo$Entry.prototype.toString = function () {
    return 'Entry(filename=' + Kotlin.toString(this.filename) + (', frame=' + Kotlin.toString(this.frame)) + (', rotated=' + Kotlin.toString(this.rotated)) + (', sourceSize=' + Kotlin.toString(this.sourceSize)) + (', spriteSourceSize=' + Kotlin.toString(this.spriteSourceSize)) + (', trimmed=' + Kotlin.toString(this.trimmed)) + ')';
  };
  AtlasInfo$Entry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.filename) | 0;
    result = result * 31 + Kotlin.hashCode(this.frame) | 0;
    result = result * 31 + Kotlin.hashCode(this.rotated) | 0;
    result = result * 31 + Kotlin.hashCode(this.sourceSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.spriteSourceSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.trimmed) | 0;
    return result;
  };
  AtlasInfo$Entry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.filename, other.filename) && Kotlin.equals(this.frame, other.frame) && Kotlin.equals(this.rotated, other.rotated) && Kotlin.equals(this.sourceSize, other.sourceSize) && Kotlin.equals(this.spriteSourceSize, other.spriteSourceSize) && Kotlin.equals(this.trimmed, other.trimmed)))));
  };
  Object.defineProperty(AtlasInfo.prototype, 'app', {
    get: function () {
      return this.meta.app;
    }
  });
  Object.defineProperty(AtlasInfo.prototype, 'format', {
    get: function () {
      return this.meta.format;
    }
  });
  Object.defineProperty(AtlasInfo.prototype, 'image', {
    get: function () {
      return this.meta.image;
    }
  });
  Object.defineProperty(AtlasInfo.prototype, 'scale', {
    get: function () {
      return this.meta.scale;
    }
  });
  Object.defineProperty(AtlasInfo.prototype, 'size', {
    get: function () {
      return this.meta.size;
    }
  });
  Object.defineProperty(AtlasInfo.prototype, 'version', {
    get: function () {
      return this.meta.version;
    }
  });
  function AtlasInfo$Companion() {
    AtlasInfo$Companion_instance = this;
  }
  AtlasInfo$Companion.prototype.toRect_0 = function ($receiver) {
    var $receiver_0 = KDynamic.Companion;
    return new AtlasInfo$Rect($receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'x')), $receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'y')), $receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'w')), $receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'h')));
  };
  AtlasInfo$Companion.prototype.toSize_0 = function ($receiver) {
    var $receiver_0 = KDynamic.Companion;
    return new AtlasInfo$Size($receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'w')), $receiver_0.get_int_mzud1t$($receiver_0.get_uozw8h$($receiver, 'h')));
  };
  AtlasInfo$Companion.prototype.createEntry_0 = function ($receiver, name, it) {
    return new AtlasInfo$Entry(name, this.toRect_0($receiver.get_uozw8h$(it, 'frame')), $receiver.get_bool_mzud1t$($receiver.get_uozw8h$(it, 'rotated')), this.toSize_0($receiver.get_uozw8h$(it, 'sourceSize')), this.toRect_0($receiver.get_uozw8h$(it, 'spriteSourceSize')), $receiver.get_bool_mzud1t$($receiver.get_uozw8h$(it, 'trimmed')));
  };
  AtlasInfo$Companion.prototype.loadJsonSpriter_61zpoe$ = function (json_0) {
    var value = json.Json.parse_61zpoe$(json_0);
    var $receiver = KDynamic.Companion;
    var $receiver_0 = $receiver.get_uozw8h$(value, 'frames');
    var block$result;
    if (Kotlin.isType($receiver_0, Map)) {
      var $receiver_1 = $receiver_0.keys;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_1, 10));
      var tmp$;
      tmp$ = $receiver_1.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(this.createEntry_0($receiver, $receiver.get_str_mzud1t$(item), $receiver.get_uozw8h$($receiver_0, $receiver.get_str_mzud1t$(item))));
      }
      block$result = destination;
    } else {
      var $receiver_2 = $receiver.get_list_mzud1t$($receiver_0);
      var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_2, 10));
      var tmp$_0;
      tmp$_0 = $receiver_2.iterator();
      while (tmp$_0.hasNext()) {
        var item_0 = tmp$_0.next();
        destination_0.add_11rb$(this.createEntry_0($receiver, $receiver.get_str_mzud1t$($receiver.get_uozw8h$(item_0, 'filename')), item_0));
      }
      block$result = destination_0;
    }
    var tmp$_1 = block$result;
    var $receiver_3 = $receiver.get_uozw8h$(value, 'meta');
    var info = new AtlasInfo(tmp$_1, new AtlasInfo$Meta($receiver.get_str_mzud1t$($receiver.get_uozw8h$($receiver_3, 'app')), $receiver.get_str_mzud1t$($receiver.get_uozw8h$($receiver_3, 'format')), $receiver.get_str_mzud1t$($receiver.get_uozw8h$($receiver_3, 'image')), $receiver.get_double_mzud1t$($receiver.get_uozw8h$($receiver_3, 'scale')), this.toSize_0($receiver.get_uozw8h$($receiver_3, 'size')), $receiver.get_str_mzud1t$($receiver.get_uozw8h$($receiver_3, 'version'))));
    var $receiver_4 = info.frames;
    var destination_1 = ArrayList_init_0(collectionSizeOrDefault($receiver_4, 10));
    var tmp$_2;
    tmp$_2 = $receiver_4.iterator();
    while (tmp$_2.hasNext()) {
      var item_1 = tmp$_2.next();
      destination_1.add_11rb$(item_1.applyRotation());
    }
    return info.copy_lklmcy$(destination_1);
  };
  AtlasInfo$Companion.prototype.loadXml_61zpoe$ = function (content) {
    var xml = Xml(content);
    var imagePath = xml.str_puj7f4$('imagePath');
    var $receiver = plus_1(xml.children_61zpoe$('SubTexture'), xml.children_61zpoe$('sprite'));
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var tmp$_1, tmp$_2, tmp$_3;
      var rect = new AtlasInfo$Rect(item.int_bm4lxs$('x'), item.int_bm4lxs$('y'), (tmp$_1 = item.intNull_61zpoe$('width')) != null ? tmp$_1 : item.int_bm4lxs$('w'), (tmp$_2 = item.intNull_61zpoe$('height')) != null ? tmp$_2 : item.int_bm4lxs$('h'));
      tmp$_0.call(destination, new AtlasInfo$Entry((tmp$_3 = item.strNull_61zpoe$('name')) != null ? tmp$_3 : item.str_puj7f4$('n'), rect, false, new AtlasInfo$Size(rect.w, rect.h), rect, false));
    }
    return new AtlasInfo(destination, new AtlasInfo$Meta('Unknown', 'xml', imagePath, 1.0, new AtlasInfo$Size(-1, -1), '1.0'));
  };
  AtlasInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AtlasInfo$Companion_instance = null;
  function AtlasInfo$Companion_getInstance() {
    if (AtlasInfo$Companion_instance === null) {
      new AtlasInfo$Companion();
    }return AtlasInfo$Companion_instance;
  }
  AtlasInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AtlasInfo',
    interfaces: []
  };
  AtlasInfo.prototype.component1 = function () {
    return this.frames;
  };
  AtlasInfo.prototype.component2 = function () {
    return this.meta;
  };
  AtlasInfo.prototype.copy_lklmcy$ = function (frames, meta) {
    return new AtlasInfo(frames === void 0 ? this.frames : frames, meta === void 0 ? this.meta : meta);
  };
  AtlasInfo.prototype.toString = function () {
    return 'AtlasInfo(frames=' + Kotlin.toString(this.frames) + (', meta=' + Kotlin.toString(this.meta)) + ')';
  };
  AtlasInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.frames) | 0;
    result = result * 31 + Kotlin.hashCode(this.meta) | 0;
    return result;
  };
  AtlasInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.frames, other.frames) && Kotlin.equals(this.meta, other.meta)))));
  };
  function getBounds($receiver, text, format, out) {
    var tmp$, tmp$_0, tmp$_1;
    var font = $receiver;
    var scale = format.computedSize / font.fontSize;
    var width = 0.0;
    var height = 0.0;
    var dy = 0.0;
    var dx = 0.0;
    tmp$ = text.length;
    for (var n = 0; n < tmp$; n++) {
      var c1 = text.charCodeAt(n) | 0;
      if (c1 === 10) {
        dx = 0.0;
        dy += font.fontSize;
        var a = height;
        height = Math_0.max(a, dy);
        continue;
      }var c2 = 32;
      if ((n + 1 | 0) < text.length)
        c2 = text.charCodeAt(n + 1 | 0) | 0;
      var kerningOffset = (tmp$_1 = (tmp$_0 = font.kernings.get_za3lpa$(BitmapFont$Kerning.Companion.buildKey_vux9f0$(c1, c2))) != null ? tmp$_0.amount : null) != null ? tmp$_1 : 0;
      var glyph = font.get_za3lpa$(c1);
      dx += glyph.xadvance + kerningOffset | 0;
      var a_0 = width;
      var b = dx;
      width = Math_0.max(a_0, b);
    }
    height += font.fontSize;
    out.setTo_6y0v78$(0.0, 0.0, width * scale, height * scale);
  }
  function drawText($receiver, ctx, textSize, str, x, y, m, colMul, colAdd, blendMode, filtering) {
    if (m === void 0)
      m = new Matrix();
    if (colMul === void 0)
      colMul = color.Colors.WHITE;
    if (colAdd === void 0)
      colAdd = 2139062143;
    if (blendMode === void 0)
      blendMode = BlendMode$INHERIT_getInstance();
    if (filtering === void 0)
      filtering = true;
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    var m2 = m.clone();
    var scale = textSize / $receiver.fontSize;
    m2.pretranslate_lu1900$(x, y);
    m2.prescale_lu1900$(scale, scale);
    var dx = 0.0;
    var dy = 0.0;
    tmp$ = get_indices_0(str);
    tmp$_0 = tmp$.first;
    tmp$_1 = tmp$.last;
    tmp$_2 = tmp$.step;
    for (var n = tmp$_0; n <= tmp$_1; n += tmp$_2) {
      var c1 = str.charCodeAt(n) | 0;
      if (c1 === 10) {
        dx = 0.0;
        dy += $receiver.fontSize;
        continue;
      }var index = n + 1 | 0;
      var c2 = (index >= 0 && index <= get_lastIndex_2(str) ? str.charCodeAt(index) : unboxChar(toBoxedChar(32))) | 0;
      var glyph = $receiver.get_za3lpa$(c1);
      var tex = glyph.texture;
      ctx.batch.drawQuad_w9nimi$(ctx.getTex_9byvhi$(tex), dx + glyph.xoffset, dy + glyph.yoffset, void 0, void 0, m2, filtering, colMul, colAdd, blendMode.factors);
      var kerningOffset = (tmp$_4 = (tmp$_3 = $receiver.kernings.get_za3lpa$(BitmapFont$Kerning.Companion.buildKey_vux9f0$(c1, c2))) != null ? tmp$_3.amount : null) != null ? tmp$_4 : 0;
      dx += glyph.xadvance + kerningOffset | 0;
    }
  }
  function drawText_0($receiver, font, textSize, str, x, y, m, colMul, colAdd, blendMode, filtering) {
    if (m === void 0)
      m = new Matrix();
    if (colMul === void 0)
      colMul = color.Colors.WHITE;
    if (colAdd === void 0)
      colAdd = 2139062143;
    if (blendMode === void 0)
      blendMode = BlendMode$INHERIT_getInstance();
    if (filtering === void 0)
      filtering = true;
    drawText(font, $receiver, textSize, str, x, y, m, colMul, colAdd, blendMode, filtering);
  }
  function Bus(globalBus) {
    this.globalBus_0 = globalBus;
    this.closeables_0 = ArrayList_init_1();
  }
  function Coroutine$send_za3rmp$($this, message_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$message = message_0;
  }
  Coroutine$send_za3rmp$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$send_za3rmp$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$send_za3rmp$.prototype.constructor = Coroutine$send_za3rmp$;
  Coroutine$send_za3rmp$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.globalBus_0.send_za3rmp$(this.local$message, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Bus.prototype.send_za3rmp$ = function (message_0, continuation_0, suspended) {
    var instance = new Coroutine$send_za3rmp$(this, message_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Bus.prototype.register_nh4f0o$ = function (clazz, handler) {
    var closeable = this.globalBus_0.register_nh4f0o$(clazz, handler);
    this.closeables_0.add_11rb$(closeable);
    return closeable;
  };
  Bus.prototype.register_pdh0iq$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.bus.Bus.register_pdh0iq$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, handler) {
      return this.register_nh4f0o$(getKClass(T_0), handler);
    };
  }));
  Bus.prototype.close = function () {
    var $receiver = this.closeables_0;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).close();
    }
  };
  Bus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bus',
    interfaces: [Closeable]
  };
  function GlobalBus() {
    this.perClassHandlers = HashMap_init();
  }
  function Coroutine$send_za3rmp$_0($this, message_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$n = void 0;
    this.local$message = message_0;
  }
  Coroutine$send_za3rmp$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$send_za3rmp$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$send_za3rmp$_0.prototype.constructor = Coroutine$send_za3rmp$_0;
  Coroutine$send_za3rmp$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var clazz = Kotlin.getKClassFromExpression(this.local$message);
            if ((this.local$tmp$ = this.$this.perClassHandlers.get_11rb$(clazz)) != null) {
              var tmp$;
              this.local$n = 0;
              this.state_0 = 2;
              continue;
            } else {
              this.state_0 = 5;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$n >= this.local$tmp$.size) {
              this.state_0 = 4;
              continue;
            }
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.get_za3lpa$((tmp$ = this.local$n, this.local$n = tmp$ + 1 | 0, tmp$))(this.local$message, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  GlobalBus.prototype.send_za3rmp$ = function (message_0, continuation_0, suspended) {
    var instance = new Coroutine$send_za3rmp$_0(this, message_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  GlobalBus.prototype.forClass_0 = function (clazz) {
    var $receiver = this.perClassHandlers;
    var tmp$;
    var value = $receiver.get_11rb$(clazz);
    if (value == null) {
      var answer = ArrayList_init_1();
      $receiver.put_xwzc9p$(clazz, answer);
      tmp$ = answer;
    } else {
      tmp$ = value;
    }
    return tmp$;
  };
  function GlobalBus$register$lambda(closure$clazz, this$GlobalBus, closure$chandler) {
    return function () {
      this$GlobalBus.forClass_0(closure$clazz).remove_11rb$(closure$chandler);
      return Unit;
    };
  }
  GlobalBus.prototype.register_nh4f0o$ = function (clazz, handler) {
    var tmp$;
    var chandler = Kotlin.isType(tmp$ = handler, SuspendFunction1) ? tmp$ : throwCCE();
    this.forClass_0(clazz).add_11rb$(chandler);
    return Closeable.Companion.invoke_o14v8n$(GlobalBus$register$lambda(clazz, this, chandler));
  };
  GlobalBus.prototype.register_pdh0iq$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.bus.GlobalBus.register_pdh0iq$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, handler) {
      return this.register_nh4f0o$(getKClass(T_0), handler);
    };
  }));
  GlobalBus.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GlobalBus',
    interfaces: []
  };
  function Component() {
  }
  Component.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Component',
    interfaces: []
  };
  function attach($receiver) {
    $receiver.view.addComponent_q5itx0$($receiver);
    return $receiver;
  }
  function attach_0($receiver) {
    $receiver.view.addComponent_e2nz5r$($receiver);
    return $receiver;
  }
  function attach_1($receiver) {
    $receiver.view.addComponent_o9umex$($receiver);
    return $receiver;
  }
  function attach_2($receiver) {
    $receiver.view.addComponent_v53w79$($receiver);
    return $receiver;
  }
  function attach_3($receiver) {
    $receiver.view.addComponent_x1kvfd$($receiver);
    return $receiver;
  }
  function attach_4($receiver) {
    $receiver.view.addComponent_di2fos$($receiver);
    return $receiver;
  }
  function attach_5($receiver) {
    $receiver.view.addComponent_lbvl2b$($receiver);
    return $receiver;
  }
  function attach_6($receiver) {
    $receiver.view.addComponent_3p33e3$($receiver);
    return $receiver;
  }
  function attach_7($receiver) {
    $receiver.view.addComponent_1vvkw$($receiver);
    return $receiver;
  }
  function detach($receiver) {
    $receiver.view.removeComponent_q5itx0$($receiver);
    return $receiver;
  }
  function detach_0($receiver) {
    $receiver.view.removeComponent_e2nz5r$($receiver);
    return $receiver;
  }
  function detach_1($receiver) {
    $receiver.view.removeComponent_o9umex$($receiver);
    return $receiver;
  }
  function detach_2($receiver) {
    $receiver.view.removeComponent_v53w79$($receiver);
    return $receiver;
  }
  function detach_3($receiver) {
    $receiver.view.removeComponent_x1kvfd$($receiver);
    return $receiver;
  }
  function detach_4($receiver) {
    $receiver.view.removeComponent_di2fos$($receiver);
    return $receiver;
  }
  function detach_5($receiver) {
    $receiver.view.removeComponent_lbvl2b$($receiver);
    return $receiver;
  }
  function detach_6($receiver) {
    $receiver.view.removeComponent_3p33e3$($receiver);
    return $receiver;
  }
  function detach_7($receiver) {
    $receiver.view.removeComponent_1vvkw$($receiver);
    return $receiver;
  }
  function removeFromView($receiver) {
    $receiver.view.removeComponent_q5itx0$($receiver);
  }
  function TouchComponent() {
  }
  TouchComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'TouchComponent',
    interfaces: [Component]
  };
  function MouseComponent() {
  }
  MouseComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'MouseComponent',
    interfaces: [Component]
  };
  function KeyComponent() {
  }
  KeyComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'KeyComponent',
    interfaces: [Component]
  };
  function GamepadComponent() {
  }
  GamepadComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'GamepadComponent',
    interfaces: [Component]
  };
  function EventComponent() {
  }
  EventComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'EventComponent',
    interfaces: [Component]
  };
  function UpdateComponentWithViews() {
  }
  UpdateComponentWithViews.prototype.update_xp3vpi$ = function (views, delta) {
    this.update_vcgvf3$(views, delta.millisecondsDouble);
  };
  UpdateComponentWithViews.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'UpdateComponentWithViews',
    interfaces: [Component]
  };
  function UpdateComponent() {
  }
  UpdateComponent.prototype.update_seyb0p$ = function (delta) {
    this.update_14dthe$(delta.millisecondsDouble);
  };
  UpdateComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'UpdateComponent',
    interfaces: [Component]
  };
  function UpdateComponentV2() {
  }
  UpdateComponentV2.prototype.update_14dthe$ = function (ms) {
    this.update_seyb0p$(get_hr(TimeSpan.Companion.fromMilliseconds_14dthe$(ms)));
  };
  UpdateComponentV2.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'UpdateComponentV2',
    interfaces: [UpdateComponent]
  };
  function ResizeComponent() {
  }
  ResizeComponent.prototype.resized_m5tlkz$ = function (views, width, height, callback$default) {
    if (width === void 0)
      width = views.nativeWidth;
    if (height === void 0)
      height = views.nativeHeight;
    callback$default ? callback$default(views, width, height) : this.resized_m5tlkz$$default(views, width, height);
  };
  ResizeComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ResizeComponent',
    interfaces: [Component]
  };
  function Components() {
    this.mouse = null;
    this.key = null;
    this.gamepad = null;
    this.touch = null;
    this.event = null;
    this.updateWV = null;
    this.update = null;
    this.resize = null;
    this.other = null;
  }
  Object.defineProperty(Components.prototype, 'emouse', {
    get: function () {
      if (this.mouse == null) {
        this.mouse = ArrayList_init_1();
      }return ensureNotNull(this.mouse);
    }
  });
  Object.defineProperty(Components.prototype, 'ekey', {
    get: function () {
      if (this.key == null) {
        this.key = ArrayList_init_1();
      }return ensureNotNull(this.key);
    }
  });
  Object.defineProperty(Components.prototype, 'egamepad', {
    get: function () {
      if (this.gamepad == null) {
        this.gamepad = ArrayList_init_1();
      }return ensureNotNull(this.gamepad);
    }
  });
  Object.defineProperty(Components.prototype, 'etouch', {
    get: function () {
      if (this.touch == null) {
        this.touch = ArrayList_init_1();
      }return ensureNotNull(this.touch);
    }
  });
  Object.defineProperty(Components.prototype, 'eevent', {
    get: function () {
      if (this.event == null) {
        this.event = ArrayList_init_1();
      }return ensureNotNull(this.event);
    }
  });
  Object.defineProperty(Components.prototype, 'eupdateWV', {
    get: function () {
      if (this.updateWV == null) {
        this.updateWV = ArrayList_init_1();
      }return ensureNotNull(this.updateWV);
    }
  });
  Object.defineProperty(Components.prototype, 'eupdate', {
    get: function () {
      if (this.update == null) {
        this.update = ArrayList_init_1();
      }return ensureNotNull(this.update);
    }
  });
  Object.defineProperty(Components.prototype, 'eresize', {
    get: function () {
      if (this.resize == null) {
        this.resize = ArrayList_init_1();
      }return ensureNotNull(this.resize);
    }
  });
  Object.defineProperty(Components.prototype, 'eother', {
    get: function () {
      if (this.other == null) {
        this.other = ArrayList_init_1();
      }return ensureNotNull(this.other);
    }
  });
  Components.prototype.getArrayComponentOrNull_q5itx0$ = function (c) {
    if (Kotlin.isType(c, MouseComponent))
      return this.mouse;
    else if (Kotlin.isType(c, KeyComponent))
      return this.key;
    else if (Kotlin.isType(c, GamepadComponent))
      return this.gamepad;
    else if (Kotlin.isType(c, TouchComponent))
      return this.touch;
    else if (Kotlin.isType(c, EventComponent))
      return this.event;
    else if (Kotlin.isType(c, UpdateComponentWithViews))
      return this.updateWV;
    else if (Kotlin.isType(c, UpdateComponent))
      return this.update;
    else if (Kotlin.isType(c, ResizeComponent))
      return this.resize;
    else
      return this.other;
  };
  Components.prototype.getArrayComponent_q5itx0$ = function (c) {
    if (Kotlin.isType(c, MouseComponent))
      return this.emouse;
    else if (Kotlin.isType(c, KeyComponent))
      return this.ekey;
    else if (Kotlin.isType(c, GamepadComponent))
      return this.egamepad;
    else if (Kotlin.isType(c, TouchComponent))
      return this.etouch;
    else if (Kotlin.isType(c, EventComponent))
      return this.eevent;
    else if (Kotlin.isType(c, UpdateComponentWithViews))
      return this.eupdateWV;
    else if (Kotlin.isType(c, UpdateComponent))
      return this.eupdate;
    else if (Kotlin.isType(c, ResizeComponent))
      return this.eresize;
    else
      return this.eother;
  };
  Components.prototype.remove_q5itx0$ = function (c) {
    var tmp$;
    var tmp$_0;
    if ((tmp$ = this.getArrayComponentOrNull_q5itx0$(c)) != null) {
      var tmp$_1;
      tmp$_0 = (Kotlin.isType(tmp$_1 = tmp$, MutableCollection) ? tmp$_1 : throwCCE()).remove_11rb$(c);
    } else
      tmp$_0 = null;
    return tmp$_0;
  };
  Components.prototype.remove_e2nz5r$ = function (c) {
    var tmp$;
    return (tmp$ = this.mouse) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_o9umex$ = function (c) {
    var tmp$;
    return (tmp$ = this.key) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_v53w79$ = function (c) {
    var tmp$;
    return (tmp$ = this.gamepad) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_x1kvfd$ = function (c) {
    var tmp$;
    return (tmp$ = this.touch) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_di2fos$ = function (c) {
    var tmp$;
    return (tmp$ = this.event) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_lbvl2b$ = function (c) {
    var tmp$;
    return (tmp$ = this.updateWV) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_3p33e3$ = function (c) {
    var tmp$;
    return (tmp$ = this.update) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.remove_1vvkw$ = function (c) {
    var tmp$;
    return (tmp$ = this.resize) != null ? tmp$.remove_11rb$(c) : null;
  };
  Components.prototype.add_q5itx0$ = function (c) {
    var tmp$;
    (Kotlin.isType(tmp$ = this.getArrayComponent_q5itx0$(c), ArrayList) ? tmp$ : throwCCE()).add_11rb$(c);
    return c;
  };
  Components.prototype.add_e2nz5r$ = function (c) {
    this.emouse.add_11rb$(c);
    return c;
  };
  Components.prototype.add_o9umex$ = function (c) {
    this.ekey.add_11rb$(c);
    return c;
  };
  Components.prototype.add_v53w79$ = function (c) {
    this.egamepad.add_11rb$(c);
    return c;
  };
  Components.prototype.add_x1kvfd$ = function (c) {
    this.etouch.add_11rb$(c);
    return c;
  };
  Components.prototype.add_di2fos$ = function (c) {
    this.eevent.add_11rb$(c);
    return c;
  };
  Components.prototype.add_lbvl2b$ = function (c) {
    this.eupdateWV.add_11rb$(c);
    return c;
  };
  Components.prototype.add_3p33e3$ = function (c) {
    this.eupdate.add_11rb$(c);
    return c;
  };
  Components.prototype.add_1vvkw$ = function (c) {
    this.eresize.add_11rb$(c);
    return c;
  };
  Components.prototype.removeAll = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    (tmp$ = this.mouse) != null ? (tmp$.clear(), Unit) : null;
    (tmp$_0 = this.key) != null ? (tmp$_0.clear(), Unit) : null;
    (tmp$_1 = this.gamepad) != null ? (tmp$_1.clear(), Unit) : null;
    (tmp$_2 = this.touch) != null ? (tmp$_2.clear(), Unit) : null;
    (tmp$_3 = this.event) != null ? (tmp$_3.clear(), Unit) : null;
    (tmp$_4 = this.updateWV) != null ? (tmp$_4.clear(), Unit) : null;
    (tmp$_5 = this.update) != null ? (tmp$_5.clear(), Unit) : null;
    (tmp$_6 = this.resize) != null ? (tmp$_6.clear(), Unit) : null;
    (tmp$_7 = this.other) != null ? (tmp$_7.clear(), Unit) : null;
  };
  function Components$removeAll$lambda(closure$c) {
    return function (it) {
      var tmp$;
      return (tmp$ = Kotlin.getKClassFromExpression(it)) != null ? tmp$.equals(closure$c) : null;
    };
  }
  Components.prototype.removeAll_796cw$ = function (c) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    if (equals(c, getKClass(MouseComponent)))
      (tmp$ = this.mouse) != null ? (tmp$.clear(), Unit) : null;
    else if (equals(c, getKClass(KeyComponent)))
      (tmp$_0 = this.key) != null ? (tmp$_0.clear(), Unit) : null;
    else if (equals(c, getKClass(GamepadComponent)))
      (tmp$_1 = this.gamepad) != null ? (tmp$_1.clear(), Unit) : null;
    else if (equals(c, getKClass(TouchComponent)))
      (tmp$_2 = this.touch) != null ? (tmp$_2.clear(), Unit) : null;
    else if (equals(c, getKClass(EventComponent)))
      (tmp$_3 = this.event) != null ? (tmp$_3.clear(), Unit) : null;
    else if (equals(c, getKClass(UpdateComponentWithViews)))
      (tmp$_4 = this.updateWV) != null ? (tmp$_4.clear(), Unit) : null;
    else if (equals(c, getKClass(UpdateComponent)))
      (tmp$_5 = this.update) != null ? (tmp$_5.clear(), Unit) : null;
    else if (equals(c, getKClass(ResizeComponent)))
      (tmp$_6 = this.resize) != null ? (tmp$_6.clear(), Unit) : null;
    else
      (tmp$_7 = this.other) != null ? removeAll(tmp$_7, Components$removeAll$lambda(c)) : null;
  };
  Components.prototype.getOrCreateComponent_l9hc73$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_l9hc73$', function (T_0, isT, view, array, clazz, gen) {
    var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = gen(view);
      var element = component;
      array.add_11rb$(element);
    }return component;
  });
  Components.prototype.getOrCreateComponent_ly0s7e$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_ly0s7e$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.eother;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_ltzoox$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_ltzoox$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.emouse;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_j978fv$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_j978fv$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.ekey;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_wyd2yr$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_wyd2yr$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.egamepad;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_u87h0l$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_u87h0l$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.etouch;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_5qqq5m$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_5qqq5m$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.eevent;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_jckc2j$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_jckc2j$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.eupdateWV;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_nqnq6r$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_nqnq6r$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.eupdate;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.getOrCreateComponent_rhmp5q$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.component.Components.getOrCreateComponent_rhmp5q$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, view, clazz, gen) {
      var tmp$;
      var array = this.eresize;
      var component = this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(view);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  Components.prototype.findFirstComponentOfType_vk2s05$ = function (array, clazz) {
    var tmp$;
    var n = 0;
    while (n < array.size) {
      var it = array.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      var tmp$_0;
      if ((tmp$_0 = Kotlin.getKClassFromExpression(it)) != null ? tmp$_0.equals(clazz) : null)
        return it;
    }
    return null;
  };
  Components.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Components',
    interfaces: []
  };
  function StageComponent() {
  }
  StageComponent.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'StageComponent',
    interfaces: [Component]
  };
  function registerStageComponent$lambda(closure$componentsInStagePrev, closure$componentsInStageCur, this$registerStageComponent, closure$tempViews, closure$componentsInStage) {
    return function (it) {
      closure$componentsInStagePrev.clear();
      addAll(closure$componentsInStagePrev, closure$componentsInStageCur);
      closure$componentsInStageCur.clear();
      var stagedViews = getAllDescendantViews(this$registerStageComponent.stage, closure$tempViews);
      var tmp$;
      var n = 0;
      while (n < stagedViews.size) {
        var closure$componentsInStageCur_0 = closure$componentsInStageCur;
        var closure$componentsInStage_0 = closure$componentsInStage;
        var this$registerStageComponent_0 = this$registerStageComponent;
        var tmp$_0, tmp$_1;
        if ((tmp$_1 = (tmp$_0 = stagedViews.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$))._components) != null ? tmp$_0.eother : null) != null) {
          var tmp$_2;
          var n_0 = 0;
          while (n_0 < tmp$_1.size) {
            var it_0 = tmp$_1.get_za3lpa$((tmp$_2 = n_0, n_0 = tmp$_2 + 1 | 0, tmp$_2));
            if (Kotlin.isType(it_0, StageComponent)) {
              closure$componentsInStageCur_0.add_11rb$(it_0);
              if (!closure$componentsInStage_0.contains_11rb$(it_0)) {
                closure$componentsInStage_0.add_11rb$(it_0);
                it_0.added_gohfjx$(this$registerStageComponent_0.views);
              }}}
        }}
      var $receiver = closure$componentsInStagePrev;
      var tmp$_3;
      var n_1 = 0;
      while (n_1 < $receiver.size) {
        var closure$componentsInStageCur_1 = closure$componentsInStageCur;
        var this$registerStageComponent_1 = this$registerStageComponent;
        var it_1 = $receiver.get_za3lpa$((tmp$_3 = n_1, n_1 = tmp$_3 + 1 | 0, tmp$_3));
        if (!closure$componentsInStageCur_1.contains_11rb$(it_1)) {
          it_1.removed_gohfjx$(this$registerStageComponent_1.views);
        }}
      return Unit;
    };
  }
  function registerStageComponent($receiver) {
    var EXTRA_ID = 'Views.registerStageComponent';
    if (equals(getExtra($receiver.views, EXTRA_ID), true))
      return;
    setExtra($receiver.views, EXTRA_ID, true);
    var componentsInStagePrev = ArrayList_init_1();
    var componentsInStageCur = LinkedHashSet_init();
    var componentsInStage = LinkedHashSet_init();
    var tempViews = ArrayList_init_1();
    $receiver.onBeforeRender.invoke_qlkmfe$(registerStageComponent$lambda(componentsInStagePrev, componentsInStageCur, $receiver, tempViews, componentsInStage));
  }
  function dockedTo($receiver, anchor, scaleMode) {
    if (scaleMode === void 0)
      scaleMode = ScaleMode.Companion.NO_SCALE;
    attach_7(new DockingComponent($receiver, anchor, scaleMode));
    return $receiver;
  }
  function DockingComponent(view, anchor, scaleMode) {
    if (scaleMode === void 0)
      scaleMode = ScaleMode.Companion.NO_SCALE;
    this.view_2hlppf$_0 = view;
    this.anchor = anchor;
    this.scaleMode = scaleMode;
    this.initialViewSize = Size.Companion.invoke_lu1900$(this.view.width, this.view.height);
    this.actualVirtualSize_0 = Size.Companion.invoke_vux9f0$(0, 0);
    this.targetSize_0 = Size.Companion.invoke_vux9f0$(0, 0);
    this.view.deferWithViews_v1hos$(DockingComponent_init$lambda(this));
  }
  Object.defineProperty(DockingComponent.prototype, 'view', {
    get: function () {
      return this.view_2hlppf$_0;
    }
  });
  DockingComponent.prototype.resized_m5tlkz$$default = function (views, width, height) {
    var tmp$;
    position_1(this.view, views.actualVirtualLeft + views.actualVirtualWidth * this.anchor.sx, views.actualVirtualTop + views.actualVirtualHeight * this.anchor.sy);
    if (!equals(this.scaleMode, ScaleMode.Companion.NO_SCALE)) {
      this.actualVirtualSize_0.setTo_vux9f0$(views.actualVirtualWidth, views.actualVirtualHeight);
      var size = this.scaleMode.invoke_35cwq9$(this.initialViewSize, this.actualVirtualSize_0, this.targetSize_0);
      this.view.setSize_lu1900$(size.width, size.height);
    }this.view.invalidate();
    (tmp$ = this.view.parent) != null ? (tmp$.invalidate(), Unit) : null;
  };
  function DockingComponent_init$lambda(this$DockingComponent) {
    return function (views) {
      this$DockingComponent.resized_m5tlkz$(views, views.actualWidth, views.actualHeight);
      return Unit;
    };
  }
  DockingComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DockingComponent',
    interfaces: [ResizeComponent]
  };
  function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
  Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_0(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_0.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_0;
  Coroutine$doMouseEvent$lambda$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_0(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_0(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_0(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_0(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_1(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_1.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_1;
  Coroutine$doMouseEvent$lambda$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_1(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_1(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_1(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_1(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_2(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_2.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_2;
  Coroutine$doMouseEvent$lambda$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_2(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_2(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_2(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_2(closure$handler, it));
      return Unit;
    };
  }
  function JellyButton(view, coroutineContext, targetScale) {
    if (targetScale === void 0)
      targetScale = 1.5;
    this.view = view;
    this.coroutineContext = coroutineContext;
    this.targetScale = targetScale;
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    this.hitTest = (tmp$ = get_19(this.view, 'hitTest')) != null ? tmp$ : this.view;
    this.content = (tmp$_0 = get_19(this.view, 'content')) != null ? tmp$_0 : this.view;
    this.initialScale = (tmp$_2 = (tmp$_1 = this.content) != null ? tmp$_1.scale : null) != null ? tmp$_2 : 1.0;
    this.down = false;
    this.over = false;
    if (!equals(this.hitTest, this.content)) {
      (tmp$_3 = this.hitTest) != null ? (tmp$_3.alpha = 0.0) : null;
    }if ((tmp$_4 = this.hitTest) != null) {
      var prop = getPropertyCallableRef('over', 1, function ($receiver) {
        return $receiver.over;
      });
      var tmp$_8;
      if ((tmp$_8 = tmp$_4 != null ? get_mouse(tmp$_4) : null) != null) {
        prop.get(tmp$_8).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$_8, JellyButton_init$lambda(this)));
      }}if ((tmp$_5 = this.hitTest) != null) {
      var prop_0 = getPropertyCallableRef('out', 1, function ($receiver) {
        return $receiver.out;
      });
      var tmp$_9;
      if ((tmp$_9 = tmp$_5 != null ? get_mouse(tmp$_5) : null) != null) {
        prop_0.get(tmp$_9).add_qlkmfe$(doMouseEvent$lambda$lambda_0(tmp$_9, JellyButton_init$lambda_0(this)));
      }}if ((tmp$_6 = this.hitTest) != null) {
      var prop_1 = getPropertyCallableRef('down', 1, function ($receiver) {
        return $receiver.down;
      });
      var tmp$_10;
      if ((tmp$_10 = tmp$_6 != null ? get_mouse(tmp$_6) : null) != null) {
        prop_1.get(tmp$_10).add_qlkmfe$(doMouseEvent$lambda$lambda_1(tmp$_10, JellyButton_init$lambda_1(this)));
      }}if ((tmp$_7 = this.hitTest) != null) {
      var prop_2 = getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
        return $receiver_0.upAnywhere;
      });
      var tmp$_11;
      if ((tmp$_11 = tmp$_7 != null ? get_mouse(tmp$_7) : null) != null) {
        prop_2.get(tmp$_11).add_qlkmfe$(doMouseEvent$lambda$lambda_2(tmp$_11, JellyButton_init$lambda_2(this)));
      }}}
  function Coroutine$JellyButton$updateState$lambda(this$JellyButton_0, closure$scale_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$JellyButton = this$JellyButton_0;
    this.local$closure$scale = closure$scale_0;
  }
  Coroutine$JellyButton$updateState$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton$updateState$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton$updateState$lambda.prototype.constructor = Coroutine$JellyButton$updateState$lambda;
  Coroutine$JellyButton$updateState$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$ = this.local$this$JellyButton.content;
            var $receiver = getPropertyCallableRef('scale', 0, function ($receiver) {
              return $receiver.scale;
            }.bind(null, this.local$this$JellyButton.content), function ($receiver, value) {
              $receiver.scale = value;
            }.bind(null, this.local$this$JellyButton.content));
            var end = this.local$this$JellyButton.initialScale * this.local$closure$scale;
            this.state_0 = 2;
            this.result_0 = tween(tmp$, [new V2($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
              return _interpolate(ratio_0, l_0, r_0);
            }), false)], TimeSpan.Companion.fromMilliseconds_14dthe$(200), Easing.Companion.EASE_OUT_ELASTIC, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton$updateState$lambda(this$JellyButton_0, closure$scale_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$JellyButton$updateState$lambda(this$JellyButton_0, closure$scale_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  JellyButton.prototype.updateState_0 = function () {
    var tmp$;
    if (this.content == null)
      return;
    if (this.down)
      tmp$ = 1.0 / this.targetScale;
    else if (this.over)
      tmp$ = this.targetScale;
    else
      tmp$ = 1.0;
    var scale = tmp$;
    launchImmediately(CoroutineScope(this.coroutineContext), JellyButton$updateState$lambda(this, scale));
  };
  function Coroutine$JellyButton$onClick$lambda(closure$callback_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$JellyButton$onClick$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton$onClick$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton$onClick$lambda.prototype.constructor = Coroutine$JellyButton$onClick$lambda;
  Coroutine$JellyButton$onClick$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton$onClick$lambda(closure$callback_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$JellyButton$onClick$lambda(closure$callback_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onClick_g2bo5h$($this, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$callback = callback_0;
  }
  Coroutine$onClick_g2bo5h$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onClick_g2bo5h$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onClick_g2bo5h$.prototype.constructor = Coroutine$onClick_g2bo5h$;
  Coroutine$onClick_g2bo5h$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1;
            if ((tmp$_1 = (tmp$_0 = (tmp$ = this.$this.hitTest) != null ? get_mouse(tmp$) : null) != null ? tmp$_0._onClick : null) != null) {
              this.state_0 = 2;
              this.result_0 = addSuspend(tmp$_1, JellyButton$onClick$lambda(this.local$callback), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  JellyButton.prototype.onClick_g2bo5h$ = function (callback_0, continuation_0, suspended) {
    var instance = new Coroutine$onClick_g2bo5h$(this, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$JellyButton_init$lambda(this$JellyButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$JellyButton = this$JellyButton_0;
  }
  Coroutine$JellyButton_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton_init$lambda.prototype.constructor = Coroutine$JellyButton_init$lambda;
  Coroutine$JellyButton_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$JellyButton.over = true;
            return this.local$this$JellyButton.updateState_0(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton_init$lambda(this$JellyButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$JellyButton_init$lambda(this$JellyButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$JellyButton_init$lambda_0(this$JellyButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$JellyButton = this$JellyButton_0;
  }
  Coroutine$JellyButton_init$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton_init$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton_init$lambda_0.prototype.constructor = Coroutine$JellyButton_init$lambda_0;
  Coroutine$JellyButton_init$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$JellyButton.over = false;
            return this.local$this$JellyButton.updateState_0(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton_init$lambda_0(this$JellyButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$JellyButton_init$lambda_0(this$JellyButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$JellyButton_init$lambda_1(this$JellyButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$JellyButton = this$JellyButton_0;
  }
  Coroutine$JellyButton_init$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton_init$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton_init$lambda_1.prototype.constructor = Coroutine$JellyButton_init$lambda_1;
  Coroutine$JellyButton_init$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$JellyButton.down = true;
            return this.local$this$JellyButton.updateState_0(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton_init$lambda_1(this$JellyButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$JellyButton_init$lambda_1(this$JellyButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$JellyButton_init$lambda_2(this$JellyButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$JellyButton = this$JellyButton_0;
  }
  Coroutine$JellyButton_init$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$JellyButton_init$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$JellyButton_init$lambda_2.prototype.constructor = Coroutine$JellyButton_init$lambda_2;
  Coroutine$JellyButton_init$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$JellyButton.down = false;
            return this.local$this$JellyButton.updateState_0(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function JellyButton_init$lambda_2(this$JellyButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$JellyButton_init$lambda_2(this$JellyButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  JellyButton.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JellyButton',
    interfaces: []
  };
  function jellyButton($receiver, targetScale, continuation) {
    if (targetScale === void 0)
      targetScale = 1.5;
    return new JellyButton($receiver, continuation.context, targetScale);
  }
  function Comparator$ObjectLiteral_0(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_0.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_0.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  function SortedChildrenByComponent(view, comparator) {
    this.view_9dhzux$_0 = view;
    this.comparator = comparator;
  }
  Object.defineProperty(SortedChildrenByComponent.prototype, 'view', {
    get: function () {
      return this.view_9dhzux$_0;
    }
  });
  SortedChildrenByComponent.prototype.update_seyb0p$ = function (dt) {
    this.view.sortChildrenBy_z58j1t$(this.comparator);
  };
  SortedChildrenByComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SortedChildrenByComponent',
    interfaces: [UpdateComponentV2]
  };
  function toComparator$lambda(this$toComparator) {
    return function (a, b) {
      return Kotlin.compareTo(this$toComparator(a), this$toComparator(b));
    };
  }
  function toComparator($receiver) {
    return new Comparator$ObjectLiteral_0(toComparator$lambda($receiver));
  }
  function sortChildrenBy($receiver, selector) {
    $receiver.sortChildrenBy_z58j1t$(toComparator(selector));
  }
  function sortChildrenByY($receiver) {
    sortChildrenBy($receiver, getPropertyCallableRef('y', 1, function ($receiver) {
      return $receiver.y;
    }, function ($receiver, value) {
      $receiver.y = value;
    }));
  }
  function keepChildrenSortedBy($receiver, comparator) {
    attach_6(new SortedChildrenByComponent($receiver, comparator));
    return $receiver;
  }
  function keepChildrenSortedBy_0($receiver, selector) {
    return keepChildrenSortedBy($receiver, toComparator(selector));
  }
  function keepChildrenSortedByY($receiver) {
    return keepChildrenSortedBy_0($receiver, getPropertyCallableRef('y', 1, function ($receiver) {
      return $receiver.y;
    }, function ($receiver, value) {
      $receiver.y = value;
    }));
  }
  function GridViewList(row0, row1, cellSelector, initialRows, initialColumns, container) {
    if (container === void 0)
      container = ensureNotNull(row0.parent);
    this.row0 = row0;
    this.row1 = row1;
    this.cellSelector = cellSelector;
    this.initialRows = initialRows;
    this.initialColumns = initialColumns;
    this.container = container;
    this.rowsData_0 = ArrayList_init_1();
    this.columns_tj6afv$_0 = this.initialColumns;
    this.rows_jykov7$_0 = this.initialRows;
    this.container.removeChildren();
    this.update();
  }
  Object.defineProperty(GridViewList.prototype, 'columns', {
    get: function () {
      return this.columns_tj6afv$_0;
    },
    set: function (value) {
      this.columns_tj6afv$_0 = value;
      this.update();
    }
  });
  Object.defineProperty(GridViewList.prototype, 'rows', {
    get: function () {
      return this.rows_jykov7$_0;
    },
    set: function (value) {
      this.rows_jykov7$_0 = value;
      this.update();
    }
  });
  GridViewList.prototype.addItem_0 = function () {
    var n = this.container.numChildren;
    var item = this.row0.clone();
    this.container.plusAssign_l5rad2$(item);
    item.setMatrixInterpolated_n2skke$(n, this.row0.localMatrix, this.row1.localMatrix);
    var select = this.cellSelector(item);
    var $receiver = this.rowsData_0;
    var element = new ViewList(select.first, select.second, this.columns);
    $receiver.add_11rb$(element);
  };
  GridViewList.prototype.removeLastItem_0 = function () {
    var tmp$;
    (tmp$ = this.container.lastChild) != null ? (tmp$.removeFromParent(), Unit) : null;
    this.rowsData_0.removeAt_za3lpa$(this.rowsData_0.size - 1 | 0);
  };
  GridViewList.prototype.update = function () {
    while (this.rowsData_0.size < this.rows)
      this.addItem_0();
    while (this.rowsData_0.size > this.rows)
      this.removeLastItem_0();
    var $receiver = this.rowsData_0;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).length = this.columns;
    }
  };
  Object.defineProperty(GridViewList.prototype, 'length', {
    get: function () {
      return Kotlin.imul(this.columns, this.rows);
    }
  });
  GridViewList.prototype.get_za3lpa$ = function (row) {
    return this.rowsData_0.get_za3lpa$(row);
  };
  GridViewList.prototype.get_vux9f0$ = function (row, column) {
    return this.get_za3lpa$(row).get_za3lpa$(column);
  };
  GridViewList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GridViewList',
    interfaces: []
  };
  function ViewList(view0, view1, initialCount, container) {
    if (container === void 0)
      container = ensureNotNull(view0.parent);
    this.view0 = view0;
    this.view1 = view1;
    this.initialCount = initialCount;
    this.container = container;
    this.onRemovedView = new Signal();
    this.onAddedView = new Signal();
    var tmp$;
    this.container.removeChildren();
    tmp$ = this.initialCount;
    for (var n = 0; n < tmp$; n++)
      this.addItem_0();
  }
  function ViewList$ChangeEvent(view, index) {
    this.view = view;
    this.index = index;
  }
  ViewList$ChangeEvent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ChangeEvent',
    interfaces: []
  };
  ViewList$ChangeEvent.prototype.component1 = function () {
    return this.view;
  };
  ViewList$ChangeEvent.prototype.component2 = function () {
    return this.index;
  };
  ViewList$ChangeEvent.prototype.copy_pwlnko$ = function (view, index) {
    return new ViewList$ChangeEvent(view === void 0 ? this.view : view, index === void 0 ? this.index : index);
  };
  ViewList$ChangeEvent.prototype.toString = function () {
    return 'ChangeEvent(view=' + Kotlin.toString(this.view) + (', index=' + Kotlin.toString(this.index)) + ')';
  };
  ViewList$ChangeEvent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.view) | 0;
    result = result * 31 + Kotlin.hashCode(this.index) | 0;
    return result;
  };
  ViewList$ChangeEvent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.view, other.view) && Kotlin.equals(this.index, other.index)))));
  };
  Object.defineProperty(ViewList.prototype, 'children', {
    get: function () {
      return this.container.children;
    }
  });
  ViewList.prototype.addItem_0 = function () {
    var n = this.container.numChildren;
    var item = this.view0.clone();
    this.container.plusAssign_l5rad2$(item);
    item.setMatrixInterpolated_n2skke$(n, this.view0.localMatrix, this.view1.localMatrix);
    this.onAddedView.invoke_11rb$(new ViewList$ChangeEvent(item, n));
  };
  ViewList.prototype.removeLastItem_0 = function () {
    var lastIndex = this.container.numChildren - 1 | 0;
    var item = this.container.lastChild;
    if (item != null) {
      item.removeFromParent();
      this.onRemovedView.invoke_11rb$(new ViewList$ChangeEvent(item, lastIndex));
    }};
  Object.defineProperty(ViewList.prototype, 'length', {
    get: function () {
      return this.container.numChildren;
    },
    set: function (value) {
      while (value > this.length)
        this.addItem_0();
      while (value < this.length)
        this.removeLastItem_0();
    }
  });
  ViewList.prototype.get_za3lpa$ = function (index) {
    return this.container.getChildAtOrNull_za3lpa$(index);
  };
  ViewList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewList',
    interfaces: []
  };
  function Coroutine$readBitmapFontWithMipmaps($receiver_0, imageFormat_0, mipmaps_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$imageFormat = imageFormat_0;
    this.local$mipmaps = mipmaps_0;
  }
  Coroutine$readBitmapFontWithMipmaps.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBitmapFontWithMipmaps.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBitmapFontWithMipmaps.prototype.constructor = Coroutine$readBitmapFontWithMipmaps;
  Coroutine$readBitmapFontWithMipmaps.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$imageFormat === void 0)
              this.local$imageFormat = format.RegisteredImageFormats;
            if (this.local$mipmaps === void 0)
              this.local$mipmaps = true;
            this.state_0 = 2;
            this.result_0 = readBitmapFont(this.local$$receiver, this.local$imageFormat, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.result_0;
            mipmaps($receiver.atlas, this.local$mipmaps);
            return $receiver;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readBitmapFontWithMipmaps($receiver_0, imageFormat_0, mipmaps_0, continuation_0, suspended) {
    var instance = new Coroutine$readBitmapFontWithMipmaps($receiver_0, imageFormat_0, mipmaps_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Html() {
    Html_instance = this;
  }
  function Html$Alignment(anchor) {
    Html$Alignment$Companion_getInstance();
    this.anchor = anchor;
  }
  function Html$Alignment$Companion() {
    Html$Alignment$Companion_instance = this;
    this.LEFT = new Html$Alignment(Anchor.Companion.TOP_LEFT);
    this.CENTER = new Html$Alignment(Anchor.Companion.TOP_CENTER);
    this.RIGHT = new Html$Alignment(Anchor.Companion.TOP_RIGHT);
    this.JUSTIFIED = new Html$Alignment(Anchor.Companion.TOP_LEFT);
    this.MIDDLE_LEFT = new Html$Alignment(Anchor.Companion.MIDDLE_LEFT);
    this.MIDDLE_CENTER = new Html$Alignment(Anchor.Companion.MIDDLE_CENTER);
    this.MIDDLE_RIGHT = new Html$Alignment(Anchor.Companion.MIDDLE_RIGHT);
    this.BOTTOM_LEFT = new Html$Alignment(Anchor.Companion.BOTTOM_LEFT);
    this.BOTTOM_CENTER = new Html$Alignment(Anchor.Companion.BOTTOM_CENTER);
    this.BOTTOM_RIGHT = new Html$Alignment(Anchor.Companion.BOTTOM_RIGHT);
  }
  Html$Alignment$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Html$Alignment$Companion_instance = null;
  function Html$Alignment$Companion_getInstance() {
    if (Html$Alignment$Companion_instance === null) {
      new Html$Alignment$Companion();
    }return Html$Alignment$Companion_instance;
  }
  Html$Alignment.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Alignment',
    interfaces: []
  };
  Html$Alignment.prototype.component1 = function () {
    return this.anchor;
  };
  Html$Alignment.prototype.copy_72irp7$ = function (anchor) {
    return new Html$Alignment(anchor === void 0 ? this.anchor : anchor);
  };
  Html$Alignment.prototype.toString = function () {
    return 'Alignment(anchor=' + Kotlin.toString(this.anchor) + ')';
  };
  Html$Alignment.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.anchor) | 0;
    return result;
  };
  Html$Alignment.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.anchor, other.anchor))));
  };
  function Html$FontFace() {
  }
  function Html$FontFace$Named(name) {
    this.name = name;
  }
  Html$FontFace$Named.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Named',
    interfaces: [Html$FontFace]
  };
  Html$FontFace$Named.prototype.component1 = function () {
    return this.name;
  };
  Html$FontFace$Named.prototype.copy_61zpoe$ = function (name) {
    return new Html$FontFace$Named(name === void 0 ? this.name : name);
  };
  Html$FontFace$Named.prototype.toString = function () {
    return 'Named(name=' + Kotlin.toString(this.name) + ')';
  };
  Html$FontFace$Named.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    return result;
  };
  Html$FontFace$Named.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.name, other.name))));
  };
  function Html$FontFace$Bitmap(font) {
    this.font = font;
  }
  Html$FontFace$Bitmap.prototype.getBounds_1y5lg$ = function (text, format, out) {
    getBounds(this.font, text, format, out);
  };
  Html$FontFace$Bitmap.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bitmap',
    interfaces: [Html$MetricsProvider, Html$FontFace]
  };
  Html$FontFace$Bitmap.prototype.component1 = function () {
    return this.font;
  };
  Html$FontFace$Bitmap.prototype.copy_cxq5x$ = function (font) {
    return new Html$FontFace$Bitmap(font === void 0 ? this.font : font);
  };
  Html$FontFace$Bitmap.prototype.toString = function () {
    return 'Bitmap(font=' + Kotlin.toString(this.font) + ')';
  };
  Html$FontFace$Bitmap.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.font) | 0;
    return result;
  };
  Html$FontFace$Bitmap.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.font, other.font))));
  };
  Html$FontFace.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'FontFace',
    interfaces: []
  };
  function Html$Format(parent, color, face, size, letterSpacing, kerning, align) {
    if (parent === void 0)
      parent = null;
    if (color === void 0)
      color = null;
    if (face === void 0)
      face = null;
    if (size === void 0)
      size = null;
    if (letterSpacing === void 0)
      letterSpacing = null;
    if (kerning === void 0)
      kerning = null;
    if (align === void 0)
      align = null;
    this.parent_ihqhan$_0 = parent;
    this.color = color;
    this.face = face;
    this.size = size;
    this.letterSpacing = letterSpacing;
    this.kerning = kerning;
    this.align = align;
    this.computedFace_asvglt$_0 = new Computed(getPropertyCallableRef('face', 1, function ($receiver) {
      return $receiver.face;
    }, function ($receiver, value) {
      $receiver.face = value;
    }), Html$Format$computedFace$lambda);
    this.computedSize_b06d9p$_0 = new Computed(getPropertyCallableRef('size', 1, function ($receiver) {
      return $receiver.size;
    }, function ($receiver, value) {
      $receiver.size = value;
    }), Html$Format$computedSize$lambda);
    this.computedLetterSpacing_9ivxe1$_0 = new Computed(getPropertyCallableRef('letterSpacing', 1, function ($receiver) {
      return $receiver.letterSpacing;
    }, function ($receiver, value) {
      $receiver.letterSpacing = value;
    }), Html$Format$computedLetterSpacing$lambda);
    this.computedKerning_uyqaje$_0 = new Computed(getPropertyCallableRef('kerning', 1, function ($receiver) {
      return $receiver.kerning;
    }, function ($receiver, value) {
      $receiver.kerning = value;
    }), Html$Format$computedKerning$lambda);
    this.computedAlign_mhjfun$_0 = new Computed(getPropertyCallableRef('align', 1, function ($receiver) {
      return $receiver.align;
    }, function ($receiver, value) {
      $receiver.align = value;
    }), Html$Format$computedAlign$lambda);
  }
  Object.defineProperty(Html$Format.prototype, 'parent', {
    get: function () {
      return this.parent_ihqhan$_0;
    },
    set: function (parent) {
      this.parent_ihqhan$_0 = parent;
    }
  });
  Object.defineProperty(Html$Format.prototype, 'computedColor', {
    get: function () {
      var tmp$, tmp$_0, tmp$_1;
      return (tmp$_1 = (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.computedColor : null) != null ? tmp$_0 : this.color) != null ? tmp$_1 : color.Colors.WHITE;
    }
  });
  var Html$Format$computedFace_metadata = new PropertyMetadata('computedFace');
  Object.defineProperty(Html$Format.prototype, 'computedFace', {
    get: function () {
      return this.computedFace_asvglt$_0.getValue_608w9m$(this, Html$Format$computedFace_metadata);
    }
  });
  var Html$Format$computedSize_metadata = new PropertyMetadata('computedSize');
  Object.defineProperty(Html$Format.prototype, 'computedSize', {
    get: function () {
      return this.computedSize_b06d9p$_0.getValue_608w9m$(this, Html$Format$computedSize_metadata);
    }
  });
  var Html$Format$computedLetterSpacing_metadata = new PropertyMetadata('computedLetterSpacing');
  Object.defineProperty(Html$Format.prototype, 'computedLetterSpacing', {
    get: function () {
      return this.computedLetterSpacing_9ivxe1$_0.getValue_608w9m$(this, Html$Format$computedLetterSpacing_metadata);
    }
  });
  var Html$Format$computedKerning_metadata = new PropertyMetadata('computedKerning');
  Object.defineProperty(Html$Format.prototype, 'computedKerning', {
    get: function () {
      return this.computedKerning_uyqaje$_0.getValue_608w9m$(this, Html$Format$computedKerning_metadata);
    }
  });
  var Html$Format$computedAlign_metadata = new PropertyMetadata('computedAlign');
  Object.defineProperty(Html$Format.prototype, 'computedAlign', {
    get: function () {
      return this.computedAlign_mhjfun$_0.getValue_608w9m$(this, Html$Format$computedAlign_metadata);
    }
  });
  Html$Format.prototype.consolidate = function () {
    return new Html$Format(null, this.computedColor, this.computedFace, this.computedSize, this.computedLetterSpacing, this.computedKerning, this.computedAlign);
  };
  function Html$Format$computedFace$lambda() {
    return new Html$FontFace$Bitmap(get_debugBmpFont());
  }
  function Html$Format$computedSize$lambda() {
    return 16;
  }
  function Html$Format$computedLetterSpacing$lambda() {
    return 0.0;
  }
  function Html$Format$computedKerning$lambda() {
    return 0;
  }
  function Html$Format$computedAlign$lambda() {
    return Html$Alignment$Companion_getInstance().LEFT;
  }
  Html$Format.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Format',
    interfaces: [Computed$WithParent]
  };
  Html$Format.prototype.component1 = function () {
    return this.parent;
  };
  Html$Format.prototype.component2 = function () {
    return this.color;
  };
  Html$Format.prototype.component3 = function () {
    return this.face;
  };
  Html$Format.prototype.component4 = function () {
    return this.size;
  };
  Html$Format.prototype.component5 = function () {
    return this.letterSpacing;
  };
  Html$Format.prototype.component6 = function () {
    return this.kerning;
  };
  Html$Format.prototype.component7 = function () {
    return this.align;
  };
  Html$Format.prototype.copy_jk8d6g$ = function (parent, color, face, size, letterSpacing, kerning, align) {
    return new Html$Format(parent === void 0 ? this.parent : parent, color === void 0 ? this.color : color, face === void 0 ? this.face : face, size === void 0 ? this.size : size, letterSpacing === void 0 ? this.letterSpacing : letterSpacing, kerning === void 0 ? this.kerning : kerning, align === void 0 ? this.align : align);
  };
  Html$Format.prototype.toString = function () {
    return 'Format(parent=' + Kotlin.toString(this.parent) + (', color=' + Kotlin.toString(this.color)) + (', face=' + Kotlin.toString(this.face)) + (', size=' + Kotlin.toString(this.size)) + (', letterSpacing=' + Kotlin.toString(this.letterSpacing)) + (', kerning=' + Kotlin.toString(this.kerning)) + (', align=' + Kotlin.toString(this.align)) + ')';
  };
  Html$Format.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.parent) | 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    result = result * 31 + Kotlin.hashCode(this.face) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.letterSpacing) | 0;
    result = result * 31 + Kotlin.hashCode(this.kerning) | 0;
    result = result * 31 + Kotlin.hashCode(this.align) | 0;
    return result;
  };
  Html$Format.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.parent, other.parent) && Kotlin.equals(this.color, other.color) && Kotlin.equals(this.face, other.face) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.letterSpacing, other.letterSpacing) && Kotlin.equals(this.kerning, other.kerning) && Kotlin.equals(this.align, other.align)))));
  };
  function Html$MetricsProvider() {
  }
  function Html$MetricsProvider$Identity() {
    Html$MetricsProvider$Identity_instance = this;
  }
  Html$MetricsProvider$Identity.prototype.getBounds_1y5lg$ = function (text, format, out) {
    out.setTo_tjonv8$(0, 0, text.length, 1);
  };
  Html$MetricsProvider$Identity.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Identity',
    interfaces: [Html$MetricsProvider]
  };
  var Html$MetricsProvider$Identity_instance = null;
  function Html$MetricsProvider$Identity_getInstance() {
    if (Html$MetricsProvider$Identity_instance === null) {
      new Html$MetricsProvider$Identity();
    }return Html$MetricsProvider$Identity_instance;
  }
  Html$MetricsProvider.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'MetricsProvider',
    interfaces: []
  };
  function Html$PositionContext(provider, bounds, x, y) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    this.provider = provider;
    this.bounds = bounds;
    this.x = x;
    this.y = y;
  }
  Html$PositionContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PositionContext',
    interfaces: []
  };
  Html$PositionContext.prototype.component1 = function () {
    return this.provider;
  };
  Html$PositionContext.prototype.component2 = function () {
    return this.bounds;
  };
  Html$PositionContext.prototype.component3 = function () {
    return this.x;
  };
  Html$PositionContext.prototype.component4 = function () {
    return this.y;
  };
  Html$PositionContext.prototype.copy_lvkdjn$ = function (provider, bounds, x, y) {
    return new Html$PositionContext(provider === void 0 ? this.provider : provider, bounds === void 0 ? this.bounds : bounds, x === void 0 ? this.x : x, y === void 0 ? this.y : y);
  };
  Html$PositionContext.prototype.toString = function () {
    return 'PositionContext(provider=' + Kotlin.toString(this.provider) + (', bounds=' + Kotlin.toString(this.bounds)) + (', x=' + Kotlin.toString(this.x)) + (', y=' + Kotlin.toString(this.y)) + ')';
  };
  Html$PositionContext.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.provider) | 0;
    result = result * 31 + Kotlin.hashCode(this.bounds) | 0;
    result = result * 31 + Kotlin.hashCode(this.x) | 0;
    result = result * 31 + Kotlin.hashCode(this.y) | 0;
    return result;
  };
  Html$PositionContext.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.provider, other.provider) && Kotlin.equals(this.bounds, other.bounds) && Kotlin.equals(this.x, other.x) && Kotlin.equals(this.y, other.y)))));
  };
  function Html$Span(format, text) {
    this.format = format;
    this.text = text;
    this.$delegate_csjjaa$_0 = new Extra$Mixin();
    this.bounds = Rectangle.Companion.invoke();
  }
  Html$Span.prototype.doPositioning_tz5d0u$ = function (ctx) {
    ctx.provider.getBounds_1y5lg$(this.text, this.format, this.bounds);
    this.bounds.x = this.bounds.x + ctx.x;
    ctx.x = ctx.x + this.bounds.width;
  };
  Object.defineProperty(Html$Span.prototype, 'extra', {
    get: function () {
      return this.$delegate_csjjaa$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_csjjaa$_0.extra = tmp$;
    }
  });
  Html$Span.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Span',
    interfaces: [Extra]
  };
  Html$Span.prototype.component1 = function () {
    return this.format;
  };
  Html$Span.prototype.component2 = function () {
    return this.text;
  };
  Html$Span.prototype.copy_h7bzz5$ = function (format, text) {
    return new Html$Span(format === void 0 ? this.format : format, text === void 0 ? this.text : text);
  };
  Html$Span.prototype.toString = function () {
    return 'Span(format=' + Kotlin.toString(this.format) + (', text=' + Kotlin.toString(this.text)) + ')';
  };
  Html$Span.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.format) | 0;
    result = result * 31 + Kotlin.hashCode(this.text) | 0;
    return result;
  };
  Html$Span.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.format, other.format) && Kotlin.equals(this.text, other.text)))));
  };
  function Html$Line(spans) {
    if (spans === void 0) {
      spans = ArrayList_init_1();
    }this.spans = spans;
    this.$delegate_csexho$_0 = new Extra$Mixin();
    this.format = new Html$Format();
    this.bounds = Rectangle.Companion.invoke();
  }
  Object.defineProperty(Html$Line.prototype, 'firstNonEmptySpan', {
    get: function () {
      var $receiver = this.spans;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.text.length > 0) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }}
        firstOrNull$result = null;
      }
       while (false);
      return firstOrNull$result;
    }
  });
  Html$Line.prototype.doPositioning_tz5d0u$ = function (ctx) {
    ctx.x = ctx.bounds.x;
    var $receiver = this.spans;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).doPositioning_tz5d0u$(ctx);
    }
    var $receiver_0 = this.spans;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item.bounds);
    }
    bounds(destination, this.bounds);
    var restoreY = this.bounds.y;
    this.bounds.setToAnchoredRectangle_7qw0rf$(this.bounds, this.format.computedAlign.anchor, ctx.bounds);
    this.bounds.y = restoreY;
    var sx = {v: this.bounds.x};
    var $receiver_1 = this.spans;
    var tmp$_1;
    var n_0 = 0;
    while (n_0 < $receiver_1.size) {
      var v = $receiver_1.get_za3lpa$((tmp$_1 = n_0, n_0 = tmp$_1 + 1 | 0, tmp$_1));
      v.bounds.x = sx.v;
      sx.v += v.bounds.width;
    }
    ctx.x = ctx.bounds.x;
    ctx.y = ctx.y + this.bounds.height;
  };
  Object.defineProperty(Html$Line.prototype, 'extra', {
    get: function () {
      return this.$delegate_csexho$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_csexho$_0.extra = tmp$;
    }
  });
  Html$Line.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Line',
    interfaces: [Extra]
  };
  Html$Line.prototype.component1 = function () {
    return this.spans;
  };
  Html$Line.prototype.copy_drxq9z$ = function (spans) {
    return new Html$Line(spans === void 0 ? this.spans : spans);
  };
  Html$Line.prototype.toString = function () {
    return 'Line(spans=' + Kotlin.toString(this.spans) + ')';
  };
  Html$Line.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.spans) | 0;
    return result;
  };
  Html$Line.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.spans, other.spans))));
  };
  function Html$Paragraph(lines) {
    if (lines === void 0) {
      lines = ArrayList_init_1();
    }this.lines = lines;
    this.$delegate_uin3h2$_0 = new Extra$Mixin();
    this.bounds = Rectangle.Companion.invoke();
  }
  Object.defineProperty(Html$Paragraph.prototype, 'firstNonEmptyLine', {
    get: function () {
      var $receiver = this.lines;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.firstNonEmptySpan != null) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }}
        firstOrNull$result = null;
      }
       while (false);
      return firstOrNull$result;
    }
  });
  Html$Paragraph.prototype.doPositioning_tz5d0u$ = function (ctx) {
    var $receiver = this.lines;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).doPositioning_tz5d0u$(ctx);
    }
    var $receiver_0 = this.lines;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item.bounds);
    }
    bounds(destination, this.bounds);
    ctx.x = this.bounds.left;
    ctx.y = this.bounds.bottom;
  };
  Object.defineProperty(Html$Paragraph.prototype, 'extra', {
    get: function () {
      return this.$delegate_uin3h2$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_uin3h2$_0.extra = tmp$;
    }
  });
  Html$Paragraph.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Paragraph',
    interfaces: [Extra]
  };
  Html$Paragraph.prototype.component1 = function () {
    return this.lines;
  };
  Html$Paragraph.prototype.copy_dnyyn1$ = function (lines) {
    return new Html$Paragraph(lines === void 0 ? this.lines : lines);
  };
  Html$Paragraph.prototype.toString = function () {
    return 'Paragraph(lines=' + Kotlin.toString(this.lines) + ')';
  };
  Html$Paragraph.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.lines) | 0;
    return result;
  };
  Html$Paragraph.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.lines, other.lines))));
  };
  function Html$Document(paragraphs) {
    if (paragraphs === void 0) {
      paragraphs = ArrayList_init_1();
    }this.paragraphs = paragraphs;
    this.$delegate_is0v8z$_0 = new Extra$Mixin();
    this.defaultFormat = new Html$Format();
    this.xml = Xml('');
    this.bounds = Rectangle.Companion.invoke();
  }
  Object.defineProperty(Html$Document.prototype, 'text', {
    get: function () {
      var $receiver = this.xml.text;
      var tmp$;
      return trim(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : throwCCE()).toString();
    }
  });
  Object.defineProperty(Html$Document.prototype, 'firstNonEmptyParagraph', {
    get: function () {
      var $receiver = this.paragraphs;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.firstNonEmptyLine != null) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }}
        firstOrNull$result = null;
      }
       while (false);
      return firstOrNull$result;
    }
  });
  Object.defineProperty(Html$Document.prototype, 'firstNonEmptySpan', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.firstNonEmptyParagraph) != null ? tmp$.firstNonEmptyLine : null) != null ? tmp$_0.firstNonEmptySpan : null;
    }
  });
  Object.defineProperty(Html$Document.prototype, 'firstFormat', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.firstNonEmptySpan) != null ? tmp$.format : null) != null ? tmp$_0 : new Html$Format();
    }
  });
  Object.defineProperty(Html$Document.prototype, 'allSpans', {
    get: function () {
      var $receiver = this.paragraphs;
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var list = element.lines;
        addAll(destination, list);
      }
      var destination_0 = ArrayList_init_1();
      var tmp$_0;
      tmp$_0 = destination.iterator();
      while (tmp$_0.hasNext()) {
        var element_0 = tmp$_0.next();
        var list_0 = element_0.spans;
        addAll(destination_0, list_0);
      }
      return destination_0;
    }
  });
  Html$Document.prototype.doPositioning_90chdb$ = function (gp, bounds_0) {
    var ctx = new Html$PositionContext(gp, bounds_0);
    var $receiver = this.paragraphs;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).doPositioning_tz5d0u$(ctx);
    }
    var $receiver_0 = this.paragraphs;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item.bounds);
    }
    bounds(destination, this.bounds);
  };
  Object.defineProperty(Html$Document.prototype, 'extra', {
    get: function () {
      return this.$delegate_is0v8z$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_is0v8z$_0.extra = tmp$;
    }
  });
  Html$Document.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Document',
    interfaces: [Extra]
  };
  Html$Document.prototype.component1 = function () {
    return this.paragraphs;
  };
  Html$Document.prototype.copy_ifs9y5$ = function (paragraphs) {
    return new Html$Document(paragraphs === void 0 ? this.paragraphs : paragraphs);
  };
  Html$Document.prototype.toString = function () {
    return 'Document(paragraphs=' + Kotlin.toString(this.paragraphs) + ')';
  };
  Html$Document.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.paragraphs) | 0;
    return result;
  };
  Html$Document.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.paragraphs, other.paragraphs))));
  };
  function Html$HtmlParser() {
    this.document = new Html$Document();
    this.currentLine = new Html$Line();
    this.currentParagraph = new Html$Paragraph();
  }
  Html$HtmlParser.prototype.get_isDisplayBlock_byavcz$ = function ($receiver) {
    return equals($receiver.name, 'p') || equals($receiver.name, 'div');
  };
  Html$HtmlParser.prototype.emitText_h7bzz5$ = function (format, text) {
    if (this.currentLine.spans.isEmpty()) {
      this.currentLine.format = new Html$Format(format);
    }var $receiver = this.currentLine.spans;
    var element = new Html$Span(new Html$Format(format), text);
    $receiver.add_11rb$(element);
  };
  Html$HtmlParser.prototype.emitEndOfLine_ktnn5$ = function (format) {
    if (!this.currentLine.spans.isEmpty()) {
      var $receiver = this.currentParagraph.lines;
      var element = this.currentLine;
      $receiver.add_11rb$(element);
      var $receiver_0 = this.document.paragraphs;
      var element_0 = this.currentParagraph;
      $receiver_0.add_11rb$(element_0);
      this.currentParagraph = new Html$Paragraph();
      this.currentLine = new Html$Line();
    }};
  Html$HtmlParser.prototype.parse_tdggph$ = function (xml, format) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    if (get_isText(xml))
      this.emitText_h7bzz5$(format, xml.text);
    else if (!get_isComment(xml))
      if (get_isNode(xml)) {
        var block = this.get_isDisplayBlock_byavcz$(xml);
        switch (xml.str_puj7f4$('align').toLowerCase()) {
          case 'center':
            tmp$ = Html$Alignment$Companion_getInstance().CENTER;
            break;
          case 'left':
            tmp$ = Html$Alignment$Companion_getInstance().LEFT;
            break;
          case 'right':
            tmp$ = Html$Alignment$Companion_getInstance().RIGHT;
            break;
          case 'jusitifed':
            tmp$ = Html$Alignment$Companion_getInstance().JUSTIFIED;
            break;
          default:tmp$ = format.align;
            break;
        }
        format.align = tmp$;
        var face = xml.strNull_61zpoe$('face');
        format.face = face != null ? new Html$FontFace$Named(face) : format.face;
        format.size = (tmp$_0 = xml.intNull_61zpoe$('size')) != null ? tmp$_0 : format.size;
        format.letterSpacing = (tmp$_1 = xml.doubleNull_61zpoe$('letterSpacing')) != null ? tmp$_1 : format.letterSpacing;
        format.kerning = (tmp$_2 = xml.intNull_61zpoe$('kerning')) != null ? tmp$_2 : format.kerning;
        format.color = color.Colors.get_61zpoe$((tmp$_3 = xml.strNull_61zpoe$('color')) != null ? tmp$_3 : 'white');
        var $receiver = xml.allChildrenNoComments;
        var tmp$_4;
        var n = 0;
        while (n < $receiver.size) {
          this.parse_tdggph$($receiver.get_za3lpa$((tmp$_4 = n, n = tmp$_4 + 1 | 0, tmp$_4)), new Html$Format(format));
        }
        if (block) {
          this.emitEndOfLine_ktnn5$(format);
        }}return format;
  };
  Html$HtmlParser.prototype.parse_61zpoe$ = function (html) {
    var xml = Xml(html);
    this.document.xml = xml;
    var format = this.parse_tdggph$(xml, this.document.defaultFormat);
    this.emitEndOfLine_ktnn5$(format);
  };
  Html$HtmlParser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HtmlParser',
    interfaces: []
  };
  Html.prototype.parse_61zpoe$ = function (html) {
    var $receiver = new Html$HtmlParser();
    $receiver.parse_61zpoe$(html);
    return $receiver.document;
  };
  Html.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Html',
    interfaces: []
  };
  var Html_instance = null;
  function Html_getInstance() {
    if (Html_instance === null) {
      new Html();
    }return Html_instance;
  }
  function ConstantTextSource(text) {
    this.text = text;
  }
  ConstantTextSource.prototype.getText_7lrhho$ = function (language) {
    return this.text;
  };
  ConstantTextSource.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ConstantTextSource',
    interfaces: [TextSource]
  };
  function TextContainer() {
  }
  TextContainer.prototype.updateText_7lrhho$ = function (language) {
  };
  TextContainer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'TextContainer',
    interfaces: []
  };
  function TextSource() {
  }
  TextSource.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'TextSource',
    interfaces: []
  };
  function toTextSource($receiver) {
    return new ConstantTextSource($receiver);
  }
  function extraLanguage$lambda() {
    return Language.Companion.CURRENT;
  }
  var extraLanguage;
  var extraLanguage_metadata = new PropertyMetadata('extraLanguage');
  function get_extraLanguage($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = extraLanguage.name) != null ? tmp$ : extraLanguage_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = extraLanguage.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = extraLanguage.name) != null ? tmp$_3 : extraLanguage_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_extraLanguage($receiver, extraLanguage_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = extraLanguage.name) != null ? tmp$ : extraLanguage_metadata.callableName, (tmp$_0 = extraLanguage_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function set_language$lambda(closure$value) {
    return function (it) {
      if (Kotlin.isType(it, TextContainer))
        it.updateText_7lrhho$(closure$value);
      return Unit;
    };
  }
  function get_language($receiver) {
    return get_extraLanguage($receiver);
  }
  function set_language($receiver, value) {
    set_extraLanguage($receiver, value);
    foreachDescendant($receiver.stage, set_language$lambda(value));
  }
  function toExtString$lambda(it) {
    return toExtString(it);
  }
  function toExtString($receiver) {
    if (Kotlin.isType($receiver, CompoundShape))
      return 'CompoundShape(' + joinToString($receiver.components, ', ', void 0, void 0, void 0, void 0, toExtString$lambda) + ')';
    else if (Kotlin.isType($receiver, FillShape))
      return $receiver.toString();
    else if (Kotlin.isType($receiver, Object.getPrototypeOf(vector.EmptyShape).constructor))
      return $receiver.toString();
    else if (Kotlin.isType($receiver, PolylineShape))
      return $receiver.toString();
    else if (Kotlin.isType($receiver, TextShape))
      return $receiver.toString();
    else if (Kotlin.isType($receiver, StyledShape))
      return $receiver.toString();
    else {
      throw new NotImplementedError_init('An operation is not implemented: ' + $receiver.toString());
    }
  }
  function drag$lambda($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(DragComponent);
    var tmp$;
    var array = $this.etouch;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new DragComponent($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, DragComponent) ? tmp$ : throwCCE();
  }
  var drag;
  var drag_metadata = new PropertyMetadata('drag');
  function get_drag($receiver) {
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = drag.name) != null ? tmp$ : drag_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = drag.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = drag.name) != null ? tmp$_3 : drag_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  }
  function onDragStart($receiver, handler, continuation) {
    var tmp$_1, tmp$_2;
    (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragStart : null) != null ? addSuspend_0(tmp$_2, continuation.context, handler) : null;
    return $receiver;
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onDragStart_75bvmw$', wrapFunction(function () {
    var get_drag = _.com.soywiz.korge.input.get_drag_gohfi1$;
    var addSuspend = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.addSuspend_w4tsgb$;
    return function ($receiver, handler, continuation) {
      var tmp$_1, tmp$_2;
      (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragStart : null) != null ? addSuspend(tmp$_2, Kotlin.coroutineReceiver().context, handler) : null;
      return $receiver;
    };
  }));
  function onDragEnd($receiver, handler, continuation) {
    var tmp$_1, tmp$_2;
    (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragEnd : null) != null ? addSuspend_0(tmp$_2, continuation.context, handler) : null;
    return $receiver;
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onDragEnd_75bvmw$', wrapFunction(function () {
    var get_drag = _.com.soywiz.korge.input.get_drag_gohfi1$;
    var addSuspend = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.addSuspend_w4tsgb$;
    return function ($receiver, handler, continuation) {
      var tmp$_1, tmp$_2;
      (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragEnd : null) != null ? addSuspend(tmp$_2, Kotlin.coroutineReceiver().context, handler) : null;
      return $receiver;
    };
  }));
  function onDragMove($receiver, handler, continuation) {
    var tmp$_1, tmp$_2;
    (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragMove : null) != null ? addSuspend_0(tmp$_2, continuation.context, handler) : null;
    return $receiver;
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onDragMove_75bvmw$', wrapFunction(function () {
    var get_drag = _.com.soywiz.korge.input.get_drag_gohfi1$;
    var addSuspend = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.addSuspend_w4tsgb$;
    return function ($receiver, handler, continuation) {
      var tmp$_1, tmp$_2;
      (tmp$_2 = (tmp$_1 = $receiver != null ? get_drag($receiver) : null) != null ? tmp$_1.onDragMove : null) != null ? addSuspend(tmp$_2, Kotlin.coroutineReceiver().context, handler) : null;
      return $receiver;
    };
  }));
  function DragComponent(view) {
    this.view_szbxys$_0 = view;
    this.dragging_zm7m3$_de4qpo$_0 = new Extra$Property('DragComponent.dragging', DragComponent$dragging$lambda);
    this.info = new DragComponent$Info();
    this.onDragStart = new Signal();
    this.onDragMove = new Signal();
    this.onDragEnd = new Signal();
  }
  Object.defineProperty(DragComponent.prototype, 'view', {
    get: function () {
      return this.view_szbxys$_0;
    }
  });
  function DragComponent$Info(touch, gstart, gend, delta) {
    if (touch === void 0)
      touch = Touch.Companion.dummy;
    if (gstart === void 0)
      gstart = Point.Companion.invoke();
    if (gend === void 0)
      gend = Point.Companion.invoke();
    if (delta === void 0)
      delta = Point.Companion.invoke();
    this.touch = touch;
    this.gstart = gstart;
    this.gend = gend;
    this.delta = delta;
  }
  Object.defineProperty(DragComponent$Info.prototype, 'id', {
    get: function () {
      return this.touch.id;
    }
  });
  DragComponent$Info.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Info',
    interfaces: []
  };
  DragComponent$Info.prototype.component1 = function () {
    return this.touch;
  };
  DragComponent$Info.prototype.component2 = function () {
    return this.gstart;
  };
  DragComponent$Info.prototype.component3 = function () {
    return this.gend;
  };
  DragComponent$Info.prototype.component4 = function () {
    return this.delta;
  };
  DragComponent$Info.prototype.copy_68nfyi$ = function (touch, gstart, gend, delta) {
    return new DragComponent$Info(touch === void 0 ? this.touch : touch, gstart === void 0 ? this.gstart : gstart, gend === void 0 ? this.gend : gend, delta === void 0 ? this.delta : delta);
  };
  DragComponent$Info.prototype.toString = function () {
    return 'Info(touch=' + Kotlin.toString(this.touch) + (', gstart=' + Kotlin.toString(this.gstart)) + (', gend=' + Kotlin.toString(this.gend)) + (', delta=' + Kotlin.toString(this.delta)) + ')';
  };
  DragComponent$Info.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.touch) | 0;
    result = result * 31 + Kotlin.hashCode(this.gstart) | 0;
    result = result * 31 + Kotlin.hashCode(this.gend) | 0;
    result = result * 31 + Kotlin.hashCode(this.delta) | 0;
    return result;
  };
  DragComponent$Info.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.touch, other.touch) && Kotlin.equals(this.gstart, other.gstart) && Kotlin.equals(this.gend, other.gend) && Kotlin.equals(this.delta, other.delta)))));
  };
  var DragComponent$dragging_metadata = new PropertyMetadata('dragging');
  DragComponent.prototype.get_dragging_zm7m3$ = function ($receiver) {
    var $this = this.dragging_zm7m3$_de4qpo$_0;
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : DragComponent$dragging_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = $this.name) != null ? tmp$_3 : DragComponent$dragging_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  };
  DragComponent.prototype.set_dragging_9zoxps$ = function ($receiver, dragging) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = this.dragging_zm7m3$_de4qpo$_0.name) != null ? tmp$ : DragComponent$dragging_metadata.callableName, (tmp$_0 = dragging) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  };
  DragComponent.prototype.updateStartEndPos_0 = function (touch) {
    this.info.gstart.copyFrom_4l17gg$(touch.current);
    this.info.gend.copyFrom_4l17gg$(touch.current);
    this.info.delta.setToSub_xwdphw$(this.info.gend, this.info.gstart);
  };
  DragComponent.prototype.updateEndPos_0 = function (touch) {
    this.info.gend.copyFrom_4l17gg$(touch.current);
    this.info.delta.setToSub_xwdphw$(this.info.gend, this.info.gstart);
  };
  DragComponent.prototype.onTouchEvent_665627$ = function (views, e) {
    var touch = first(e.touches);
    this.info.touch = touch;
    switch (e.type.name) {
      case 'START':
        if (this.view.hitTest_lu1900$(touch.current.x, touch.current.y) != null) {
          this.set_dragging_9zoxps$(touch, true);
          this.updateStartEndPos_0(touch);
          this.onDragStart.invoke_11rb$(this.info);
        }
        break;
      case 'END':
        if (this.get_dragging_zm7m3$(touch)) {
          this.set_dragging_9zoxps$(touch, false);
          this.updateEndPos_0(touch);
          this.onDragEnd.invoke_11rb$(this.info);
        }
        break;
      default:if (this.get_dragging_zm7m3$(touch)) {
          this.updateEndPos_0(touch);
          this.onDragMove.invoke_11rb$(this.info);
        }
        break;
    }
  };
  function DragComponent$dragging$lambda() {
    return false;
  }
  DragComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DragComponent',
    interfaces: [TouchComponent]
  };
  function GamePadEvents(view) {
    this.view_h3db45$_0 = view;
    this.views_woo858$_0 = this.views_woo858$_0;
    this.gamepads = new GamePadUpdateEvent();
    this.updated = new Signal();
    this.stick = new Signal();
    this.button = new Signal();
    this.connection = new Signal();
    this.oldGamepads_0 = new GamePadUpdateEvent();
    this.stickEvent_0 = new GamePadStickEvent();
    this.buttonEvent_0 = new GamePadButtonEvent();
  }
  Object.defineProperty(GamePadEvents.prototype, 'view', {
    get: function () {
      return this.view_h3db45$_0;
    }
  });
  Object.defineProperty(GamePadEvents.prototype, 'views', {
    get: function () {
      if (this.views_woo858$_0 == null)
        return throwUPAE('views');
      return this.views_woo858$_0;
    },
    set: function (views) {
      this.views_woo858$_0 = views;
    }
  });
  Object.defineProperty(GamePadEvents.prototype, 'coroutineContext', {
    get: function () {
      return this.views.coroutineContext;
    }
  });
  function Coroutine$GamePadEvents$stick$lambda$lambda(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$stick$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$stick$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$stick$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$stick$lambda$lambda;
  Coroutine$GamePadEvents$stick$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.x, this.local$closure$e.y, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$stick$lambda$lambda(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$stick$lambda$lambda(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$stick$lambda(closure$playerId, closure$stick, this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.gamepad === closure$playerId && e.stick === closure$stick)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$stick$lambda$lambda(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.stick_g2ua9q$ = function (playerId, stick, callback) {
    this.stick.invoke_qlkmfe$(GamePadEvents$stick$lambda(playerId, stick, this, callback));
  };
  function Coroutine$GamePadEvents$stick$lambda$lambda_0(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$stick$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$stick$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$stick$lambda$lambda_0.prototype.constructor = Coroutine$GamePadEvents$stick$lambda$lambda_0;
  Coroutine$GamePadEvents$stick$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.gamepad, this.local$closure$e.stick, this.local$closure$e.x, this.local$closure$e.y, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$stick$lambda$lambda_0(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$stick$lambda$lambda_0(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$stick$lambda_0(this$GamePadEvents, closure$callback) {
    return function (e) {
      launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$stick$lambda$lambda_0(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.stick_3ooiyu$ = function (callback) {
    this.stick.invoke_qlkmfe$(GamePadEvents$stick$lambda_0(this, callback));
  };
  function Coroutine$GamePadEvents$button$lambda$lambda(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$button$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$button$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$button$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$button$lambda$lambda;
  Coroutine$GamePadEvents$button$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.gamepad, this.local$closure$e.type === GamePadButtonEvent$Type.DOWN, this.local$closure$e.button, this.local$closure$e.value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$button$lambda$lambda(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$button$lambda$lambda(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$button$lambda(this$GamePadEvents, closure$callback) {
    return function (e) {
      launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$button$lambda$lambda(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.button_ysddib$ = function (callback) {
    this.button.invoke_qlkmfe$(GamePadEvents$button$lambda(this, callback));
  };
  function Coroutine$GamePadEvents$button$lambda$lambda_0(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$button$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$button$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$button$lambda$lambda_0.prototype.constructor = Coroutine$GamePadEvents$button$lambda$lambda_0;
  Coroutine$GamePadEvents$button$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.type === GamePadButtonEvent$Type.DOWN, this.local$closure$e.button, this.local$closure$e.value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$button$lambda$lambda_0(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$button$lambda$lambda_0(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$button$lambda_0(closure$playerId, this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.gamepad === closure$playerId)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$button$lambda$lambda_0(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.button_33l1tb$ = function (playerId, callback) {
    this.button.invoke_qlkmfe$(GamePadEvents$button$lambda_0(playerId, this, callback));
  };
  function Coroutine$GamePadEvents$down$lambda$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$GamePadEvents$down$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$down$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$down$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$down$lambda$lambda;
  Coroutine$GamePadEvents$down$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$down$lambda$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$down$lambda$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$down$lambda(closure$playerId, closure$button, this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.gamepad === closure$playerId && e.button === closure$button && e.type === GamePadButtonEvent$Type.DOWN)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$down$lambda$lambda(closure$callback));
      return Unit;
    };
  }
  GamePadEvents.prototype.down_hzy47c$ = function (playerId, button, callback) {
    this.button.invoke_qlkmfe$(GamePadEvents$down$lambda(playerId, button, this, callback));
  };
  function Coroutine$GamePadEvents$up$lambda$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$GamePadEvents$up$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$up$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$up$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$up$lambda$lambda;
  Coroutine$GamePadEvents$up$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$up$lambda$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$up$lambda$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$up$lambda(closure$playerId, closure$button, this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.gamepad === closure$playerId && e.button === closure$button && e.type === GamePadButtonEvent$Type.UP)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$up$lambda$lambda(closure$callback));
      return Unit;
    };
  }
  GamePadEvents.prototype.up_hzy47c$ = function (playerId, button, callback) {
    this.button.invoke_qlkmfe$(GamePadEvents$up$lambda(playerId, button, this, callback));
  };
  function Coroutine$GamePadEvents$connected$lambda$lambda(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$connected$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$connected$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$connected$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$connected$lambda$lambda;
  Coroutine$GamePadEvents$connected$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.gamepad, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$connected$lambda$lambda(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$connected$lambda$lambda(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$connected$lambda(this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.type === GamePadConnectionEvent$Type.CONNECTED)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$connected$lambda$lambda(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.connected_2wgaxj$ = function (callback) {
    this.connection.invoke_qlkmfe$(GamePadEvents$connected$lambda(this, callback));
  };
  function Coroutine$GamePadEvents$disconnected$lambda$lambda(closure$callback_0, closure$e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$e = closure$e_0;
  }
  Coroutine$GamePadEvents$disconnected$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GamePadEvents$disconnected$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GamePadEvents$disconnected$lambda$lambda.prototype.constructor = Coroutine$GamePadEvents$disconnected$lambda$lambda;
  Coroutine$GamePadEvents$disconnected$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$e.gamepad, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GamePadEvents$disconnected$lambda$lambda(closure$callback_0, closure$e_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$GamePadEvents$disconnected$lambda$lambda(closure$callback_0, closure$e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function GamePadEvents$disconnected$lambda(this$GamePadEvents, closure$callback) {
    return function (e) {
      if (e.type === GamePadConnectionEvent$Type.DISCONNECTED)
        launchImmediately_0(this$GamePadEvents.coroutineContext, GamePadEvents$disconnected$lambda$lambda(closure$callback, e));
      return Unit;
    };
  }
  GamePadEvents.prototype.disconnected_2wgaxj$ = function (callback) {
    this.connection.invoke_qlkmfe$(GamePadEvents$disconnected$lambda(this, callback));
  };
  GamePadEvents.prototype.onGamepadEvent_1f9jqy$ = function (views, event) {
    var tmp$;
    this.views = views;
    this.gamepads.copyFrom_ypku17$(event);
    tmp$ = event.gamepadsLength;
    for (var gamepadIndex = 0; gamepadIndex < tmp$; gamepadIndex++) {
      var gamepad = event.gamepads[gamepadIndex];
      var oldGamepad = this.oldGamepads_0.gamepads[gamepadIndex];
      var $receiver = GameButton.Companion.BUTTONS;
      var tmp$_0;
      var n = 0;
      while (n < $receiver.length) {
        var button = $receiver[tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0];
        if (gamepad.get_4pistl$(button) !== oldGamepad.get_4pistl$(button)) {
          var tmp$_1 = this.button;
          var $receiver_0 = this.buttonEvent_0;
          $receiver_0.gamepad = gamepad.index;
          $receiver_0.type = gamepad.get_4pistl$(button) !== 0.0 ? GamePadButtonEvent$Type.DOWN : GamePadButtonEvent$Type.UP;
          $receiver_0.button = button;
          $receiver_0.value = gamepad.get_4pistl$(button);
          tmp$_1.invoke_11rb$($receiver_0);
        }}
      var $receiver_1 = GameStick.Companion.STICKS;
      var tmp$_2;
      var n_0 = 0;
      while (n_0 < $receiver_1.length) {
        var stick = $receiver_1[tmp$_2 = n_0, n_0 = tmp$_2 + 1 | 0, tmp$_2];
        var vector = gamepad.get_e5pshl$(stick);
        if (!(vector != null ? vector.equals(oldGamepad.get_e5pshl$(stick)) : null)) {
          var tmp$_3 = this.stick;
          var $receiver_2 = this.stickEvent_0;
          $receiver_2.gamepad = gamepad.index;
          $receiver_2.stick = stick;
          $receiver_2.x = vector.x;
          $receiver_2.y = vector.y;
          tmp$_3.invoke_11rb$($receiver_2);
        }}
    }
    this.oldGamepads_0.copyFrom_ypku17$(event);
    this.updated.invoke_11rb$(event);
  };
  GamePadEvents.prototype.onGamepadEvent_l1ct8j$ = function (views, event) {
    this.views = views;
    this.button.invoke_11rb$(event);
  };
  GamePadEvents.prototype.onGamepadEvent_hoxfe3$ = function (views, event) {
    this.views = views;
    this.stick.invoke_11rb$(event);
  };
  GamePadEvents.prototype.onGamepadEvent_2v5e1d$ = function (views, event) {
    this.views = views;
    this.connection.invoke_11rb$(event);
  };
  GamePadEvents.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GamePadEvents',
    interfaces: [GamepadComponent]
  };
  function gamepad$lambda($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(GamePadEvents);
    var tmp$;
    var array = $this.egamepad;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new GamePadEvents($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, GamePadEvents) ? tmp$ : throwCCE();
  }
  var gamepad;
  var gamepad_metadata = new PropertyMetadata('gamepad');
  function get_gamepad($receiver) {
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = gamepad.name) != null ? tmp$ : gamepad_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = gamepad.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = gamepad.name) != null ? tmp$_3 : gamepad_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  }
  var gamepad_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.gamepad_hynbqt$', wrapFunction(function () {
    var get_gamepad = _.com.soywiz.korge.input.get_gamepad_gohfi1$;
    return function ($receiver, callback) {
      return callback(get_gamepad($receiver));
    };
  }));
  function Gestures(view) {
    this.view_5r8l1p$_0 = view;
    this.onSwipe = new Signal();
  }
  Object.defineProperty(Gestures.prototype, 'view', {
    get: function () {
      return this.view_5r8l1p$_0;
    }
  });
  function Gestures$Direction(point) {
    Gestures$Direction$Companion_getInstance();
    this.point = point;
  }
  Object.defineProperty(Gestures$Direction.prototype, 'x', {
    get: function () {
      return this.point.x;
    }
  });
  Object.defineProperty(Gestures$Direction.prototype, 'y', {
    get: function () {
      return this.point.y;
    }
  });
  function Gestures$Direction$Companion() {
    Gestures$Direction$Companion_instance = this;
    this.Up = Gestures$Gestures$Direction_init(0, -1);
    this.Down = Gestures$Gestures$Direction_init(0, 1);
    this.Left = Gestures$Gestures$Direction_init(-1, 0);
    this.Right = Gestures$Gestures$Direction_init(1, 0);
  }
  Gestures$Direction$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Gestures$Direction$Companion_instance = null;
  function Gestures$Direction$Companion_getInstance() {
    if (Gestures$Direction$Companion_instance === null) {
      new Gestures$Direction$Companion();
    }return Gestures$Direction$Companion_instance;
  }
  Gestures$Direction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Direction',
    interfaces: []
  };
  function Gestures$Gestures$Direction_init(x, y, $this) {
    $this = $this || Object.create(Gestures$Direction.prototype);
    Gestures$Direction.call($this, IPointInt.Companion.invoke_vux9f0$(x, y));
    return $this;
  }
  Gestures.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Gestures',
    interfaces: [Component]
  };
  function get_gestures($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(Gestures);
    var tmp$;
    var array = $this.eother;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new Gestures($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, Gestures) ? tmp$ : throwCCE();
  }
  var arraycopy$lambda = wrapFunction(function () {
    var arrayCopy = Kotlin.kotlin.collections.arrayCopy;
    return function (closure$src, closure$dst, closure$dstPos, closure$srcPos, closure$size) {
      return function () {
        arrayCopy(closure$src, closure$dst, closure$dstPos, closure$srcPos, closure$srcPos + closure$size | 0);
        return Unit;
      };
    };
  });
  function Input() {
    Input$Companion_getInstance();
    this.$delegate_h2v5n2$_0 = new Extra$Mixin();
    this.dummyTouch = Touch.Companion.dummy;
    var $receiver = until(0, 16);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(new Touch(item));
    }
    this.touches = copyToArray(destination);
    this.activeTouches = ArrayList_init_1();
    this._isTouchDeviceGen = Input$_isTouchDeviceGen$lambda;
    this.mouse = new Point(-1000.0, -1000.0);
    this.mouseButtons = 0;
    this.mouseInside = true;
    this.clicked = false;
    this.keys = new InputKeys();
    this.keysRaw = Kotlin.booleanArray(256);
    this.keysRawPrev = Kotlin.booleanArray(256);
    this.keysPressingTime = new Float64Array(256);
    this.keysLastTimeTriggered = new Float64Array(256);
    this.keysPressing = Kotlin.booleanArray(256);
    this.keysJustPressed = Kotlin.booleanArray(256);
    this.keysJustReleased = Kotlin.booleanArray(256);
    var $receiver_0 = until(0, 8);
    var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var item_0 = tmp$_0.next();
      destination_0.add_11rb$(new GamepadInfo(item_0));
    }
    this.gamepads = copyToArray(destination_0);
    this.connectedGamepads = ArrayList_init_1();
  }
  function Input$Companion() {
    Input$Companion_instance = this;
    this.KEYCODES = 256;
  }
  Input$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Input$Companion_instance = null;
  function Input$Companion_getInstance() {
    if (Input$Companion_instance === null) {
      new Input$Companion();
    }return Input$Companion_instance;
  }
  Object.defineProperty(Input.prototype, 'isTouchDevice', {
    get: function () {
      return this._isTouchDeviceGen();
    }
  });
  Input.prototype.getTouch_za3lpa$ = function (id) {
    var tmp$, tmp$_0;
    var tmp$_1;
    var $receiver = this.touches;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_2;
      for (tmp$_2 = 0; tmp$_2 !== $receiver.length; ++tmp$_2) {
        var element = $receiver[tmp$_2];
        if (element.id === id) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }}
      firstOrNull$result = null;
    }
     while (false);
    if ((tmp$ = firstOrNull$result) != null)
      tmp$_1 = tmp$;
    else {
      var $receiver_0 = this.touches;
      var first$result;
      first$break: do {
        var tmp$_3;
        for (tmp$_3 = 0; tmp$_3 !== $receiver_0.length; ++tmp$_3) {
          var element_0 = $receiver_0[tmp$_3];
          if (!element_0.active) {
            first$result = element_0;
            break first$break;
          }}
        throw new NoSuchElementException_init('Array contains no element matching the predicate.');
      }
       while (false);
      tmp$_1 = first$result;
    }
    return (tmp$_0 = tmp$_1) != null ? tmp$_0 : this.dummyTouch;
  };
  Input.prototype.updateTouches = function () {
    this.activeTouches.clear();
    var $receiver = this.touches;
    var tmp$;
    var n = 0;
    while (n < $receiver.length) {
      var touch = $receiver[tmp$ = n, n = tmp$ + 1 | 0, tmp$];
      if (touch.active)
        this.activeTouches.add_11rb$(touch);
    }
  };
  Input.prototype.updateConnectedGamepads = function () {
    this.connectedGamepads.clear();
    var $receiver = this.gamepads;
    var tmp$;
    var n = 0;
    while (n < $receiver.length) {
      var gamepad = $receiver[tmp$ = n, n = tmp$ + 1 | 0, tmp$];
      if (gamepad.connected) {
        this.connectedGamepads.add_11rb$(gamepad);
      }}
  };
  Input.prototype.setKey_fzusl$ = function (keyCode, b) {
    var pKeyCode = keyCode & 255;
    if (get_indices(this.keysRaw).contains_mef7kx$(pKeyCode))
      this.keysRaw[pKeyCode] = b;
  };
  Input.prototype.startFrame_seyb0p$ = function (delta) {
    var tmp$;
    (tmp$ = this.extra) != null ? (tmp$.clear(), Unit) : null;
    this.keys.startFrame_unydws$(delta);
  };
  Input.prototype.endFrame_seyb0p$ = function (delta) {
    this.clicked = false;
    this.keys.endFrame_unydws$(delta);
    this.endFrameOldKeys_0(delta);
  };
  Input.prototype.endFrameOldKeys_0 = function (delta) {
    var tmp$, tmp$_0;
    for (var n = 0; n < 256; n++) {
      var prev = this.keysRawPrev[n];
      var curr = this.keysRaw[n];
      this.keysJustReleased[n] = (prev && !curr);
      this.keysJustPressed[n] = (!prev && curr);
      if (curr) {
        this.keysPressingTime[n] = this.keysPressingTime[n] + delta.nanosecondsDouble;
      } else {
        this.keysPressingTime[n] = 0.0;
        this.keysLastTimeTriggered[n] = 0.0;
      }
      var triggerPress = false;
      var pressingTime = HRTimeSpan.Companion.fromNanoseconds_14dthe$(this.keysPressingTime[n]);
      if (this.keysPressingTime[n] > 0) {
        tmp$ = pressingTime.millisecondsDouble;
        if (rangeTo(0.0, 1.0).contains_mef7kx$(tmp$))
          tmp$_0 = HRTimeSpan.Companion.fromMilliseconds_za3lpa$(0);
        else if (rangeTo(1.0, 300.0).contains_mef7kx$(tmp$))
          tmp$_0 = HRTimeSpan.Companion.fromMilliseconds_za3lpa$(100);
        else if (rangeTo(300.0, 1000.0).contains_mef7kx$(tmp$))
          tmp$_0 = HRTimeSpan.Companion.fromMilliseconds_za3lpa$(50);
        else
          tmp$_0 = HRTimeSpan.Companion.fromMilliseconds_za3lpa$(20);
        var timeBarrier = tmp$_0;
        var elapsedTime = pressingTime.minus_seyb0p$(HRTimeSpan.Companion.fromNanoseconds_14dthe$(this.keysLastTimeTriggered[n]));
        if (elapsedTime.compareTo_11rb$(timeBarrier) >= 0) {
          triggerPress = true;
        }}if (triggerPress) {
        this.keysLastTimeTriggered[n] = this.keysPressingTime[n];
      }this.keysPressing[n] = triggerPress;
    }
    arrayCopy(this.keysRaw, this.keysRawPrev, 0, 0, 0 + 256 | 0);
  };
  Input.prototype.triggerOldKeyEvent_5uhwd9$ = function (e) {
    switch (e.type.name) {
      case 'DOWN':
        this.setKey_fzusl$(e.keyCode, true);
        break;
      case 'UP':
        this.setKey_fzusl$(e.keyCode, false);
        break;
      case 'TYPE':
        break;
    }
  };
  Object.defineProperty(Input.prototype, 'extra', {
    get: function () {
      return this.$delegate_h2v5n2$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_h2v5n2$_0.extra = tmp$;
    }
  });
  function Input$_isTouchDeviceGen$lambda() {
    return korag.AGOpenglFactory.isTouchDevice;
  }
  Input.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Input',
    interfaces: [Extra]
  };
  function InputKeys() {
    this.pressing_0 = Kotlin.booleanArray(Key.Companion.MAX);
    this.pressingPrev_0 = Kotlin.booleanArray(Key.Companion.MAX);
  }
  InputKeys.prototype.get_9s040q$ = function (key) {
    return this.pressing_9s040q$(key);
  };
  InputKeys.prototype.pressing_9s040q$ = function (key) {
    return this.pressing_0[key.ordinal];
  };
  InputKeys.prototype.justPressed_9s040q$ = function (key) {
    return this.pressing_0[key.ordinal] && !this.pressingPrev_0[key.ordinal];
  };
  InputKeys.prototype.justReleased_9s040q$ = function (key) {
    return !this.pressing_0[key.ordinal] && this.pressingPrev_0[key.ordinal];
  };
  InputKeys.prototype.triggerKeyEvent_5xeie8$ = function (e) {
    switch (e.type.name) {
      case 'UP':
        this.pressing_0[e.key.ordinal] = false;
        break;
      case 'DOWN':
        this.pressing_0[e.key.ordinal] = true;
        break;
      default:break;
    }
  };
  InputKeys.prototype.startFrame_unydws$ = function (delta) {
  };
  InputKeys.prototype.endFrame_unydws$ = function (delta) {
    arrayCopy(this.pressing_0, this.pressingPrev_0, 0, 0, 0 + this.pressing_0.length | 0);
  };
  InputKeys.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InputKeys',
    interfaces: []
  };
  function KeysEvents(view) {
    this.view_aulzqo$_0 = view;
    this.views_ismgi7$_0 = this.views_ismgi7$_0;
    this.onKeyDown = new AsyncSignal();
    this.onKeyUp = new AsyncSignal();
    this.onKeyTyped = new AsyncSignal();
  }
  Object.defineProperty(KeysEvents.prototype, 'view', {
    get: function () {
      return this.view_aulzqo$_0;
    }
  });
  Object.defineProperty(KeysEvents.prototype, 'views', {
    get: function () {
      if (this.views_ismgi7$_0 == null)
        return throwUPAE('views');
      return this.views_ismgi7$_0;
    },
    set: function (views) {
      this.views_ismgi7$_0 = views;
    }
  });
  Object.defineProperty(KeysEvents.prototype, 'coroutineContext', {
    get: function () {
      return this.views.coroutineContext;
    }
  });
  function Coroutine$KeysEvents$down$lambda(closure$key_0, closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$key = closure$key_0;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$down$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$down$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$down$lambda.prototype.constructor = Coroutine$KeysEvents$down$lambda;
  Coroutine$KeysEvents$down$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$e.key === this.local$closure$key) {
              this.state_0 = 2;
              this.result_0 = this.local$closure$callback(this.local$closure$key, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$down$lambda(closure$key_0, closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$down$lambda(closure$key_0, closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.down_f1vrld$ = function (key, callback) {
    return this.onKeyDown.invoke_25kf2w$(KeysEvents$down$lambda(key, callback));
  };
  function Coroutine$KeysEvents$up$lambda(closure$key_0, closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$key = closure$key_0;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$up$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$up$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$up$lambda.prototype.constructor = Coroutine$KeysEvents$up$lambda;
  Coroutine$KeysEvents$up$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$e.key === this.local$closure$key) {
              this.state_0 = 2;
              this.result_0 = this.local$closure$callback(this.local$closure$key, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$up$lambda(closure$key_0, closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$up$lambda(closure$key_0, closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.up_f1vrld$ = function (key, callback) {
    return this.onKeyUp.invoke_25kf2w$(KeysEvents$up$lambda(key, callback));
  };
  function Coroutine$KeysEvents$typed$lambda(closure$key_0, closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$key = closure$key_0;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$typed$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$typed$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$typed$lambda.prototype.constructor = Coroutine$KeysEvents$typed$lambda;
  Coroutine$KeysEvents$typed$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$e.key === this.local$closure$key) {
              this.state_0 = 2;
              this.result_0 = this.local$closure$callback(this.local$closure$key, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$typed$lambda(closure$key_0, closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$typed$lambda(closure$key_0, closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.typed_f1vrld$ = function (key, callback) {
    return this.onKeyTyped.invoke_25kf2w$(KeysEvents$typed$lambda(key, callback));
  };
  function Coroutine$KeysEvents$down$lambda_0(closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$down$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$down$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$down$lambda_0.prototype.constructor = Coroutine$KeysEvents$down$lambda_0;
  Coroutine$KeysEvents$down$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$e.key, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$down$lambda_0(closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$down$lambda_0(closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.down_1gq50h$ = function (callback) {
    return this.onKeyDown.invoke_25kf2w$(KeysEvents$down$lambda_0(callback));
  };
  function Coroutine$KeysEvents$up$lambda_0(closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$up$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$up$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$up$lambda_0.prototype.constructor = Coroutine$KeysEvents$up$lambda_0;
  Coroutine$KeysEvents$up$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$e.key, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$up$lambda_0(closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$up$lambda_0(closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.up_1gq50h$ = function (callback) {
    return this.onKeyUp.invoke_25kf2w$(KeysEvents$up$lambda_0(callback));
  };
  function Coroutine$KeysEvents$typed$lambda_0(closure$callback_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$e = e_0;
  }
  Coroutine$KeysEvents$typed$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$typed$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$typed$lambda_0.prototype.constructor = Coroutine$KeysEvents$typed$lambda_0;
  Coroutine$KeysEvents$typed$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$e.key, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$typed$lambda_0(closure$callback_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$typed$lambda_0(closure$callback_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.typed_1gq50h$ = function (callback) {
    return this.onKeyTyped.invoke_25kf2w$(KeysEvents$typed$lambda_0(callback));
  };
  function Coroutine$KeysEvents$onKeyEvent$lambda(this$KeysEvents_0, closure$event_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KeysEvents = this$KeysEvents_0;
    this.local$closure$event = closure$event_0;
  }
  Coroutine$KeysEvents$onKeyEvent$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$onKeyEvent$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$onKeyEvent$lambda.prototype.constructor = Coroutine$KeysEvents$onKeyEvent$lambda;
  Coroutine$KeysEvents$onKeyEvent$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KeysEvents.onKeyTyped.invoke_11rb$(this.local$closure$event, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$onKeyEvent$lambda(this$KeysEvents_0, closure$event_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$onKeyEvent$lambda(this$KeysEvents_0, closure$event_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KeysEvents$onKeyEvent$lambda_0(this$KeysEvents_0, closure$event_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KeysEvents = this$KeysEvents_0;
    this.local$closure$event = closure$event_0;
  }
  Coroutine$KeysEvents$onKeyEvent$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$onKeyEvent$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$onKeyEvent$lambda_0.prototype.constructor = Coroutine$KeysEvents$onKeyEvent$lambda_0;
  Coroutine$KeysEvents$onKeyEvent$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KeysEvents.onKeyDown.invoke_11rb$(this.local$closure$event, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$onKeyEvent$lambda_0(this$KeysEvents_0, closure$event_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$onKeyEvent$lambda_0(this$KeysEvents_0, closure$event_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KeysEvents$onKeyEvent$lambda_1(this$KeysEvents_0, closure$event_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$KeysEvents = this$KeysEvents_0;
    this.local$closure$event = closure$event_0;
  }
  Coroutine$KeysEvents$onKeyEvent$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KeysEvents$onKeyEvent$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KeysEvents$onKeyEvent$lambda_1.prototype.constructor = Coroutine$KeysEvents$onKeyEvent$lambda_1;
  Coroutine$KeysEvents$onKeyEvent$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$KeysEvents.onKeyUp.invoke_11rb$(this.local$closure$event, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KeysEvents$onKeyEvent$lambda_1(this$KeysEvents_0, closure$event_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KeysEvents$onKeyEvent$lambda_1(this$KeysEvents_0, closure$event_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  KeysEvents.prototype.onKeyEvent_dg4n0v$ = function (views, event) {
    this.views = views;
    switch (event.type.name) {
      case 'TYPE':
        launchImmediately_0(views.coroutineContext, KeysEvents$onKeyEvent$lambda(this, event));
        break;
      case 'DOWN':
        launchImmediately_0(views.coroutineContext, KeysEvents$onKeyEvent$lambda_0(this, event));
        break;
      case 'UP':
        launchImmediately_0(views.coroutineContext, KeysEvents$onKeyEvent$lambda_1(this, event));
        break;
      default:Kotlin.noWhenBranchMatched();
        break;
    }
  };
  KeysEvents.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KeysEvents',
    interfaces: [KeyComponent]
  };
  function keys$lambda($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(KeysEvents);
    var tmp$;
    var array = $this.ekey;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new KeysEvents($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, KeysEvents) ? tmp$ : throwCCE();
  }
  var keys;
  var keys_metadata = new PropertyMetadata('keys');
  function get_keys($receiver) {
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = keys.name) != null ? tmp$ : keys_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = keys.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = keys.name) != null ? tmp$_3 : keys_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  }
  var keys_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.keys_xhqbsk$', wrapFunction(function () {
    var get_keys = _.com.soywiz.korge.input.get_keys_gohfi1$;
    return function ($receiver, callback) {
      return callback(get_keys($receiver));
    };
  }));
  var _keyEvent = defineInlineFunction('korge-root-korge.com.soywiz.korge.input._keyEvent_vuxcw4$', wrapFunction(function () {
    var get_keys = _.com.soywiz.korge.input.get_keys_gohfi1$;
    return function ($receiver, prop, handler) {
      var tmp$;
      if ((tmp$ = $receiver != null ? get_keys($receiver) : null) != null) {
        prop.get(tmp$).add_25kf2w$(handler);
      }return $receiver;
    };
  }));
  var onKeyDown = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onKeyDown_tj6ps7$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_keys = _.com.soywiz.korge.input.get_keys_gohfi1$;
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('onKeyDown', 1, function ($receiver) {
        return $receiver.onKeyDown;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_keys($receiver) : null) != null) {
        prop.get(tmp$).add_25kf2w$(handler);
      }return $receiver;
    };
  }));
  var onKeyUp = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onKeyUp_tj6ps7$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_keys = _.com.soywiz.korge.input.get_keys_gohfi1$;
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('onKeyUp', 1, function ($receiver) {
        return $receiver.onKeyUp;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_keys($receiver) : null) != null) {
        prop.get(tmp$).add_25kf2w$(handler);
      }return $receiver;
    };
  }));
  var onKeyTyped = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onKeyTyped_tj6ps7$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_keys = _.com.soywiz.korge.input.get_keys_gohfi1$;
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('onKeyTyped', 1, function ($receiver) {
        return $receiver.onKeyTyped;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_keys($receiver) : null) != null) {
        prop.get(tmp$).add_25kf2w$(handler);
      }return $receiver;
    };
  }));
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_0(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_0(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_0(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_0(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_1(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_1(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_1(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_1(closure$handler, it));
      return Unit;
    };
  }
  function MouseDragInfo(dx, dy, start, end) {
    if (dx === void 0)
      dx = 0.0;
    if (dy === void 0)
      dy = 0.0;
    if (start === void 0)
      start = false;
    if (end === void 0)
      end = false;
    this.dx = dx;
    this.dy = dy;
    this.start = start;
    this.end = end;
  }
  MouseDragInfo.prototype.set_hjmy34$ = function (dx, dy, start, end) {
    this.dx = dx;
    this.dy = dy;
    this.start = start;
    this.end = end;
    return this;
  };
  MouseDragInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MouseDragInfo',
    interfaces: []
  };
  MouseDragInfo.prototype.component1 = function () {
    return this.dx;
  };
  MouseDragInfo.prototype.component2 = function () {
    return this.dy;
  };
  MouseDragInfo.prototype.component3 = function () {
    return this.start;
  };
  MouseDragInfo.prototype.component4 = function () {
    return this.end;
  };
  MouseDragInfo.prototype.copy_hjmy34$ = function (dx, dy, start, end) {
    return new MouseDragInfo(dx === void 0 ? this.dx : dx, dy === void 0 ? this.dy : dy, start === void 0 ? this.start : start, end === void 0 ? this.end : end);
  };
  MouseDragInfo.prototype.toString = function () {
    return 'MouseDragInfo(dx=' + Kotlin.toString(this.dx) + (', dy=' + Kotlin.toString(this.dy)) + (', start=' + Kotlin.toString(this.start)) + (', end=' + Kotlin.toString(this.end)) + ')';
  };
  MouseDragInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.dx) | 0;
    result = result * 31 + Kotlin.hashCode(this.dy) | 0;
    result = result * 31 + Kotlin.hashCode(this.start) | 0;
    result = result * 31 + Kotlin.hashCode(this.end) | 0;
    return result;
  };
  MouseDragInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.dx, other.dx) && Kotlin.equals(this.dy, other.dy) && Kotlin.equals(this.start, other.start) && Kotlin.equals(this.end, other.end)))));
  };
  function onMouseDrag$views(closure$view) {
    return function () {
      return ensureNotNull(closure$view.stage).views;
    };
  }
  function onMouseDrag$updateMouse(closure$views, closure$mousePos) {
    return function () {
      var views = closure$views();
      closure$mousePos.setTo_lu1900$(views.nativeMouseX, views.nativeMouseY);
    };
  }
  function Coroutine$onMouseDrag$lambda$lambda(closure$updateMouse_0, closure$dragging_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$info_0, closure$callback_0, closure$views_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$dragging = closure$dragging_0;
    this.local$closure$mousePos = closure$mousePos_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$sy = closure$sy_0;
    this.local$closure$info = closure$info_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$views = closure$views_0;
  }
  Coroutine$onMouseDrag$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onMouseDrag$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onMouseDrag$lambda$lambda.prototype.constructor = Coroutine$onMouseDrag$lambda$lambda;
  Coroutine$onMouseDrag$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$updateMouse();
            this.local$closure$dragging.v = true;
            this.local$closure$sx.v = this.local$closure$mousePos.x;
            this.local$closure$sy.v = this.local$closure$mousePos.y;
            this.local$closure$info.dx = 0.0;
            this.local$closure$info.dy = 0.0;
            return this.local$closure$callback(this.local$closure$views(), this.local$closure$info.set_hjmy34$(0.0, 0.0, true, false));
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onMouseDrag$lambda$lambda(closure$updateMouse_0, closure$dragging_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$info_0, closure$callback_0, closure$views_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onMouseDrag$lambda$lambda(closure$updateMouse_0, closure$dragging_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$info_0, closure$callback_0, closure$views_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onMouseDrag$lambda$lambda_0(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$dragging = closure$dragging_0;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$mousePos = closure$mousePos_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$views = closure$views_0;
    this.local$closure$info = closure$info_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$sy = closure$sy_0;
  }
  Coroutine$onMouseDrag$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onMouseDrag$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onMouseDrag$lambda$lambda_0.prototype.constructor = Coroutine$onMouseDrag$lambda$lambda_0;
  Coroutine$onMouseDrag$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$dragging.v) {
              this.local$closure$updateMouse();
              this.local$closure$dragging.v = false;
              this.local$closure$cx.v = this.local$closure$mousePos.x;
              this.local$closure$cy.v = this.local$closure$mousePos.y;
              return this.local$closure$callback(this.local$closure$views(), this.local$closure$info.set_hjmy34$(this.local$closure$cx.v - this.local$closure$sx.v, this.local$closure$cy.v - this.local$closure$sy.v, false, true)), Unit;
            }
            return Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onMouseDrag$lambda$lambda_0(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onMouseDrag$lambda$lambda_0(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onMouseDrag$lambda$lambda_1(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$dragging = closure$dragging_0;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$mousePos = closure$mousePos_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$views = closure$views_0;
    this.local$closure$info = closure$info_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$sy = closure$sy_0;
  }
  Coroutine$onMouseDrag$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onMouseDrag$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onMouseDrag$lambda$lambda_1.prototype.constructor = Coroutine$onMouseDrag$lambda$lambda_1;
  Coroutine$onMouseDrag$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$dragging.v) {
              this.local$closure$updateMouse();
              this.local$closure$cx.v = this.local$closure$mousePos.x;
              this.local$closure$cy.v = this.local$closure$mousePos.y;
              return this.local$closure$callback(this.local$closure$views(), this.local$closure$info.set_hjmy34$(this.local$closure$cx.v - this.local$closure$sx.v, this.local$closure$cy.v - this.local$closure$sy.v, false, false)), Unit;
            }
            return Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onMouseDrag$lambda$lambda_1(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onMouseDrag$lambda$lambda_1(closure$dragging_0, closure$updateMouse_0, closure$mousePos_0, closure$cx_0, closure$cy_0, closure$callback_0, closure$views_0, closure$info_0, closure$sx_0, closure$sy_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function onMouseDrag($receiver, callback) {
    var dragging = {v: false};
    var sx = {v: 0.0};
    var sy = {v: 0.0};
    var cx = {v: 0.0};
    var cy = {v: 0.0};
    var view = $receiver;
    var info = new MouseDragInfo();
    var mousePos = Point.Companion.invoke();
    var views = onMouseDrag$views(view);
    var updateMouse = onMouseDrag$updateMouse(views, mousePos);
    var $receiver_0 = get_mouse($receiver);
    getPropertyCallableRef('down', 1, function ($receiver_0) {
      return $receiver_0.down;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda($receiver_0, onMouseDrag$lambda$lambda(updateMouse, dragging, mousePos, sx, sy, info, callback, views)));
    getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
      return $receiver_0.upAnywhere;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_0($receiver_0, onMouseDrag$lambda$lambda_0(dragging, updateMouse, mousePos, cx, cy, callback, views, info, sx, sy)));
    getPropertyCallableRef('moveAnywhere', 1, function ($receiver) {
      return $receiver.moveAnywhere;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_1($receiver_0, onMouseDrag$lambda$lambda_1(dragging, updateMouse, mousePos, cx, cy, callback, views, info, sx, sy)));
    return $receiver;
  }
  function draggable$lambda(closure$view, closure$sx, closure$sy) {
    return function ($receiver, info) {
      if (info.start) {
        closure$sx.v = closure$view.x;
        closure$sy.v = closure$view.y;
      }closure$view.x = closure$sx.v + info.dx;
      closure$view.y = closure$sy.v + info.dy;
      return Unit;
    };
  }
  function draggable($receiver) {
    var view = $receiver;
    var sx = {v: 0.0};
    var sy = {v: 0.0};
    onMouseDrag($receiver, draggable$lambda(view, sx, sy));
    return $receiver;
  }
  function MouseEvents(view) {
    this.view_8vwvzd$_0 = view;
    this.$delegate_gd5cny$_0 = new Extra$Mixin();
    this.views_8n4n1k$_0 = this.views_8n4n1k$_0;
    this.click = new Signal();
    this.over = new Signal();
    this.out = new Signal();
    this.down = new Signal();
    this.downFromOutside = new Signal();
    this.up = new Signal();
    this.upOutside = new Signal();
    this.upAnywhere = new Signal();
    this.move = new Signal();
    this.moveAnywhere = new Signal();
    this.moveOutside = new Signal();
    this.exit = new Signal();
    this._onClick = this.click;
    this._onOver = this.over;
    this._onOut = this.out;
    this._onDown = this.down;
    this._onDownFromOutside = this.downFromOutside;
    this._onUp = this.up;
    this._onUpOutside = this.upOutside;
    this._onUpAnywhere = this.upAnywhere;
    this._onMove = this.move;
    this._onMoveAnywhere = this.moveAnywhere;
    this._onMoveOutside = this.mouseOutside;
    this.hitTest_yfgu01$_0 = null;
    this.lastOver_0 = false;
    this.lastInside_0 = false;
    this.lastPressing_0 = false;
    this.CLICK_THRESHOLD = 16;
    this.mouseHitSearch_w91h29$_jxictu$_0 = new Extra$Property(void 0, MouseEvents$mouseHitSearch$lambda);
    this.mouseHitResult_w91h29$_rniqwt$_0 = new Extra$Property(void 0, MouseEvents$mouseHitResult$lambda);
    this.mouseHitResultUsed_w91h29$_8zi9cw$_0 = new Extra$Property(void 0, MouseEvents$mouseHitResultUsed$lambda);
    this.mouseDebugHandlerOnce_jv80cy$_l49pu8$_0 = new Extra$Property(void 0, MouseEvents$mouseDebugHandlerOnce$lambda);
    this.downPosGlobal = Point.Companion.invoke();
    this.upPosGlobal = Point.Companion.invoke();
    this.startedPosGlobal = Point.Companion.invoke();
    this.lastPosGlobal = Point.Companion.invoke();
    this.currentPosGlobal = Point.Companion.invoke();
    this._downPosLocal_0 = Point.Companion.invoke();
    this._upPosLocal_0 = Point.Companion.invoke();
    this._startedPosLocal_0 = Point.Companion.invoke();
    this._lastPosLocal_0 = Point.Companion.invoke();
    this._currentPosLocal_0 = Point.Companion.invoke();
    this._downPosStage_0 = Point.Companion.invoke();
    this._upPosStage_0 = Point.Companion.invoke();
    this._startedPosStage_0 = Point.Companion.invoke();
    this._lastPosStage_0 = Point.Companion.invoke();
    this._currentPosStage_0 = Point.Companion.invoke();
    this.clickedCount = 0;
    this.lastEvent_w78ke$_0 = this.lastEvent_w78ke$_0;
    this.button = MouseButton.LEFT;
    this.buttons = 0;
    this.scrollDeltaX = 0.0;
    this.scrollDeltaY = 0.0;
    this.scrollDeltaZ = 0.0;
    this.isShiftDown = false;
    this.isCtrlDown = false;
    this.isAltDown = false;
    this.isMetaDown = false;
    this.updater = attach_5(new MouseEvents$MouseEventsUpdate(this, this.view));
  }
  Object.defineProperty(MouseEvents.prototype, 'view', {
    get: function () {
      return this.view_8vwvzd$_0;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'views', {
    get: function () {
      if (this.views_8n4n1k$_0 == null)
        return throwUPAE('views');
      return this.views_8n4n1k$_0;
    },
    set: function (views) {
      this.views_8n4n1k$_0 = views;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'coroutineContext', {
    get: function () {
      return this.views.coroutineContext;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'mouseOutside', {
    get: function () {
      return this.moveOutside;
    }
  });
  MouseEvents.prototype._mouseEvent_f20i3j$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents._mouseEvent_f20i3j$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (prop, handler) {
      prop.get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onClick_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onClick_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('click', 1, function ($receiver_0) {
        return $receiver_0.click;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onOver_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onOver_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('over', 1, function ($receiver_0) {
        return $receiver_0.over;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onOut_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onOut_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('out', 1, function ($receiver_0) {
        return $receiver_0.out;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onDown_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onDown_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('down', 1, function ($receiver_0) {
        return $receiver_0.down;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onDownFromOutside_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onDownFromOutside_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('downFromOutside', 1, function ($receiver) {
        return $receiver.downFromOutside;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onUp_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onUp_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('up', 1, function ($receiver) {
        return $receiver.up;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onUpOutside_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onUpOutside_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('upOutside', 1, function ($receiver) {
        return $receiver.upOutside;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onUpAnywhere_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onUpAnywhere_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
        return $receiver_0.upAnywhere;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onMove_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onMove_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('move', 1, function ($receiver) {
        return $receiver.move;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onMoveAnywhere_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onMoveAnywhere_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('moveAnywhere', 1, function ($receiver) {
        return $receiver.moveAnywhere;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onMoveOutside_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onMoveOutside_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('moveOutside', 1, function ($receiver) {
        return $receiver.moveOutside;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  MouseEvents.prototype.onExit_gu2l7t$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.MouseEvents.onExit_gu2l7t$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda;
    Coroutine$MouseEvents$_mouseEvent$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function MouseEvents$_mouseEvent$lambda(this$MouseEvents, closure$handler) {
      return function (it) {
        launchImmediately(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function (handler) {
      getPropertyCallableRef('exit', 1, function ($receiver) {
        return $receiver.exit;
      }).get(this).add_qlkmfe$(MouseEvents$_mouseEvent$lambda(this, handler));
      return this;
    };
  }));
  Object.defineProperty(MouseEvents.prototype, 'hitTest', {
    get: function () {
      return this.hitTest_yfgu01$_0;
    },
    set: function (hitTest) {
      this.hitTest_yfgu01$_0 = hitTest;
    }
  });
  var MouseEvents$mouseHitSearch_metadata = new PropertyMetadata('mouseHitSearch');
  MouseEvents.prototype.get_mouseHitSearch_w91h29$ = function ($receiver) {
    var $this = this.mouseHitSearch_w91h29$_jxictu$_0;
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : MouseEvents$mouseHitSearch_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = $this.name) != null ? tmp$_3 : MouseEvents$mouseHitSearch_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  };
  MouseEvents.prototype.set_mouseHitSearch_rookxo$ = function ($receiver, mouseHitSearch) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = this.mouseHitSearch_w91h29$_jxictu$_0.name) != null ? tmp$ : MouseEvents$mouseHitSearch_metadata.callableName, (tmp$_0 = mouseHitSearch) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  };
  var MouseEvents$mouseHitResult_metadata = new PropertyMetadata('mouseHitResult');
  MouseEvents.prototype.get_mouseHitResult_w91h29$ = function ($receiver) {
    var $this = this.mouseHitResult_w91h29$_rniqwt$_0;
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : MouseEvents$mouseHitResult_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = $this.name) != null ? tmp$_3 : MouseEvents$mouseHitResult_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  };
  MouseEvents.prototype.set_mouseHitResult_irk9rs$ = function ($receiver, mouseHitResult) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = this.mouseHitResult_w91h29$_rniqwt$_0.name) != null ? tmp$ : MouseEvents$mouseHitResult_metadata.callableName, (tmp$_0 = mouseHitResult) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  };
  var MouseEvents$mouseHitResultUsed_metadata = new PropertyMetadata('mouseHitResultUsed');
  MouseEvents.prototype.get_mouseHitResultUsed_w91h29$ = function ($receiver) {
    var $this = this.mouseHitResultUsed_w91h29$_8zi9cw$_0;
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : MouseEvents$mouseHitResultUsed_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = $this.name) != null ? tmp$_3 : MouseEvents$mouseHitResultUsed_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  };
  MouseEvents.prototype.set_mouseHitResultUsed_irk9rs$ = function ($receiver, mouseHitResultUsed) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = this.mouseHitResultUsed_w91h29$_8zi9cw$_0.name) != null ? tmp$ : MouseEvents$mouseHitResultUsed_metadata.callableName, (tmp$_0 = mouseHitResultUsed) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  };
  var MouseEvents$mouseDebugHandlerOnce_metadata = new PropertyMetadata('mouseDebugHandlerOnce');
  MouseEvents.prototype.get_mouseDebugHandlerOnce_jv80cy$ = function ($receiver) {
    var $this = this.mouseDebugHandlerOnce_jv80cy$_l49pu8$_0;
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : MouseEvents$mouseDebugHandlerOnce_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = $this.name) != null ? tmp$_3 : MouseEvents$mouseDebugHandlerOnce_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  };
  MouseEvents.prototype.set_mouseDebugHandlerOnce_eb019r$ = function ($receiver, mouseDebugHandlerOnce) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = this.mouseDebugHandlerOnce_jv80cy$_l49pu8$_0.name) != null ? tmp$ : MouseEvents$mouseDebugHandlerOnce_metadata.callableName, (tmp$_0 = mouseDebugHandlerOnce) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  };
  Object.defineProperty(MouseEvents.prototype, 'startedPosLocal', {
    get: function () {
      return this.view.globalToLocal_jhva45$(this.startedPosGlobal, this._startedPosLocal_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'lastPosLocal', {
    get: function () {
      return this.view.globalToLocal_jhva45$(this.lastPosGlobal, this._lastPosLocal_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'currentPosLocal', {
    get: function () {
      return this.view.globalToLocal_jhva45$(this.currentPosGlobal, this._currentPosLocal_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'downPosLocal', {
    get: function () {
      return this.view.globalToLocal_jhva45$(this.downPosGlobal, this._downPosLocal_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'upPosLocal', {
    get: function () {
      return this.view.globalToLocal_jhva45$(this.upPosGlobal, this._upPosLocal_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'startedPosStage', {
    get: function () {
      return this.views.stage.globalToLocal_jhva45$(this.startedPosGlobal, this._startedPosStage_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'lastPosStage', {
    get: function () {
      return this.views.stage.globalToLocal_jhva45$(this.lastPosGlobal, this._lastPosStage_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'currentPosStage', {
    get: function () {
      return this.views.stage.globalToLocal_jhva45$(this.currentPosGlobal, this._currentPosStage_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'downPosStage', {
    get: function () {
      return this.views.stage.globalToLocal_jhva45$(this.downPosGlobal, this._downPosStage_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'upPosStage', {
    get: function () {
      return this.views.stage.globalToLocal_jhva45$(this.upPosGlobal, this._upPosStage_0);
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'startedPos', {
    get: function () {
      return this.startedPosLocal;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'lastPos', {
    get: function () {
      return this.lastPosLocal;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'currentPos', {
    get: function () {
      return this.currentPosLocal;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'downPos', {
    get: function () {
      return this.downPosGlobal;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'upPos', {
    get: function () {
      return this.upPosGlobal;
    }
  });
  MouseEvents.prototype.hitTest_0 = function (views) {
    if (!this.get_mouseHitSearch_w91h29$(views.input)) {
      this.set_mouseHitSearch_rookxo$(views.input, true);
      this.set_mouseHitResult_irk9rs$(views.input, views.stage.hitTest_lu1900$(views.nativeMouseX, views.nativeMouseY));
    }return this.get_mouseHitResult_w91h29$(views.input);
  };
  Object.defineProperty(MouseEvents.prototype, 'isOver', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.hitTest) != null ? hasAncestor(tmp$, this.view) : null) != null ? tmp$_0 : false;
    }
  });
  Object.defineProperty(MouseEvents.prototype, 'lastEvent', {
    get: function () {
      if (this.lastEvent_w78ke$_0 == null)
        return throwUPAE('lastEvent');
      return this.lastEvent_w78ke$_0;
    },
    set: function (lastEvent) {
      this.lastEvent_w78ke$_0 = lastEvent;
    }
  });
  MouseEvents.prototype.onMouseEvent_y4dy1h$ = function (views, event) {
    var tmp$;
    this.views = views;
    this.lastEvent = event;
    this.button = event.button;
    this.buttons = event.buttons;
    this.scrollDeltaX = event.scrollDeltaX;
    this.scrollDeltaY = event.scrollDeltaY;
    this.scrollDeltaZ = event.scrollDeltaZ;
    this.isShiftDown = event.isShiftDown;
    this.isCtrlDown = event.isCtrlDown;
    this.isAltDown = event.isAltDown;
    this.isMetaDown = event.isMetaDown;
    switch (event.type.name) {
      case 'UP':
        this.upPosGlobal.copyFrom_4l17gg$(views.input.mouse);
        if (this.upPosGlobal.distanceTo_4l17gg$(this.downPosGlobal) < this.CLICK_THRESHOLD) {
          tmp$ = this.clickedCount, this.clickedCount = tmp$ + 1 | 0;
        }
        break;
      case 'DOWN':
        this.downPosGlobal.copyFrom_4l17gg$(views.input.mouse);
        break;
      case 'CLICK':
        if (this.isOver) {
          this._onClick.invoke_11rb$(this);
          if (this._onClick.listenerCount > 0) {
            preventDefault(this.view);
          }}
        break;
      default:break;
    }
  };
  function MouseEvents$MouseEventsUpdate($outer, view) {
    this.$outer = $outer;
    this.view_8t81pe$_0 = view;
    this.$delegate_f97fvf$_0 = new Extra$Mixin();
  }
  Object.defineProperty(MouseEvents$MouseEventsUpdate.prototype, 'view', {
    get: function () {
      return this.view_8t81pe$_0;
    }
  });
  MouseEvents$MouseEventsUpdate.prototype.update_vcgvf3$ = function (views, ms) {
    this.$outer.update_vcgvf3$(views, ms);
  };
  Object.defineProperty(MouseEvents$MouseEventsUpdate.prototype, 'extra', {
    get: function () {
      return this.$delegate_f97fvf$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_f97fvf$_0.extra = tmp$;
    }
  });
  MouseEvents$MouseEventsUpdate.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MouseEventsUpdate',
    interfaces: [Extra, UpdateComponentWithViews]
  };
  function MouseEvents$update$lambda$lambda(closure$views, this$MouseEvents) {
    return function ($receiver, ctx) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12;
      var mouseHit = this$MouseEvents.hitTest_0(closure$views);
      if (mouseHit != null) {
        var bounds = mouseHit.getLocalBounds_2da8yn$();
        tmp$_5 = $receiver.renderContext.batch;
        tmp$ = ctx.getTex_9byvhi$(bitmap.Bitmaps.white);
        tmp$_0 = bounds.x;
        tmp$_1 = bounds.y;
        tmp$_2 = bounds.width;
        tmp$_3 = bounds.height;
        tmp$_4 = RGBA.Companion.invoke_tjonv8$(255, 0, 0, 63);
        tmp$_5.drawQuad_w9nimi$(tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, mouseHit.globalMatrix, void 0, tmp$_4);
        drawText_0($receiver.renderContext, Fonts$Companion_getInstance().defaultFont, 16.0, mouseHit.toString() + ' : ' + toString(closure$views.nativeMouseX) + ',' + toString(closure$views.nativeMouseY), 0, 0);
      }var mouseHitResultUsed = this$MouseEvents.get_mouseHitResultUsed_w91h29$($receiver.input);
      if (mouseHitResultUsed != null) {
        var bounds_0 = mouseHitResultUsed.getLocalBounds_2da8yn$();
        tmp$_12 = $receiver.renderContext.batch;
        tmp$_6 = ctx.getTex_9byvhi$(bitmap.Bitmaps.white);
        tmp$_7 = bounds_0.x;
        tmp$_8 = bounds_0.y;
        tmp$_9 = bounds_0.width;
        tmp$_10 = bounds_0.height;
        tmp$_11 = RGBA.Companion.invoke_tjonv8$(0, 0, 255, 63);
        tmp$_12.drawQuad_w9nimi$(tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, mouseHitResultUsed.globalMatrix, void 0, tmp$_11);
        var vview = mouseHitResultUsed;
        var yy = 16;
        while (vview != null) {
          drawText_0($receiver.renderContext, Fonts$Companion_getInstance().defaultFont, 16.0, vview.toString(), 0, yy);
          vview = vview != null ? vview.parent : null;
          yy = yy + 16 | 0;
        }
      }return Unit;
    };
  }
  MouseEvents.prototype.update_vcgvf3$ = function (views, ms) {
    var tmp$, tmp$_0, tmp$_1;
    if (!this.view.mouseEnabled)
      return;
    this.views = views;
    var $this = this.get_mouseDebugHandlerOnce_jv80cy$(views);
    if (!$this.completed) {
      $this.completed = true;
      views.debugHandlers.add_11rb$(MouseEvents$update$lambda$lambda(views, this));
    }this.hitTest = this.hitTest_0(views);
    var over = this.isOver;
    var inside = views.input.mouseInside;
    if (over)
      this.set_mouseHitResultUsed_irk9rs$(views.input, this.view);
    var pressing = views.input.mouseButtons !== 0;
    var overChanged = this.lastOver_0 !== over;
    var insideChanged = this.lastInside_0 !== inside;
    var pressingChanged = pressing !== this.lastPressing_0;
    this.currentPosGlobal.copyFrom_4l17gg$(views.input.mouse);
    if (!overChanged && over && !((tmp$ = this.currentPosGlobal) != null ? tmp$.equals(this.lastPosGlobal) : null))
      this.move.invoke_11rb$(this);
    if (!overChanged && !over && !((tmp$_0 = this.currentPosGlobal) != null ? tmp$_0.equals(this.lastPosGlobal) : null))
      this.moveOutside.invoke_11rb$(this);
    if (!((tmp$_1 = this.currentPosGlobal) != null ? tmp$_1.equals(this.lastPosGlobal) : null))
      this.moveAnywhere.invoke_11rb$(this);
    if (overChanged && over)
      this.over.invoke_11rb$(this);
    if (overChanged && !over)
      this.out.invoke_11rb$(this);
    if (over && pressingChanged && pressing) {
      this.startedPosGlobal.copyFrom_4l17gg$(this.currentPosGlobal);
      this.down.invoke_11rb$(this);
    }if (overChanged && pressing) {
      this.downFromOutside.invoke_11rb$(this);
    }if (pressingChanged && !pressing) {
      if (over)
        this.up.invoke_11rb$(this);
      else
        this.upOutside.invoke_11rb$(this);
      this.upAnywhere.invoke_11rb$(this);
    }if (insideChanged && !inside) {
      this.moveOutside.invoke_11rb$(this);
      this.out.invoke_11rb$(this);
      this.upOutside.invoke_11rb$(this);
      this.exit.invoke_11rb$(this);
    }this.lastOver_0 = over;
    this.lastInside_0 = inside;
    this.lastPressing_0 = pressing;
    this.lastPosGlobal.copyFrom_4l17gg$(this.currentPosGlobal);
    this.clickedCount = 0;
  };
  Object.defineProperty(MouseEvents.prototype, 'extra', {
    get: function () {
      return this.$delegate_gd5cny$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_gd5cny$_0.extra = tmp$;
    }
  });
  function MouseEvents$mouseHitSearch$lambda() {
    return false;
  }
  function MouseEvents$mouseHitResult$lambda() {
    return null;
  }
  function MouseEvents$mouseHitResultUsed$lambda() {
    return null;
  }
  function MouseEvents$mouseDebugHandlerOnce$lambda() {
    return new Once();
  }
  MouseEvents.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MouseEvents',
    interfaces: [Extra, MouseComponent]
  };
  function mouse$lambda($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(MouseEvents);
    var tmp$;
    var array = $this.emouse;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new MouseEvents($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, MouseEvents) ? tmp$ : throwCCE();
  }
  var mouse;
  var mouse_metadata = new PropertyMetadata('mouse');
  function get_mouse($receiver) {
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = mouse.name) != null ? tmp$ : mouse_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = mouse.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = mouse.name) != null ? tmp$_3 : mouse_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  }
  var mouse_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.mouse_cr2qe1$', wrapFunction(function () {
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    return function ($receiver, callback) {
      return callback(get_mouse($receiver));
    };
  }));
  var doMouseEvent = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.doMouseEvent_26os55$', wrapFunction(function () {
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, prop, handler) {
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  var onClick = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onClick_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('click', 1, function ($receiver_0) {
        return $receiver_0.click;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  var onOver = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onOver_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver_0, handler) {
      var prop = getPropertyCallableRef('over', 1, function ($receiver) {
        return $receiver.over;
      });
      var tmp$;
      if ((tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver_0;
    };
  }));
  var onOut = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onOut_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver_0, handler) {
      var prop = getPropertyCallableRef('out', 1, function ($receiver) {
        return $receiver.out;
      });
      var tmp$;
      if ((tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver_0;
    };
  }));
  var onDown = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onDown_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver_0, handler) {
      var prop = getPropertyCallableRef('down', 1, function ($receiver) {
        return $receiver.down;
      });
      var tmp$;
      if ((tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver_0;
    };
  }));
  var onDownFromOutside = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onDownFromOutside_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('downFromOutside', 1, function ($receiver) {
        return $receiver.downFromOutside;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  var onUp = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onUp_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('up', 1, function ($receiver_0) {
        return $receiver_0.up;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  var onUpOutside = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onUpOutside_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('upOutside', 1, function ($receiver) {
        return $receiver.upOutside;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  var onUpAnywhere = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onUpAnywhere_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver_0, handler) {
      var prop = getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
        return $receiver_0.upAnywhere;
      });
      var tmp$;
      if ((tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver_0;
    };
  }));
  var onMove = defineInlineFunction('korge-root-korge.com.soywiz.korge.input.onMove_j1eskf$', wrapFunction(function () {
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var get_mouse = _.com.soywiz.korge.input.get_mouse_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var launchImmediately = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.launchImmediately_ykkwzu$;
    function Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.exceptionState_0 = 1;
      this.local$closure$handler = closure$handler_0;
      this.local$closure$it = closure$it_0;
    }
    Coroutine$doMouseEvent$lambda$lambda$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda;
    Coroutine$doMouseEvent$lambda$lambda$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$handler(this.local$closure$it, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0) {
      return function (continuation_0, suspended) {
        var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda(closure$handler_0, closure$it_0, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function doMouseEvent$lambda$lambda(closure$mouse, closure$handler) {
      return function (it) {
        launchImmediately(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda(closure$handler, it));
        return Unit;
      };
    }
    return function ($receiver, handler) {
      var prop = getPropertyCallableRef('move', 1, function ($receiver) {
        return $receiver.move;
      });
      var tmp$;
      if ((tmp$ = $receiver != null ? get_mouse($receiver) : null) != null) {
        prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda(tmp$, handler));
      }return $receiver;
    };
  }));
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_2(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_2(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_2(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_2(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_3(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_3(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_3(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_3(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_4(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_4(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_4(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_4(closure$handler, it));
      return Unit;
    };
  }
  function SwipeInfo(dx, dy, direction) {
    if (dx === void 0)
      dx = 0.0;
    if (dy === void 0)
      dy = 0.0;
    this.dx = dx;
    this.dy = dy;
    this.direction = direction;
  }
  SwipeInfo.prototype.setTo_mlwjuj$ = function (dx, dy, direction) {
    this.dx = dx;
    this.dy = dy;
    this.direction = direction;
    return this;
  };
  SwipeInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SwipeInfo',
    interfaces: []
  };
  SwipeInfo.prototype.component1 = function () {
    return this.dx;
  };
  SwipeInfo.prototype.component2 = function () {
    return this.dy;
  };
  SwipeInfo.prototype.component3 = function () {
    return this.direction;
  };
  SwipeInfo.prototype.copy_mlwjuj$ = function (dx, dy, direction) {
    return new SwipeInfo(dx === void 0 ? this.dx : dx, dy === void 0 ? this.dy : dy, direction === void 0 ? this.direction : direction);
  };
  SwipeInfo.prototype.toString = function () {
    return 'SwipeInfo(dx=' + Kotlin.toString(this.dx) + (', dy=' + Kotlin.toString(this.dy)) + (', direction=' + Kotlin.toString(this.direction)) + ')';
  };
  SwipeInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.dx) | 0;
    result = result * 31 + Kotlin.hashCode(this.dy) | 0;
    result = result * 31 + Kotlin.hashCode(this.direction) | 0;
    return result;
  };
  SwipeInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.dx, other.dx) && Kotlin.equals(this.dy, other.dy) && Kotlin.equals(this.direction, other.direction)))));
  };
  function SwipeDirection(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function SwipeDirection_initFields() {
    SwipeDirection_initFields = function () {
    };
    SwipeDirection$LEFT_instance = new SwipeDirection('LEFT', 0);
    SwipeDirection$RIGHT_instance = new SwipeDirection('RIGHT', 1);
    SwipeDirection$TOP_instance = new SwipeDirection('TOP', 2);
    SwipeDirection$BOTTOM_instance = new SwipeDirection('BOTTOM', 3);
  }
  var SwipeDirection$LEFT_instance;
  function SwipeDirection$LEFT_getInstance() {
    SwipeDirection_initFields();
    return SwipeDirection$LEFT_instance;
  }
  var SwipeDirection$RIGHT_instance;
  function SwipeDirection$RIGHT_getInstance() {
    SwipeDirection_initFields();
    return SwipeDirection$RIGHT_instance;
  }
  var SwipeDirection$TOP_instance;
  function SwipeDirection$TOP_getInstance() {
    SwipeDirection_initFields();
    return SwipeDirection$TOP_instance;
  }
  var SwipeDirection$BOTTOM_instance;
  function SwipeDirection$BOTTOM_getInstance() {
    SwipeDirection_initFields();
    return SwipeDirection$BOTTOM_instance;
  }
  SwipeDirection.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SwipeDirection',
    interfaces: [Enum]
  };
  function SwipeDirection$values() {
    return [SwipeDirection$LEFT_getInstance(), SwipeDirection$RIGHT_getInstance(), SwipeDirection$TOP_getInstance(), SwipeDirection$BOTTOM_getInstance()];
  }
  SwipeDirection.values = SwipeDirection$values;
  function SwipeDirection$valueOf(name) {
    switch (name) {
      case 'LEFT':
        return SwipeDirection$LEFT_getInstance();
      case 'RIGHT':
        return SwipeDirection$RIGHT_getInstance();
      case 'TOP':
        return SwipeDirection$TOP_getInstance();
      case 'BOTTOM':
        return SwipeDirection$BOTTOM_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.input.SwipeDirection.' + name);
    }
  }
  SwipeDirection.valueOf_61zpoe$ = SwipeDirection$valueOf;
  function onSwipe$views(closure$view) {
    return function () {
      return ensureNotNull(closure$view.stage).views;
    };
  }
  function onSwipe$updateMouse(closure$views, closure$mousePos) {
    return function () {
      var views = closure$views();
      closure$mousePos.setTo_lu1900$(views.nativeMouseX, views.nativeMouseY);
    };
  }
  function onSwipe$updateCoordinates(closure$mousePos, closure$cx, closure$movedLeft, closure$movedRight, closure$cy, closure$movedTop, closure$movedBottom) {
    return function () {
      if (closure$mousePos.x < closure$cx.v)
        closure$movedLeft.v = true;
      if (closure$mousePos.x > closure$cx.v)
        closure$movedRight.v = true;
      if (closure$mousePos.y < closure$cy.v)
        closure$movedTop.v = true;
      if (closure$mousePos.y > closure$cy.v)
        closure$movedBottom.v = true;
      closure$cx.v = closure$mousePos.x;
      closure$cy.v = closure$mousePos.y;
    };
  }
  function Coroutine$onSwipe$triggerEvent(closure$register_0, closure$views_0, closure$callback_0, closure$swipeInfo_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0, direction_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$register = closure$register_0;
    this.local$closure$views = closure$views_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$swipeInfo = closure$swipeInfo_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$sy = closure$sy_0;
    this.local$direction = direction_0;
  }
  Coroutine$onSwipe$triggerEvent.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$triggerEvent.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$triggerEvent.prototype.constructor = Coroutine$onSwipe$triggerEvent;
  Coroutine$onSwipe$triggerEvent.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$register.v = false;
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$closure$views(), this.local$closure$swipeInfo.setTo_mlwjuj$(this.local$closure$cx.v - this.local$closure$sx.v, this.local$closure$cy.v - this.local$closure$sy.v, this.local$direction), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$triggerEvent(closure$register_0, closure$views_0, closure$callback_0, closure$swipeInfo_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0) {
    return function (direction_0, continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$triggerEvent(closure$register_0, closure$views_0, closure$callback_0, closure$swipeInfo_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0, direction_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onSwipe$checkPositionOnMove(closure$threshold_0, closure$sx_0, closure$cx_0, closure$movedRight_0, closure$movedLeft_0, closure$sy_0, closure$cy_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$threshold = closure$threshold_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$movedRight = closure$movedRight_0;
    this.local$closure$movedLeft = closure$movedLeft_0;
    this.local$closure$sy = closure$sy_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$movedBottom = closure$movedBottom_0;
    this.local$closure$movedTop = closure$movedTop_0;
    this.local$closure$direction = closure$direction_0;
    this.local$closure$triggerEvent = closure$triggerEvent_0;
    this.local$tmp$ = void 0;
  }
  Coroutine$onSwipe$checkPositionOnMove.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$checkPositionOnMove.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$checkPositionOnMove.prototype.constructor = Coroutine$onSwipe$checkPositionOnMove;
  Coroutine$onSwipe$checkPositionOnMove.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$threshold < 0) {
              return;
            } else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$closure$sx.v - this.local$closure$cx.v > this.local$closure$threshold && !this.local$closure$movedRight.v) {
              this.local$tmp$ = SwipeDirection$LEFT_getInstance();
              this.state_0 = 6;
              continue;
            } else {
              if (this.local$closure$cx.v - this.local$closure$sx.v > this.local$closure$threshold && !this.local$closure$movedLeft.v) {
                this.local$tmp$ = SwipeDirection$RIGHT_getInstance();
                this.state_0 = 5;
                continue;
              } else {
                if (this.local$closure$sy.v - this.local$closure$cy.v > this.local$closure$threshold && !this.local$closure$movedBottom.v) {
                  this.local$tmp$ = SwipeDirection$TOP_getInstance();
                  this.state_0 = 4;
                  continue;
                } else {
                  if (this.local$closure$cy.v - this.local$closure$sy.v > this.local$closure$threshold && !this.local$closure$movedTop.v) {
                    this.local$tmp$ = SwipeDirection$BOTTOM_getInstance();
                    this.state_0 = 3;
                    continue;
                  } else {
                    return;
                  }
                }
              }
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            var curDirection = this.local$tmp$;
            if (this.local$closure$direction == null || equals(this.local$closure$direction, curDirection)) {
              this.state_0 = 7;
              this.result_0 = this.local$closure$triggerEvent(curDirection, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 8;
              continue;
            }

          case 7:
            this.state_0 = 8;
            continue;
          case 8:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$checkPositionOnMove(closure$threshold_0, closure$sx_0, closure$cx_0, closure$movedRight_0, closure$movedLeft_0, closure$sy_0, closure$cy_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$checkPositionOnMove(closure$threshold_0, closure$sx_0, closure$cx_0, closure$movedRight_0, closure$movedLeft_0, closure$sy_0, closure$cy_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onSwipe$checkPositionOnUp(closure$threshold_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0, closure$movedRight_0, closure$movedLeft_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$threshold = closure$threshold_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$sy = closure$sy_0;
    this.local$closure$movedRight = closure$movedRight_0;
    this.local$closure$movedLeft = closure$movedLeft_0;
    this.local$closure$movedBottom = closure$movedBottom_0;
    this.local$closure$movedTop = closure$movedTop_0;
    this.local$closure$direction = closure$direction_0;
    this.local$closure$triggerEvent = closure$triggerEvent_0;
    this.local$tmp$ = void 0;
  }
  Coroutine$onSwipe$checkPositionOnUp.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$checkPositionOnUp.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$checkPositionOnUp.prototype.constructor = Coroutine$onSwipe$checkPositionOnUp;
  Coroutine$onSwipe$checkPositionOnUp.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$threshold >= 0) {
              return;
            } else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var x = this.local$closure$cx.v - this.local$closure$sx.v;
            var horDiff = Math_0.abs(x);
            var x_0 = this.local$closure$cy.v - this.local$closure$sy.v;
            var verDiff = Math_0.abs(x_0);
            if (horDiff >= verDiff && this.local$closure$cx.v < this.local$closure$sx.v && !this.local$closure$movedRight.v) {
              this.local$tmp$ = SwipeDirection$LEFT_getInstance();
              this.state_0 = 6;
              continue;
            } else {
              if (horDiff >= verDiff && this.local$closure$cx.v > this.local$closure$sx.v && !this.local$closure$movedLeft.v) {
                this.local$tmp$ = SwipeDirection$RIGHT_getInstance();
                this.state_0 = 5;
                continue;
              } else {
                if (horDiff <= verDiff && this.local$closure$cy.v < this.local$closure$sy.v && !this.local$closure$movedBottom.v) {
                  this.local$tmp$ = SwipeDirection$TOP_getInstance();
                  this.state_0 = 4;
                  continue;
                } else {
                  if (horDiff <= verDiff && this.local$closure$cy.v > this.local$closure$sy.v && !this.local$closure$movedTop.v) {
                    this.local$tmp$ = SwipeDirection$BOTTOM_getInstance();
                    this.state_0 = 3;
                    continue;
                  } else {
                    return;
                  }
                }
              }
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            var curDirection = this.local$tmp$;
            if (this.local$closure$direction == null || equals(this.local$closure$direction, curDirection)) {
              this.state_0 = 7;
              this.result_0 = this.local$closure$triggerEvent(curDirection, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 8;
              continue;
            }

          case 7:
            this.state_0 = 8;
            continue;
          case 8:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$checkPositionOnUp(closure$threshold_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0, closure$movedRight_0, closure$movedLeft_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$checkPositionOnUp(closure$threshold_0, closure$cx_0, closure$sx_0, closure$cy_0, closure$sy_0, closure$movedRight_0, closure$movedLeft_0, closure$movedBottom_0, closure$movedTop_0, closure$direction_0, closure$triggerEvent_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onSwipe$lambda$lambda(closure$updateMouse_0, closure$register_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$cx_0, closure$cy_0, closure$movedLeft_0, closure$movedRight_0, closure$movedTop_0, closure$movedBottom_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$register = closure$register_0;
    this.local$closure$mousePos = closure$mousePos_0;
    this.local$closure$sx = closure$sx_0;
    this.local$closure$sy = closure$sy_0;
    this.local$closure$cx = closure$cx_0;
    this.local$closure$cy = closure$cy_0;
    this.local$closure$movedLeft = closure$movedLeft_0;
    this.local$closure$movedRight = closure$movedRight_0;
    this.local$closure$movedTop = closure$movedTop_0;
    this.local$closure$movedBottom = closure$movedBottom_0;
  }
  Coroutine$onSwipe$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$lambda$lambda.prototype.constructor = Coroutine$onSwipe$lambda$lambda;
  Coroutine$onSwipe$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$updateMouse();
            this.local$closure$register.v = true;
            this.local$closure$sx.v = this.local$closure$mousePos.x;
            this.local$closure$sy.v = this.local$closure$mousePos.y;
            this.local$closure$cx.v = this.local$closure$sx.v;
            this.local$closure$cy.v = this.local$closure$sy.v;
            this.local$closure$movedLeft.v = false;
            this.local$closure$movedRight.v = false;
            this.local$closure$movedTop.v = false;
            return this.local$closure$movedBottom.v = false, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$lambda$lambda(closure$updateMouse_0, closure$register_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$cx_0, closure$cy_0, closure$movedLeft_0, closure$movedRight_0, closure$movedTop_0, closure$movedBottom_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$lambda$lambda(closure$updateMouse_0, closure$register_0, closure$mousePos_0, closure$sx_0, closure$sy_0, closure$cx_0, closure$cy_0, closure$movedLeft_0, closure$movedRight_0, closure$movedTop_0, closure$movedBottom_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onSwipe$lambda$lambda_0(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnMove_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$register = closure$register_0;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$updateCoordinates = closure$updateCoordinates_0;
    this.local$closure$checkPositionOnMove = closure$checkPositionOnMove_0;
  }
  Coroutine$onSwipe$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$lambda$lambda_0.prototype.constructor = Coroutine$onSwipe$lambda$lambda_0;
  Coroutine$onSwipe$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$register.v) {
              this.local$closure$updateMouse();
              this.local$closure$updateCoordinates();
              this.state_0 = 2;
              this.result_0 = this.local$closure$checkPositionOnMove(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$lambda$lambda_0(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnMove_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$lambda$lambda_0(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnMove_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$onSwipe$lambda$lambda_1(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnUp_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$register = closure$register_0;
    this.local$closure$updateMouse = closure$updateMouse_0;
    this.local$closure$updateCoordinates = closure$updateCoordinates_0;
    this.local$closure$checkPositionOnUp = closure$checkPositionOnUp_0;
  }
  Coroutine$onSwipe$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$onSwipe$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$onSwipe$lambda$lambda_1.prototype.constructor = Coroutine$onSwipe$lambda$lambda_1;
  Coroutine$onSwipe$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$register.v) {
              this.local$closure$updateMouse();
              this.local$closure$updateCoordinates();
              this.local$closure$register.v = false;
              this.state_0 = 2;
              this.result_0 = this.local$closure$checkPositionOnUp(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function onSwipe$lambda$lambda_1(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnUp_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$onSwipe$lambda$lambda_1(closure$register_0, closure$updateMouse_0, closure$updateCoordinates_0, closure$checkPositionOnUp_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function onSwipe($receiver, threshold, direction, callback) {
    if (threshold === void 0)
      threshold = -1.0;
    if (direction === void 0)
      direction = null;
    var register = {v: false};
    var sx = {v: 0.0};
    var sy = {v: 0.0};
    var cx = {v: 0.0};
    var cy = {v: 0.0};
    var movedLeft = {v: false};
    var movedRight = {v: false};
    var movedTop = {v: false};
    var movedBottom = {v: false};
    var view = $receiver;
    var mousePos = Point.Companion.invoke();
    var swipeInfo = new SwipeInfo(0.0, 0.0, SwipeDirection$TOP_getInstance());
    var views = onSwipe$views(view);
    var updateMouse = onSwipe$updateMouse(views, mousePos);
    var updateCoordinates = onSwipe$updateCoordinates(mousePos, cx, movedLeft, movedRight, cy, movedTop, movedBottom);
    var triggerEvent = onSwipe$triggerEvent(register, views, callback, swipeInfo, cx, sx, cy, sy);
    var checkPositionOnMove = onSwipe$checkPositionOnMove(threshold, sx, cx, movedRight, movedLeft, sy, cy, movedBottom, movedTop, direction, triggerEvent);
    var checkPositionOnUp = onSwipe$checkPositionOnUp(threshold, cx, sx, cy, sy, movedRight, movedLeft, movedBottom, movedTop, direction, triggerEvent);
    var $receiver_1 = get_mouse($receiver);
    getPropertyCallableRef('down', 1, function ($receiver_0) {
      return $receiver_0.down;
    }).get($receiver_1).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_2($receiver_1, onSwipe$lambda$lambda(updateMouse, register, mousePos, sx, sy, cx, cy, movedLeft, movedRight, movedTop, movedBottom)));
    getPropertyCallableRef('moveAnywhere', 1, function ($receiver) {
      return $receiver.moveAnywhere;
    }).get($receiver_1).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_3($receiver_1, onSwipe$lambda$lambda_0(register, updateMouse, updateCoordinates, checkPositionOnMove)));
    getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
      return $receiver_0.upAnywhere;
    }).get($receiver_1).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_4($receiver_1, onSwipe$lambda$lambda_1(register, updateMouse, updateCoordinates, checkPositionOnUp)));
    return $receiver;
  }
  function DefaultViewport() {
    DefaultViewport_instance = this;
    this.WIDTH = 1280;
    this.HEIGHT = 720;
  }
  DefaultViewport.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DefaultViewport',
    interfaces: []
  };
  var DefaultViewport_instance = null;
  function DefaultViewport_getInstance() {
    if (DefaultViewport_instance === null) {
      new DefaultViewport();
    }return DefaultViewport_instance;
  }
  function KorgeDeprecated() {
  }
  KorgeDeprecated.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeDeprecated',
    interfaces: [Annotation]
  };
  function KorgeInternal() {
  }
  KorgeInternal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeInternal',
    interfaces: [Annotation]
  };
  function KorgeUntested() {
  }
  KorgeUntested.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeUntested',
    interfaces: [Annotation]
  };
  function KorgeUnused() {
  }
  KorgeUnused.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeUnused',
    interfaces: [Annotation]
  };
  var KORGE_VERSION;
  function fastTransformX($receiver, px, py) {
    return $receiver.a * px + $receiver.c * py + $receiver.tx;
  }
  function fastTransformY($receiver, px, py) {
    return $receiver.d * py + $receiver.b * px + $receiver.ty;
  }
  function fastTransformX_0($receiver, p) {
    return fastTransformX($receiver, p.x, p.y);
  }
  function fastTransformY_0($receiver, p) {
    return fastTransformY($receiver, p.x, p.y);
  }
  function fastTransformXf($receiver, px, py) {
    return $receiver.a * px + $receiver.c * py + $receiver.tx;
  }
  function fastTransformYf($receiver, px, py) {
    return $receiver.d * py + $receiver.b * px + $receiver.ty;
  }
  function fastTransformXf_0($receiver, px, py) {
    return $receiver.a * px + $receiver.c * py + $receiver.tx;
  }
  function fastTransformYf_0($receiver, px, py) {
    return $receiver.d * py + $receiver.b * px + $receiver.ty;
  }
  function LipSync(lipsync) {
    this.lipsync = lipsync;
  }
  Object.defineProperty(LipSync.prototype, 'totalTime', {
    get: function () {
      var $receiver = this.lipsync.length * 16 | 0;
      return TimeSpan.Companion.fromMilliseconds_14dthe$($receiver);
    }
  });
  LipSync.prototype.get_fv8bff$ = function (time) {
    var $receiver = this.lipsync;
    var index = time.millisecondsInt / 16 | 0;
    return toBoxedChar(index >= 0 && index <= get_lastIndex_2($receiver) ? $receiver.charCodeAt(index) : unboxChar(toBoxedChar(88)));
  };
  LipSync.prototype.getAF_fv8bff$ = function (time) {
    var tmp$;
    var c = unboxChar(this.get_fv8bff$(time));
    switch (c) {
      case 71:
        tmp$ = 66;
        break;
      case 72:
        tmp$ = 67;
        break;
      case 88:
        tmp$ = 65;
        break;
      default:tmp$ = c;
        break;
    }
    return toBoxedChar(tmp$);
  };
  LipSync.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LipSync',
    interfaces: []
  };
  function Voice(voice, lipsync) {
    this.voice = voice;
    this.lipsync = lipsync;
    this.event = new LipSyncEvent();
  }
  Object.defineProperty(Voice.prototype, 'totalTime', {
    get: function () {
      return this.lipsync.totalTime;
    }
  });
  Voice.prototype.get_fv8bff$ = function (time) {
    return this.lipsync.get_fv8bff$(time);
  };
  Voice.prototype.getAF_fv8bff$ = function (time) {
    return this.lipsync.getAF_fv8bff$(time);
  };
  function Voice$play$lambda(closure$views) {
    return function (e) {
      closure$views.dispatch_nipq8w$(getKClass(LipSyncEvent), e);
      return Unit;
    };
  }
  function Coroutine$play_fnqkmp$($this, name_0, views_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$name = name_0;
    this.local$views = views_0;
  }
  Coroutine$play_fnqkmp$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$play_fnqkmp$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$play_fnqkmp$.prototype.constructor = Coroutine$play_fnqkmp$;
  Coroutine$play_fnqkmp$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.play_596pp7$(this.local$name, Voice$play$lambda(this.local$views), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Voice.prototype.play_fnqkmp$ = function (name_0, views_0, continuation_0, suspended) {
    var instance = new Coroutine$play_fnqkmp$(this, name_0, views_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Voice$play$lambda_0(closure$handler, this$Voice, closure$name) {
    return function ($receiver, current, total) {
      if (current.compareTo_11rb$(total) >= 0) {
        closure$handler(this$Voice.event.set_dxxjqq$(closure$name, TimeSpan.Companion.fromSeconds_14dthe$(0), 88));
      } else {
        closure$handler(this$Voice.event.set_dxxjqq$(closure$name, current, unboxChar(this$Voice.lipsync.get_fv8bff$(current))));
      }
      return Unit;
    };
  }
  function Coroutine$play_596pp7$($this, name_0, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$name = name_0;
    this.local$handler = handler_0;
  }
  Coroutine$play_596pp7$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$play_596pp7$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$play_596pp7$.prototype.constructor = Coroutine$play_596pp7$;
  Coroutine$play_596pp7$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = playAndWait(this.$this.voice, void 0, void 0, Voice$play$lambda_0(this.local$handler, this.$this, this.local$name), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Voice.prototype.play_596pp7$ = function (name_0, handler_0, continuation_0, suspended) {
    var instance = new Coroutine$play_596pp7$(this, name_0, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Voice.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Voice',
    interfaces: []
  };
  function LipSyncEvent(name, time, lip) {
    if (name === void 0)
      name = '';
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (lip === void 0)
      lip = 88;
    Event.call(this);
    this.name = name;
    this.time = time;
    this.lip = toBoxedChar(lip);
  }
  LipSyncEvent.prototype.set_dxxjqq$ = function (name, elapsedTime, lip) {
    this.name = name;
    this.time = elapsedTime;
    this.lip = toBoxedChar(lip);
    return this;
  };
  Object.defineProperty(LipSyncEvent.prototype, 'timeMs', {
    get: function () {
      return this.time.millisecondsInt;
    }
  });
  LipSyncEvent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LipSyncEvent',
    interfaces: [Event]
  };
  LipSyncEvent.prototype.component1 = function () {
    return this.name;
  };
  LipSyncEvent.prototype.component2 = function () {
    return this.time;
  };
  LipSyncEvent.prototype.component3 = function () {
    return this.lip;
  };
  LipSyncEvent.prototype.copy_dxxjqq$ = function (name, time, lip) {
    return new LipSyncEvent(name === void 0 ? this.name : name, time === void 0 ? this.time : time, lip === void 0 ? this.lip : lip);
  };
  LipSyncEvent.prototype.toString = function () {
    return 'LipSyncEvent(name=' + Kotlin.toString(this.name) + (', time=' + Kotlin.toString(this.time)) + (', lip=' + Kotlin.toString(this.lip)) + ')';
  };
  LipSyncEvent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.time) | 0;
    result = result * 31 + Kotlin.hashCode(this.lip) | 0;
    return result;
  };
  LipSyncEvent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.time, other.time) && Kotlin.equals(this.lip, other.lip)))));
  };
  function LipSyncComponent(view) {
    this.view_el6p76$_0 = view;
  }
  Object.defineProperty(LipSyncComponent.prototype, 'view', {
    get: function () {
      return this.view_el6p76$_0;
    }
  });
  LipSyncComponent.prototype.onEvent_kd3tn9$ = function (event) {
    if (Kotlin.isType(event, LipSyncEvent)) {
      var name = this.view.getPropString_puj7f4$('lipsync');
      if (equals(event.name, name)) {
        play(this.view, String.fromCharCode(unboxChar(event.lip)));
      }}};
  LipSyncComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LipSyncComponent',
    interfaces: [EventComponent]
  };
  function lipsync($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(LipSyncComponent);
    var tmp$;
    var array = $this.eevent;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new LipSyncComponent($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, LipSyncComponent) ? tmp$ : throwCCE();
  }
  function Coroutine$readVoice($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$lipsyncFile = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readVoice.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readVoice.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readVoice.prototype.constructor = Coroutine$readVoice;
  Coroutine$readVoice.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$lipsyncFile = this.local$$receiver.withExtension_61zpoe$('lipsync');
            this.state_0 = 2;
            this.result_0 = readNativeSoundOptimized(this.local$$receiver, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$lipsyncFile.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (this.result_0) {
              this.state_0 = 4;
              this.result_0 = this.local$lipsyncFile.readString_qa9gbo$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.local$tmp$_0 = '';
              this.state_0 = 5;
              continue;
            }

          case 4:
            var $receiver = this.result_0;
            var tmp$;
            this.local$tmp$_0 = trim(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : throwCCE()).toString();
            this.state_0 = 5;
            continue;
          case 5:
            return new Voice(this.local$tmp$, new LipSync(this.local$tmp$_0));
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readVoice($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readVoice($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function configureLoggerFromProperties(str) {
    var tmp$;
    var props = Props$Companion_getInstance().load_61zpoe$(str);
    tmp$ = props.entries.iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var key = tmp$_0.key;
      var value = tmp$_0.value;
      try {
        Logger.Companion.invoke_61zpoe$(key).level = Logger$Level$valueOf(value.toUpperCase());
      } catch (e) {
        if (Kotlin.isType(e, Throwable)) {
          printStackTrace(e);
        } else
          throw e;
      }
    }
  }
  function Coroutine$configureLoggerFromProperties(file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 4;
    this.local$file = file_0;
  }
  Coroutine$configureLoggerFromProperties.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$configureLoggerFromProperties.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$configureLoggerFromProperties.prototype.constructor = Coroutine$configureLoggerFromProperties;
  Coroutine$configureLoggerFromProperties.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = this.local$file.readString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            configureLoggerFromProperties(this.result_0);
            this.exceptionState_0 = 4;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 4;
            var e = this.exception_0;
            if (!Kotlin.isType(e, Throwable))
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            return;
          case 4:
            throw this.exception_0;
          default:this.state_0 = 4;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 4) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function configureLoggerFromProperties_0(file_0, continuation_0, suspended) {
    var instance = new Coroutine$configureLoggerFromProperties(file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Props(props) {
    Props$Companion_getInstance();
    if (props === void 0)
      props = LinkedHashMap_init();
    this.props_0 = props;
  }
  function Props$Companion() {
    Props$Companion_instance = this;
  }
  Props$Companion.prototype.load_61zpoe$ = function (str) {
    var $receiver = new Props();
    $receiver.deserializeNew_61zpoe$(str);
    return $receiver;
  };
  Props$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Props$Companion_instance = null;
  function Props$Companion_getInstance() {
    if (Props$Companion_instance === null) {
      new Props$Companion();
    }return Props$Companion_instance;
  }
  Props.prototype.deserializeAdd_61zpoe$ = function (str) {
    var tmp$;
    tmp$ = split(str, ['\n']).iterator();
    while (tmp$.hasNext()) {
      var line = tmp$.next();
      if (startsWith_0(line, 35))
        continue;
      if (isBlank(line))
        continue;
      var parts = split_0(line, Kotlin.charArrayOf(61), void 0, 2);
      var $receiver = parts.get_za3lpa$(0);
      var tmp$_0;
      var key = trim(Kotlin.isCharSequence(tmp$_0 = $receiver) ? tmp$_0 : throwCCE()).toString();
      var $receiver_0 = 1 >= 0 && 1 <= get_lastIndex_1(parts) ? parts.get_za3lpa$(1) : ' ';
      var tmp$_1;
      var value = trim(Kotlin.isCharSequence(tmp$_1 = $receiver_0) ? tmp$_1 : throwCCE()).toString();
      this.props_0.put_xwzc9p$(key, value);
    }
  };
  Props.prototype.deserializeNew_61zpoe$ = function (str) {
    this.clear();
    this.deserializeAdd_61zpoe$(str);
  };
  Props.prototype.serialize = function () {
    var $receiver = this.props_0;
    var destination = ArrayList_init_0($receiver.size);
    var tmp$;
    tmp$ = $receiver.entries.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(item.key + '=' + item.value);
    }
    return joinToString(destination, '\n');
  };
  Object.defineProperty(Props.prototype, 'entries', {
    get: function () {
      return this.props_0.entries;
    }
  });
  Object.defineProperty(Props.prototype, 'keys', {
    get: function () {
      return this.props_0.keys;
    }
  });
  Object.defineProperty(Props.prototype, 'size', {
    get: function () {
      return this.props_0.size;
    }
  });
  Object.defineProperty(Props.prototype, 'values', {
    get: function () {
      return this.props_0.values;
    }
  });
  Props.prototype.clear = function () {
    return this.props_0.clear();
  };
  Props.prototype.containsKey_11rb$ = function (key) {
    return this.props_0.containsKey_11rb$(key);
  };
  Props.prototype.containsValue_11rc$ = function (value) {
    return this.props_0.containsValue_11rc$(value);
  };
  Props.prototype.get_11rb$ = function (key) {
    return this.props_0.get_11rb$(key);
  };
  Props.prototype.isEmpty = function () {
    return this.props_0.isEmpty();
  };
  Props.prototype.put_xwzc9p$ = function (key, value) {
    return this.props_0.put_xwzc9p$(key, value);
  };
  Props.prototype.putAll_a2k3zr$ = function (from) {
    return this.props_0.putAll_a2k3zr$(from);
  };
  Props.prototype.remove_11rb$ = function (key) {
    return this.props_0.remove_11rb$(key);
  };
  Props.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Props',
    interfaces: [MutableMap]
  };
  function Coroutine$loadProperties($receiver_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
    this.local$charset = charset_0;
  }
  Coroutine$loadProperties.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadProperties.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadProperties.prototype.constructor = Coroutine$loadProperties;
  Coroutine$loadProperties.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = lang.UTF8;
            this.local$tmp$ = Props$Companion_getInstance();
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.readString_qa9gbo$(this.local$charset, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$tmp$.load_61zpoe$(this.result_0);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function loadProperties($receiver_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$loadProperties($receiver_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function saveProperties($receiver, props, charset, continuation) {
    if (charset === void 0)
      charset = lang.UTF8;
    return $receiver.writeString_lp1jh2$(props.serialize(), [], charset, continuation);
  }
  function ParticleEmitter() {
    this.texture = null;
    this.sourcePosition = IPoint.Companion.invoke();
    this.sourcePositionVariance = IPoint.Companion.invoke();
    this.speed = 0.0;
    this.speedVariance = 0.0;
    this.lifeSpan = 0.0;
    this.lifespanVariance = 0.0;
    this.angle = 0.0;
    this.angleVariance = 0.0;
    this.gravity = IPoint.Companion.invoke();
    this.radialAcceleration = 0.0;
    this.tangentialAcceleration = 0.0;
    this.radialAccelVariance = 0.0;
    this.tangentialAccelVariance = 0.0;
    this.startColor = new RGBAf(1.0, 1.0, 1.0, 1.0);
    this.startColorVariance = new RGBAf(0.0, 0.0, 0.0, 0.0);
    this.endColor = new RGBAf(1.0, 1.0, 1.0, 1.0);
    this.endColorVariance = new RGBAf(0.0, 0.0, 0.0, 0.0);
    this.maxParticles = 0;
    this.startSize = 0.0;
    this.startSizeVariance = 0.0;
    this.endSize = 0.0;
    this.endSizeVariance = 0.0;
    this.duration = 0.0;
    this.emitterType = ParticleEmitter$Type$GRAVITY_getInstance();
    this.maxRadius = 0.0;
    this.maxRadiusVariance = 0.0;
    this.minRadius = 0.0;
    this.minRadiusVariance = 0.0;
    this.rotatePerSecond = 0.0;
    this.rotatePerSecondVariance = 0.0;
    this.blendFactors = BlendMode$NORMAL_getInstance().factors;
    this.rotationStart = 0.0;
    this.rotationStartVariance = 0.0;
    this.rotationEnd = 0.0;
    this.rotationEndVariance = 0.0;
  }
  function ParticleEmitter$Type(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ParticleEmitter$Type_initFields() {
    ParticleEmitter$Type_initFields = function () {
    };
    ParticleEmitter$Type$GRAVITY_instance = new ParticleEmitter$Type('GRAVITY', 0);
    ParticleEmitter$Type$RADIAL_instance = new ParticleEmitter$Type('RADIAL', 1);
  }
  var ParticleEmitter$Type$GRAVITY_instance;
  function ParticleEmitter$Type$GRAVITY_getInstance() {
    ParticleEmitter$Type_initFields();
    return ParticleEmitter$Type$GRAVITY_instance;
  }
  var ParticleEmitter$Type$RADIAL_instance;
  function ParticleEmitter$Type$RADIAL_getInstance() {
    ParticleEmitter$Type_initFields();
    return ParticleEmitter$Type$RADIAL_instance;
  }
  ParticleEmitter$Type.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Type',
    interfaces: [Enum]
  };
  function ParticleEmitter$Type$values() {
    return [ParticleEmitter$Type$GRAVITY_getInstance(), ParticleEmitter$Type$RADIAL_getInstance()];
  }
  ParticleEmitter$Type.values = ParticleEmitter$Type$values;
  function ParticleEmitter$Type$valueOf(name) {
    switch (name) {
      case 'GRAVITY':
        return ParticleEmitter$Type$GRAVITY_getInstance();
      case 'RADIAL':
        return ParticleEmitter$Type$RADIAL_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.particle.ParticleEmitter.Type.' + name);
    }
  }
  ParticleEmitter$Type.valueOf_61zpoe$ = ParticleEmitter$Type$valueOf;
  ParticleEmitter.prototype.create_syxxoe$ = function (x, y, time) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (time === void 0)
      time = 2147483647;
    var $receiver = new ParticleEmitterView(this, new Point(numberToDouble(x), numberToDouble(y)));
    $receiver.timeUntilStop = time;
    return $receiver;
  };
  function ParticleEmitter$load$lambda$point(closure$item) {
    return function () {
      var x = closure$item.double_io5o9c$('x');
      var y = closure$item.double_io5o9c$('y');
      return new Point(numberToDouble(x), numberToDouble(y));
    };
  }
  function ParticleEmitter$load$lambda$scalar(closure$item) {
    return function () {
      return closure$item.double_io5o9c$('value');
    };
  }
  function ParticleEmitter$load$lambda$blendFactor(closure$scalar) {
    return function () {
      switch (numberToInt(closure$scalar())) {
        case 0:
          return AG$BlendFactor.ZERO;
        case 1:
          return AG$BlendFactor.ONE;
        case 768:
          return AG$BlendFactor.SOURCE_COLOR;
        case 769:
          return AG$BlendFactor.ONE_MINUS_SOURCE_COLOR;
        case 770:
          return AG$BlendFactor.SOURCE_ALPHA;
        case 771:
          return AG$BlendFactor.ONE_MINUS_SOURCE_ALPHA;
        case 772:
          return AG$BlendFactor.DESTINATION_ALPHA;
        case 773:
          return AG$BlendFactor.ONE_MINUS_DESTINATION_ALPHA;
        case 774:
          return AG$BlendFactor.DESTINATION_COLOR;
        case 775:
          return AG$BlendFactor.ONE_MINUS_DESTINATION_COLOR;
        default:return AG$BlendFactor.ONE;
      }
    };
  }
  function ParticleEmitter$load$lambda$angle(closure$item) {
    return function () {
      return Angle.Companion.degreesToRadians_14dthe$(closure$item.double_io5o9c$('value'));
    };
  }
  function ParticleEmitter$load$lambda$color(closure$item) {
    return function () {
      var r = closure$item.double_io5o9c$('red');
      var g = closure$item.double_io5o9c$('green');
      var b = closure$item.double_io5o9c$('blue');
      var a = closure$item.double_io5o9c$('alpha');
      return new RGBAf(numberToDouble(r), numberToDouble(g), numberToDouble(b), numberToDouble(a));
    };
  }
  function Coroutine$load_3ekr7n$($this, file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$blendFuncSource = void 0;
    this.local$blendFuncDestination = void 0;
    this.local$$receiver = void 0;
    this.local$n = void 0;
    this.local$file = file_0;
  }
  Coroutine$load_3ekr7n$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$load_3ekr7n$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$load_3ekr7n$.prototype.constructor = Coroutine$load_3ekr7n$;
  Coroutine$load_3ekr7n$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readXml(this.local$file, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var particleXml = this.result_0;
            this.local$blendFuncSource = {v: AG$BlendFactor.ONE};
            this.local$blendFuncDestination = {v: AG$BlendFactor.ONE};
            this.local$$receiver = particleXml.allChildrenNoComments;
            var tmp$;
            this.local$n = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$n >= this.local$$receiver.size) {
              this.state_0 = 6;
              continue;
            }
            var item = this.local$$receiver.get_za3lpa$((tmp$ = this.local$n, this.local$n = tmp$ + 1 | 0, tmp$));
            var tmp$_0;
            var point = ParticleEmitter$load$lambda$point(item);
            var scalar = ParticleEmitter$load$lambda$scalar(item);
            var blendFactor = ParticleEmitter$load$lambda$blendFactor(scalar);
            var angle = ParticleEmitter$load$lambda$angle(item);
            var color = ParticleEmitter$load$lambda$color(item);
            switch (item.name.toLowerCase()) {
              case 'texture':
                this.state_0 = 4;
                this.result_0 = readBitmapSlice(this.local$file.parent.get_61zpoe$(item.str_puj7f4$('name')), void 0, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 'sourceposition':
                this.$this.sourcePosition = point();
                this.state_0 = 5;
                continue;
              case 'sourcepositionvariance':
                this.$this.sourcePositionVariance = point();
                this.state_0 = 5;
                continue;
              case 'speed':
                this.$this.speed = scalar();
                this.state_0 = 5;
                continue;
              case 'speedvariance':
                this.$this.speedVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'particlelifespan':
                this.$this.lifeSpan = scalar();
                this.state_0 = 5;
                continue;
              case 'particlelifespanvariance':
                this.$this.lifespanVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'angle':
                this.$this.angle = angle();
                this.state_0 = 5;
                continue;
              case 'anglevariance':
                this.$this.angleVariance = angle();
                this.state_0 = 5;
                continue;
              case 'gravity':
                this.$this.gravity = point();
                this.state_0 = 5;
                continue;
              case 'radialacceleration':
                this.$this.radialAcceleration = scalar();
                this.state_0 = 5;
                continue;
              case 'tangentialacceleration':
                this.$this.tangentialAcceleration = scalar();
                this.state_0 = 5;
                continue;
              case 'radialaccelvariance':
                this.$this.radialAccelVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'tangentialaccelvariance':
                this.$this.tangentialAccelVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'startcolor':
                this.$this.startColor = color();
                this.state_0 = 5;
                continue;
              case 'startcolorvariance':
                this.$this.startColorVariance = color();
                this.state_0 = 5;
                continue;
              case 'finishcolor':
                this.$this.endColor = color();
                this.state_0 = 5;
                continue;
              case 'finishcolorvariance':
                this.$this.endColorVariance = color();
                this.state_0 = 5;
                continue;
              case 'maxparticles':
                this.$this.maxParticles = numberToInt(scalar());
                this.state_0 = 5;
                continue;
              case 'startparticlesize':
                this.$this.startSize = scalar();
                this.state_0 = 5;
                continue;
              case 'startparticlesizevariance':
                this.$this.startSizeVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'finishparticlesize':
                this.$this.endSize = scalar();
                this.state_0 = 5;
                continue;
              case 'finishparticlesizevariance':
                this.$this.endSizeVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'duration':
                this.$this.duration = scalar();
                this.state_0 = 5;
                continue;
              case 'emittertype':
                switch (numberToInt(scalar())) {
                  case 0:
                    tmp$_0 = ParticleEmitter$Type$GRAVITY_getInstance();
                    break;
                  case 1:
                    tmp$_0 = ParticleEmitter$Type$RADIAL_getInstance();
                    break;
                  default:tmp$_0 = ParticleEmitter$Type$GRAVITY_getInstance();
                    break;
                }

                this.$this.emitterType = tmp$_0;
                this.state_0 = 5;
                continue;
              case 'maxradius':
                this.$this.maxRadius = scalar();
                this.state_0 = 5;
                continue;
              case 'maxradiusvariance':
                this.$this.maxRadiusVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'minradius':
                this.$this.minRadius = scalar();
                this.state_0 = 5;
                continue;
              case 'minradiusvariance':
                this.$this.minRadiusVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'rotatepersecond':
                this.$this.rotatePerSecond = scalar();
                this.state_0 = 5;
                continue;
              case 'rotatepersecondvariance':
                this.$this.rotatePerSecondVariance = scalar();
                this.state_0 = 5;
                continue;
              case 'blendfuncsource':
                this.local$blendFuncSource.v = blendFactor();
                this.state_0 = 5;
                continue;
              case 'blendfuncdestination':
                this.local$blendFuncDestination.v = blendFactor();
                this.state_0 = 5;
                continue;
              case 'rotationstart':
                this.$this.rotationStart = angle();
                this.state_0 = 5;
                continue;
              case 'rotationstartvariance':
                this.$this.rotationStartVariance = angle();
                this.state_0 = 5;
                continue;
              case 'rotationend':
                this.$this.rotationEnd = angle();
                this.state_0 = 5;
                continue;
              case 'rotationendvariance':
                this.$this.rotationEndVariance = angle();
                this.state_0 = 5;
                continue;
            }

          case 4:
            this.$this.texture = this.result_0;
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 3;
            continue;
          case 6:
            this.$this.blendFactors = AG$AG$Blending_init(this.local$blendFuncSource.v, this.local$blendFuncDestination.v);
            return this.$this;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ParticleEmitter.prototype.load_3ekr7n$ = function (file_0, continuation_0, suspended) {
    var instance = new Coroutine$load_3ekr7n$(this, file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function ParticleEmitter$Particle(x, y, scale, rotation, currentTime, totalTime, colorR, colorG, colorB, colorA, colorRdelta, colorGdelta, colorBdelta, colorAdelta, startX, startY, velocityX, velocityY, radialAcceleration, tangentialAcceleration, emitRadius, emitRadiusDelta, emitRotation, emitRotationDelta, rotationDelta, scaleDelta) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (scale === void 0)
      scale = 1.0;
    if (rotation === void 0)
      rotation = 0.0;
    if (currentTime === void 0)
      currentTime = 0.0;
    if (totalTime === void 0)
      totalTime = 0.0;
    if (colorR === void 0)
      colorR = 1.0;
    if (colorG === void 0)
      colorG = 1.0;
    if (colorB === void 0)
      colorB = 1.0;
    if (colorA === void 0)
      colorA = 1.0;
    if (colorRdelta === void 0)
      colorRdelta = 0.0;
    if (colorGdelta === void 0)
      colorGdelta = 0.0;
    if (colorBdelta === void 0)
      colorBdelta = 0.0;
    if (colorAdelta === void 0)
      colorAdelta = 0.0;
    if (startX === void 0)
      startX = 0.0;
    if (startY === void 0)
      startY = 0.0;
    if (velocityX === void 0)
      velocityX = 0.0;
    if (velocityY === void 0)
      velocityY = 0.0;
    if (radialAcceleration === void 0)
      radialAcceleration = 0.0;
    if (tangentialAcceleration === void 0)
      tangentialAcceleration = 0.0;
    if (emitRadius === void 0)
      emitRadius = 0.0;
    if (emitRadiusDelta === void 0)
      emitRadiusDelta = 0.0;
    if (emitRotation === void 0)
      emitRotation = 0.0;
    if (emitRotationDelta === void 0)
      emitRotationDelta = 0.0;
    if (rotationDelta === void 0)
      rotationDelta = 0.0;
    if (scaleDelta === void 0)
      scaleDelta = 0.0;
    this.x = x;
    this.y = y;
    this.scale = scale;
    this.rotation = rotation;
    this.currentTime = currentTime;
    this.totalTime = totalTime;
    this.colorR = colorR;
    this.colorG = colorG;
    this.colorB = colorB;
    this.colorA = colorA;
    this.colorRdelta = colorRdelta;
    this.colorGdelta = colorGdelta;
    this.colorBdelta = colorBdelta;
    this.colorAdelta = colorAdelta;
    this.startX = startX;
    this.startY = startY;
    this.velocityX = velocityX;
    this.velocityY = velocityY;
    this.radialAcceleration = radialAcceleration;
    this.tangentialAcceleration = tangentialAcceleration;
    this.emitRadius = emitRadius;
    this.emitRadiusDelta = emitRadiusDelta;
    this.emitRotation = emitRotation;
    this.emitRotationDelta = emitRotationDelta;
    this.rotationDelta = rotationDelta;
    this.scaleDelta = scaleDelta;
  }
  Object.defineProperty(ParticleEmitter$Particle.prototype, 'color', {
    get: function () {
      return RGBA.Companion.float_7b5o5w$(this.colorR, this.colorG, this.colorB, this.colorA);
    }
  });
  Object.defineProperty(ParticleEmitter$Particle.prototype, 'alive', {
    get: function () {
      return this.currentTime < this.totalTime;
    }
  });
  ParticleEmitter$Particle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Particle',
    interfaces: []
  };
  ParticleEmitter$Particle.prototype.component1 = function () {
    return this.x;
  };
  ParticleEmitter$Particle.prototype.component2 = function () {
    return this.y;
  };
  ParticleEmitter$Particle.prototype.component3 = function () {
    return this.scale;
  };
  ParticleEmitter$Particle.prototype.component4 = function () {
    return this.rotation;
  };
  ParticleEmitter$Particle.prototype.component5 = function () {
    return this.currentTime;
  };
  ParticleEmitter$Particle.prototype.component6 = function () {
    return this.totalTime;
  };
  ParticleEmitter$Particle.prototype.component7 = function () {
    return this.colorR;
  };
  ParticleEmitter$Particle.prototype.component8 = function () {
    return this.colorG;
  };
  ParticleEmitter$Particle.prototype.component9 = function () {
    return this.colorB;
  };
  ParticleEmitter$Particle.prototype.component10 = function () {
    return this.colorA;
  };
  ParticleEmitter$Particle.prototype.component11 = function () {
    return this.colorRdelta;
  };
  ParticleEmitter$Particle.prototype.component12 = function () {
    return this.colorGdelta;
  };
  ParticleEmitter$Particle.prototype.component13 = function () {
    return this.colorBdelta;
  };
  ParticleEmitter$Particle.prototype.component14 = function () {
    return this.colorAdelta;
  };
  ParticleEmitter$Particle.prototype.component15 = function () {
    return this.startX;
  };
  ParticleEmitter$Particle.prototype.component16 = function () {
    return this.startY;
  };
  ParticleEmitter$Particle.prototype.component17 = function () {
    return this.velocityX;
  };
  ParticleEmitter$Particle.prototype.component18 = function () {
    return this.velocityY;
  };
  ParticleEmitter$Particle.prototype.component19 = function () {
    return this.radialAcceleration;
  };
  ParticleEmitter$Particle.prototype.component20 = function () {
    return this.tangentialAcceleration;
  };
  ParticleEmitter$Particle.prototype.component21 = function () {
    return this.emitRadius;
  };
  ParticleEmitter$Particle.prototype.component22 = function () {
    return this.emitRadiusDelta;
  };
  ParticleEmitter$Particle.prototype.component23 = function () {
    return this.emitRotation;
  };
  ParticleEmitter$Particle.prototype.component24 = function () {
    return this.emitRotationDelta;
  };
  ParticleEmitter$Particle.prototype.component25 = function () {
    return this.rotationDelta;
  };
  ParticleEmitter$Particle.prototype.component26 = function () {
    return this.scaleDelta;
  };
  ParticleEmitter$Particle.prototype.copy_7ojnuo$ = function (x, y, scale, rotation, currentTime, totalTime, colorR, colorG, colorB, colorA, colorRdelta, colorGdelta, colorBdelta, colorAdelta, startX, startY, velocityX, velocityY, radialAcceleration, tangentialAcceleration, emitRadius, emitRadiusDelta, emitRotation, emitRotationDelta, rotationDelta, scaleDelta) {
    return new ParticleEmitter$Particle(x === void 0 ? this.x : x, y === void 0 ? this.y : y, scale === void 0 ? this.scale : scale, rotation === void 0 ? this.rotation : rotation, currentTime === void 0 ? this.currentTime : currentTime, totalTime === void 0 ? this.totalTime : totalTime, colorR === void 0 ? this.colorR : colorR, colorG === void 0 ? this.colorG : colorG, colorB === void 0 ? this.colorB : colorB, colorA === void 0 ? this.colorA : colorA, colorRdelta === void 0 ? this.colorRdelta : colorRdelta, colorGdelta === void 0 ? this.colorGdelta : colorGdelta, colorBdelta === void 0 ? this.colorBdelta : colorBdelta, colorAdelta === void 0 ? this.colorAdelta : colorAdelta, startX === void 0 ? this.startX : startX, startY === void 0 ? this.startY : startY, velocityX === void 0 ? this.velocityX : velocityX, velocityY === void 0 ? this.velocityY : velocityY, radialAcceleration === void 0 ? this.radialAcceleration : radialAcceleration, tangentialAcceleration === void 0 ? this.tangentialAcceleration : tangentialAcceleration, emitRadius === void 0 ? this.emitRadius : emitRadius, emitRadiusDelta === void 0 ? this.emitRadiusDelta : emitRadiusDelta, emitRotation === void 0 ? this.emitRotation : emitRotation, emitRotationDelta === void 0 ? this.emitRotationDelta : emitRotationDelta, rotationDelta === void 0 ? this.rotationDelta : rotationDelta, scaleDelta === void 0 ? this.scaleDelta : scaleDelta);
  };
  ParticleEmitter$Particle.prototype.toString = function () {
    return 'Particle(x=' + Kotlin.toString(this.x) + (', y=' + Kotlin.toString(this.y)) + (', scale=' + Kotlin.toString(this.scale)) + (', rotation=' + Kotlin.toString(this.rotation)) + (', currentTime=' + Kotlin.toString(this.currentTime)) + (', totalTime=' + Kotlin.toString(this.totalTime)) + (', colorR=' + Kotlin.toString(this.colorR)) + (', colorG=' + Kotlin.toString(this.colorG)) + (', colorB=' + Kotlin.toString(this.colorB)) + (', colorA=' + Kotlin.toString(this.colorA)) + (', colorRdelta=' + Kotlin.toString(this.colorRdelta)) + (', colorGdelta=' + Kotlin.toString(this.colorGdelta)) + (', colorBdelta=' + Kotlin.toString(this.colorBdelta)) + (', colorAdelta=' + Kotlin.toString(this.colorAdelta)) + (', startX=' + Kotlin.toString(this.startX)) + (', startY=' + Kotlin.toString(this.startY)) + (', velocityX=' + Kotlin.toString(this.velocityX)) + (', velocityY=' + Kotlin.toString(this.velocityY)) + (', radialAcceleration=' + Kotlin.toString(this.radialAcceleration)) + (', tangentialAcceleration=' + Kotlin.toString(this.tangentialAcceleration)) + (', emitRadius=' + Kotlin.toString(this.emitRadius)) + (', emitRadiusDelta=' + Kotlin.toString(this.emitRadiusDelta)) + (', emitRotation=' + Kotlin.toString(this.emitRotation)) + (', emitRotationDelta=' + Kotlin.toString(this.emitRotationDelta)) + (', rotationDelta=' + Kotlin.toString(this.rotationDelta)) + (', scaleDelta=' + Kotlin.toString(this.scaleDelta)) + ')';
  };
  ParticleEmitter$Particle.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.x) | 0;
    result = result * 31 + Kotlin.hashCode(this.y) | 0;
    result = result * 31 + Kotlin.hashCode(this.scale) | 0;
    result = result * 31 + Kotlin.hashCode(this.rotation) | 0;
    result = result * 31 + Kotlin.hashCode(this.currentTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.totalTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorR) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorG) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorB) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorA) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorRdelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorGdelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorBdelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorAdelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.startX) | 0;
    result = result * 31 + Kotlin.hashCode(this.startY) | 0;
    result = result * 31 + Kotlin.hashCode(this.velocityX) | 0;
    result = result * 31 + Kotlin.hashCode(this.velocityY) | 0;
    result = result * 31 + Kotlin.hashCode(this.radialAcceleration) | 0;
    result = result * 31 + Kotlin.hashCode(this.tangentialAcceleration) | 0;
    result = result * 31 + Kotlin.hashCode(this.emitRadius) | 0;
    result = result * 31 + Kotlin.hashCode(this.emitRadiusDelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.emitRotation) | 0;
    result = result * 31 + Kotlin.hashCode(this.emitRotationDelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.rotationDelta) | 0;
    result = result * 31 + Kotlin.hashCode(this.scaleDelta) | 0;
    return result;
  };
  ParticleEmitter$Particle.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.x, other.x) && Kotlin.equals(this.y, other.y) && Kotlin.equals(this.scale, other.scale) && Kotlin.equals(this.rotation, other.rotation) && Kotlin.equals(this.currentTime, other.currentTime) && Kotlin.equals(this.totalTime, other.totalTime) && Kotlin.equals(this.colorR, other.colorR) && Kotlin.equals(this.colorG, other.colorG) && Kotlin.equals(this.colorB, other.colorB) && Kotlin.equals(this.colorA, other.colorA) && Kotlin.equals(this.colorRdelta, other.colorRdelta) && Kotlin.equals(this.colorGdelta, other.colorGdelta) && Kotlin.equals(this.colorBdelta, other.colorBdelta) && Kotlin.equals(this.colorAdelta, other.colorAdelta) && Kotlin.equals(this.startX, other.startX) && Kotlin.equals(this.startY, other.startY) && Kotlin.equals(this.velocityX, other.velocityX) && Kotlin.equals(this.velocityY, other.velocityY) && Kotlin.equals(this.radialAcceleration, other.radialAcceleration) && Kotlin.equals(this.tangentialAcceleration, other.tangentialAcceleration) && Kotlin.equals(this.emitRadius, other.emitRadius) && Kotlin.equals(this.emitRadiusDelta, other.emitRadiusDelta) && Kotlin.equals(this.emitRotation, other.emitRotation) && Kotlin.equals(this.emitRotationDelta, other.emitRotationDelta) && Kotlin.equals(this.rotationDelta, other.rotationDelta) && Kotlin.equals(this.scaleDelta, other.scaleDelta)))));
  };
  function ParticleEmitter$Simulator(emitter, emitterPos, seed) {
    if (emitterPos === void 0)
      emitterPos = IPoint.Companion.invoke();
    if (seed === void 0)
      seed = Random.Default.nextLong();
    this.emitter_0 = emitter;
    this.emitterPos = emitterPos;
    this.seed = seed;
    this.random = Random_0(this.seed);
    this.totalElapsedTime = 0;
    this.timeUntilStop = 2147483647;
    this.emitting = true;
    var tmp$, tmp$_0;
    this.textureWidth = (tmp$_0 = (tmp$ = this.emitter_0.texture) != null ? tmp$.width : null) != null ? tmp$_0 : 16;
    var $receiver = until(0, this.emitter_0.maxParticles);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(this.init_x8u5lw$(new ParticleEmitter$Particle()));
    }
    this.particles = destination;
  }
  Object.defineProperty(ParticleEmitter$Simulator.prototype, 'aliveCount', {
    get: function () {
      var $receiver = this.particles;
      var count$result;
      count$break: do {
        var tmp$;
        if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
          count$result = 0;
          break count$break;
        }var count = 0;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (element.alive)
            checkCountOverflow((count = count + 1 | 0, count));
        }
        count$result = count;
      }
       while (false);
      return count$result;
    }
  });
  Object.defineProperty(ParticleEmitter$Simulator.prototype, 'anyAlive', {
    get: function () {
      return this.aliveCount > 0;
    }
  });
  ParticleEmitter$Simulator.prototype.randomVariance_0 = function (base, variance) {
    return base + variance * (this.random.nextDouble() * 2.0 - 1.0);
  };
  ParticleEmitter$Simulator.prototype.init_x8u5lw$ = function (particle) {
    var lifespan = this.randomVariance_0(this.emitter_0.lifeSpan, this.emitter_0.lifespanVariance);
    particle.currentTime = 0.0;
    particle.totalTime = Math_0.max(0.0, lifespan);
    var emitterX = get_x(this.emitterPos);
    var emitterY = get_y(this.emitterPos);
    particle.x = this.randomVariance_0(emitterX, get_x(this.emitter_0.sourcePositionVariance));
    particle.y = this.randomVariance_0(emitterY, get_y(this.emitter_0.sourcePositionVariance));
    particle.startX = emitterX;
    particle.startY = emitterY;
    var angle = this.randomVariance_0(this.emitter_0.angle, this.emitter_0.angleVariance);
    var speed = this.randomVariance_0(this.emitter_0.speed, this.emitter_0.speedVariance);
    particle.velocityX = speed * Math_0.cos(angle);
    particle.velocityY = speed * Math_0.sin(angle);
    var startRadius = this.randomVariance_0(this.emitter_0.maxRadius, this.emitter_0.maxRadiusVariance);
    var endRadius = this.randomVariance_0(this.emitter_0.minRadius, this.emitter_0.minRadiusVariance);
    particle.emitRadius = startRadius;
    particle.emitRadiusDelta = (endRadius - startRadius) / lifespan;
    particle.emitRotation = this.randomVariance_0(this.emitter_0.angle, this.emitter_0.angleVariance);
    particle.emitRotationDelta = this.randomVariance_0(this.emitter_0.rotatePerSecond, this.emitter_0.rotatePerSecondVariance);
    particle.radialAcceleration = this.randomVariance_0(this.emitter_0.radialAcceleration, this.emitter_0.radialAccelVariance);
    particle.tangentialAcceleration = this.randomVariance_0(this.emitter_0.tangentialAcceleration, this.emitter_0.tangentialAccelVariance);
    var b = this.randomVariance_0(this.emitter_0.startSize, this.emitter_0.startSizeVariance);
    var startSize = Math_0.max(0.1, b);
    var b_0 = this.randomVariance_0(this.emitter_0.endSize, this.emitter_0.endSizeVariance);
    var endSize = Math_0.max(0.1, b_0);
    particle.scale = startSize / this.textureWidth;
    particle.scaleDelta = (endSize - startSize) / lifespan / this.textureWidth;
    particle.colorR = this.randomVariance_0(this.emitter_0.startColor.rd, this.emitter_0.startColorVariance.rd);
    particle.colorG = this.randomVariance_0(this.emitter_0.startColor.gd, this.emitter_0.startColorVariance.gd);
    particle.colorB = this.randomVariance_0(this.emitter_0.startColor.bd, this.emitter_0.startColorVariance.bd);
    particle.colorA = this.randomVariance_0(this.emitter_0.startColor.ad, this.emitter_0.startColorVariance.ad);
    var endColorR = this.randomVariance_0(this.emitter_0.endColor.rd, this.emitter_0.endColorVariance.rd);
    var endColorG = this.randomVariance_0(this.emitter_0.endColor.gd, this.emitter_0.endColorVariance.gd);
    var endColorB = this.randomVariance_0(this.emitter_0.endColor.bd, this.emitter_0.endColorVariance.bd);
    var endColorA = this.randomVariance_0(this.emitter_0.endColor.ad, this.emitter_0.endColorVariance.ad);
    particle.colorRdelta = (endColorR - particle.colorR) / lifespan;
    particle.colorGdelta = (endColorG - particle.colorG) / lifespan;
    particle.colorBdelta = (endColorB - particle.colorB) / lifespan;
    particle.colorAdelta = (endColorA - particle.colorA) / lifespan;
    var startRotation = this.randomVariance_0(this.emitter_0.rotationStart, this.emitter_0.rotationStartVariance);
    var endRotation = this.randomVariance_0(this.emitter_0.rotationEnd, this.emitter_0.rotationEndVariance);
    particle.rotation = startRotation;
    particle.rotationDelta = (endRotation - startRotation) / lifespan;
    return particle;
  };
  ParticleEmitter$Simulator.prototype.advance_7r320e$ = function (particle, _elapsedTime) {
    var restTime = particle.totalTime - particle.currentTime;
    var elapsedTime = restTime > _elapsedTime ? _elapsedTime : restTime;
    particle.currentTime = particle.currentTime + elapsedTime;
    switch (this.emitter_0.emitterType.name) {
      case 'RADIAL':
        particle.emitRotation = particle.emitRotation + particle.emitRotationDelta * elapsedTime;
        particle.emitRadius = particle.emitRadius + particle.emitRadiusDelta * elapsedTime;
        var tmp$ = get_x(this.emitter_0.sourcePosition);
        var x = particle.emitRotation;
        particle.x = tmp$ - Math_0.cos(x) * particle.emitRadius;
        var tmp$_0 = get_y(this.emitter_0.sourcePosition);
        var x_0 = particle.emitRotation;
        particle.y = tmp$_0 - Math_0.sin(x_0) * particle.emitRadius;
        break;
      case 'GRAVITY':
        var distanceX = particle.x - particle.startX;
        var distanceY = particle.y - particle.startY;
        var x_1 = distanceX * distanceX + distanceY * distanceY;
        var b = Math_0.sqrt(x_1);
        var distanceScalar = Math_0.max(0.01, b);
        var radialX = distanceX / distanceScalar;
        var radialY = distanceY / distanceScalar;
        var tangentialX = radialX;
        var tangentialY = radialY;
        radialX *= particle.radialAcceleration;
        radialY *= particle.radialAcceleration;
        var newY = tangentialX;
        tangentialX = -tangentialY * particle.tangentialAcceleration;
        tangentialY = newY * particle.tangentialAcceleration;
        particle.velocityX = particle.velocityX + elapsedTime * (get_x(this.emitter_0.gravity) + radialX + tangentialX);
        particle.velocityY = particle.velocityY + elapsedTime * (get_y(this.emitter_0.gravity) + radialY + tangentialY);
        particle.x = particle.x + particle.velocityX * elapsedTime;
        particle.y = particle.y + particle.velocityY * elapsedTime;
        break;
    }
    particle.scale = particle.scale + particle.scaleDelta * elapsedTime;
    particle.rotation = particle.rotation + particle.rotationDelta * elapsedTime;
    particle.colorR = particle.colorR + particle.colorRdelta * elapsedTime;
    particle.colorG = particle.colorG + particle.colorGdelta * elapsedTime;
    particle.colorB = particle.colorB + particle.colorBdelta * elapsedTime;
    particle.colorA = particle.colorA + particle.colorAdelta * elapsedTime;
    if (!particle.alive && this.emitting)
      this.init_x8u5lw$(particle);
  };
  ParticleEmitter$Simulator.prototype.simulate_14dthe$ = function (time) {
    this.totalElapsedTime = this.totalElapsedTime + numberToInt(time * 1000.0) | 0;
    if (this.totalElapsedTime >= this.timeUntilStop) {
      this.emitting = false;
    }var $receiver = this.particles;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      this.advance_7r320e$($receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)), time);
    }
  };
  ParticleEmitter$Simulator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Simulator',
    interfaces: []
  };
  ParticleEmitter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ParticleEmitter',
    interfaces: []
  };
  function readParticle($receiver, continuation) {
    return (new ParticleEmitter()).load_3ekr7n$($receiver, continuation);
  }
  function Coroutine$attachParticleAndWait($receiver_0, particle_0, x_0, y_0, time_0, speed_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$p = void 0;
    this.local$$receiver = $receiver_0;
    this.local$particle = particle_0;
    this.local$x = x_0;
    this.local$y = y_0;
    this.local$time = time_0;
    this.local$speed = speed_0;
  }
  Coroutine$attachParticleAndWait.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$attachParticleAndWait.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$attachParticleAndWait.prototype.constructor = Coroutine$attachParticleAndWait;
  Coroutine$attachParticleAndWait.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$time === void 0)
              this.local$time = 1000;
            if (this.local$speed === void 0)
              this.local$speed = 1.0;
            this.local$p = this.local$particle.create_syxxoe$(this.local$x, this.local$y, this.local$time);
            this.local$p.speed = this.local$speed;
            this.local$$receiver.plusAssign_l5rad2$(this.local$p);
            this.state_0 = 2;
            this.result_0 = this.local$p.waitComplete(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$$receiver.minusAssign_l5rad2$(this.local$p);
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function attachParticleAndWait($receiver_0, particle_0, x_0, y_0, time_0, speed_0, continuation_0, suspended) {
    var instance = new Coroutine$attachParticleAndWait($receiver_0, particle_0, x_0, y_0, time_0, speed_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function RenderContext2D$keep$lambda$lambda$lambda(closure$callback) {
    return function () {
      return closure$callback();
    };
  }
  function RenderContext2D$keep$lambda$lambda(closure$callback, this$RenderContext2D) {
    return function () {
      var $this = this$RenderContext2D;
      var callback = RenderContext2D$keep$lambda$lambda$lambda(closure$callback);
      var keepColor_klfg04$result;
      var multiplyColor = $this.multiplyColor;
      try {
        keepColor_klfg04$result = callback();
      }finally {
        $this.multiplyColor = multiplyColor;
      }
      return keepColor_klfg04$result;
    };
  }
  function RenderContext2D$keep$lambda(closure$callback, this$RenderContext2D) {
    return function () {
      var $this = this$RenderContext2D;
      var callback = RenderContext2D$keep$lambda$lambda(closure$callback, this$RenderContext2D);
      var keepBlendFactors_klfg04$result;
      var oldBlendFactors = $this.blendFactors;
      try {
        keepBlendFactors_klfg04$result = callback();
      }finally {
        $this.blendFactors = oldBlendFactors;
      }
      return keepBlendFactors_klfg04$result;
    };
  }
  var particleEmitter = defineInlineFunction('korge-root-korge.com.soywiz.korge.particle.particleEmitter_pe1xey$', wrapFunction(function () {
    var IPoint = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.IPoint;
    var Unit = Kotlin.kotlin.Unit;
    var ParticleEmitterView_init = _.com.soywiz.korge.particle.ParticleEmitterView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function particleEmitter$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, emitter, emitterPos, callback) {
      if (emitterPos === void 0)
        emitterPos = IPoint.Companion.invoke();
      if (callback === void 0)
        callback = particleEmitter$lambda;
      var $receiver_0 = addTo(new ParticleEmitterView_init(emitter, emitterPos), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function ParticleEmitterView(emitter, emitterPos) {
    if (emitterPos === void 0)
      emitterPos = IPoint.Companion.invoke();
    View_init(this);
    this.emitter = emitter;
    this.simulator = new ParticleEmitter$Simulator(this.emitter, emitterPos);
    this.timeUntilStop_eeqpko$_0 = new RedirectMutableField_init(getPropertyCallableRef('timeUntilStop', 0, function ($receiver) {
      return $receiver.timeUntilStop;
    }.bind(null, this.simulator), function ($receiver, value) {
      $receiver.timeUntilStop = value;
    }.bind(null, this.simulator)));
    this.emitterPos_awbsw3$_0 = new RedirectMutableField_init(getPropertyCallableRef('emitterPos', 0, function ($receiver) {
      return $receiver.emitterPos;
    }.bind(null, this.simulator), function ($receiver, value) {
      $receiver.emitterPos = value;
    }.bind(null, this.simulator)));
    this.emitting_q2tdeg$_0 = new RedirectMutableField_init(getPropertyCallableRef('emitting', 0, function ($receiver) {
      return $receiver.emitting;
    }.bind(null, this.simulator), function ($receiver, value) {
      $receiver.emitting = value;
    }.bind(null, this.simulator)));
    this.aliveCount_pen77r$_0 = new RedirectField_init(getPropertyCallableRef('aliveCount', 0, function ($receiver) {
      return $receiver.aliveCount;
    }.bind(null, this.simulator)));
    this.anyAlive_m9nggo$_0 = new RedirectField_init(getPropertyCallableRef('anyAlive', 0, function ($receiver) {
      return $receiver.anyAlive;
    }.bind(null, this.simulator)));
    this.addUpdatable_b4k9x1$(ParticleEmitterView_init$lambda(this));
  }
  Object.defineProperty(ParticleEmitterView.prototype, 'timeUntilStop', {
    get: function () {
      return this.timeUntilStop_eeqpko$_0.redirect.get();
    },
    set: function (timeUntilStop) {
      this.timeUntilStop_eeqpko$_0.redirect.set(timeUntilStop);
    }
  });
  Object.defineProperty(ParticleEmitterView.prototype, 'emitterPos', {
    get: function () {
      return this.emitterPos_awbsw3$_0.redirect.get();
    }
  });
  Object.defineProperty(ParticleEmitterView.prototype, 'emitting', {
    get: function () {
      return this.emitting_q2tdeg$_0.redirect.get();
    },
    set: function (emitting) {
      this.emitting_q2tdeg$_0.redirect.set(emitting);
    }
  });
  Object.defineProperty(ParticleEmitterView.prototype, 'aliveCount', {
    get: function () {
      return this.aliveCount_pen77r$_0.redirect.get();
    }
  });
  Object.defineProperty(ParticleEmitterView.prototype, 'anyAlive', {
    get: function () {
      return this.anyAlive_m9nggo$_0.redirect.get();
    }
  });
  function Coroutine$waitComplete($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$waitComplete.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitComplete.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitComplete.prototype.constructor = Coroutine$waitComplete;
  Coroutine$waitComplete.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.$this.anyAlive) {
              this.state_0 = 4;
              continue;
            }
            this.state_0 = 3;
            this.result_0 = waitFrame(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ParticleEmitterView.prototype.waitComplete = function (continuation_0, suspended) {
    var instance = new Coroutine$waitComplete(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function ParticleEmitterView$renderInternal$lambda(this$ParticleEmitterView, closure$context, closure$ctx, closure$texture, closure$cx, closure$cy) {
    return function () {
      closure$context.blendFactors = this$ParticleEmitterView.emitter.blendFactors;
      closure$context.setMatrix_1ktkmn$(this$ParticleEmitterView.globalMatrix);
      var $receiver = this$ParticleEmitterView.simulator.particles;
      var tmp$;
      var n = 0;
      while (n < $receiver.size) {
        var closure$context_0 = closure$context;
        var closure$ctx_0 = closure$ctx;
        var closure$texture_0 = closure$texture;
        var closure$cx_0 = closure$cx;
        var closure$cy_0 = closure$cy;
        var p = $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
        var scale = p.scale;
        closure$context_0.multiplyColor = p.color;
        closure$context_0.imageScale_srws8f$(closure$ctx_0.getTex_9byvhi$(closure$texture_0), p.x - closure$cx_0 * scale, p.y - closure$cy_0 * scale, scale);
      }
      return Unit;
    };
  }
  ParticleEmitterView.prototype.renderInternal_8isv09$ = function (ctx) {
    var tmp$;
    if (!this.visible)
      return;
    var context = ctx.ctx2d;
    tmp$ = this.emitter.texture;
    if (tmp$ == null) {
      return;
    }var texture = tmp$;
    var cx = texture.width * 0.5;
    var cy = texture.height * 0.5;
    var $this = context.mpool;
    var temp = $this.alloc();
    try {
      temp.copyFrom_1ktkmn$(context.m);
      try {
        RenderContext2D$keep$lambda(ParticleEmitterView$renderInternal$lambda(this, context, ctx, texture, cx, cy), context)();
      }finally {
        context.m.copyFrom_1ktkmn$(temp);
      }
    }finally {
      $this.free_11rb$(temp);
    }
  };
  function ParticleEmitterView_init$lambda(this$ParticleEmitterView) {
    return function (dtMs) {
      this$ParticleEmitterView.simulator.simulate_14dthe$(dtMs / 1000.0);
      return Unit;
    };
  }
  ParticleEmitterView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ParticleEmitterView',
    interfaces: [View]
  };
  function get_texMipmaps($receiver) {
    return $receiver.mipmaps;
  }
  function set_texMipmaps($receiver, value) {
    $receiver.mipmaps = value;
  }
  function mipmaps_0($receiver, enable) {
    if (enable === void 0)
      enable = true;
    $receiver.mipmaps = enable;
    return $receiver;
  }
  function AgBitmapTextureManager(ag) {
    this.ag = ag;
    this.referencedBitmapsSinceGC_0 = LinkedHashSet_init();
    this.referencedBitmaps_0 = ArrayList_init_1();
    this.framesBetweenGC = 60;
    this.textureInfoPool_0 = new Pool(AgBitmapTextureManager$textureInfoPool$lambda, void 0, AgBitmapTextureManager$textureInfoPool$lambda_0);
    this.bitmapsToTextureBase_0 = FastIdentityMap();
    this.cachedBitmap_0 = null;
    this.cachedBitmapTextureInfo_0 = null;
    this.cachedBitmap2_0 = null;
    this.cachedBitmapTextureInfo2_0 = null;
    this.cachedBmpSlice_0 = null;
    this.cachedBmpSliceTexture_0 = null;
    this.cachedBmpSlice2_0 = null;
    this.cachedBmpSliceTexture2_0 = null;
    this.fcount_0 = 0;
  }
  function AgBitmapTextureManager$BitmapTextureInfo() {
    this.textureBase = new Texture$Base(null, 0, 0);
    this.slices = FastIdentityMap();
  }
  AgBitmapTextureManager$BitmapTextureInfo.prototype.reset = function () {
    this.textureBase.base = null;
    this.textureBase.version = -1;
    this.textureBase.width = 0;
    this.textureBase.height = 0;
    clear(this.slices);
  };
  AgBitmapTextureManager$BitmapTextureInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BitmapTextureInfo',
    interfaces: []
  };
  AgBitmapTextureManager.prototype.getTextureInfo_0 = function (bitmap) {
    if (this.cachedBitmap_0 === bitmap)
      return ensureNotNull(this.cachedBitmapTextureInfo_0);
    if (this.cachedBitmap2_0 === bitmap)
      return ensureNotNull(this.cachedBitmapTextureInfo2_0);
    this.referencedBitmapsSinceGC_0.add_11rb$(bitmap);
    if (equals(this.cachedBitmap_0, bitmap))
      return ensureNotNull(this.cachedBitmapTextureInfo_0);
    var $receiver = this.bitmapsToTextureBase_0;
    var getOrPut$result;
    getOrPut$break: do {
      var res = get_0($receiver, bitmap);
      if (res != null) {
        getOrPut$result = res;
        break getOrPut$break;
      }var $receiver_0 = this.textureInfoPool_0.alloc();
      var base = $receiver_0.textureBase;
      base.version = -1;
      base.base = this.ag.createTexture_6taknv$(bitmap.premultiplied);
      base.width = bitmap.width;
      base.height = bitmap.height;
      var out = $receiver_0;
      set($receiver, bitmap, out);
      getOrPut$result = out;
    }
     while (false);
    var textureInfo = getOrPut$result;
    this.cachedBitmap2_0 = this.cachedBitmap_0;
    this.cachedBitmapTextureInfo2_0 = this.cachedBitmapTextureInfo_0;
    var base_0 = textureInfo.textureBase;
    this.cachedBitmap_0 = bitmap;
    this.cachedBitmapTextureInfo_0 = textureInfo;
    if (bitmap.contentVersion !== base_0.version) {
      base_0.version = bitmap.contentVersion;
      base_0.update_lg0pjf$(bitmap, bitmap.mipmaps);
    }return textureInfo;
  };
  AgBitmapTextureManager.prototype.getTextureBase_uler2c$ = function (bitmap) {
    return ensureNotNull(this.getTextureInfo_0(bitmap).textureBase);
  };
  AgBitmapTextureManager.prototype.getTexture_9byvhi$ = function (slice) {
    if (this.cachedBmpSlice_0 === slice)
      return ensureNotNull(this.cachedBmpSliceTexture_0);
    if (this.cachedBmpSlice2_0 === slice)
      return ensureNotNull(this.cachedBmpSliceTexture2_0);
    var $receiver = this.referencedBitmapsSinceGC_0;
    var element = slice.bmp;
    $receiver.add_11rb$(element);
    var info = this.getTextureInfo_0(slice.bmp);
    var $receiver_0 = info.slices;
    var getOrPut$result;
    getOrPut$break: do {
      var res = get_0($receiver_0, slice);
      if (res != null) {
        getOrPut$result = res;
        break getOrPut$break;
      }var out = (new Texture(ensureNotNull(info.textureBase))).slice_2da8yn$(new Rectangle(slice.left, slice.top, slice.width, slice.height));
      set($receiver_0, slice, out);
      getOrPut$result = out;
    }
     while (false);
    var texture = getOrPut$result;
    this.cachedBmpSlice2_0 = this.cachedBmpSlice_0;
    this.cachedBmpSliceTexture2_0 = this.cachedBmpSliceTexture_0;
    this.cachedBmpSlice_0 = slice;
    this.cachedBmpSliceTexture_0 = texture;
    return texture;
  };
  AgBitmapTextureManager.prototype.afterRender_8be2vx$ = function () {
    this.cachedBitmap_0 = null;
    this.cachedBitmap2_0 = null;
    this.cachedBitmapTextureInfo_0 = null;
    this.cachedBitmapTextureInfo2_0 = null;
    this.cachedBmpSlice_0 = null;
    this.cachedBmpSlice2_0 = null;
    this.cachedBmpSliceTexture_0 = null;
    this.cachedBmpSliceTexture2_0 = null;
    this.fcount_0 = this.fcount_0 + 1 | 0;
    if (this.fcount_0 >= this.framesBetweenGC) {
      this.fcount_0 = 0;
      this.gc_8be2vx$();
    }this.removeCache_0();
  };
  AgBitmapTextureManager.prototype.gc_8be2vx$ = function () {
    var $receiver = this.referencedBitmaps_0;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      var bmp = $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      if (!this.referencedBitmapsSinceGC_0.contains_11rb$(bmp)) {
        this.removeBitmap_uler2c$(bmp);
      }}
    this.referencedBitmaps_0.clear();
    this.referencedBitmaps_0.addAll_brywnq$(this.referencedBitmapsSinceGC_0);
    this.referencedBitmapsSinceGC_0.clear();
  };
  AgBitmapTextureManager.prototype.removeBitmap_uler2c$ = function (bmp) {
    var tmp$;
    tmp$ = getAndRemove(this.bitmapsToTextureBase_0, bmp);
    if (tmp$ == null) {
      return;
    }var info = tmp$;
    this.referencedBitmapsSinceGC_0.remove_11rb$(bmp);
    if (equals(this.cachedBitmapTextureInfo_0, info))
      this.removeCache_0();
    info.textureBase.close();
    this.textureInfoPool_0.free_11rb$(info);
  };
  AgBitmapTextureManager.prototype.removeCache_0 = function () {
    this.cachedBitmap_0 = null;
    this.cachedBitmapTextureInfo_0 = null;
    this.cachedBmpSlice_0 = null;
    this.cachedBmpSliceTexture_0 = null;
  };
  function AgBitmapTextureManager$textureInfoPool$lambda(it) {
    it.reset();
    return Unit;
  }
  function AgBitmapTextureManager$textureInfoPool$lambda_0(it) {
    return new AgBitmapTextureManager$BitmapTextureInfo();
  }
  AgBitmapTextureManager.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AgBitmapTextureManager',
    interfaces: []
  };
  function getAndRemove($receiver, key) {
    var $receiver_0 = get_0($receiver, key);
    remove($receiver, key);
    return $receiver_0;
  }
  var logger;
  function BatchBuilder2D(ctx, maxQuads) {
    BatchBuilder2D$Companion_getInstance();
    if (maxQuads === void 0)
      maxQuads = 4096;
    this.ctx = ctx;
    this.maxQuads = maxQuads;
    this.ag = this.ctx.ag;
    var $this = logger;
    var level = Logger$Level.TRACE;
    if ($this.isEnabled_fs4ikx$(level)) {
      $this.actualLog_pwm3k3$(level, 'BatchBuilder2D[0]');
    }this.ctx.flushers.add_qlkmfe$(BatchBuilder2D_init$lambda(this));
    this.flipRenderTexture = true;
    this.maxQuadsMargin = this.maxQuads + 9 | 0;
    this.maxVertices = this.maxQuads * 4 | 0;
    this.maxIndices = this.maxQuads * 6 | 0;
    var $this_0 = logger;
    var level_0 = Logger$Level.TRACE;
    if ($this_0.isEnabled_fs4ikx$(level_0)) {
      $this_0.actualLog_pwm3k3$(level_0, 'BatchBuilder2D[1]');
    }this.vertices_8be2vx$ = FBuffer.Companion.alloc_za3lpa$(24 * this.maxVertices | 0);
    this.indices_8be2vx$ = FBuffer.Companion.alloc_za3lpa$(2 * this.maxIndices | 0);
    var $this_1 = logger;
    var level_1 = Logger$Level.TRACE;
    if ($this_1.isEnabled_fs4ikx$(level_1)) {
      $this_1.actualLog_pwm3k3$(level_1, 'BatchBuilder2D[2]');
    }this.vertexCount_0 = 0;
    this.vertexPos_0 = 0;
    this.indexPos_0 = 0;
    this.currentTex_0 = null;
    this.currentSmoothing_0 = false;
    this.currentBlendFactors_0 = BlendMode$NORMAL_getInstance().factors;
    this.currentProgram_0 = null;
    var $this_2 = logger;
    var level_2 = Logger$Level.TRACE;
    if ($this_2.isEnabled_fs4ikx$(level_2)) {
      $this_2.actualLog_pwm3k3$(level_2, 'BatchBuilder2D[3]');
    }this.vertexBuffer_0 = this.ag.createVertexBuffer();
    this.indexBuffer_0 = this.ag.createIndexBuffer();
    var $this_3 = logger;
    var level_3 = Logger$Level.TRACE;
    if ($this_3.isEnabled_fs4ikx$(level_3)) {
      $this_3.actualLog_pwm3k3$(level_3, 'BatchBuilder2D[4]');
    }this.stencil = new AG$StencilState();
    var $this_4 = logger;
    var level_4 = Logger$Level.TRACE;
    if ($this_4.isEnabled_fs4ikx$(level_4)) {
      $this_4.actualLog_pwm3k3$(level_4, 'BatchBuilder2D[5]');
    }this.colorMask = new AG$ColorMaskState();
    var $this_5 = logger;
    var level_5 = Logger$Level.TRACE;
    if ($this_5.isEnabled_fs4ikx$(level_5)) {
      $this_5.actualLog_pwm3k3$(level_5, 'BatchBuilder2D[6]');
    }this.scissor = null;
    this.identity_0 = new Matrix();
    var $this_6 = logger;
    var level_6 = Logger$Level.TRACE;
    if ($this_6.isEnabled_fs4ikx$(level_6)) {
      $this_6.actualLog_pwm3k3$(level_6, 'BatchBuilder2D[7]');
    }this.ptt1_0 = Point.Companion.invoke();
    this.ptt2_0 = Point.Companion.invoke();
    this.pt1_0 = Point.Companion.invoke();
    this.pt2_0 = Point.Companion.invoke();
    this.pt3_0 = Point.Companion.invoke();
    this.pt4_0 = Point.Companion.invoke();
    this.pt5_0 = Point.Companion.invoke();
    this.pt6_0 = Point.Companion.invoke();
    this.pt7_0 = Point.Companion.invoke();
    this.pt8_0 = Point.Companion.invoke();
    var $this_7 = logger;
    var level_7 = Logger$Level.TRACE;
    if ($this_7.isEnabled_fs4ikx$(level_7)) {
      $this_7.actualLog_pwm3k3$(level_7, 'BatchBuilder2D[8]');
    }this.projMat_0 = new Matrix3D();
    this.viewMat = new Matrix3D();
    var $this_8 = logger;
    var level_8 = Logger$Level.TRACE;
    if ($this_8.isEnabled_fs4ikx$(level_8)) {
      $this_8.actualLog_pwm3k3$(level_8, 'BatchBuilder2D[9]');
    }this.textureUnit_0 = new AG$TextureUnit(null, false);
    var $this_9 = logger;
    var level_9 = Logger$Level.TRACE;
    if ($this_9.isEnabled_fs4ikx$(level_9)) {
      $this_9.actualLog_pwm3k3$(level_9, 'BatchBuilder2D[10]');
    }this.uniforms_7s8f7k$_0 = lazy(BatchBuilder2D$uniforms$lambda(this));
    var $this_10 = logger;
    var level_10 = Logger$Level.TRACE;
    if ($this_10.isEnabled_fs4ikx$(level_10)) {
      $this_10.actualLog_pwm3k3$(level_10, 'BatchBuilder2D[11]');
    }this.tempRect_0 = Rectangle.Companion.invoke();
    this.beforeFlush = new Signal();
    this.tempOldUniforms = new AG$UniformValues();
  }
  Object.defineProperty(BatchBuilder2D.prototype, 'uniforms', {
    get: function () {
      return this.uniforms_7s8f7k$_0.value;
    }
  });
  BatchBuilder2D.prototype.readVertices = function () {
    var $receiver = until(0, this.vertexCount_0);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(this.readVertex_jl30ec$(item));
    }
    return destination;
  };
  BatchBuilder2D.prototype.readVertex_jl30ec$ = function (n, out) {
    if (out === void 0)
      out = new VertexInfo();
    out.read_vd4xm2$(this.vertices_8be2vx$, n);
    return out;
  };
  BatchBuilder2D.prototype.addVertex_0 = function (x, y, u, v, colorMul, colorAdd) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    this.vertices_8be2vx$.setAlignedFloat32_24o109$((tmp$ = this.vertexPos_0, this.vertexPos_0 = tmp$ + 1 | 0, tmp$), x);
    this.vertices_8be2vx$.setAlignedFloat32_24o109$((tmp$_0 = this.vertexPos_0, this.vertexPos_0 = tmp$_0 + 1 | 0, tmp$_0), y);
    this.vertices_8be2vx$.setAlignedFloat32_24o109$((tmp$_1 = this.vertexPos_0, this.vertexPos_0 = tmp$_1 + 1 | 0, tmp$_1), u);
    this.vertices_8be2vx$.setAlignedFloat32_24o109$((tmp$_2 = this.vertexPos_0, this.vertexPos_0 = tmp$_2 + 1 | 0, tmp$_2), v);
    this.vertices_8be2vx$.setAlignedInt32_vux9f0$((tmp$_3 = this.vertexPos_0, this.vertexPos_0 = tmp$_3 + 1 | 0, tmp$_3), colorMul.value);
    this.vertices_8be2vx$.setAlignedInt32_vux9f0$((tmp$_4 = this.vertexPos_0, this.vertexPos_0 = tmp$_4 + 1 | 0, tmp$_4), colorAdd);
    this.vertexCount_0 = this.vertexCount_0 + 1 | 0;
  };
  BatchBuilder2D.prototype.addIndex_0 = function (idx) {
    var tmp$;
    this.indices_8be2vx$.setAlignedInt16_2bqt6h$((tmp$ = this.indexPos_0, this.indexPos_0 = tmp$ + 1 | 0, tmp$), toShort(idx));
  };
  BatchBuilder2D.prototype.addIndices_0 = function (i0, i1, i2, i3, i4, i5) {
    this.addIndex_0(i0);
    this.addIndex_0(i1);
    this.addIndex_0(i2);
    this.addIndex_0(i3);
    this.addIndex_0(i4);
    this.addIndex_0(i5);
  };
  BatchBuilder2D.prototype.drawQuadFast_l3b03d$ = function (x0, y0, x1, y1, x2, y2, x3, y3, tex, colorMul, colorAdd, rotated) {
    if (rotated === void 0)
      rotated = false;
    this.ensure_0(6, 4);
    this.addIndex_0(this.vertexCount_0 + 0 | 0);
    this.addIndex_0(this.vertexCount_0 + 1 | 0);
    this.addIndex_0(this.vertexCount_0 + 2 | 0);
    this.addIndex_0(this.vertexCount_0 + 3 | 0);
    this.addIndex_0(this.vertexCount_0 + 0 | 0);
    this.addIndex_0(this.vertexCount_0 + 2 | 0);
    if (rotated) {
      this.addVertex_0(x0, y0, tex.x0, tex.y0, colorMul, colorAdd);
      this.addVertex_0(x1, y1, tex.x1, tex.y0, colorMul, colorAdd);
      this.addVertex_0(x2, y2, tex.x1, tex.y1, colorMul, colorAdd);
      this.addVertex_0(x3, y3, tex.x0, tex.y1, colorMul, colorAdd);
    } else {
      this.addVertex_0(x0, y0, tex.x0, tex.y0, colorMul, colorAdd);
      this.addVertex_0(x1, y1, tex.x1, tex.y0, colorMul, colorAdd);
      this.addVertex_0(x2, y2, tex.x1, tex.y1, colorMul, colorAdd);
      this.addVertex_0(x3, y3, tex.x0, tex.y1, colorMul, colorAdd);
    }
  };
  BatchBuilder2D.prototype.drawVertices_7elhgs$ = function (array, vcount, icount) {
    if (vcount === void 0)
      vcount = array.vcount;
    if (icount === void 0)
      icount = array.isize;
    var tmp$;
    this.ensure_0(icount, vcount);
    var b = array.isize;
    tmp$ = Math_0.min(icount, b);
    for (var idx = 0; idx < tmp$; idx++)
      this.addIndex_0(this.vertexCount_0 + array.indices[idx] | 0);
    FBuffer.Companion.copy_6omq8u$(array._data_8be2vx$, 0, this.vertices_8be2vx$, this.vertexPos_0 * 4 | 0, (vcount * 6 | 0) * 4 | 0);
    this.vertexCount_0 = this.vertexCount_0 + vcount | 0;
    this.vertexPos_0 = this.vertexPos_0 + (vcount * 6 | 0) | 0;
  };
  BatchBuilder2D.prototype.drawVertices_8go32q$ = function (array, tex, smoothing, blendFactors, vcount, icount, program) {
    if (vcount === void 0)
      vcount = array.vcount;
    if (icount === void 0)
      icount = array.isize;
    if (program === void 0)
      program = null;
    this.setStateFast_tkw4fi$(tex, smoothing, blendFactors, program);
    this.drawVertices_7elhgs$(array, vcount, icount);
  };
  BatchBuilder2D.prototype.checkAvailable_0 = function (indices, vertices) {
    return (this.indexPos_0 + indices | 0) < this.maxIndices || (this.vertexPos_0 + vertices | 0) < this.maxVertices;
  };
  BatchBuilder2D.prototype.ensure_0 = function (indices, vertices) {
    if (!this.checkAvailable_0(indices, vertices))
      this.flush();
    if (!this.checkAvailable_0(indices, vertices)) {
      throw IllegalStateException_init_0('Too much vertices'.toString());
    }};
  BatchBuilder2D.prototype.setStateFast_tkw4fi$ = function (tex, smoothing, blendFactors, program) {
    this.setStateFast_v4vuhi$(tex.base, smoothing, blendFactors, program);
  };
  BatchBuilder2D.prototype.setStateFast_v4vuhi$ = function (tex, smoothing, blendFactors, program) {
    var tmp$;
    if (!equals(tex, this.currentTex_0) || this.currentSmoothing_0 !== smoothing || !((tmp$ = this.currentBlendFactors_0) != null ? tmp$.equals(blendFactors) : null) || !equals(this.currentProgram_0, program)) {
      this.flush();
      this.currentTex_0 = tex;
      this.currentSmoothing_0 = smoothing;
      this.currentBlendFactors_0 = tex != null && tex.isFbo ? toRenderFboIntoBack(blendFactors) : blendFactors;
      this.currentProgram_0 = program;
    }};
  BatchBuilder2D.prototype.drawNinePatch_3jdr9x$ = function (tex, x, y, width, height, posCuts, texCuts, m, filtering, colorMul, colorAdd, blendFactors, program) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (width === void 0)
      width = tex.width;
    if (height === void 0)
      height = tex.height;
    if (m === void 0)
      m = this.identity_0;
    if (filtering === void 0)
      filtering = true;
    if (colorMul === void 0)
      colorMul = color.Colors.WHITE;
    if (colorAdd === void 0)
      colorAdd = 2139062143;
    if (blendFactors === void 0)
      blendFactors = BlendMode$NORMAL_getInstance().factors;
    if (program === void 0)
      program = null;
    this.setStateFast_tkw4fi$(tex.base, filtering, blendFactors, program);
    this.ensure_0(54, 16);
    var p_o = this.pt1_0.setToTransform_4le9et$(m, this.ptt1_0.setTo_lu1900$(numberToDouble(x), numberToDouble(y)));
    var tmp$ = this.pt2_0;
    var tmp$_0 = this.ptt1_0;
    var $receiver = this.ptt1_0;
    var x_0 = x + width;
    var p_dU = tmp$.setToSub_xwdphw$(tmp$_0.setToTransform_4le9et$(m, $receiver.setTo_lu1900$(numberToDouble(x_0), numberToDouble(y))), p_o);
    var tmp$_1 = this.pt3_0;
    var tmp$_2 = this.ptt1_0;
    var $receiver_0 = this.ptt1_0;
    var y_0 = y + height;
    var p_dV = tmp$_1.setToSub_xwdphw$(tmp$_2.setToTransform_4le9et$(m, $receiver_0.setTo_lu1900$(numberToDouble(x), numberToDouble(y_0))), p_o);
    var $receiver_1 = this.pt4_0;
    var x_1 = tex.x0;
    var y_1 = tex.y0;
    var t_o = $receiver_1.setTo_lu1900$(numberToDouble(x_1), numberToDouble(y_1));
    var tmp$_3 = this.pt5_0;
    var $receiver_2 = this.ptt1_0;
    var x_2 = tex.x1;
    var y_2 = tex.y0;
    var t_dU = tmp$_3.setToSub_xwdphw$($receiver_2.setTo_lu1900$(numberToDouble(x_2), numberToDouble(y_2)), t_o);
    var tmp$_4 = this.pt6_0;
    var $receiver_3 = this.ptt1_0;
    var x_3 = tex.x0;
    var y_3 = tex.y1;
    var t_dV = tmp$_4.setToSub_xwdphw$($receiver_3.setTo_lu1900$(numberToDouble(x_3), numberToDouble(y_3)), t_o);
    var start = this.vertexCount_0;
    for (var cy = 0; cy < 4; cy++) {
      var posCutY = posCuts[cy].y;
      var texCutY = texCuts[cy].y;
      for (var cx = 0; cx < 4; cx++) {
        var posCutX = posCuts[cx].x;
        var texCutX = texCuts[cx].x;
        var p = this.pt7_0.setToAdd_xwdphw$(p_o, this.ptt1_0.setToAdd_xwdphw$(this.ptt1_0.setToMul_4civ2q$(p_dU, posCutX), this.ptt2_0.setToMul_4civ2q$(p_dV, posCutY)));
        var t = this.pt8_0.setToAdd_xwdphw$(t_o, this.ptt1_0.setToAdd_xwdphw$(this.ptt1_0.setToMul_4civ2q$(t_dU, texCutX), this.ptt2_0.setToMul_4civ2q$(t_dV, texCutY)));
        this.addVertex_0(p.x, p.y, t.x, t.y, colorMul, colorAdd);
      }
    }
    for (var cy_0 = 0; cy_0 < 3; cy_0++) {
      for (var cx_0 = 0; cx_0 < 3; cx_0++) {
        var v0 = start + (cy_0 * 4 | 0) + cx_0 | 0;
        var v1 = v0 + 1 | 0;
        var v2 = v0 + 4 | 0;
        var v3 = v0 + 5 | 0;
        this.addIndex_0(v0);
        this.addIndex_0(v1);
        this.addIndex_0(v2);
        this.addIndex_0(v2);
        this.addIndex_0(v1);
        this.addIndex_0(v3);
      }
    }
  };
  BatchBuilder2D.prototype.drawQuad_w9nimi$ = function (tex, x, y, width, height, m, filtering, colorMul, colorAdd, blendFactors, rotated, program) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (width === void 0)
      width = tex.width;
    if (height === void 0)
      height = tex.height;
    if (m === void 0)
      m = this.identity_0;
    if (filtering === void 0)
      filtering = true;
    if (colorMul === void 0)
      colorMul = color.Colors.WHITE;
    if (colorAdd === void 0)
      colorAdd = 2139062143;
    if (blendFactors === void 0)
      blendFactors = BlendMode$NORMAL_getInstance().factors;
    if (rotated === void 0)
      rotated = false;
    if (program === void 0)
      program = null;
    var x0 = x;
    var x1 = x + width;
    var y0 = y;
    var y1 = y + height;
    this.setStateFast_tkw4fi$(tex.base, filtering, blendFactors, program);
    this.drawQuadFast_l3b03d$(fastTransformXf(m, x0, y0), fastTransformYf(m, x0, y0), fastTransformXf(m, x1, y0), fastTransformYf(m, x1, y0), fastTransformXf(m, x1, y1), fastTransformYf(m, x1, y1), fastTransformXf(m, x0, y1), fastTransformYf(m, x0, y1), tex, colorMul, colorAdd, rotated);
  };
  function BatchBuilder2D$Companion() {
    BatchBuilder2D$Companion_instance = this;
    var $this = logger;
    var level = Logger$Level.TRACE;
    if ($this.isEnabled_fs4ikx$(level)) {
      $this.actualLog_pwm3k3$(level, 'BatchBuilder2D.Companion[0]');
    }this.a_ColMul = korag.DefaultShaders.a_Col;
    this.a_ColAdd = Attribute_init('a_Col2', VarType.Byte4, true);
    var $this_0 = logger;
    var level_0 = Logger$Level.TRACE;
    if ($this_0.isEnabled_fs4ikx$(level_0)) {
      $this_0.actualLog_pwm3k3$(level_0, 'BatchBuilder2D.Companion[1]');
    }this.v_ColMul = korag.DefaultShaders.v_Col;
    this.v_ColAdd = Varying_init('v_Col2', VarType.Byte4);
    var $this_1 = logger;
    var level_1 = Logger$Level.TRACE;
    if ($this_1.isEnabled_fs4ikx$(level_1)) {
      $this_1.actualLog_pwm3k3$(level_1, 'BatchBuilder2D.Companion[2]');
    }this.LAYOUT = VertexLayout_init([korag.DefaultShaders.a_Pos, korag.DefaultShaders.a_Tex, this.a_ColMul, this.a_ColAdd]);
    this.VERTEX = VertexShader(BatchBuilder2D$Companion$VERTEX$lambda(this));
    var $this_2 = logger;
    var level_2 = Logger$Level.TRACE;
    if ($this_2.isEnabled_fs4ikx$(level_2)) {
      $this_2.actualLog_pwm3k3$(level_2, 'BatchBuilder2D.Companion[3]');
    }this.FRAGMENT_PRE = this.buildTextureLookupFragment_6taknv$(true);
    this.FRAGMENT_NOPRE = this.buildTextureLookupFragment_6taknv$(false);
    this.PROGRAM_PRE = new Program(this.VERTEX, this.FRAGMENT_PRE, 'BatchBuilder2D.Premultiplied.Tinted');
    this.PROGRAM_NOPRE = new Program(this.VERTEX, this.FRAGMENT_NOPRE, 'BatchBuilder2D.NoPremultiplied.Tinted');
    var $this_3 = logger;
    var level_3 = Logger$Level.TRACE;
    if ($this_3.isEnabled_fs4ikx$(level_3)) {
      $this_3.actualLog_pwm3k3$(level_3, 'BatchBuilder2D.Companion[4]');
    }}
  BatchBuilder2D$Companion.prototype.getTextureLookupProgram_6taknv$ = function (premultiplied) {
    return premultiplied ? this.PROGRAM_PRE : this.PROGRAM_NOPRE;
  };
  BatchBuilder2D$Companion.prototype.getTextureLookupFragment_6taknv$ = function (premultiplied) {
    return premultiplied ? this.FRAGMENT_PRE : this.FRAGMENT_NOPRE;
  };
  function BatchBuilder2D$Companion$buildTextureLookupFragment$lambda(closure$premultiplied, this$BatchBuilder2D$) {
    return function ($receiver) {
      var $receiver_0 = korag.DefaultShaders;
      var closure$premultiplied_0 = closure$premultiplied;
      var this$BatchBuilder2D$_0 = this$BatchBuilder2D$;
      $receiver.SET_q0hzsk$($receiver.out, $receiver.texture2D_q0hzsk$($receiver_0.u_Tex, $receiver.get_hhgt4v$($receiver_0.v_Tex, 'xy')));
      if (closure$premultiplied_0) {
        $receiver.SET_q0hzsk$($receiver.get_hhgt4v$($receiver.out, 'rgb'), $receiver.div_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'rgb'), $receiver.get_hhgt4v$($receiver.out, 'a')));
      }$receiver.SET_q0hzsk$($receiver.out, $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'rgba'), $receiver.get_hhgt4v$(this$BatchBuilder2D$_0.v_ColMul, 'rgba')), $receiver.times_2oogdr$($receiver.minus_2oogdr$($receiver.get_hhgt4v$(this$BatchBuilder2D$_0.v_ColAdd, 'rgba'), $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5)])), $receiver.get_lit_81szk$(2.0))));
      if (closure$premultiplied_0) {
        var cond = $receiver.le_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'a'), $receiver.get_lit_81szk$(0.0));
        var body = new Program$Program$Builder_init($receiver.type);
        body.DISCARD();
        var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
        $receiver.outputStms.add_11rb$(stmIf);
      }return Unit;
    };
  }
  BatchBuilder2D$Companion.prototype.buildTextureLookupFragment_6taknv$ = function (premultiplied) {
    return FragmentShader(BatchBuilder2D$Companion$buildTextureLookupFragment$lambda(premultiplied, this));
  };
  function BatchBuilder2D$Companion$VERTEX$lambda(this$BatchBuilder2D$) {
    return function ($receiver) {
      var $receiver_0 = korag.DefaultShaders;
      var this$BatchBuilder2D$_0 = this$BatchBuilder2D$;
      $receiver.SET_q0hzsk$($receiver_0.v_Tex, $receiver_0.a_Tex);
      $receiver.SET_q0hzsk$(this$BatchBuilder2D$_0.v_ColMul, this$BatchBuilder2D$_0.a_ColMul);
      $receiver.SET_q0hzsk$(this$BatchBuilder2D$_0.v_ColAdd, this$BatchBuilder2D$_0.a_ColAdd);
      $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$($receiver.times_2oogdr$($receiver_0.u_ProjMat, $receiver_0.u_ViewMat), $receiver.vec4_hywno3$([korag.DefaultShaders.a_Pos, $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0)])));
      return Unit;
    };
  }
  BatchBuilder2D$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BatchBuilder2D$Companion_instance = null;
  function BatchBuilder2D$Companion_getInstance() {
    if (BatchBuilder2D$Companion_instance === null) {
      new BatchBuilder2D$Companion();
    }return BatchBuilder2D$Companion_instance;
  }
  BatchBuilder2D.prototype.flush = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    if (this.vertexCount_0 > 0) {
      if (this.flipRenderTexture && this.ag.renderingToTexture) {
        this.projMat_0.setToOrtho_glgttr$(this.tempRect_0.setBounds_tjonv8$(0, this.ag.backHeight, this.ag.backWidth, 0), -1.0, 1.0);
      } else {
        this.projMat_0.setToOrtho_glgttr$(this.tempRect_0.setBounds_tjonv8$(0, 0, this.ag.backWidth, this.ag.backHeight), -1.0, 1.0);
      }
      var factors = this.currentBlendFactors_0;
      this.vertexBuffer_0.upload_khrw8o$(this.vertices_8be2vx$, 0, this.vertexPos_0 * 4 | 0);
      this.indexBuffer_0.upload_khrw8o$(this.indices_8be2vx$, 0, this.indexPos_0 * 2 | 0);
      this.textureUnit_0.texture = this.currentTex_0;
      this.textureUnit_0.linear = this.currentSmoothing_0;
      var realFactors = this.ag.renderingToTexture ? toRenderImageIntoFbo(factors) : factors;
      tmp$_3 = this.ag;
      tmp$ = this.vertexBuffer_0;
      tmp$_0 = this.indexBuffer_0;
      tmp$_3.draw_gb6ti8$(tmp$, (tmp$_2 = this.currentProgram_0) != null ? tmp$_2 : ((tmp$_1 = this.currentTex_0) != null ? tmp$_1.premultiplied : null) === true ? BatchBuilder2D$Companion_getInstance().PROGRAM_PRE : BatchBuilder2D$Companion_getInstance().PROGRAM_NOPRE, AG$DrawType.TRIANGLES, BatchBuilder2D$Companion_getInstance().LAYOUT, this.indexPos_0, tmp$_0, void 0, realFactors, this.uniforms, this.stencil, this.colorMask, this.scissor);
      this.beforeFlush.invoke_11rb$(this);
    }this.vertexCount_0 = 0;
    this.vertexPos_0 = 0;
    this.indexPos_0 = 0;
    this.currentTex_0 = null;
  };
  BatchBuilder2D.prototype.setViewMatrixTemp_zgq7hy$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.BatchBuilder2D.setViewMatrixTemp_zgq7hy$', wrapFunction(function () {
    var Matrix3D_init = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.Matrix3D;
    var copyFrom = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.copyFrom_kh6thv$;
    return function (matrix, temp, callback) {
      if (temp === void 0)
        temp = new Matrix3D_init();
      this.flush();
      temp.copyFrom_p62hku$(this.viewMat);
      copyFrom(this.viewMat, matrix);
      try {
        callback();
      }finally {
        this.flush();
        this.viewMat.copyFrom_p62hku$(temp);
      }
    };
  }));
  BatchBuilder2D.prototype.setTemporalUniform_xl821w$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.BatchBuilder2D.setTemporalUniform_xl821w$', function (uniform, value, callback) {
    var old = this.uniforms.get_2f4vi3$(uniform);
    this.uniforms.putOrRemove_lyfqxb$(uniform, value);
    try {
      callback();
    }finally {
      this.uniforms.putOrRemove_lyfqxb$(uniform, old);
    }
  });
  BatchBuilder2D.prototype.setTemporalUniforms_v2hawb$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.BatchBuilder2D.setTemporalUniforms_v2hawb$', function (uniforms, callback) {
    this.flush();
    this.tempOldUniforms.setTo_huk8u$(this.uniforms);
    this.uniforms.put_huk8u$(uniforms);
    try {
      callback();
    }finally {
      this.flush();
      this.uniforms.setTo_huk8u$(this.tempOldUniforms);
    }
  });
  function BatchBuilder2D_init$lambda(this$BatchBuilder2D) {
    return function (it) {
      this$BatchBuilder2D.flush();
      return Unit;
    };
  }
  function BatchBuilder2D$uniforms$lambda(this$BatchBuilder2D) {
    return function () {
      return AG$AG$UniformValues_init([to(korag.DefaultShaders.u_ProjMat, this$BatchBuilder2D.projMat_0), to(korag.DefaultShaders.u_ViewMat, this$BatchBuilder2D.viewMat), to(korag.DefaultShaders.u_Tex, this$BatchBuilder2D.textureUnit_0)]);
    };
  }
  BatchBuilder2D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BatchBuilder2D',
    interfaces: []
  };
  function BatchBuilder2D_init(ag, maxQuads, $this) {
    if (maxQuads === void 0)
      maxQuads = 512;
    $this = $this || Object.create(BatchBuilder2D.prototype);
    BatchBuilder2D.call($this, new RenderContext(ag), maxQuads);
    return $this;
  }
  function TexturedVertexArray(vcount, indices, isize) {
    TexturedVertexArray$Companion_getInstance();
    if (isize === void 0)
      isize = indices.length;
    this.vcount = vcount;
    this.indices = indices;
    this.isize = isize;
    this.initialVcount = this.vcount;
    this._data_8be2vx$ = FBuffer.Companion.invoke_fzusl$((6 * this.initialVcount | 0) * 4 | 0, false);
    this.f32_8be2vx$ = this._data_8be2vx$.arrayFloat;
    this.i32_8be2vx$ = this._data_8be2vx$.arrayInt;
    this.offset_0 = 0;
    this.bounds_0 = new BoundsBuilder();
  }
  function TexturedVertexArray$Companion() {
    TexturedVertexArray$Companion_instance = this;
    this.COMPONENTS_PER_VERTEX = 6;
    this.QUAD_INDICES = new Int32Array([0, 1, 2, 3, 0, 2]);
    this.EMPTY_INT_ARRAY = new Int32Array(0);
  }
  TexturedVertexArray$Companion.prototype.quadIndices_za3lpa$ = function (quadCount) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
    if (quadCount === 0)
      return this.EMPTY_INT_ARRAY;
    var out = new Int32Array(quadCount * 6 | 0);
    var m = 0;
    var base = 0;
    for (var n = 0; n < quadCount; n++) {
      out[tmp$ = m, m = tmp$ + 1 | 0, tmp$] = base + 0 | 0;
      out[tmp$_0 = m, m = tmp$_0 + 1 | 0, tmp$_0] = base + 1 | 0;
      out[tmp$_1 = m, m = tmp$_1 + 1 | 0, tmp$_1] = base + 2 | 0;
      out[tmp$_2 = m, m = tmp$_2 + 1 | 0, tmp$_2] = base + 3 | 0;
      out[tmp$_3 = m, m = tmp$_3 + 1 | 0, tmp$_3] = base + 0 | 0;
      out[tmp$_4 = m, m = tmp$_4 + 1 | 0, tmp$_4] = base + 2 | 0;
      base = base + 4 | 0;
    }
    return out;
  };
  TexturedVertexArray$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TexturedVertexArray$Companion_instance = null;
  function TexturedVertexArray$Companion_getInstance() {
    if (TexturedVertexArray$Companion_instance === null) {
      new TexturedVertexArray$Companion();
    }return TexturedVertexArray$Companion_instance;
  }
  TexturedVertexArray.prototype.select_za3lpa$ = function (i) {
    this.offset_0 = i * 6 | 0;
    return this;
  };
  TexturedVertexArray.prototype.setX_mx4ult$ = function (v) {
    this.f32_8be2vx$[this.offset_0 + 0 | 0] = v;
    return this;
  };
  TexturedVertexArray.prototype.setY_mx4ult$ = function (v) {
    this.f32_8be2vx$[this.offset_0 + 1 | 0] = v;
    return this;
  };
  TexturedVertexArray.prototype.setU_mx4ult$ = function (v) {
    this.f32_8be2vx$[this.offset_0 + 2 | 0] = v;
    return this;
  };
  TexturedVertexArray.prototype.setV_mx4ult$ = function (v) {
    this.f32_8be2vx$[this.offset_0 + 3 | 0] = v;
    return this;
  };
  TexturedVertexArray.prototype.setCMul_md34sx$ = function (v) {
    this.i32_8be2vx$[this.offset_0 + 4 | 0] = v.value;
    return this;
  };
  TexturedVertexArray.prototype.setCAdd_za3lpa$ = function (v) {
    this.i32_8be2vx$[this.offset_0 + 5 | 0] = v;
    return this;
  };
  TexturedVertexArray.prototype.xy_y2mxf1$ = function (x, y, matrix) {
    return this.setX_mx4ult$(fastTransformXf(matrix, x, y)).setY_mx4ult$(fastTransformYf(matrix, x, y));
  };
  TexturedVertexArray.prototype.xy_lu1900$ = function (x, y) {
    return this.setX_mx4ult$(x).setY_mx4ult$(y);
  };
  TexturedVertexArray.prototype.uv_dleff0$ = function (tx, ty) {
    return this.setU_mx4ult$(tx).setV_mx4ult$(ty);
  };
  TexturedVertexArray.prototype.cols_3hpxcz$ = function (colMul, colAdd) {
    return this.setCMul_md34sx$(colMul).setCAdd_za3lpa$(colAdd);
  };
  TexturedVertexArray.prototype.quadV_oebh3t$ = function (index, x, y, u, v, colMul, colAdd) {
    var pos = index * 6 | 0;
    this.f32_8be2vx$[pos + 0 | 0] = x;
    this.f32_8be2vx$[pos + 1 | 0] = y;
    this.f32_8be2vx$[pos + 2 | 0] = u;
    this.f32_8be2vx$[pos + 3 | 0] = v;
    this.i32_8be2vx$[pos + 4 | 0] = colMul.value;
    this.i32_8be2vx$[pos + 5 | 0] = colAdd;
  };
  TexturedVertexArray.prototype.quadV_24mhcz$ = function (index, x, y, u, v, colMul, colAdd) {
    this.quadV_oebh3t$(index, x, y, u, v, colMul, colAdd);
  };
  TexturedVertexArray.prototype.quad_l5kpw6$ = function (index, x, y, width, height, matrix, bmp, colMul, colAdd) {
    var x0 = fastTransformXf(matrix, x, y);
    var x1 = fastTransformXf(matrix, x + width, y);
    var x2 = fastTransformXf(matrix, x + width, y + height);
    var x3 = fastTransformXf(matrix, x, y + height);
    var y0 = fastTransformYf(matrix, x, y);
    var y1 = fastTransformYf(matrix, x + width, y);
    var y2 = fastTransformYf(matrix, x + width, y + height);
    var y3 = fastTransformYf(matrix, x, y + height);
    this.quadV_oebh3t$(index + 0 | 0, x0, y0, bmp.tl_x, bmp.tl_y, colMul, colAdd);
    this.quadV_oebh3t$(index + 1 | 0, x1, y1, bmp.tr_x, bmp.tr_y, colMul, colAdd);
    this.quadV_oebh3t$(index + 2 | 0, x2, y2, bmp.br_x, bmp.br_y, colMul, colAdd);
    this.quadV_oebh3t$(index + 3 | 0, x3, y3, bmp.bl_x, bmp.bl_y, colMul, colAdd);
  };
  TexturedVertexArray.prototype.getBounds_5s11b5$ = function (min, max, out) {
    if (min === void 0)
      min = 0;
    if (max === void 0)
      max = this.vcount;
    if (out === void 0)
      out = Rectangle.Companion.invoke();
    this.bounds_0.reset();
    for (var n = min; n < max; n++) {
      this.select_za3lpa$(n);
      this.bounds_0.add_lu1900$(this.x, this.y);
    }
    return this.bounds_0.getBounds_2da8yn$(out);
  };
  Object.defineProperty(TexturedVertexArray.prototype, 'x', {
    get: function () {
      return this.f32_8be2vx$[this.offset_0 + 0 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'y', {
    get: function () {
      return this.f32_8be2vx$[this.offset_0 + 1 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'u', {
    get: function () {
      return this.f32_8be2vx$[this.offset_0 + 2 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'v', {
    get: function () {
      return this.f32_8be2vx$[this.offset_0 + 3 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'cMul', {
    get: function () {
      return this.i32_8be2vx$[this.offset_0 + 4 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'cAdd', {
    get: function () {
      return this.i32_8be2vx$[this.offset_0 + 5 | 0];
    }
  });
  Object.defineProperty(TexturedVertexArray.prototype, 'vertexString', {
    get: function () {
      return 'V(xy=(' + this.x + ', ' + this.y + '),uv=' + this.u + ', ' + this.v + ',cMul=' + this.cMul + ',cAdd=' + this.cAdd + ')';
    }
  });
  TexturedVertexArray.prototype.str_za3lpa$ = function (index) {
    var old = this.offset_0;
    try {
      return this.select_za3lpa$(index).vertexString;
    }finally {
      this.offset_0 = old;
    }
  };
  TexturedVertexArray.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TexturedVertexArray',
    interfaces: []
  };
  function TexturedVertexArrayBuilder(count) {
    this.indices = new Int32Array(count * 6 | 0);
    this.array = new TexturedVertexArray(count * 4 | 0, this.indices);
    this.offset = 0;
  }
  TexturedVertexArrayBuilder.prototype.quad_rpg5o$ = function (x, y, width, height, matrix, bmp, colMul, colAdd) {
    var offset4 = this.offset * 4 | 0;
    var i6 = this.offset * 6 | 0;
    this.array.quad_l5kpw6$(offset4, x, y, width, height, matrix, bmp, colMul, colAdd);
    this.indices[i6 + 0 | 0] = offset4 + 0 | 0;
    this.indices[i6 + 1 | 0] = offset4 + 1 | 0;
    this.indices[i6 + 2 | 0] = offset4 + 2 | 0;
    this.indices[i6 + 3 | 0] = offset4 + 3 | 0;
    this.indices[i6 + 4 | 0] = offset4 + 0 | 0;
    this.indices[i6 + 5 | 0] = offset4 + 2 | 0;
    this.offset = this.offset + 1 | 0;
  };
  TexturedVertexArrayBuilder.prototype.quad_gzythw$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.TexturedVertexArrayBuilder.quad_gzythw$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (x, y, width, height, matrix, bmp, colMul, colAdd) {
      this.quad_rpg5o$(numberToDouble(x), numberToDouble(y), numberToDouble(width), numberToDouble(height), matrix, bmp, colMul, colAdd);
    };
  }));
  TexturedVertexArrayBuilder.prototype.build = function () {
    var $receiver = this.array;
    $receiver.vcount = this.offset * 4 | 0;
    $receiver.isize = this.offset * 6 | 0;
    return $receiver;
  };
  TexturedVertexArrayBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TexturedVertexArrayBuilder',
    interfaces: []
  };
  function buildQuads(count, build) {
    var $receiver = new TexturedVertexArrayBuilder(count);
    build($receiver);
    return $receiver.build();
  }
  function ensurePowerOfTwo($receiver) {
    if (get_isPowerOfTwo($receiver.width) && get_isPowerOfTwo($receiver.height))
      return $receiver;
    else {
      var $receiver_0 = new Bitmap32(get_nextPowerOfTwo($receiver.width), get_nextPowerOfTwo($receiver.height));
      $receiver_0.put_dryc6d$($receiver);
      return $receiver_0;
    }
  }
  function debugLineRenderContext$lambda($receiver) {
    return new DebugLineRenderContext($receiver);
  }
  var debugLineRenderContext;
  var debugLineRenderContext_metadata = new PropertyMetadata('debugLineRenderContext');
  function get_debugLineRenderContext($receiver) {
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = debugLineRenderContext.name) != null ? tmp$ : debugLineRenderContext_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = debugLineRenderContext.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = debugLineRenderContext.name) != null ? tmp$_3 : debugLineRenderContext_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  }
  function DebugLineRenderContext(ctx) {
    this.ctx = ctx;
    this.ctx.flushers.add_qlkmfe$(DebugLineRenderContext_init$lambda(this));
    this.ag_0 = this.ctx.ag;
    this.LAYOUT = VertexLayout_init([korag.DefaultShaders.a_Pos]);
    this.VERTEX = VertexShader(DebugLineRenderContext$VERTEX$lambda);
    this.FRAGMENT = FragmentShader(DebugLineRenderContext$FRAGMENT$lambda);
    this.uniforms_8be2vx$_oqji5p$_0 = lazy(DebugLineRenderContext$uniforms$lambda(this));
    this.vertexBuffer_0 = this.ag_0.createVertexBuffer();
    this.program_0 = new Program(this.VERTEX, this.FRAGMENT);
    this.maxVertexCount_0 = 1024;
    this.vertices_0 = FBuffer.Companion.alloc_za3lpa$(24 * this.maxVertexCount_0 | 0);
    this.tempRect_0 = Rectangle.Companion.invoke();
    this.projMat_0 = new Matrix3D();
    this.viewMat = new Matrix3D();
    this.vertexCount_0 = 0;
    this.vertexPos_0 = 0;
  }
  Object.defineProperty(DebugLineRenderContext.prototype, 'uniforms_8be2vx$', {
    get: function () {
      return this.uniforms_8be2vx$_oqji5p$_0.value;
    }
  });
  DebugLineRenderContext.prototype.line_7b5o5w$ = function (x0, y0, x1, y1) {
    if (this.vertexCount_0 >= (this.maxVertexCount_0 - 2 | 0)) {
      this.flush();
    }this.addVertex_0(x0, y0);
    this.addVertex_0(x1, y1);
  };
  DebugLineRenderContext.prototype.line_1ugm5o$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.DebugLineRenderContext.line_1ugm5o$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (x0, y0, x1, y1) {
      this.line_7b5o5w$(numberToDouble(x0), numberToDouble(y0), numberToDouble(x1), numberToDouble(y1));
    };
  }));
  DebugLineRenderContext.prototype.line_6y0v78$ = function (x0, y0, x1, y1) {
    this.line_7b5o5w$(x0, y0, x1, y1);
  };
  DebugLineRenderContext.prototype.draw_mvwknd$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.DebugLineRenderContext.draw_mvwknd$', wrapFunction(function () {
    var toMatrix3D = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.toMatrix3D_g4hryh$;
    return function (matrix, body) {
      this.ctx.flush();
      toMatrix3D(matrix, this.viewMat);
      try {
        return body();
      }finally {
        this.flush();
      }
    };
  }));
  DebugLineRenderContext.prototype.flush = function () {
    if (this.vertexCount_0 > 0) {
      this.vertexBuffer_0.upload_khrw8o$(this.vertices_0, 0, this.vertexPos_0 * 4 | 0);
      this.projMat_0.setToOrtho_glgttr$(this.tempRect_0.setBounds_tjonv8$(0, 0, this.ag_0.backWidth, this.ag_0.backHeight), -1.0, 1.0);
      this.ag_0.draw_gb6ti8$(this.vertexBuffer_0, this.program_0, AG$DrawType.LINES, this.LAYOUT, this.vertexCount_0, void 0, void 0, void 0, this.uniforms_8be2vx$);
    }this.vertexCount_0 = 0;
    this.vertexPos_0 = 0;
  };
  DebugLineRenderContext.prototype.addVertex_0 = function (x, y) {
    var tmp$, tmp$_0;
    this.vertices_0.setAlignedFloat32_24o109$((tmp$ = this.vertexPos_0, this.vertexPos_0 = tmp$ + 1 | 0, tmp$), x);
    this.vertices_0.setAlignedFloat32_24o109$((tmp$_0 = this.vertexPos_0, this.vertexPos_0 = tmp$_0 + 1 | 0, tmp$_0), y);
    this.vertexCount_0 = this.vertexCount_0 + 1 | 0;
  };
  function DebugLineRenderContext_init$lambda(this$DebugLineRenderContext) {
    return function (it) {
      this$DebugLineRenderContext.flush();
      return Unit;
    };
  }
  function DebugLineRenderContext$VERTEX$lambda($receiver) {
    var $receiver_0 = korag.DefaultShaders;
    $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$($receiver.times_2oogdr$($receiver_0.u_ProjMat, $receiver_0.u_ViewMat), $receiver.vec4_hywno3$([$receiver_0.a_Pos, $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0)])));
    return Unit;
  }
  function DebugLineRenderContext$FRAGMENT$lambda($receiver) {
    korag.DefaultShaders;
    $receiver.set_2oogdr$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0)]));
    return Unit;
  }
  function DebugLineRenderContext$uniforms$lambda(this$DebugLineRenderContext) {
    return function () {
      return AG$AG$UniformValues_init([to(korag.DefaultShaders.u_ProjMat, this$DebugLineRenderContext.projMat_0), to(korag.DefaultShaders.u_ViewMat, this$DebugLineRenderContext.viewMat)]);
    };
  }
  DebugLineRenderContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DebugLineRenderContext',
    interfaces: []
  };
  function RenderContext(ag, bp, stats, coroutineContext) {
    if (bp === void 0)
      bp = BoundsProvider$Dummy_getInstance();
    if (stats === void 0)
      stats = new Stats();
    if (coroutineContext === void 0)
      coroutineContext = coroutines.EmptyCoroutineContext;
    this.ag = ag;
    this.bp = bp;
    this.stats = stats;
    this.coroutineContext = coroutineContext;
    this.$delegate_8isv09$_0 = new Extra$Mixin();
    this.agBitmapTextureManager = new AgBitmapTextureManager(this.ag);
    this.frame = 0;
    this.batch_eyursb$_0 = lazy(RenderContext$batch$lambda(this));
    this.ctx2d_e7bilm$_0 = lazy(RenderContext$ctx2d$lambda(this));
    this.flushers = new Signal();
    this.matrixPool = new Pool(RenderContext$matrixPool$lambda, 8, RenderContext$matrixPool$lambda_0);
    this.matrix3DPool = new Pool(RenderContext$matrix3DPool$lambda, 8, RenderContext$matrix3DPool$lambda_0);
    this.pointPool = new Pool(RenderContext$pointPool$lambda, 8, RenderContext$pointPool$lambda_0);
    this.masksEnabled = true;
  }
  Object.defineProperty(RenderContext.prototype, 'batch', {
    get: function () {
      return this.batch_eyursb$_0.value;
    }
  });
  Object.defineProperty(RenderContext.prototype, 'ctx2d', {
    get: function () {
      return this.ctx2d_e7bilm$_0.value;
    }
  });
  RenderContext.prototype.flush = function () {
    this.flushers.invoke_11rb$(Unit);
  };
  RenderContext.prototype.renderToTexture_fnloth$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext.renderToTexture_fnloth$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Texture = _.com.soywiz.korge.render.Texture;
    var color = _.$$importsForInline$$['korgw-root-korgw'].$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    function AG$renderToTexture$lambda(it) {
      return Unit;
    }
    return function (width, height, render, use) {
      this.flush();
      var $this = this.ag;
      var rb = $this.renderBuffers.alloc();
      $this.frameRenderBuffers.add_11rb$(rb);
      var oldRenderBuffer = $this.currentRenderBuffer;
      rb.setSize_vux9f0$(width, height);
      $this.setRenderBuffer_m67x29$(rb);
      try {
        $this.clear_yvqa77$(color.Colors.TRANSPARENT_BLACK);
        var oldScissors = this.batch.scissor;
        this.batch.scissor = null;
        try {
          render();
          this.flush();
        }finally {
          this.batch.scissor = oldScissors;
        }
      }finally {
        $this.setRenderBuffer_m67x29$(oldRenderBuffer);
      }
      try {
        var it = rb.tex;
        use(Texture.Companion.invoke_l6jlr1$(it, width, height));
        this.flush();
      }finally {
        $this.frameRenderBuffers.remove_11rb$(rb);
        $this.renderBuffers.free_11rb$(rb);
      }
    };
  }));
  RenderContext.prototype.renderToBitmap_1xki6w$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext.renderToBitmap_1xki6w$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korgw-root-korgw'].$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    return function (bmp, callback) {
      this.flush();
      var $this = this.ag;
      var width = bmp.width;
      var height = bmp.height;
      var rb = $this.renderBuffers.alloc();
      $this.frameRenderBuffers.add_11rb$(rb);
      var oldRenderBuffer = $this.currentRenderBuffer;
      rb.setSize_vux9f0$(width, height);
      $this.setRenderBuffer_m67x29$(rb);
      try {
        $this.clear_yvqa77$(color.Colors.TRANSPARENT_BLACK);
        callback();
        this.flush();
        $this.readColor_59u9qz$(bmp);
      }finally {
        $this.setRenderBuffer_m67x29$(oldRenderBuffer);
      }
      try {
        rb.tex;
      }finally {
        $this.frameRenderBuffers.remove_11rb$(rb);
        $this.renderBuffers.free_11rb$(rb);
      }
      return bmp;
    };
  }));
  RenderContext.prototype.finish = function () {
    this.ag.flip();
  };
  RenderContext.prototype.getTex_9byvhi$ = function (bmp) {
    return this.agBitmapTextureManager.getTexture_9byvhi$(bmp);
  };
  RenderContext.prototype.getTex_uler2c$ = function (bmp) {
    return this.agBitmapTextureManager.getTextureBase_uler2c$(bmp);
  };
  Object.defineProperty(RenderContext.prototype, 'extra', {
    get: function () {
      return this.$delegate_8isv09$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_8isv09$_0.extra = tmp$;
    }
  });
  Object.defineProperty(RenderContext.prototype, 'virtualBottom', {
    get: function () {
      return this.bp.virtualBottom;
    }
  });
  Object.defineProperty(RenderContext.prototype, 'virtualLeft', {
    get: function () {
      return this.bp.virtualLeft;
    }
  });
  Object.defineProperty(RenderContext.prototype, 'virtualRight', {
    get: function () {
      return this.bp.virtualRight;
    }
  });
  Object.defineProperty(RenderContext.prototype, 'virtualTop', {
    get: function () {
      return this.bp.virtualTop;
    }
  });
  function RenderContext$batch$lambda(this$RenderContext) {
    return function () {
      return new BatchBuilder2D(this$RenderContext);
    };
  }
  function RenderContext$ctx2d$lambda(this$RenderContext) {
    return function () {
      return new RenderContext2D(this$RenderContext.batch, this$RenderContext.agBitmapTextureManager);
    };
  }
  function RenderContext$matrixPool$lambda(it) {
    it.identity();
    return Unit;
  }
  function RenderContext$matrixPool$lambda_0(it) {
    return new Matrix();
  }
  function RenderContext$matrix3DPool$lambda(it) {
    it.identity();
    return Unit;
  }
  function RenderContext$matrix3DPool$lambda_0(it) {
    return new Matrix3D();
  }
  function RenderContext$pointPool$lambda(it) {
    it.setTo_lu1900$(numberToDouble(0), numberToDouble(0));
    return Unit;
  }
  function RenderContext$pointPool$lambda_0(it) {
    return Point.Companion.invoke();
  }
  RenderContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RenderContext',
    interfaces: [BoundsProvider, Extra]
  };
  var testRenderContext = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.testRenderContext_ydou38$', wrapFunction(function () {
    var RenderContext_init = _.com.soywiz.korge.render.RenderContext;
    return function (ag, block) {
      var ctx = new RenderContext_init(ag);
      block(ctx);
      ctx.flush();
      return ag;
    };
  }));
  var testRenderContext_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.testRenderContext_zbj47c$', wrapFunction(function () {
    var LogAG_init = _.$$importsForInline$$['korgw-root-korgw'].com.soywiz.korag.log.LogAG;
    var RenderContext_init = _.com.soywiz.korge.render.RenderContext;
    return function (block) {
      var ag = new LogAG_init();
      var ctx = new RenderContext_init(ag);
      block(ctx);
      ctx.flush();
      return ag;
    };
  }));
  var logger_0;
  function RenderContext2D(batch, agBitmapTextureManager) {
    this.batch = batch;
    this.agBitmapTextureManager = agBitmapTextureManager;
    this.$delegate_lchfrf$_0 = new Extra$Mixin();
    var $this = logger_0;
    var level = Logger$Level.TRACE;
    if ($this.isEnabled_fs4ikx$(level)) {
      $this.actualLog_pwm3k3$(level, 'RenderContext2D[0]');
    }this.mpool = Pool_init(void 0, RenderContext2D$mpool$lambda);
    var $this_0 = logger_0;
    var level_0 = Logger$Level.TRACE;
    if ($this_0.isEnabled_fs4ikx$(level_0)) {
      $this_0.actualLog_pwm3k3$(level_0, 'RenderContext2D[1]');
    }this.m = new Matrix();
    this.blendFactors = AG$Blending.Companion.NORMAL;
    this.multiplyColor = color.Colors.WHITE;
    var $this_1 = logger_0;
    var level_1 = Logger$Level.TRACE;
    if ($this_1.isEnabled_fs4ikx$(level_1)) {
      $this_1.actualLog_pwm3k3$(level_1, 'RenderContext2D[2]');
    }this.scissorPool = Pool_init(8, RenderContext2D$scissorPool$lambda);
    this.tempScissor = new AG$Scissor(0, 0, 0, 0);
  }
  RenderContext2D.prototype.keepMatrix_klfg04$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.keepMatrix_klfg04$', function (callback) {
    var $this = this.mpool;
    var temp = $this.alloc();
    try {
      var callback$result;
      temp.copyFrom_1ktkmn$(this.m);
      try {
        callback$result = callback();
      }finally {
        this.m.copyFrom_1ktkmn$(temp);
      }
    }finally {
      $this.free_11rb$(temp);
    }
    return callback$result;
  });
  RenderContext2D.prototype.keepBlendFactors_klfg04$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.keepBlendFactors_klfg04$', function (callback) {
    var oldBlendFactors = this.blendFactors;
    try {
      return callback();
    }finally {
      this.blendFactors = oldBlendFactors;
    }
  });
  RenderContext2D.prototype.keepColor_klfg04$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.keepColor_klfg04$', function (callback) {
    var multiplyColor = this.multiplyColor;
    try {
      return callback();
    }finally {
      this.multiplyColor = multiplyColor;
    }
  });
  RenderContext2D.prototype.keep_klfg04$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.keep_klfg04$', wrapFunction(function () {
    function RenderContext2D$keep$lambda$lambda$lambda(closure$callback) {
      return function () {
        return closure$callback();
      };
    }
    function RenderContext2D$keep$lambda$lambda(closure$callback, this$RenderContext2D) {
      return function () {
        var $this = this$RenderContext2D;
        var callback = RenderContext2D$keep$lambda$lambda$lambda(closure$callback);
        var keepColor_klfg04$result;
        var multiplyColor = $this.multiplyColor;
        try {
          keepColor_klfg04$result = callback();
        }finally {
          $this.multiplyColor = multiplyColor;
        }
        return keepColor_klfg04$result;
      };
    }
    function RenderContext2D$keep$lambda(closure$callback, this$RenderContext2D) {
      return function () {
        var $this = this$RenderContext2D;
        var callback = RenderContext2D$keep$lambda$lambda(closure$callback, this$RenderContext2D);
        var keepBlendFactors_klfg04$result;
        var oldBlendFactors = $this.blendFactors;
        try {
          keepBlendFactors_klfg04$result = callback();
        }finally {
          $this.blendFactors = oldBlendFactors;
        }
        return keepBlendFactors_klfg04$result;
      };
    }
    return function (callback) {
      var $this = this.mpool;
      var temp = $this.alloc();
      try {
        var callback$result;
        temp.copyFrom_1ktkmn$(this.m);
        try {
          callback$result = RenderContext2D$keep$lambda(callback, this)();
        }finally {
          this.m.copyFrom_1ktkmn$(temp);
        }
      }finally {
        $this.free_11rb$(temp);
      }
      return callback$result;
    };
  }));
  RenderContext2D.prototype.setMatrix_1ktkmn$ = function (matrix) {
    this.m.copyFrom_1ktkmn$(matrix);
  };
  RenderContext2D.prototype.translate_lu1900$ = function (dx, dy) {
    this.m.pretranslate_lu1900$(dx, dy);
  };
  RenderContext2D.prototype.scale_lu1900$ = function (sx, sy) {
    if (sy === void 0)
      sy = sx;
    this.m.prescale_lu1900$(sx, sy);
  };
  RenderContext2D.prototype.scale_14dthe$ = function (scale) {
    this.m.prescale_lu1900$(scale, scale);
  };
  RenderContext2D.prototype.rotate_4crm0z$ = function (angle) {
    this.m.prerotate_4crm0z$(angle);
  };
  RenderContext2D.prototype.rect_6y0v78$ = function (x, y, width, height) {
    this.batch.drawQuad_w9nimi$(this.agBitmapTextureManager.getTexture_9byvhi$(bitmap.Bitmaps.white), x, y, width, height, this.m, void 0, this.multiplyColor, void 0, this.blendFactors);
  };
  RenderContext2D.prototype.imageScale_srws8f$ = function (texture, x, y, scale) {
    if (scale === void 0)
      scale = 1.0;
    this.batch.drawQuad_w9nimi$(texture, x, y, texture.width * scale, texture.height * scale, this.m, void 0, this.multiplyColor, void 0, this.blendFactors);
  };
  RenderContext2D.prototype.scissor_nfo28p$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.scissor_nfo28p$', function (x, y, width, height, block) {
    var oldScissor = this.batch.scissor;
    var returnScissor = this.scissorStart_e1n26z$(this.tempScissor.setTo_tjonv8$(x, y, width, height));
    try {
      block();
    }finally {
      this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
    }
  });
  RenderContext2D.prototype.scissor_u2rf27$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.scissor_u2rf27$', wrapFunction(function () {
    var numberToInt = Kotlin.numberToInt;
    return function (x, y, width, height, block) {
      var oldScissor = this.batch.scissor;
      var returnScissor = this.scissorStart_e1n26z$(this.tempScissor.setTo_tjonv8$(numberToInt(x), numberToInt(y), numberToInt(width), numberToInt(height)));
      try {
        block();
      }finally {
        this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
      }
    };
  }));
  RenderContext2D.prototype.scissor_ffw6ch$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.scissor_ffw6ch$', wrapFunction(function () {
    var numberToInt = Kotlin.numberToInt;
    return function (x, y, width, height, block) {
      var oldScissor = this.batch.scissor;
      var returnScissor = this.scissorStart_e1n26z$(this.tempScissor.setTo_tjonv8$(numberToInt(x), numberToInt(y), numberToInt(width), numberToInt(height)));
      try {
        block();
      }finally {
        this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
      }
    };
  }));
  RenderContext2D.prototype.scissor_6ys38s$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.scissor_6ys38s$', wrapFunction(function () {
    var numberToInt = Kotlin.numberToInt;
    return function (rect, block) {
      var x = rect.x;
      var y = rect.y;
      var width = rect.width;
      var height = rect.height;
      var oldScissor = this.batch.scissor;
      var returnScissor = this.scissorStart_e1n26z$(this.tempScissor.setTo_tjonv8$(numberToInt(x), numberToInt(y), numberToInt(width), numberToInt(height)));
      try {
        block();
      }finally {
        this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
      }
    };
  }));
  RenderContext2D.prototype.scissor_g4u0wo$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.render.RenderContext2D.scissor_g4u0wo$', function (scissor, block) {
    var oldScissor = this.batch.scissor;
    var returnScissor = this.scissorStart_e1n26z$(scissor);
    try {
      block();
    }finally {
      this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
    }
  });
  RenderContext2D.prototype.scissorStart_e1n26z$ = function (scissor) {
    var returnScissor = null;
    this.batch.flush();
    if (scissor != null) {
      var left = numberToInt(fastTransformX(this.m, scissor.left, scissor.top));
      var top = numberToInt(fastTransformY(this.m, scissor.left, scissor.top));
      var right = numberToInt(fastTransformX(this.m, scissor.right, scissor.bottom));
      var bottom = numberToInt(fastTransformY(this.m, scissor.right, scissor.bottom));
      returnScissor = this.scissorPool.alloc().setTo_tjonv8$(left, top, right - left | 0, bottom - top | 0);
      this.batch.scissor = returnScissor;
    } else {
      this.batch.scissor = null;
    }
    return returnScissor;
  };
  RenderContext2D.prototype.scissorEnd_w8dcdw$ = function (oldScissor, returnScissor) {
    if (returnScissor != null) {
      this.scissorPool.free_11rb$(returnScissor);
    }this.batch.flush();
    this.batch.scissor = oldScissor;
  };
  Object.defineProperty(RenderContext2D.prototype, 'extra', {
    get: function () {
      return this.$delegate_lchfrf$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_lchfrf$_0.extra = tmp$;
    }
  });
  function RenderContext2D$mpool$lambda(it) {
    return new Matrix();
  }
  function RenderContext2D$scissorPool$lambda(it) {
    return new AG$Scissor(0, 0, 0, 0);
  }
  RenderContext2D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RenderContext2D',
    interfaces: [Extra]
  };
  function copyFrom_0($receiver, that) {
    $receiver.x = that.x;
    $receiver.y = that.y;
    $receiver.width = that.width;
    $receiver.height = that.height;
    return $receiver;
  }
  function setTo_4($receiver, x, y, width, height) {
    $receiver.x = x;
    $receiver.y = y;
    $receiver.width = width;
    $receiver.height = height;
    return $receiver;
  }
  function Texture(base, left, top, right, bottom) {
    Texture$Companion_getInstance();
    if (left === void 0)
      left = 0;
    if (top === void 0)
      top = 0;
    if (right === void 0)
      right = base.width;
    if (bottom === void 0)
      bottom = base.height;
    this.base = base;
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.x = this.left;
    this.y = this.top;
    this.width = this.right - this.left | 0;
    this.height = this.bottom - this.top | 0;
    this.x0 = this.left / this.base.width;
    this.x1 = this.right / this.base.width;
    this.y0 = this.top / this.base.height;
    this.y1 = this.bottom / this.base.height;
  }
  Object.defineProperty(Texture.prototype, 'premultiplied', {
    get: function () {
      return this.base.premultiplied;
    }
  });
  Texture.prototype.slice_tjonv8$ = function (x, y, width, height) {
    return this.sliceBounds_tjonv8$(x, y, x + width | 0, y + height | 0);
  };
  Texture.prototype.slice_2da8yn$ = function (rect) {
    return this.slice_tjonv8$(numberToInt(rect.x), numberToInt(rect.y), numberToInt(rect.width), numberToInt(rect.height));
  };
  Texture.prototype.sliceBounds_tjonv8$ = function (left, top, right, bottom) {
    var tleft = clamp(this.x + left | 0, this.left, this.right);
    var tright = clamp(this.x + right | 0, this.left, this.right);
    var ttop = clamp(this.y + top | 0, this.top, this.bottom);
    var tbottom = clamp(this.y + bottom | 0, this.top, this.bottom);
    return new Texture(this.base, tleft, ttop, tright, tbottom);
  };
  function Texture$Companion() {
    Texture$Companion_instance = this;
  }
  Texture$Companion.prototype.invoke_l6jlr1$ = function (agBase, width, height) {
    return new Texture(new Texture$Base(agBase, width, height), 0, 0, width, height);
  };
  Texture$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Texture$Companion_instance = null;
  function Texture$Companion_getInstance() {
    if (Texture$Companion_instance === null) {
      new Texture$Companion();
    }return Texture$Companion_instance;
  }
  function Texture$Base(base, width, height) {
    this.base = base;
    this.width = width;
    this.height = height;
    this.version = -1;
  }
  Object.defineProperty(Texture$Base.prototype, 'premultiplied', {
    get: function () {
      var tmp$;
      return ((tmp$ = this.base) != null ? tmp$.premultiplied : null) === true;
    }
  });
  Texture$Base.prototype.close = function () {
    var tmp$;
    (tmp$ = this.base) != null ? (tmp$.close(), Unit) : null;
    this.base = null;
  };
  Texture$Base.prototype.update_lg0pjf$ = function (bmp, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = bmp.mipmaps;
    var tmp$;
    (tmp$ = this.base) != null ? tmp$.upload_nn58bg$(bmp, mipmaps) : null;
  };
  Texture$Base.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Base',
    interfaces: [Closeable]
  };
  Texture.prototype.update_hi0ws4$ = function (bmp, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = false;
    this.base.update_lg0pjf$(bmp, mipmaps);
  };
  Texture.prototype.close = function () {
    this.base.close();
  };
  Texture.prototype.toString = function () {
    return 'Texture(' + this.base + ', (x=' + this.x + ', y=' + this.y + ', width=' + this.width + ', height=' + this.height + '))';
  };
  Texture.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Texture',
    interfaces: [Closeable]
  };
  function TextureWithBitmapSlice(texture, bitmapSlice, scale, bounds) {
    this.texture = texture;
    this.bitmapSlice = bitmapSlice;
    this.scale = scale;
    this.bounds = bounds;
  }
  TextureWithBitmapSlice.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextureWithBitmapSlice',
    interfaces: []
  };
  TextureWithBitmapSlice.prototype.component1 = function () {
    return this.texture;
  };
  TextureWithBitmapSlice.prototype.component2 = function () {
    return this.bitmapSlice;
  };
  TextureWithBitmapSlice.prototype.component3 = function () {
    return this.scale;
  };
  TextureWithBitmapSlice.prototype.component4 = function () {
    return this.bounds;
  };
  TextureWithBitmapSlice.prototype.copy_2403f8$ = function (texture, bitmapSlice, scale, bounds) {
    return new TextureWithBitmapSlice(texture === void 0 ? this.texture : texture, bitmapSlice === void 0 ? this.bitmapSlice : bitmapSlice, scale === void 0 ? this.scale : scale, bounds === void 0 ? this.bounds : bounds);
  };
  TextureWithBitmapSlice.prototype.toString = function () {
    return 'TextureWithBitmapSlice(texture=' + Kotlin.toString(this.texture) + (', bitmapSlice=' + Kotlin.toString(this.bitmapSlice)) + (', scale=' + Kotlin.toString(this.scale)) + (', bounds=' + Kotlin.toString(this.bounds)) + ')';
  };
  TextureWithBitmapSlice.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.texture) | 0;
    result = result * 31 + Kotlin.hashCode(this.bitmapSlice) | 0;
    result = result * 31 + Kotlin.hashCode(this.scale) | 0;
    result = result * 31 + Kotlin.hashCode(this.bounds) | 0;
    return result;
  };
  TextureWithBitmapSlice.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.texture, other.texture) && Kotlin.equals(this.bitmapSlice, other.bitmapSlice) && Kotlin.equals(this.scale, other.scale) && Kotlin.equals(this.bounds, other.bounds)))));
  };
  function TransformedTexture(untransformedSlice, trimLeft, trimTop, rotated) {
    if (trimLeft === void 0)
      trimLeft = 0.0;
    if (trimTop === void 0)
      trimTop = 0.0;
    if (rotated === void 0)
      rotated = false;
    this.untransformedSlice = untransformedSlice;
    this.trimLeft = trimLeft;
    this.trimTop = trimTop;
    this.rotated = rotated;
  }
  TransformedTexture.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TransformedTexture',
    interfaces: []
  };
  function VertexInfo(x, y, u, v, colorMul, colorAdd) {
    if (x === void 0)
      x = 0.0;
    if (y === void 0)
      y = 0.0;
    if (u === void 0)
      u = 0.0;
    if (v === void 0)
      v = 0.0;
    if (colorMul === void 0)
      colorMul = color.Colors.WHITE;
    if (colorAdd === void 0)
      colorAdd = 0;
    this.x = x;
    this.y = y;
    this.u = u;
    this.v = v;
    this.colorMul = colorMul;
    this.colorAdd = colorAdd;
  }
  Object.defineProperty(VertexInfo.prototype, 'xy', {
    get: function () {
      return new Point(this.x, this.y);
    }
  });
  Object.defineProperty(VertexInfo.prototype, 'uv', {
    get: function () {
      return new Point(this.u, this.v);
    }
  });
  VertexInfo.prototype.read_vd4xm2$ = function (buffer, n) {
    var index = n * 6 | 0;
    this.x = buffer.arrayFloat[index + 0 | 0];
    this.y = buffer.arrayFloat[index + 1 | 0];
    this.u = buffer.arrayFloat[index + 2 | 0];
    this.v = buffer.arrayFloat[index + 3 | 0];
    this.colorMul = new RGBA(buffer.arrayInt[index + 4 | 0]);
    this.colorAdd = buffer.arrayInt[index + 5 | 0];
  };
  VertexInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VertexInfo',
    interfaces: []
  };
  VertexInfo.prototype.component1 = function () {
    return this.x;
  };
  VertexInfo.prototype.component2 = function () {
    return this.y;
  };
  VertexInfo.prototype.component3 = function () {
    return this.u;
  };
  VertexInfo.prototype.component4 = function () {
    return this.v;
  };
  VertexInfo.prototype.component5 = function () {
    return this.colorMul;
  };
  VertexInfo.prototype.component6 = function () {
    return this.colorAdd;
  };
  VertexInfo.prototype.copy_tch883$ = function (x, y, u, v, colorMul, colorAdd) {
    return new VertexInfo(x === void 0 ? this.x : x, y === void 0 ? this.y : y, u === void 0 ? this.u : u, v === void 0 ? this.v : v, colorMul === void 0 ? this.colorMul : colorMul, colorAdd === void 0 ? this.colorAdd : colorAdd);
  };
  VertexInfo.prototype.toString = function () {
    return 'VertexInfo(x=' + Kotlin.toString(this.x) + (', y=' + Kotlin.toString(this.y)) + (', u=' + Kotlin.toString(this.u)) + (', v=' + Kotlin.toString(this.v)) + (', colorMul=' + Kotlin.toString(this.colorMul)) + (', colorAdd=' + Kotlin.toString(this.colorAdd)) + ')';
  };
  VertexInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.x) | 0;
    result = result * 31 + Kotlin.hashCode(this.y) | 0;
    result = result * 31 + Kotlin.hashCode(this.u) | 0;
    result = result * 31 + Kotlin.hashCode(this.v) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorMul) | 0;
    result = result * 31 + Kotlin.hashCode(this.colorAdd) | 0;
    return result;
  };
  VertexInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.x, other.x) && Kotlin.equals(this.y, other.y) && Kotlin.equals(this.u, other.u) && Kotlin.equals(this.v, other.v) && Kotlin.equals(this.colorMul, other.colorMul) && Kotlin.equals(this.colorAdd, other.colorAdd)))));
  };
  function Cached(cached) {
    if (cached === void 0)
      cached = true;
    this.cached = cached;
  }
  Cached.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Cached',
    interfaces: [Annotation]
  };
  function VPath(path) {
    this.path = path;
  }
  VPath.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VPath',
    interfaces: []
  };
  VPath.prototype.component1 = function () {
    return this.path;
  };
  VPath.prototype.copy_61zpoe$ = function (path) {
    return new VPath(path === void 0 ? this.path : path);
  };
  VPath.prototype.toString = function () {
    return 'VPath(path=' + Kotlin.toString(this.path) + ')';
  };
  VPath.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    return result;
  };
  VPath.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.path, other.path))));
  };
  function getPath($receiver, clazz, path, continuation) {
    return $receiver.getWith_pn9tk4$(clazz, [new VPath(path)], continuation);
  }
  function getPath_0(T_0, isT, $receiver, path, continuation) {
    return getPath($receiver, getKClass(T_0), path, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.resources.getPath_kakg9t$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var getPath = _.com.soywiz.korge.resources.getPath_ufosyu$;
    return function (T_0, isT, $receiver, path, continuation) {
      Kotlin.suspendCall(getPath($receiver, getKClass(T_0), path, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function Resource() {
  }
  Resource.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Resource',
    interfaces: [Annotation]
  };
  function resource(resource) {
    return std.resourcesVfs.get_61zpoe$(resource);
  }
  function ResourcesRoot() {
    this.root_xh3mz4$_0 = this.root_xh3mz4$_0;
    this.mountable_jwvw3z$_0 = this.mountable_jwvw3z$_0;
  }
  Object.defineProperty(ResourcesRoot.prototype, 'root_0', {
    get: function () {
      if (this.root_xh3mz4$_0 == null)
        return throwUPAE('root');
      return this.root_xh3mz4$_0;
    },
    set: function (root) {
      this.root_xh3mz4$_0 = root;
    }
  });
  Object.defineProperty(ResourcesRoot.prototype, 'mountable_0', {
    get: function () {
      if (this.mountable_jwvw3z$_0 == null)
        return throwUPAE('mountable');
      return this.mountable_jwvw3z$_0;
    },
    set: function (mountable) {
      this.mountable_jwvw3z$_0 = mountable;
    }
  });
  ResourcesRoot.prototype.mount_tv2dhr$ = function (path, file) {
    this.mountable_0.mount_tv2dhr$(path, file);
  };
  ResourcesRoot.prototype.get_61zpoe$ = function (path) {
    return this.root_0.get_61zpoe$(path);
  };
  ResourcesRoot.prototype.get_iyg95m$ = function (path) {
    return this.root_0.get_61zpoe$(path.path);
  };
  function Coroutine$ResourcesRoot$init$lambda(this$ResourcesRoot_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ResourcesRoot = this$ResourcesRoot_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ResourcesRoot$init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ResourcesRoot$init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ResourcesRoot$init$lambda.prototype.constructor = Coroutine$ResourcesRoot$init$lambda;
  Coroutine$ResourcesRoot$init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$ResourcesRoot.mountable_0 = this.local$$receiver, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ResourcesRoot$init$lambda(this$ResourcesRoot_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ResourcesRoot$init$lambda(this$ResourcesRoot_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$init($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$init.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init.prototype.constructor = Coroutine$init;
  Coroutine$init.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = MountableVfs(void 0, ResourcesRoot$init$lambda(this.$this), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.root_0 = this.result_0;
            this.$this.mount_tv2dhr$('/', std.resourcesVfs);
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ResourcesRoot.prototype.init = function (continuation_0, suspended) {
    var instance = new Coroutine$init(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$ResourcesRoot$redirected$lambda(closure$redirector_0, $receiver_0, it_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$redirector = closure$redirector_0;
    this.local$$receiver = $receiver_0;
    this.local$it = it_0;
  }
  Coroutine$ResourcesRoot$redirected$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ResourcesRoot$redirected$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ResourcesRoot$redirected$lambda.prototype.constructor = Coroutine$ResourcesRoot$redirected$lambda;
  Coroutine$ResourcesRoot$redirected$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$redirector(this.local$$receiver, this.local$it);
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ResourcesRoot$redirected$lambda(closure$redirector_0) {
    return function ($receiver_0, it_0, continuation_0, suspended) {
      var instance = new Coroutine$ResourcesRoot$redirected$lambda(closure$redirector_0, $receiver_0, it_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$redirected_ulb54z$($this, redirector_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$redirector = redirector_0;
  }
  Coroutine$redirected_ulb54z$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$redirected_ulb54z$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$redirected_ulb54z$.prototype.constructor = Coroutine$redirected_ulb54z$;
  Coroutine$redirected_ulb54z$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.root_0.redirected_j8632z$(ResourcesRoot$redirected$lambda(this.local$redirector), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.root_0 = this.result_0;
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ResourcesRoot.prototype.redirected_ulb54z$ = function (redirector_0, continuation_0, suspended) {
    var instance = new Coroutine$redirected_ulb54z$(this, redirector_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function ResourcesRoot$mapExtensions$lambda(closure$mapsLC) {
    return function ($receiver, it) {
      var pi = new PathInfo(it);
      var map = closure$mapsLC.get_11rb$(get_extensionLC(pi));
      if (map != null) {
        return fullPathWithExtension(pi, map);
      } else {
        return pi.fullPath;
      }
    };
  }
  function Coroutine$mapExtensions_9ih0sy$($this, maps_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$maps = maps_0;
  }
  Coroutine$mapExtensions_9ih0sy$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mapExtensions_9ih0sy$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mapExtensions_9ih0sy$.prototype.constructor = Coroutine$mapExtensions_9ih0sy$;
  Coroutine$mapExtensions_9ih0sy$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var destination = ArrayList_init_0(this.local$maps.length);
            var tmp$;
            for (tmp$ = 0; tmp$ !== this.local$maps.length; ++tmp$) {
              var item = this.local$maps[tmp$];
              destination.add_11rb$(to(item.first.toLowerCase(), item.second));
            }

            var mapsLC = toMap(destination);
            this.state_0 = 2;
            this.result_0 = this.$this.redirected_ulb54z$(ResourcesRoot$mapExtensions$lambda(mapsLC), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ResourcesRoot.prototype.mapExtensions_9ih0sy$ = function (maps_0, continuation_0, suspended) {
    var instance = new Coroutine$mapExtensions_9ih0sy$(this, maps_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mapExtensionsJustInJS_9ih0sy$($this, maps_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$maps = maps_0;
  }
  Coroutine$mapExtensionsJustInJS_9ih0sy$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mapExtensionsJustInJS_9ih0sy$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mapExtensionsJustInJS_9ih0sy$.prototype.constructor = Coroutine$mapExtensionsJustInJS_9ih0sy$;
  Coroutine$mapExtensionsJustInJS_9ih0sy$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (util.OS.isJs) {
              this.state_0 = 2;
              this.result_0 = this.$this.mapExtensions_9ih0sy$(this.local$maps.slice(), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ResourcesRoot.prototype.mapExtensionsJustInJS_9ih0sy$ = function (maps_0, continuation_0, suspended) {
    var instance = new Coroutine$mapExtensionsJustInJS_9ih0sy$(this, maps_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  ResourcesRoot.prototype.toString = function () {
    return 'ResourcesRoot[' + this.root_0 + ']';
  };
  ResourcesRoot.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResourcesRoot',
    interfaces: [AsyncDependency]
  };
  function CompletableScene() {
    Scene.call(this);
    this.deferred_qxmsnn$_0 = CompletableDeferred();
  }
  Object.defineProperty(CompletableScene.prototype, 'completed', {
    get: function () {
      var tmp$;
      return Kotlin.isType(tmp$ = this.deferred_qxmsnn$_0, Deferred) ? tmp$ : throwCCE();
    }
  });
  function Coroutine$CompletableScene$sceneInit$lambda(this$CompletableScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.local$this$CompletableScene = this$CompletableScene_0;
    this.local$tmp$ = void 0;
  }
  Coroutine$CompletableScene$sceneInit$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$CompletableScene$sceneInit$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$CompletableScene$sceneInit$lambda.prototype.constructor = Coroutine$CompletableScene$sceneInit$lambda;
  Coroutine$CompletableScene$sceneInit$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.local$tmp$ = this.local$this$CompletableScene.deferred_qxmsnn$_0;
            this.state_0 = 1;
            this.result_0 = this.local$this$CompletableScene.process(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            return this.local$tmp$.complete_11rb$(this.result_0);
          case 2:
            this.exceptionState_0 = 5;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              return this.local$this$CompletableScene.deferred_qxmsnn$_0.completeExceptionally_tcv7n7$(e);
            } else {
              throw e;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
          default:this.state_0 = 5;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 5) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function CompletableScene$sceneInit$lambda(this$CompletableScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$CompletableScene$sceneInit$lambda(this$CompletableScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sceneInit_st8p7j$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sceneInit_st8p7j$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneInit_st8p7j$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneInit_st8p7j$.prototype.constructor = Coroutine$sceneInit_st8p7j$;
  Coroutine$sceneInit_st8p7j$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.setup_st8p7j$(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            launchImmediately(this.$this, CompletableScene$sceneInit$lambda(this.$this));
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  CompletableScene.prototype.sceneInit_st8p7j$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$sceneInit_st8p7j$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  CompletableScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CompletableScene',
    interfaces: [Scene]
  };
  function Coroutine$changeToResult(T_0_0, isT_0, $receiver_0, injects_0, time_0, transition_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$T_0 = T_0_0;
    this.local$$receiver = $receiver_0;
    this.local$injects = injects_0;
    this.local$time = time_0;
    this.local$transition = transition_0;
  }
  Coroutine$changeToResult.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$changeToResult.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$changeToResult.prototype.constructor = Coroutine$changeToResult;
  Coroutine$changeToResult.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$time === void 0) {
              this.local$time = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
            }
            if (this.local$transition === void 0)
              this.local$transition = package$scene.AlphaTransition;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.changeTo_oszfv1$(getKClass(this.local$T_0), this.local$injects.slice(), this.local$time, this.local$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var instance_0 = this.result_0;
            this.state_0 = 3;
            this.result_0 = instance_0.completed.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function changeToResult(T_0_0, isT_0, $receiver_0, injects_0, time_0, transition_0, continuation_0, suspended) {
    var instance = new Coroutine$changeToResult(T_0_0, isT_0, $receiver_0, injects_0, time_0, transition_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.changeToResult_6v46to$', wrapFunction(function () {
    var scene = _.com.soywiz.korge.scene;
    var getKClass = Kotlin.getKClass;
    var TimeSpan = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.TimeSpan;
    return function (T_0, isT, $receiver, injects, time, transition, continuation) {
      if (time === void 0) {
        time = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
      }if (transition === void 0)
        transition = scene.AlphaTransition;
      Kotlin.suspendCall($receiver.changeTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, Kotlin.coroutineReceiver()));
      var instance_0 = Kotlin.coroutineResult(Kotlin.coroutineReceiver());
      Kotlin.suspendCall(instance_0.completed.await(Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function DebugBitmapFont() {
    DebugBitmapFont_instance = this;
    this.DEBUG_FONT_BYTES = fromBase64('iVBORw0KGgoAAAANSUhEUgAAAMAAAADAAQMAAABoEv5EAAAABlBMVEVHcEz///+flKJDAAAAAXRSTlMAQObYZgAABelJREFUeAHFlAGEXNsZx3/f3LOzZzdj7rmbPJnn7cu5Yl8F6BSeRJM3Z/MggMVDUQwKeFhAEXxXikUwKIIiKAooAOBuF4KHAIJiAEVxEFwMeu6Za/OSbquC6d/nc67f/M/3+eZz+AxJ55u/GtYGFm2KxyWbsl3CyCyuuukA4rydOP2D/f7HBP747VXnWU9ZPrp89Ytwx2lyxMGxeJFYnF/aX56+d6r2+z8l8H5+GX3RLTSDp65E7VUPfveoXU+L3/jtVU/dWPTL4ao2GMJQ/G/Ov9BHL37M7Sr0xXO7l+txwZwlu1CNHbPybQdLQ+BaD3lYsjppXkKcEsa0sDJFx3ekdlcnuu77JhSiTl5NE0hTSlcdNw6WX8hZ+nTFxkvsHQmYxvmmMxK3joWu+xpeMbr2Gg3rVCPdvNBAjS2T48Xc68ddAWNA1hQbdq9wwGoME4JBPwVlc3FEsIRq6NhmIJ2T1QR11NMBuB6QHNRfKAksmoh0UGeQThruwwfHkFl5XiWwrWHAoMNVY5l9rcN3D4QbZNmZSkJJHEm3L106ACMwRJy2rrFjwYpNB0MwiYmlagJqDyU63BZY6QTLkYaC8yOspy7phvmp446GCXah1mlwagELQs0sfTd2JFvg+hrSjYBSote4T8ztrRPIXdX8m5RdzmrpOb8nnddzp+uiuTiWlzPtZ7WyenHARcpOg7Cy8sOdxnK3sbbB6utDIYPXVk6OEkiwlATWU8H3oLViquzoBoc8TI6qdxiXgBM71OAig5VtMijFbrs65veuv/ClT0Aj/1d5Yh+X1p2aFP5yXcvaALaxKY5Oe9CPq8FRHzIARtKDPc5EsNQVUIotiRmcjKhHgqGuFaw8OMQmYJuTPWojJAxgiQfSgz05sVrbU2QLjpkc570a8c6F89QVzZr/pF29XQZmIErRHwKNTq6BBRSj+YAaskZES0Sj4f0tWtGVkXd3iYC91dhpCrETDehrIyezxgLd5JSqf9it7UGbgOtB+uGprRoMXQIuOzJgc0vjtI1T7EzXTl9NE/horyQCJbuX4VpzQzvRG0Aw1Lep+Yp3X9H5vFeVWJ8BnDFp5pMGk/fqsF8XhRlc9MBqNHmvUjZbhxhu8dZiTTNLe3VIZ6+BxR1LLPhH2qsK63NXyIZjHn40rp2qhILotDVQip2w8rROl7jGIZYspwC1MiYBKFlP+4hlH8sJywPoHU6d4ETS2TqtDbXTSCnOa/6t4JvOZ+AbSyHOiatSEHsj2dF0oF1JV2qKWa5xPuU8P2Rc65xdq4D9dgk6RhHrtB6L+27byAErp+GA0M+O+oDXt3mG56eKa6VfdFbiPQKWuW/7kbjG5uCYUElkyqaS9H0dJMftNjnEXYNS+6vyCx/w/LPKV6VAlyW1J1RPw6d/M9TAo0Z3NKu5wETflKwN5HExaIS7LfNKHEDhfkUwTc2UfnBAAtlRH2k/VoS6FOvlotS1lc6/ePdEwxHPKKnzPJ4BTkD/fKihd1QDeOCbNGBoJnfbXKPU8zzz2TCS0bzWwE16jrIr2eaHb1N/hD2As5T3ODPA/dFfvr4RDI6i3YPHxdu9Ij7h7PHW8WsdHAa3h5OfOx4X7ZMiZsfbRX9oP9TIV5+lTK+QHTeCXOMmsAsZAjlyZYYg/A9gvz3ba58/udrsXW1S/siRzxiy9q82i/b54mqz3/42xeLq74MDMAwO+hgqfQ7YgbZbY4YcKDYUbXG1+S8gnTjbb5+nvGhvcIRPHYs8q+Toh3bVbnPRAsPWbrcEU3w+2J285sxyzDnYgghErxunVPxkWB2gM3VGLJNT65ozS1fJfCrW6fKbEG0CR010nI2lrqgr6ZzG+6cPygQqsQlYqe9pAvZA7Denzz44XFM76imrBGYatzVIwGubgGH5pUaEIgGErWrwZI3YnYKhLghjmAA8vke7HV8YJaYJvDkCqCup6SVR0ASQ+QAI5QcHwSsTlhloeV0jAXgDy3ECst46AMwojGUOUNRAua3hm64HbPWan8uIMmjJZ+pf9psaQCuD8LwAAAAASUVORK5CYII=');
  }
  DebugBitmapFont.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DebugBitmapFont',
    interfaces: []
  };
  var DebugBitmapFont_instance = null;
  function DebugBitmapFont_getInstance() {
    if (DebugBitmapFont_instance === null) {
      new DebugBitmapFont();
    }return DebugBitmapFont_instance;
  }
  function debugBmpFont$lambda() {
    var tex = slice(format.PNG.decode_pdgdrr$(DebugBitmapFont_getInstance().DEBUG_FONT_BYTES).toBMP32().copyPremultiplied());
    var fntAdvance = 7.0;
    var fntWidth = 8.0;
    var fntHeight = 8.0;
    var fntBlockX = 2.0;
    var fntBlockY = 2.0;
    var fntBlockWidth = 12.0;
    var fntBlockHeight = 12.0;
    var $receiver = until(0, 256);
    var result = LinkedHashMap_init_0(coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver, 10)), 16));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var x = element % 16;
      var y = element / 16 | 0;
      result.put_xwzc9p$(element, new BitmapFont$Glyph(fntHeight, element, tex.sliceWithSize_tjonv8$(numberToInt(x * fntBlockWidth + fntBlockX), numberToInt(y * fntBlockHeight + fntBlockY), numberToInt(fntWidth), numberToInt(fntHeight)), 0, 0, numberToInt(fntAdvance)));
    }
    return new BitmapFont(fntHeight, fntHeight, fntHeight, toIntMap(result), IntMap_init());
  }
  var debugBmpFont;
  function get_debugBmpFont() {
    return debugBmpFont.value;
  }
  function getDebugBmpFontOnce() {
    return get_debugBmpFont();
  }
  function KorgeModule(mainScene) {
    Module.call(this);
    this.mainScene_8619x3$_0 = mainScene;
  }
  Object.defineProperty(KorgeModule.prototype, 'mainScene', {
    get: function () {
      return this.mainScene_8619x3$_0;
    }
  });
  KorgeModule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeModule',
    interfaces: [Module]
  };
  function Module() {
    this.imageFormats_59tys1$_0 = listOf_0(format.PNG);
    this.bgcolor_pdzsck$_0 = color.Colors.BLACK;
    this.title_vbpu3a$_0 = 'Game';
    this.icon_sodvon$_0 = null;
    this.iconImage_k6m3z4$_0 = null;
    this.quality_my3xyb$_0 = GameWindow$Quality.PERFORMANCE;
    this.mainScene_ucriup$_0 = getKClass(EmptyScene);
    this.clearEachFrame_6y6z5f$_0 = true;
    this.targetFps_tqj5xy$_0 = 0.0;
    this.scaleAnchor_ey962r$_0 = Anchor.Companion.MIDDLE_CENTER;
    this.scaleMode_68bjqj$_0 = ScaleMode.Companion.SHOW_ALL;
    this.clipBorders_hdro7f$_0 = true;
    this.fullscreen_lt7u53$_0 = null;
  }
  Object.defineProperty(Module.prototype, 'imageFormats', {
    get: function () {
      return this.imageFormats_59tys1$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'bgcolor', {
    get: function () {
      return this.bgcolor_pdzsck$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'title', {
    get: function () {
      return this.title_vbpu3a$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'icon', {
    get: function () {
      return this.icon_sodvon$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'iconImage', {
    get: function () {
      return this.iconImage_k6m3z4$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'quality', {
    get: function () {
      return this.quality_my3xyb$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'size', {
    get: function () {
      return SizeInt.Companion.invoke_vux9f0$(1280, 720);
    }
  });
  Object.defineProperty(Module.prototype, 'windowSize', {
    get: function () {
      return this.size;
    }
  });
  Object.defineProperty(Module.prototype, 'mainScene', {
    get: function () {
      return this.mainScene_ucriup$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'clearEachFrame', {
    get: function () {
      return this.clearEachFrame_6y6z5f$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'targetFps', {
    get: function () {
      return this.targetFps_tqj5xy$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'scaleAnchor', {
    get: function () {
      return this.scaleAnchor_ey962r$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'scaleMode', {
    get: function () {
      return this.scaleMode_68bjqj$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'clipBorders', {
    get: function () {
      return this.clipBorders_hdro7f$_0;
    }
  });
  Object.defineProperty(Module.prototype, 'fullscreen', {
    get: function () {
      return this.fullscreen_lt7u53$_0;
    }
  });
  Module.prototype.init_y6n311$ = function (injector, continuation) {
    return Unit;
  };
  Module.prototype.configure_5qt7s4$ = function ($receiver, continuation) {
    return this.init_y6n311$($receiver, continuation);
  };
  Module.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Module',
    interfaces: []
  };
  function Scene() {
    this.injector_kcjok6$_0 = this.injector_kcjok6$_0;
    this.views_20f2oo$_0 = this.views_20f2oo$_0;
    this.sceneContainer_uiphpl$_0 = this.sceneContainer_uiphpl$_0;
    this.resourcesRoot_9jjxxr$_0 = this.resourcesRoot_9jjxxr$_0;
    this._sceneViewContainer_8be2vx$ = new Container();
    this.cancellables = new CancellableGroup();
    this.coroutineContext_bcwuyv$_0 = lazy(Scene$coroutineContext$lambda(this));
    var $receiver = this.createSceneView();
    this._sceneViewContainer_8be2vx$.plusAssign_l5rad2$($receiver);
    this.sceneView = $receiver;
  }
  Object.defineProperty(Scene.prototype, 'injector', {
    get: function () {
      if (this.injector_kcjok6$_0 == null)
        return throwUPAE('injector');
      return this.injector_kcjok6$_0;
    },
    set: function (injector) {
      this.injector_kcjok6$_0 = injector;
    }
  });
  Object.defineProperty(Scene.prototype, 'views', {
    get: function () {
      if (this.views_20f2oo$_0 == null)
        return throwUPAE('views');
      return this.views_20f2oo$_0;
    },
    set: function (views) {
      this.views_20f2oo$_0 = views;
    }
  });
  Object.defineProperty(Scene.prototype, 'sceneContainer', {
    get: function () {
      if (this.sceneContainer_uiphpl$_0 == null)
        return throwUPAE('sceneContainer');
      return this.sceneContainer_uiphpl$_0;
    },
    set: function (sceneContainer) {
      this.sceneContainer_uiphpl$_0 = sceneContainer;
    }
  });
  Object.defineProperty(Scene.prototype, 'resourcesRoot', {
    get: function () {
      if (this.resourcesRoot_9jjxxr$_0 == null)
        return throwUPAE('resourcesRoot');
      return this.resourcesRoot_9jjxxr$_0;
    },
    set: function (resourcesRoot) {
      this.resourcesRoot_9jjxxr$_0 = resourcesRoot;
    }
  });
  Object.defineProperty(Scene.prototype, 'ag', {
    get: function () {
      return this.views.ag;
    }
  });
  Object.defineProperty(Scene.prototype, 'root', {
    get: function () {
      return this._sceneViewContainer_8be2vx$;
    }
  });
  Object.defineProperty(Scene.prototype, 'coroutineContext', {
    get: function () {
      return this.coroutineContext_bcwuyv$_0.value;
    }
  });
  Scene.prototype.createSceneView = function () {
    return new Container();
  };
  function Coroutine$init_y6n311$($this, injector_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$injector = injector_0;
  }
  Coroutine$init_y6n311$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init_y6n311$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init_y6n311$.prototype.constructor = Coroutine$init_y6n311$;
  Coroutine$init_y6n311$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.injector = this.local$injector;
            this.state_0 = 2;
            this.result_0 = this.local$injector.get_wx4qjr$(getKClass(Views), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            this.$this.views = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$injector.get_wx4qjr$(getKClass(SceneContainer), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.result_0;
            this.$this.sceneContainer = this.result_0;
            this.state_0 = 4;
            this.result_0 = this.local$injector.get_wx4qjr$(getKClass(ResourcesRoot), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.result_0;
            this.$this.resourcesRoot = this.result_0;
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Scene.prototype.init_y6n311$ = function (injector_0, continuation_0, suspended) {
    var instance = new Coroutine$init_y6n311$(this, injector_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Scene.prototype.sceneInit_st8p7j$ = function ($receiver, continuation) {
  };
  Scene.prototype.sceneMain_st8p7j$ = function ($receiver, continuation) {
  };
  Scene.prototype.sceneAfterInit = function (continuation) {
  };
  Scene.prototype.sceneBeforeLeaving = function (continuation) {
  };
  Scene.prototype.sceneDestroy = function (continuation) {
    this.cancellables.cancel_tcv7n7$();
  };
  Scene.prototype.sceneAfterDestroy = function (continuation) {
  };
  function Coroutine$sceneAfterDestroyInternal_8be2vx$($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceneAfterDestroyInternal_8be2vx$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneAfterDestroyInternal_8be2vx$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneAfterDestroyInternal_8be2vx$.prototype.constructor = Coroutine$sceneAfterDestroyInternal_8be2vx$;
  Coroutine$sceneAfterDestroyInternal_8be2vx$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.sceneAfterDestroy(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            try {
              cancel(this.$this.coroutineContext);
            } catch (e) {
              if (Kotlin.isType(e, Throwable)) {
                printStackTrace(e);
              } else
                throw e;
            }

            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Scene.prototype.sceneAfterDestroyInternal_8be2vx$ = function (continuation_0, suspended) {
    var instance = new Coroutine$sceneAfterDestroyInternal_8be2vx$(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Scene$coroutineContext$lambda(this$Scene) {
    return function () {
      return this$Scene.views.coroutineContext.plus_1fupul$(Job(this$Scene.views.coroutineContext.get_j3r2sn$(Job_0.Key)));
    };
  }
  Scene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Scene',
    interfaces: [CoroutineScope_0, ViewsContainer, InjectorAsyncDependency]
  };
  function ScaledScene() {
    Scene.call(this);
    this.sceneSize_kgz5x9$_0 = ISize.Companion.invoke_vux9f0$(320, 240);
    this.sceneScale_4jzu6e$_0 = 2.0;
    this.sceneFiltering_vld8x2$_0 = false;
  }
  Object.defineProperty(ScaledScene.prototype, 'sceneSize', {
    get: function () {
      return this.sceneSize_kgz5x9$_0;
    }
  });
  Object.defineProperty(ScaledScene.prototype, 'sceneScale', {
    get: function () {
      return this.sceneScale_4jzu6e$_0;
    }
  });
  Object.defineProperty(ScaledScene.prototype, 'sceneFiltering', {
    get: function () {
      return this.sceneFiltering_vld8x2$_0;
    }
  });
  ScaledScene.prototype.createSceneView = function () {
    return new ScaleView(numberToInt(this.sceneSize.width), numberToInt(this.sceneSize.height), this.sceneScale, this.sceneFiltering);
  };
  ScaledScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ScaledScene',
    interfaces: [Scene]
  };
  function EmptyScene() {
    Scene.call(this);
  }
  EmptyScene.prototype.sceneInit_st8p7j$ = function ($receiver, continuation) {
  };
  EmptyScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EmptyScene',
    interfaces: [Scene]
  };
  function LogScene() {
    Scene.call(this);
    this.log_c9euda$_0 = ArrayList_init_1();
  }
  Object.defineProperty(LogScene.prototype, 'sceneName', {
    get: function () {
      return 'LogScene';
    }
  });
  Object.defineProperty(LogScene.prototype, 'log', {
    get: function () {
      return this.log_c9euda$_0;
    }
  });
  LogScene.prototype.log_61zpoe$ = function (msg) {
    this.log.add_11rb$(msg);
  };
  LogScene.prototype.sceneInit_st8p7j$ = function ($receiver, continuation) {
    this.log_61zpoe$(this.sceneName + '.sceneInit');
  };
  function Coroutine$sceneAfterInit($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceneAfterInit.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneAfterInit.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneAfterInit.prototype.constructor = Coroutine$sceneAfterInit;
  Coroutine$sceneAfterInit.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.log_61zpoe$(this.$this.sceneName + '.sceneAfterInit');
            this.state_0 = 2;
            this.result_0 = Scene.prototype.sceneAfterInit.call(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogScene.prototype.sceneAfterInit = function (continuation_0, suspended) {
    var instance = new Coroutine$sceneAfterInit(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneDestroy($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceneDestroy.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneDestroy.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneDestroy.prototype.constructor = Coroutine$sceneDestroy;
  Coroutine$sceneDestroy.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.log_61zpoe$(this.$this.sceneName + '.sceneDestroy');
            this.state_0 = 2;
            this.result_0 = Scene.prototype.sceneDestroy.call(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogScene.prototype.sceneDestroy = function (continuation_0, suspended) {
    var instance = new Coroutine$sceneDestroy(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$sceneAfterDestroy($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$sceneAfterDestroy.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sceneAfterDestroy.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sceneAfterDestroy.prototype.constructor = Coroutine$sceneAfterDestroy;
  Coroutine$sceneAfterDestroy.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.log_61zpoe$(this.$this.sceneName + '.sceneAfterDestroy');
            this.state_0 = 2;
            this.result_0 = Scene.prototype.sceneAfterDestroy.call(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogScene.prototype.sceneAfterDestroy = function (continuation_0, suspended) {
    var instance = new Coroutine$sceneAfterDestroy(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  LogScene.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LogScene',
    interfaces: [Scene]
  };
  function sleep($receiver, time, continuation) {
    return sleep_0($receiver.sceneView, time, continuation);
  }
  function sleepMs($receiver, time, continuation) {
    return sleepMs_0($receiver.sceneView, time, continuation);
  }
  var sceneContainer = defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.sceneContainer_1q3n1h$', wrapFunction(function () {
    var scene = _.com.soywiz.korge.scene;
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var withEasing = _.com.soywiz.korge.scene.withEasing_npde8n$;
    var Unit = Kotlin.kotlin.Unit;
    var SceneContainer_init = _.com.soywiz.korge.scene.SceneContainer;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function sceneContainer$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, views, defaultTransition, name, callback) {
      if (defaultTransition === void 0)
        defaultTransition = withEasing(scene.AlphaTransition, Easing.Companion.EASE_IN_OUT_QUAD);
      if (name === void 0)
        name = 'sceneContainer';
      if (callback === void 0)
        callback = sceneContainer$lambda;
      var $receiver_0 = addTo(new SceneContainer_init(views, defaultTransition, name), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function SceneContainer(views, defaultTransition, name) {
    SceneContainer$Companion_getInstance();
    if (defaultTransition === void 0)
      defaultTransition = withEasing(AlphaTransition, Easing.Companion.EASE_IN_OUT_QUAD);
    if (name === void 0)
      name = 'sceneContainer';
    Container.call(this);
    this.views = views;
    this.defaultTransition = defaultTransition;
    this.name = name;
    var $receiver = new TransitionView();
    this.plusAssign_l5rad2$($receiver);
    this.transitionView = $receiver;
    this.currentScene = null;
    this.visitStack_0 = arrayListOf([SceneContainer$Companion_getInstance().EMPTY_VISIT_ENTRY_0]);
    this.visitPos_0 = 0;
  }
  SceneContainer.prototype.changeToAsync_65u6i8$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.SceneContainer.changeToAsync_65u6i8$', wrapFunction(function () {
    var CoroutineScope = _.$$importsForInline$$['kotlinx-coroutines-core'].kotlinx.coroutines.CoroutineScope_1fupul$;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var wrapFunction = Kotlin.wrapFunction;
    var async = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.async_uddi5$;
    var TimeSpan = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.TimeSpan;
    var SceneContainer$changeToAsync$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      function Coroutine$SceneContainer$changeToAsync$lambda(closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0, continuation_0) {
        CoroutineImpl.call(this, continuation_0);
        this.exceptionState_0 = 1;
        this.local$closure$injects = closure$injects_0;
        this.local$closure$time = closure$time_0;
        this.local$closure$transition = closure$transition_0;
        this.local$typeClosure$T = typeClosure$T_0;
        this.local$this$SceneContainer = this$SceneContainer_0;
      }
      Coroutine$SceneContainer$changeToAsync$lambda.$metadata$ = {
        kind: Kotlin.Kind.CLASS,
        simpleName: null,
        interfaces: [CoroutineImpl]
      };
      Coroutine$SceneContainer$changeToAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
      Coroutine$SceneContainer$changeToAsync$lambda.prototype.constructor = Coroutine$SceneContainer$changeToAsync$lambda;
      Coroutine$SceneContainer$changeToAsync$lambda.prototype.doResume = function () {
        do
          try {
            switch (this.state_0) {
              case 0:
                var $this = this.local$this$SceneContainer;
                var T_0 = this.local$typeClosure$T;
                var injects = this.local$closure$injects.slice();
                var time = this.local$closure$time;
                var transition = this.local$closure$transition;
                this.state_0 = 2;
                this.result_0 = $this.changeTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 1:
                throw this.exception_0;
              case 2:
                return this.result_0;
              default:this.state_0 = 1;
                throw new Error('State Machine Unreachable execution');
            }
          } catch (e) {
            if (this.state_0 === 1) {
              this.exceptionState_0 = this.state_0;
              throw e;
            } else {
              this.state_0 = this.exceptionState_0;
              this.exception_0 = e;
            }
          }
         while (true);
      };
      return function (closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0) {
        return function (continuation_0, suspended) {
          var instance = new Coroutine$SceneContainer$changeToAsync$lambda(closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0, continuation_0);
          if (suspended)
            return instance;
          else
            return instance.doResume(null);
        };
      };
    });
    return function (T_0, isT, injects, time, transition) {
      if (time === void 0) {
        time = TimeSpan.Companion.fromSeconds_14dthe$(0);
      }if (transition === void 0)
        transition = this.defaultTransition;
      return async(CoroutineScope(this.coroutineContext), SceneContainer$changeToAsync$lambda(injects, time, transition, T_0, isT, this));
    };
  }));
  function Coroutine$SceneContainer$changeToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$clazz = closure$clazz_0;
    this.local$closure$injects = closure$injects_0;
    this.local$closure$time = closure$time_0;
    this.local$closure$transition = closure$transition_0;
    this.local$this$SceneContainer = this$SceneContainer_0;
  }
  Coroutine$SceneContainer$changeToAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$changeToAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$changeToAsync$lambda.prototype.constructor = Coroutine$SceneContainer$changeToAsync$lambda;
  Coroutine$SceneContainer$changeToAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SceneContainer.changeTo_oszfv1$(this.local$closure$clazz, this.local$closure$injects.slice(), this.local$closure$time, this.local$closure$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$changeToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$changeToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  SceneContainer.prototype.changeToAsync_oszfv1$ = function (clazz, injects, time, transition) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return async(CoroutineScope(this.coroutineContext), SceneContainer$changeToAsync$lambda(clazz, injects, time, transition, this));
  };
  SceneContainer.prototype.pushToAsync_65u6i8$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.SceneContainer.pushToAsync_65u6i8$', wrapFunction(function () {
    var CoroutineScope = _.$$importsForInline$$['kotlinx-coroutines-core'].kotlinx.coroutines.CoroutineScope_1fupul$;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var wrapFunction = Kotlin.wrapFunction;
    var async = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.async.async_uddi5$;
    var TimeSpan = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.TimeSpan;
    var SceneContainer$pushToAsync$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      function Coroutine$SceneContainer$pushToAsync$lambda(closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0, continuation_0) {
        CoroutineImpl.call(this, continuation_0);
        this.exceptionState_0 = 1;
        this.local$closure$injects = closure$injects_0;
        this.local$closure$time = closure$time_0;
        this.local$closure$transition = closure$transition_0;
        this.local$typeClosure$T = typeClosure$T_0;
        this.local$this$SceneContainer = this$SceneContainer_0;
      }
      Coroutine$SceneContainer$pushToAsync$lambda.$metadata$ = {
        kind: Kotlin.Kind.CLASS,
        simpleName: null,
        interfaces: [CoroutineImpl]
      };
      Coroutine$SceneContainer$pushToAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
      Coroutine$SceneContainer$pushToAsync$lambda.prototype.constructor = Coroutine$SceneContainer$pushToAsync$lambda;
      Coroutine$SceneContainer$pushToAsync$lambda.prototype.doResume = function () {
        do
          try {
            switch (this.state_0) {
              case 0:
                var $this = this.local$this$SceneContainer;
                var T_0 = this.local$typeClosure$T;
                var injects = this.local$closure$injects.slice();
                var time = this.local$closure$time;
                var transition = this.local$closure$transition;
                this.state_0 = 2;
                this.result_0 = $this.pushTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 1:
                throw this.exception_0;
              case 2:
                return this.result_0;
              default:this.state_0 = 1;
                throw new Error('State Machine Unreachable execution');
            }
          } catch (e) {
            if (this.state_0 === 1) {
              this.exceptionState_0 = this.state_0;
              throw e;
            } else {
              this.state_0 = this.exceptionState_0;
              this.exception_0 = e;
            }
          }
         while (true);
      };
      return function (closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0) {
        return function (continuation_0, suspended) {
          var instance = new Coroutine$SceneContainer$pushToAsync$lambda(closure$injects_0, closure$time_0, closure$transition_0, typeClosure$T_0, isT_0, this$SceneContainer_0, continuation_0);
          if (suspended)
            return instance;
          else
            return instance.doResume(null);
        };
      };
    });
    return function (T_0, isT, injects, time, transition) {
      if (time === void 0) {
        time = TimeSpan.Companion.fromSeconds_14dthe$(0);
      }if (transition === void 0)
        transition = this.defaultTransition;
      return async(CoroutineScope(this.coroutineContext), SceneContainer$pushToAsync$lambda(injects, time, transition, T_0, isT, this));
    };
  }));
  function Coroutine$SceneContainer$pushToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$clazz = closure$clazz_0;
    this.local$closure$injects = closure$injects_0;
    this.local$closure$time = closure$time_0;
    this.local$closure$transition = closure$transition_0;
    this.local$this$SceneContainer = this$SceneContainer_0;
  }
  Coroutine$SceneContainer$pushToAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$pushToAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$pushToAsync$lambda.prototype.constructor = Coroutine$SceneContainer$pushToAsync$lambda;
  Coroutine$SceneContainer$pushToAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SceneContainer.pushTo_oszfv1$(this.local$closure$clazz, this.local$closure$injects.slice(), this.local$closure$time, this.local$closure$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$pushToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$pushToAsync$lambda(closure$clazz_0, closure$injects_0, closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  SceneContainer.prototype.pushToAsync_oszfv1$ = function (clazz, injects, time, transition) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return async(CoroutineScope(this.coroutineContext), SceneContainer$pushToAsync$lambda(clazz, injects, time, transition, this));
  };
  function Coroutine$SceneContainer$backAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$time = closure$time_0;
    this.local$closure$transition = closure$transition_0;
    this.local$this$SceneContainer = this$SceneContainer_0;
  }
  Coroutine$SceneContainer$backAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$backAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$backAsync$lambda.prototype.constructor = Coroutine$SceneContainer$backAsync$lambda;
  Coroutine$SceneContainer$backAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SceneContainer.back_oyhko$(this.local$closure$time, this.local$closure$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$backAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$backAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  SceneContainer.prototype.backAsync_oyhko$ = function (time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return async(CoroutineScope(this.coroutineContext), SceneContainer$backAsync$lambda(time, transition, this));
  };
  function Coroutine$SceneContainer$forwardAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$time = closure$time_0;
    this.local$closure$transition = closure$transition_0;
    this.local$this$SceneContainer = this$SceneContainer_0;
  }
  Coroutine$SceneContainer$forwardAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$forwardAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$forwardAsync$lambda.prototype.constructor = Coroutine$SceneContainer$forwardAsync$lambda;
  Coroutine$SceneContainer$forwardAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SceneContainer.forward_oyhko$(this.local$closure$time, this.local$closure$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$forwardAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$forwardAsync$lambda(closure$time_0, closure$transition_0, this$SceneContainer_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  SceneContainer.prototype.forwardAsync_oyhko$ = function (time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return async(CoroutineScope(this.coroutineContext), SceneContainer$forwardAsync$lambda(time, transition, this));
  };
  SceneContainer.prototype.changeTo_65u6i8$ = function (T_0, isT, injects, time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return this.changeTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, continuation);
  };
  defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.SceneContainer.changeTo_65u6i8$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var TimeSpan = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.TimeSpan;
    return function (T_0, isT, injects, time, transition, continuation) {
      if (time === void 0) {
        time = TimeSpan.Companion.fromSeconds_14dthe$(0);
      }if (transition === void 0)
        transition = this.defaultTransition;
      Kotlin.suspendCall(this.changeTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  SceneContainer.prototype.pushTo_65u6i8$ = function (T_0, isT, injects, time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    return this.pushTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, continuation);
  };
  defineInlineFunction('korge-root-korge.com.soywiz.korge.scene.SceneContainer.pushTo_65u6i8$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var TimeSpan = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.TimeSpan;
    return function (T_0, isT, injects, time, transition, continuation) {
      if (time === void 0) {
        time = TimeSpan.Companion.fromSeconds_14dthe$(0);
      }if (transition === void 0)
        transition = this.defaultTransition;
      Kotlin.suspendCall(this.pushTo_oszfv1$(getKClass(T_0), injects.slice(), time, transition, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  SceneContainer.prototype.back_oyhko$ = function (time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    var tmp$;
    this.visitPos_0 = this.visitPos_0 - 1 | 0;
    return this._changeTo_0((tmp$ = getOrNull(this.visitStack_0, this.visitPos_0)) != null ? tmp$ : SceneContainer$Companion_getInstance().EMPTY_VISIT_ENTRY_0, time, transition, continuation);
  };
  SceneContainer.prototype.forward_oyhko$ = function (time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    var tmp$;
    this.visitPos_0 = this.visitPos_0 + 1 | 0;
    return this._changeTo_0((tmp$ = getOrNull(this.visitStack_0, this.visitPos_0)) != null ? tmp$ : SceneContainer$Companion_getInstance().EMPTY_VISIT_ENTRY_0, time, transition, continuation);
  };
  SceneContainer.prototype.pushTo_oszfv1$ = function (clazz, injects, time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    this.visitPos_0 = this.visitPos_0 + 1 | 0;
    this.setCurrent_0(new SceneContainer$VisitEntry(clazz, toList(injects)));
    return this._changeTo_1(clazz, injects.slice(), time, transition, continuation);
  };
  SceneContainer.prototype.changeTo_oszfv1$ = function (clazz, injects, time, transition, continuation) {
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }if (transition === void 0)
      transition = this.defaultTransition;
    this.setCurrent_0(new SceneContainer$VisitEntry(clazz, toList(injects)));
    return this._changeTo_1(clazz, injects.slice(), time, transition, continuation);
  };
  function Coroutine$_changeTo_0($this, entry_0, time_0, transition_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$entry = entry_0;
    this.local$time = time_0;
    this.local$transition = transition_0;
  }
  Coroutine$_changeTo_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_changeTo_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_changeTo_0.prototype.constructor = Coroutine$_changeTo_0;
  Coroutine$_changeTo_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$time === void 0) {
              this.local$time = TimeSpan.Companion.fromSeconds_14dthe$(0);
            }
            if (this.local$transition === void 0)
              this.local$transition = this.$this.defaultTransition;
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this._changeTo_1(this.local$entry.clazz, copyToArray(this.local$entry.injects).slice(), this.local$time, this.local$transition, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Kotlin.isType(tmp$ = this.result_0, Scene) ? tmp$ : throwCCE();
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SceneContainer.prototype._changeTo_0 = function (entry_0, time_0, transition_0, continuation_0, suspended) {
    var instance = new Coroutine$_changeTo_0(this, entry_0, time_0, transition_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$SceneContainer$_changeTo$lambda(closure$instance_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$instance = closure$instance_0;
    this.local$$receiver = void 0;
  }
  Coroutine$SceneContainer$_changeTo$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$_changeTo$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$_changeTo$lambda.prototype.constructor = Coroutine$SceneContainer$_changeTo$lambda;
  Coroutine$SceneContainer$_changeTo$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = this.local$closure$instance.sceneView;
            this.state_0 = 2;
            this.result_0 = this.local$closure$instance.sceneMain_st8p7j$(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$_changeTo$lambda(closure$instance_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$_changeTo$lambda(closure$instance_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceneContainer$_changeTo$lambda_0(closure$oldScene_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$oldScene = closure$oldScene_0;
  }
  Coroutine$SceneContainer$_changeTo$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$_changeTo$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$_changeTo$lambda_0.prototype.constructor = Coroutine$SceneContainer$_changeTo$lambda_0;
  Coroutine$SceneContainer$_changeTo$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$closure$oldScene != null) {
              this.state_0 = 2;
              this.result_0 = this.local$closure$oldScene.sceneAfterDestroyInternal_8be2vx$(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.result_0 = Unit;
            this.state_0 = 3;
            continue;
          case 3:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$_changeTo$lambda_0(closure$oldScene_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$_changeTo$lambda_0(closure$oldScene_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SceneContainer$_changeTo$lambda_1(closure$instance_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$instance = closure$instance_0;
  }
  Coroutine$SceneContainer$_changeTo$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SceneContainer$_changeTo$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SceneContainer$_changeTo$lambda_1.prototype.constructor = Coroutine$SceneContainer$_changeTo$lambda_1;
  Coroutine$SceneContainer$_changeTo$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$instance.sceneAfterInit(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SceneContainer$_changeTo$lambda_1(closure$instance_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SceneContainer$_changeTo$lambda_1(closure$instance_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$_changeTo_1($this, clazz_0, injects_0, time_0, transition_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$oldScene = void 0;
    this.local$instance = void 0;
    this.local$clazz = clazz_0;
    this.local$injects = injects_0;
    this.local$time = time_0;
    this.local$transition = transition_0;
  }
  Coroutine$_changeTo_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_changeTo_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_changeTo_1.prototype.constructor = Coroutine$_changeTo_1;
  Coroutine$_changeTo_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$time === void 0) {
              this.local$time = TimeSpan.Companion.fromSeconds_14dthe$(0);
            }
            if (this.local$transition === void 0)
              this.local$transition = this.$this.defaultTransition;
            this.local$oldScene = this.$this.currentScene;
            var sceneInjector = this.$this.views.injector.child().mapInstance_b1ce0a$(getKClass(SceneContainer), this.$this);
            var tmp$;
            var n = 0;
            while (n < this.local$injects.length) {
              var inject = this.local$injects[tmp$ = n, n = tmp$ + 1 | 0, tmp$];
              var tmp$_0;
              sceneInjector.mapInstance_b1ce0a$(Kotlin.isType(tmp$_0 = Kotlin.getKClassFromExpression(inject), KClass) ? tmp$_0 : throwCCE(), inject);
            }

            this.state_0 = 2;
            this.result_0 = sceneInjector.get_wx4qjr$(this.local$clazz, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$instance = this.result_0;
            this.$this.currentScene = this.local$instance;
            this.$this.transitionView.transition = this.local$transition;
            this.$this.transitionView.startNewTransition_l5rad2$(this.local$instance._sceneViewContainer_8be2vx$);
            this.state_0 = 3;
            this.result_0 = this.local$instance.sceneInit_st8p7j$(this.local$instance.sceneView, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            launchImmediately(this.local$instance, SceneContainer$_changeTo$lambda(this.local$instance));
            if (this.local$oldScene != null) {
              this.state_0 = 4;
              this.result_0 = this.local$oldScene.sceneBeforeLeaving(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 5;
              continue;
            }

          case 4:
            this.result_0 = Unit;
            this.state_0 = 5;
            continue;
          case 5:
            if (this.local$time.compareTo_11rb$(TimeSpan.Companion.fromSeconds_14dthe$(0)) > 0) {
              this.state_0 = 6;
              this.result_0 = tween(this.$this.transitionView, [new V2(getPropertyCallableRef('ratio', 0, function ($receiver) {
                return $receiver.ratio;
              }.bind(null, this.$this.transitionView), function ($receiver, value) {
                $receiver.ratio = value;
              }.bind(null, this.$this.transitionView)), 0.0, 1.0, getCallableRef('_interpolate', function (ratio, l, r) {
                return _interpolate(ratio, l, r);
              }), true)], this.local$time, void 0, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.$this.transitionView.ratio = 1.0;
              this.state_0 = 7;
              continue;
            }

          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            if (this.local$oldScene != null) {
              this.state_0 = 8;
              this.result_0 = this.local$oldScene.sceneDestroy(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.result_0 = null;
              this.state_0 = 9;
              continue;
            }

          case 8:
            this.result_0 = Unit;
            this.state_0 = 9;
            continue;
          case 9:
            launchImmediately(this.$this.views, SceneContainer$_changeTo$lambda_0(this.local$oldScene));
            launchImmediately(this.$this.views, SceneContainer$_changeTo$lambda_1(this.local$instance));
            return this.local$instance;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SceneContainer.prototype._changeTo_1 = function (clazz_0, injects_0, time_0, transition_0, continuation_0, suspended) {
    var instance = new Coroutine$_changeTo_1(this, clazz_0, injects_0, time_0, transition_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function SceneContainer$VisitEntry(clazz, injects) {
    this.clazz = clazz;
    this.injects = injects;
  }
  SceneContainer$VisitEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VisitEntry',
    interfaces: []
  };
  SceneContainer$VisitEntry.prototype.component1 = function () {
    return this.clazz;
  };
  SceneContainer$VisitEntry.prototype.component2 = function () {
    return this.injects;
  };
  SceneContainer$VisitEntry.prototype.copy_9au196$ = function (clazz, injects) {
    return new SceneContainer$VisitEntry(clazz === void 0 ? this.clazz : clazz, injects === void 0 ? this.injects : injects);
  };
  SceneContainer$VisitEntry.prototype.toString = function () {
    return 'VisitEntry(clazz=' + Kotlin.toString(this.clazz) + (', injects=' + Kotlin.toString(this.injects)) + ')';
  };
  SceneContainer$VisitEntry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.clazz) | 0;
    result = result * 31 + Kotlin.hashCode(this.injects) | 0;
    return result;
  };
  SceneContainer$VisitEntry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.clazz, other.clazz) && Kotlin.equals(this.injects, other.injects)))));
  };
  function SceneContainer$Companion() {
    SceneContainer$Companion_instance = this;
    this.EMPTY_VISIT_ENTRY_0 = new SceneContainer$VisitEntry(getKClass(EmptyScene), emptyList());
  }
  SceneContainer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SceneContainer$Companion_instance = null;
  function SceneContainer$Companion_getInstance() {
    if (SceneContainer$Companion_instance === null) {
      new SceneContainer$Companion();
    }return SceneContainer$Companion_instance;
  }
  SceneContainer.prototype.setCurrent_0 = function (entry) {
    while (this.visitStack_0.size <= this.visitPos_0)
      this.visitStack_0.add_11rb$(SceneContainer$Companion_getInstance().EMPTY_VISIT_ENTRY_0);
    this.visitStack_0.set_wxm5ur$(this.visitPos_0, entry);
  };
  Object.defineProperty(SceneContainer.prototype, 'coroutineContext', {
    get: function () {
      return this.views.coroutineContext;
    }
  });
  SceneContainer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SceneContainer',
    interfaces: [CoroutineScope_0, Container]
  };
  function TransitionView() {
    Container.call(this);
    dummyView(this);
    dummyView(this);
    this.transition = AlphaTransition;
  }
  Object.defineProperty(TransitionView.prototype, 'prev', {
    get: function () {
      return this.get_za3lpa$(0);
    }
  });
  Object.defineProperty(TransitionView.prototype, 'next', {
    get: function () {
      return this.get_za3lpa$(1);
    }
  });
  TransitionView.prototype.startNewTransition_l5rad2$ = function (next) {
    this.ratio = 0.0;
    this.setViews_1kpf2s$(this.next, next);
  };
  TransitionView.prototype.setViews_1kpf2s$ = function (prev, next) {
    this.removeChildren();
    this.addChild_l5rad2$(prev);
    this.addChild_l5rad2$(next);
  };
  TransitionView.prototype.renderInternal_8isv09$ = function (ctx) {
    if (this.ratio <= 0.0)
      this.prev.render_8isv09$(ctx);
    else if (this.ratio >= 1.0)
      this.next.render_8isv09$(ctx);
    else
      this.transition.render(ctx, this.prev, this.next, this.ratio);
  };
  TransitionView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TransitionView',
    interfaces: [Container]
  };
  function Transition(render) {
    this.render = render;
  }
  Transition.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Transition',
    interfaces: []
  };
  function withEasing$lambda(this$withEasing, closure$easing) {
    return function (ctx, prev, next, ratio) {
      this$withEasing.render(ctx, prev, next, closure$easing.invoke_14dthe$(ratio));
      return Unit;
    };
  }
  function withEasing($receiver, easing) {
    return new Transition(withEasing$lambda($receiver, easing));
  }
  function AlphaTransition$lambda(ctx, prev, next, ratio) {
    var prevAlpha = prev.alpha;
    var nextAlpha = next.alpha;
    try {
      prev.alpha = 1.0 - ratio;
      next.alpha = ratio;
      prev.render_8isv09$(ctx);
      next.render_8isv09$(ctx);
    }finally {
      prev.alpha = prevAlpha;
      next.alpha = nextAlpha;
    }
    return Unit;
  }
  var AlphaTransition;
  function Achievements() {
  }
  Achievements.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Achievements',
    interfaces: []
  };
  function Ads() {
  }
  Ads.prototype.preload = function (continuation) {
  };
  Ads.prototype.showInterstial = function (continuation) {
  };
  Ads.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ads',
    interfaces: []
  };
  function Analytics() {
  }
  Analytics.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Analytics',
    interfaces: []
  };
  function CloudSave() {
  }
  CloudSave.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CloudSave',
    interfaces: []
  };
  function InAppPayments() {
  }
  InAppPayments.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InAppPayments',
    interfaces: []
  };
  function RateApp() {
  }
  RateApp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RateApp',
    interfaces: []
  };
  function Share() {
  }
  Share.prototype.shareMessage_puj7f4$ = function (title, message, continuation) {
  };
  Share.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Share',
    interfaces: []
  };
  function Store() {
  }
  Store.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Store',
    interfaces: []
  };
  function NativeProcess(views) {
    NativeProcessBase.call(this, views);
  }
  NativeProcess.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeProcess',
    interfaces: [NativeProcessBase]
  };
  function NativeProcessBase(views) {
    this.views = views;
  }
  NativeProcessBase.prototype.alert_61zpoe$ = function (message, continuation) {
    return this.views.gameWindow.alert_61zpoe$(message, continuation);
  };
  NativeProcessBase.prototype.confirm_61zpoe$ = function (message, continuation) {
    return this.views.gameWindow.confirm_61zpoe$(message, continuation);
  };
  NativeProcessBase.prototype.openFileDialog_r0su5d$$default = function (filter, write, multi, continuation) {
    return this.views.gameWindow.openFileDialog_r0su5d$(filter, write, multi, continuation);
  };
  NativeProcessBase.prototype.openFileDialog_r0su5d$ = function (filter, write, multi, continuation, callback$default) {
    if (filter === void 0)
      filter = null;
    if (write === void 0)
      write = false;
    if (multi === void 0)
      multi = false;
    return callback$default ? callback$default(filter, write, multi, continuation) : this.openFileDialog_r0su5d$$default(filter, write, multi, continuation);
  };
  NativeProcessBase.prototype.browse_ptvjoy$ = function (url, continuation) {
    return this.views.gameWindow.browse_ptvjoy$(url, continuation);
  };
  NativeProcessBase.prototype.close = function (continuation) {
    return this.views.gameWindow.close();
  };
  NativeProcessBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeProcessBase',
    interfaces: []
  };
  function IStorage() {
  }
  IStorage.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IStorage',
    interfaces: []
  };
  function contains($receiver, key) {
    return $receiver.getOrNull_61zpoe$(key) != null;
  }
  function get_2($receiver, key) {
    var tmp$;
    tmp$ = $receiver.getOrNull_61zpoe$(key);
    if (tmp$ == null) {
      throw new KeyNotFoundException(key);
    }return tmp$;
  }
  function InmemoryStorage() {
    this.data = LinkedHashMap_init();
  }
  InmemoryStorage.prototype.set_puj7f4$ = function (key, value) {
    this.data.put_xwzc9p$(key, value);
  };
  InmemoryStorage.prototype.getOrNull_61zpoe$ = function (key) {
    return this.data.get_11rb$(key);
  };
  InmemoryStorage.prototype.remove_61zpoe$ = function (key) {
    this.data.remove_11rb$(key);
  };
  InmemoryStorage.prototype.removeAll = function () {
    this.data.clear();
  };
  InmemoryStorage.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InmemoryStorage',
    interfaces: [IStorage]
  };
  function Storage() {
    this.$delegate_fyb14n$_0 = NativeStorage_getInstance();
  }
  Storage.prototype.getOrNull_61zpoe$ = function (key) {
    return this.$delegate_fyb14n$_0.getOrNull_61zpoe$(key);
  };
  Storage.prototype.remove_61zpoe$ = function (key) {
    return this.$delegate_fyb14n$_0.remove_61zpoe$(key);
  };
  Storage.prototype.removeAll = function () {
    return this.$delegate_fyb14n$_0.removeAll();
  };
  Storage.prototype.set_puj7f4$ = function (key, value) {
    return this.$delegate_fyb14n$_0.set_puj7f4$(key, value);
  };
  Storage.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Storage',
    interfaces: [IStorage]
  };
  function StorageBase() {
    InmemoryStorage.call(this);
  }
  StorageBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StorageBase',
    interfaces: [InmemoryStorage]
  };
  function StorageItem(storage, clazz, key, mapper, gen) {
    this.storage = storage;
    this.clazz = clazz;
    this.key = key;
    this.mapper = mapper;
    this.gen = gen;
  }
  Object.defineProperty(StorageItem.prototype, 'isDefined', {
    get: function () {
      return contains(this.storage, this.key);
    }
  });
  Object.defineProperty(StorageItem.prototype, 'value', {
    get: function () {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      if (!this.isDefined) {
        tmp$_4 = this.key;
        tmp$_3 = json.Json;
        tmp$_2 = this.mapper;
        tmp$ = this.clazz;
        var tmp$_5;
        if ((tmp$_1 = (tmp$_0 = this.gen) != null ? tmp$_0() : null) != null)
          tmp$_5 = tmp$_1;
        else {
          throw IllegalStateException_init_0(("Can't find '" + this.key + "' and no default generator was defined").toString());
        }
        this.storage.set_puj7f4$(tmp$_4, tmp$_3.stringify_oud20p$(tmp$_2.toUntyped_b1ce0a$(tmp$, tmp$_5)));
      }return parseTyped(json.Json, this.clazz, get_2(this.storage, this.key), this.mapper);
    },
    set: function (value) {
      this.storage.set_puj7f4$(this.key, json.Json.stringify_oud20p$(this.mapper.toUntyped_b1ce0a$(this.clazz, value)));
    }
  });
  StorageItem.prototype.remove = function () {
    this.storage.remove_61zpoe$(this.key);
  };
  StorageItem.prototype.getValue_t0xcdd$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.service.storage.StorageItem.getValue_t0xcdd$', function (thisRef, property) {
    return this.value;
  });
  StorageItem.prototype.setValue_809r6s$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.service.storage.StorageItem.setValue_809r6s$', function (thisRef, property, value) {
    this.value = value;
  });
  StorageItem.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StorageItem',
    interfaces: []
  };
  var item = defineInlineFunction('korge-root-korge.com.soywiz.korge.service.storage.item_ubhcu5$', wrapFunction(function () {
    var mapper = _.$$importsForInline$$['korio-root-korio'].com.soywiz.korio.dynamic.mapper;
    var getKClass = Kotlin.getKClass;
    var StorageItem_init = _.com.soywiz.korge.service.storage.StorageItem;
    return function (T_0, isT, $receiver, key, mapper_0, gen) {
      if (mapper_0 === void 0)
        mapper_0 = mapper.Mapper;
      if (gen === void 0)
        gen = null;
      return new StorageItem_init($receiver, getKClass(T_0), key, mapper_0, gen);
    };
  }));
  function Stats() {
    this.counters = new Stats$RCollection();
    this.values = new Stats$RCollection();
  }
  function Stats$Named() {
  }
  Stats$Named.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Named',
    interfaces: []
  };
  function Stats$Counter(name) {
    this.name_c1e9d8$_0 = name;
    this.frameCount_b5fnyj$_0 = 0.0;
    this.countThisFrame_mh3buf$_0 = 0;
    this.totalCount_l0dlro$_0 = 0.0;
  }
  Object.defineProperty(Stats$Counter.prototype, 'name', {
    get: function () {
      return this.name_c1e9d8$_0;
    }
  });
  Object.defineProperty(Stats$Counter.prototype, 'frameCount', {
    get: function () {
      return this.frameCount_b5fnyj$_0;
    },
    set: function (frameCount) {
      this.frameCount_b5fnyj$_0 = frameCount;
    }
  });
  Object.defineProperty(Stats$Counter.prototype, 'countThisFrame', {
    get: function () {
      return this.countThisFrame_mh3buf$_0;
    },
    set: function (countThisFrame) {
      this.countThisFrame_mh3buf$_0 = countThisFrame;
    }
  });
  Object.defineProperty(Stats$Counter.prototype, 'totalCount', {
    get: function () {
      return this.totalCount_l0dlro$_0;
    },
    set: function (totalCount) {
      this.totalCount_l0dlro$_0 = totalCount;
    }
  });
  Object.defineProperty(Stats$Counter.prototype, 'avgCountPerFrame', {
    get: function () {
      return this.totalCount / this.frameCount;
    }
  });
  Stats$Counter.prototype.increment_za3lpa$ = function (count) {
    if (count === void 0)
      count = 1;
    this.countThisFrame = this.countThisFrame + count | 0;
  };
  Stats$Counter.prototype.startFrame = function () {
    this.totalCount = this.totalCount + this.countThisFrame;
    this.frameCount = this.frameCount + 1;
    this.countThisFrame = 0;
  };
  Stats$Counter.prototype.toString = function () {
    return 'Counter(' + this.name + '): [frames=' + this.frameCount + ', totalCount=' + this.totalCount + ', countThisFrame=' + this.countThisFrame + ', avgCountPerFrame=' + this.avgCountPerFrame + ']';
  };
  Stats$Counter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Counter',
    interfaces: [Stats$Named]
  };
  function Stats$Value($outer, name) {
    this.$outer = $outer;
    this.name_fn17rz$_0 = name;
    this.value = null;
  }
  Object.defineProperty(Stats$Value.prototype, 'name', {
    get: function () {
      return this.name_fn17rz$_0;
    }
  });
  Stats$Value.prototype.startFrame = function () {
  };
  Stats$Value.prototype.set_s8jyv4$ = function (value) {
    this.value = value;
  };
  Stats$Value.prototype.toString = function () {
    return 'Value(' + this.name + '): ' + toString(this.value);
  };
  Stats$Value.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Value',
    interfaces: [Stats$Named]
  };
  Stats.prototype.startFrame = function () {
    var $receiver = this.counters.list;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).startFrame();
    }
    var $receiver_0 = this.values.list;
    var tmp$_0;
    var n_0 = 0;
    while (n_0 < $receiver_0.size) {
      $receiver_0.get_za3lpa$((tmp$_0 = n_0, n_0 = tmp$_0 + 1 | 0, tmp$_0)).startFrame();
    }
  };
  function Stats$RCollection() {
    this.list = ArrayList_init_1();
    this.byName = LinkedHashMap_init();
  }
  Stats$RCollection.prototype.add_9rsjaw$ = function (item) {
    this.list.add_11rb$(item);
    var $receiver = this.byName;
    var key = item.name;
    $receiver.put_xwzc9p$(key, item);
  };
  Stats$RCollection.prototype.getOrPut_2oey2o$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.stat.Stats.RCollection.getOrPut_2oey2o$', function (name, callback) {
    var $receiver = this.byName;
    var tmp$;
    var value = $receiver.get_11rb$(name);
    if (value == null) {
      var $receiver_0 = callback();
      this.list.add_11rb$($receiver_0);
      var answer = $receiver_0;
      $receiver.put_xwzc9p$(name, answer);
      tmp$ = answer;
    } else {
      tmp$ = value;
    }
    return tmp$;
  });
  Stats$RCollection.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RCollection',
    interfaces: []
  };
  Stats.prototype.counter_61zpoe$ = function (name) {
    var $this = this.counters;
    var $receiver = $this.byName;
    var tmp$;
    var value = $receiver.get_11rb$(name);
    if (value == null) {
      var $receiver_0 = new Stats$Counter(name);
      $this.list.add_11rb$($receiver_0);
      var answer = $receiver_0;
      $receiver.put_xwzc9p$(name, answer);
      tmp$ = answer;
    } else {
      tmp$ = value;
    }
    return tmp$;
  };
  Stats.prototype.value_61zpoe$ = function (name) {
    var $this = this.values;
    var $receiver = $this.byName;
    var tmp$;
    var value = $receiver.get_11rb$(name);
    if (value == null) {
      var $receiver_0 = new Stats$Value(this, name);
      $this.list.add_11rb$($receiver_0);
      var answer = $receiver_0;
      $receiver.put_xwzc9p$(name, answer);
      tmp$ = answer;
    } else {
      tmp$ = value;
    }
    return tmp$;
  };
  Stats.prototype.dump = function () {
    println('Counters:');
    var $receiver = this.counters.list;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      println(' - ' + $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)));
    }
    println('Values:');
    var $receiver_0 = this.values.list;
    var tmp$_0;
    var n_0 = 0;
    while (n_0 < $receiver_0.size) {
      println(' - ' + $receiver_0.get_za3lpa$((tmp$_0 = n_0, n_0 = tmp$_0 + 1 | 0, tmp$_0)));
    }
  };
  Stats.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stats',
    interfaces: []
  };
  function KorgeTest() {
    ViewsForTesting.call(this);
  }
  KorgeTest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeTest',
    interfaces: [ViewsForTesting]
  };
  function Comparator$ObjectLiteral_1(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_1.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_1.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  function TestCoroutineDispatcher(frameTime) {
    if (frameTime === void 0) {
      frameTime = TimeSpan.Companion.fromMilliseconds_14dthe$(16);
    }CoroutineDispatcher.call(this);
    this.frameTime = frameTime;
    this.time_tobdbb$_0 = L0;
    this.tasks = TGenPriorityQueue.Companion.invoke_sir3ds$(new Comparator$ObjectLiteral_1(TestCoroutineDispatcher$tasks$lambda));
    this.exception = null;
  }
  Object.defineProperty(TestCoroutineDispatcher.prototype, 'time', {
    get: function () {
      return this.time_tobdbb$_0;
    },
    set: function (time) {
      this.time_tobdbb$_0 = time;
    }
  });
  function TestCoroutineDispatcher$TimedTask(time, callback) {
    this.time = time;
    this.callback = callback;
  }
  TestCoroutineDispatcher$TimedTask.prototype.toString = function () {
    return 'TimedTask(time=' + this.time.toString() + ')';
  };
  TestCoroutineDispatcher$TimedTask.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimedTask',
    interfaces: []
  };
  function Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda;
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TestCoroutineDispatcher.prototype.scheduleAfter_0 = function (time, callback) {
    var $receiver = this.tasks;
    var element = new TestCoroutineDispatcher$TimedTask(this.time.add(Kotlin.Long.fromInt(time)), TestCoroutineDispatcher$scheduleAfter$lambda(callback));
    $receiver.add_11rb$(element);
  };
  function Coroutine$TestCoroutineDispatcher$dispatch$lambda(closure$block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$block = closure$block_0;
  }
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$dispatch$lambda;
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$block.run(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TestCoroutineDispatcher$dispatch$lambda(closure$block_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$dispatch$lambda(closure$block_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TestCoroutineDispatcher.prototype.dispatch_5bn72i$ = function (context, block) {
    this.scheduleAfter_0(0, TestCoroutineDispatcher$dispatch$lambda(block));
  };
  function Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$continuation = closure$continuation_0;
  }
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda;
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$continuation.resumeWith_tl1gpc$(new Result(Unit));
            return Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TestCoroutineDispatcher.prototype.scheduleResumeAfterDelay_egqmvs$ = function (timeMillis, continuation) {
    this.scheduleAfter_0(timeMillis.toInt(), TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(continuation));
  };
  function TestCoroutineDispatcher$loop$ObjectLiteral(this$TestCoroutineDispatcher) {
    this.this$TestCoroutineDispatcher = this$TestCoroutineDispatcher;
    this.context_2r939w$_0 = this$TestCoroutineDispatcher;
  }
  Object.defineProperty(TestCoroutineDispatcher$loop$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_2r939w$_0;
    }
  });
  TestCoroutineDispatcher$loop$ObjectLiteral.prototype.resumeWith_tl1gpc$ = function (result) {
    var exception = result.exceptionOrNull();
    exception != null ? (printStackTrace(exception), Unit) : null;
    this.this$TestCoroutineDispatcher.exception = exception;
  };
  TestCoroutineDispatcher$loop$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  TestCoroutineDispatcher.prototype.loop = function () {
    var tmp$;
    if (this.exception != null) {
      var tmp$_0;
      if ((tmp$ = this.exception) != null)
        tmp$_0 = tmp$;
      else {
        throw IllegalStateException_init_0('error'.toString());
      }
      throw tmp$_0;
    }while (!this.tasks.isEmpty()) {
      var task = ensureNotNull(this.tasks.removeHead());
      this.time = task.time;
      startCoroutine(task.callback, new TestCoroutineDispatcher$loop$ObjectLiteral(this));
    }
  };
  function TestCoroutineDispatcher$loop$ObjectLiteral_0(this$TestCoroutineDispatcher) {
    this.this$TestCoroutineDispatcher = this$TestCoroutineDispatcher;
    this.context_2r939w$_0 = this$TestCoroutineDispatcher;
  }
  Object.defineProperty(TestCoroutineDispatcher$loop$ObjectLiteral_0.prototype, 'context', {
    get: function () {
      return this.context_2r939w$_0;
    }
  });
  TestCoroutineDispatcher$loop$ObjectLiteral_0.prototype.resumeWith_tl1gpc$ = function (result) {
    var exception = result.exceptionOrNull();
    exception != null ? (printStackTrace(exception), Unit) : null;
    this.this$TestCoroutineDispatcher.exception = exception;
  };
  TestCoroutineDispatcher$loop$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  TestCoroutineDispatcher.prototype.loop_g2bo5h$ = function (entry) {
    startCoroutine(entry, new TestCoroutineDispatcher$loop$ObjectLiteral_0(this));
    this.loop();
  };
  function TestCoroutineDispatcher$tasks$lambda(a, b) {
    return a.time.compareTo_11rb$(b.time);
  }
  TestCoroutineDispatcher.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TestCoroutineDispatcher',
    interfaces: [Delay, CoroutineDispatcher, ContinuationInterceptor]
  };
  function Runnable$ObjectLiteral(closure$block) {
    this.closure$block = closure$block;
  }
  Runnable$ObjectLiteral.prototype.run = function () {
    this.closure$block();
  };
  Runnable$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Runnable]};
  function ViewsForTesting(frameTime, size) {
    if (frameTime === void 0) {
      frameTime = TimeSpan.Companion.fromMilliseconds_14dthe$(10);
    }if (size === void 0)
      size = SizeInt.Companion.invoke_vux9f0$(640, 480);
    this.frameTime = frameTime;
    this.size = size;
    this.startTime = new DateTime(0.0);
    this.time = this.startTime;
    this.timeProvider = new ViewsForTesting$timeProvider$ObjectLiteral(this);
    this.koruiEventDispatcher = EventDispatcher.Companion.invoke();
    this.dispatcher = new ViewsForTesting$FastGameWindowCoroutineDispatcher(this);
    this.gameWindow = new ViewsForTesting$gameWindow$ObjectLiteral(this);
    this.viewsLog = new ViewsLog(this.dispatcher, void 0, new LogAG(1280, 720), void 0, void 0, void 0, this.gameWindow);
  }
  Object.defineProperty(ViewsForTesting.prototype, 'elapsed', {
    get: function () {
      return this.time.minus_mw5vjr$(this.startTime);
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'injector', {
    get: function () {
      return this.viewsLog.injector;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'ag', {
    get: function () {
      return this.viewsLog.ag;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'input', {
    get: function () {
      return this.viewsLog.input;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'views', {
    get: function () {
      return this.viewsLog.views;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'stage', {
    get: function () {
      return this.views.stage;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'stats', {
    get: function () {
      return this.views.stats;
    }
  });
  Object.defineProperty(ViewsForTesting.prototype, 'mouse', {
    get: function () {
      return this.input.mouse;
    }
  });
  function Coroutine$mouseMoveTo_vux9f0$($this, x_0, y_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$x = x_0;
    this.local$y = y_0;
  }
  Coroutine$mouseMoveTo_vux9f0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mouseMoveTo_vux9f0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mouseMoveTo_vux9f0$.prototype.constructor = Coroutine$mouseMoveTo_vux9f0$;
  Coroutine$mouseMoveTo_vux9f0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver = this.$this.koruiEventDispatcher;
            var event = new MouseEvent(MouseEvent$Type.MOVE, 0, this.local$x, this.local$y);
            $receiver.dispatch_nipq8w$(getKClass(MouseEvent), event);
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.mouseMoveTo_vux9f0$ = function (x_0, y_0, continuation_0, suspended) {
    var instance = new Coroutine$mouseMoveTo_vux9f0$(this, x_0, y_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  ViewsForTesting.prototype.mouseMoveTo_lu1900$ = function (x, y, continuation) {
    return this.mouseMoveTo_vux9f0$(numberToInt(x), numberToInt(y), continuation);
  };
  ViewsForTesting.prototype.mouseMoveTo_z8e4lc$ = function (x, y, continuation) {
    return this.mouseMoveTo_vux9f0$(numberToInt(x), numberToInt(y), continuation);
  };
  function Coroutine$mouseDown($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$mouseDown.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mouseDown.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mouseDown.prototype.constructor = Coroutine$mouseDown;
  Coroutine$mouseDown.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver = this.$this.koruiEventDispatcher;
            var event = new MouseEvent(MouseEvent$Type.DOWN, 0, numberToInt(this.$this.mouse.x), numberToInt(this.$this.mouse.y), MouseButton.LEFT, 1);
            $receiver.dispatch_nipq8w$(getKClass(MouseEvent), event);
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.mouseDown = function (continuation_0, suspended) {
    var instance = new Coroutine$mouseDown(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mouseUp($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$mouseUp.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mouseUp.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mouseUp.prototype.constructor = Coroutine$mouseUp;
  Coroutine$mouseUp.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver = this.$this.koruiEventDispatcher;
            var event = new MouseEvent(MouseEvent$Type.UP, 0, numberToInt(this.$this.input.mouse.x), numberToInt(this.$this.input.mouse.y), MouseButton.LEFT, 0);
            $receiver.dispatch_nipq8w$(getKClass(MouseEvent), event);
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.mouseUp = function (continuation_0, suspended) {
    var instance = new Coroutine$mouseUp(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  ViewsForTesting.prototype.get_viewMouse_gohfi1$ = function ($receiver) {
    get_mouse($receiver).views = this.views;
    return get_mouse($receiver);
  };
  function Coroutine$simulateClick_gohfi1$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$simulateClick_gohfi1$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simulateClick_gohfi1$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simulateClick_gohfi1$.prototype.constructor = Coroutine$simulateClick_gohfi1$;
  Coroutine$simulateClick_gohfi1$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.get_viewMouse_gohfi1$(this.local$$receiver)._onClick.invoke_11rb$(this.$this.get_viewMouse_gohfi1$(this.local$$receiver));
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.simulateClick_gohfi1$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$simulateClick_gohfi1$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$simulateOver_gohfi1$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$simulateOver_gohfi1$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simulateOver_gohfi1$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simulateOver_gohfi1$.prototype.constructor = Coroutine$simulateOver_gohfi1$;
  Coroutine$simulateOver_gohfi1$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.get_viewMouse_gohfi1$(this.local$$receiver)._onOver.invoke_11rb$(this.$this.get_viewMouse_gohfi1$(this.local$$receiver));
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.simulateOver_gohfi1$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$simulateOver_gohfi1$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$simulateOut_gohfi1$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$simulateOut_gohfi1$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simulateOut_gohfi1$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simulateOut_gohfi1$.prototype.constructor = Coroutine$simulateOut_gohfi1$;
  Coroutine$simulateOut_gohfi1$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.get_viewMouse_gohfi1$(this.local$$receiver)._onOut.invoke_11rb$(this.$this.get_viewMouse_gohfi1$(this.local$$receiver));
            this.state_0 = 2;
            this.result_0 = this.$this.simulateFrame_d88q27$_0(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.simulateOut_gohfi1$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$simulateOut_gohfi1$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$isVisibleToUser_gohfi1$($this, $receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$bounds = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$isVisibleToUser_gohfi1$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$isVisibleToUser_gohfi1$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$isVisibleToUser_gohfi1$.prototype.constructor = Coroutine$isVisibleToUser_gohfi1$;
  Coroutine$isVisibleToUser_gohfi1$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (!this.local$$receiver.visible) {
              return false;
            } else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$$receiver.alpha <= 0.0) {
              return false;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.local$bounds = this.local$$receiver.getGlobalBounds_2da8yn$();
            if (this.local$bounds.area <= 0.0) {
              return false;
            } else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.$this.injector.get_wx4qjr$(getKClass(Module), void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.result_0;
            var module_0 = this.result_0;
            var visibleBounds = new Rectangle(0, 0, module_0.windowSize.width, module_0.windowSize.height);
            if (!this.local$bounds.intersects_2da8yn$(visibleBounds)) {
              return false;
            } else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            return true;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.isVisibleToUser_gohfi1$ = function ($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$isVisibleToUser_gohfi1$(this, $receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function ViewsForTesting$viewsTest$lambda$ObjectLiteral(this$ViewsForTesting) {
    Module.call(this);
    this.title_pq00cm$_0 = 'KorgeViewsForTesting';
    this.size_34wkxr$_0 = this$ViewsForTesting.size;
    this.windowSize_q4mpe7$_0 = this$ViewsForTesting.size;
  }
  Object.defineProperty(ViewsForTesting$viewsTest$lambda$ObjectLiteral.prototype, 'title', {
    get: function () {
      return this.title_pq00cm$_0;
    }
  });
  Object.defineProperty(ViewsForTesting$viewsTest$lambda$ObjectLiteral.prototype, 'size', {
    get: function () {
      return this.size_34wkxr$_0;
    }
  });
  Object.defineProperty(ViewsForTesting$viewsTest$lambda$ObjectLiteral.prototype, 'windowSize', {
    get: function () {
      return this.windowSize_q4mpe7$_0;
    }
  });
  ViewsForTesting$viewsTest$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Module]
  };
  function Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda(closure$block_0, this$ViewsForTesting_0, closure$completedException_0, closure$completed_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 8;
    this.local$closure$block = closure$block_0;
    this.local$this$ViewsForTesting = this$ViewsForTesting_0;
    this.local$closure$completedException = closure$completedException_0;
    this.local$closure$completed = closure$completed_0;
  }
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda.prototype.constructor = Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda;
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 3;
            this.state_0 = 1;
            this.result_0 = this.local$closure$block(this.local$this$ViewsForTesting.views.stage, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 8;
            this.finallyPath_0 = [2];
            this.state_0 = 6;
            this.$returnValue = this.result_0;
            continue;
          case 2:
            return this.$returnValue;
          case 3:
            this.finallyPath_0 = [8];
            this.exceptionState_0 = 6;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              this.exceptionState_0 = 8;
              this.finallyPath_0 = [4];
              this.state_0 = 6;
              this.$returnValue = (this.local$closure$completedException.v = e, Unit);
              continue;
            } else {
              throw e;
            }

          case 4:
            return this.$returnValue;
          case 5:
            this.finallyPath_0 = [7];
            this.state_0 = 6;
            continue;
          case 6:
            this.exceptionState_0 = 8;
            this.local$closure$completed.v = true;
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            return;
          case 8:
            throw this.exception_0;
          default:this.state_0 = 8;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 8) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ViewsForTesting$viewsTest$lambda$lambda$lambda(closure$block_0, this$ViewsForTesting_0, closure$completedException_0, closure$completed_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$ViewsForTesting$viewsTest$lambda$lambda$lambda(closure$block_0, this$ViewsForTesting_0, closure$completedException_0, closure$completed_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function ViewsForTesting$viewsTest$lambda$lambda(this$ViewsForTesting, closure$block, closure$completedException, closure$completed) {
    return function () {
      launchImmediately_0(this$ViewsForTesting.dispatcher, ViewsForTesting$viewsTest$lambda$lambda$lambda(closure$block, this$ViewsForTesting, closure$completedException, closure$completed));
      return Unit;
    };
  }
  function Coroutine$ViewsForTesting$viewsTest$lambda$lambda(closure$completed_0, this$ViewsForTesting_0, closure$completedException_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$completed = closure$completed_0;
    this.local$this$ViewsForTesting = this$ViewsForTesting_0;
    this.local$closure$completedException = closure$completedException_0;
  }
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda.prototype.constructor = Coroutine$ViewsForTesting$viewsTest$lambda$lambda;
  Coroutine$ViewsForTesting$viewsTest$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$closure$completed.v) {
              this.state_0 = 4;
              continue;
            }
            this.state_0 = 3;
            this.result_0 = this.local$this$ViewsForTesting.simulateFrame_d88q27$_0(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$this$ViewsForTesting.dispatcher.executePending();
            this.state_0 = 2;
            continue;
          case 4:
            if (this.local$closure$completedException.v != null)
              throw ensureNotNull(this.local$closure$completedException.v);
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ViewsForTesting$viewsTest$lambda$lambda_0(closure$completed_0, this$ViewsForTesting_0, closure$completedException_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ViewsForTesting$viewsTest$lambda$lambda(closure$completed_0, this$ViewsForTesting_0, closure$completedException_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ViewsForTesting$viewsTest$lambda(this$ViewsForTesting_0, closure$block_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$ViewsForTesting = this$ViewsForTesting_0;
    this.local$closure$block = closure$block_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ViewsForTesting$viewsTest$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ViewsForTesting$viewsTest$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ViewsForTesting$viewsTest$lambda.prototype.constructor = Coroutine$ViewsForTesting$viewsTest$lambda;
  Coroutine$ViewsForTesting$viewsTest$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (util.OS.isNative) {
              return;
            } else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = Korge_getInstance().prepareViews_fgqc3$(this.local$this$ViewsForTesting.views, this.local$this$ViewsForTesting.koruiEventDispatcher, void 0, void 0, this.local$this$ViewsForTesting.frameTime, false, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var $this = this.local$this$ViewsForTesting.injector;
            var instance = new ViewsForTesting$viewsTest$lambda$ObjectLiteral(this.local$this$ViewsForTesting);
            $this.mapInstance_b1ce0a$(getKClass(Module), instance);
            var completed = {v: false};
            var completedException = {v: null};
            this.local$this$ViewsForTesting.dispatcher.dispatch_5bn72i$(this.local$$receiver.coroutineContext, new Runnable$ObjectLiteral(ViewsForTesting$viewsTest$lambda$lambda(this.local$this$ViewsForTesting, this.local$closure$block, completedException, completed)));
            this.state_0 = 4;
            this.result_0 = withTimeout(TimeSpan.Companion.fromSeconds_14dthe$(10), ViewsForTesting$viewsTest$lambda$lambda_0(completed, this.local$this$ViewsForTesting, completedException), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ViewsForTesting$viewsTest$lambda(this$ViewsForTesting_0, closure$block_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ViewsForTesting$viewsTest$lambda(this$ViewsForTesting_0, closure$block_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  ViewsForTesting.prototype.viewsTest_pc5kua$ = function (block) {
    suspendTest(ViewsForTesting$viewsTest$lambda(this, block));
  };
  function Coroutine$simulateFrame_d88q27$_0($this, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$index = void 0;
    this.local$count = count_0;
  }
  Coroutine$simulateFrame_d88q27$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$simulateFrame_d88q27$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$simulateFrame_d88q27$_0.prototype.constructor = Coroutine$simulateFrame_d88q27$_0;
  Coroutine$simulateFrame_d88q27$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$count === void 0)
              this.local$count = 1;
            this.local$index = 0;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$index >= this.local$count) {
              this.state_0 = 5;
              continue;
            }
            this.$this.time = this.$this.time.plus_fv8bff$(this.$this.frameTime);
            this.$this.ag.onRender.invoke_11rb$(this.$this.ag);
            this.state_0 = 3;
            this.result_0 = delay_0(this.$this.frameTime, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.local$index++;
            this.state_0 = 2;
            continue;
          case 5:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ViewsForTesting.prototype.simulateFrame_d88q27$_0 = function (count_0, continuation_0, suspended) {
    var instance = new Coroutine$simulateFrame_d88q27$_0(this, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function ViewsForTesting$FastGameWindowCoroutineDispatcher($outer) {
    this.$outer = $outer;
    GameWindowCoroutineDispatcher.call(this);
  }
  Object.defineProperty(ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype, 'hasMore', {
    get: function () {
      var tmp$ = !this.timedTasks.isEmpty();
      if (!tmp$) {
        tmp$ = !this.tasks.isEmpty();
      }return tmp$;
    }
  });
  ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype.now = function () {
    return get_hrMilliseconds(this.$outer.time.unixMillisDouble);
  };
  function ViewsForTesting$FastGameWindowCoroutineDispatcher$executePending$lambda(this$FastGameWindowCoroutineDispatcher) {
    return function (it) {
      return !this$FastGameWindowCoroutineDispatcher.timedTasks.isEmpty();
    };
  }
  function ViewsForTesting$FastGameWindowCoroutineDispatcher$executePending$lambda_0(this$FastGameWindowCoroutineDispatcher) {
    return function (it) {
      return this$FastGameWindowCoroutineDispatcher.timedTasks.removeHead();
    };
  }
  ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype.executePending = function () {
    try {
      var $receiver = ArrayList_init_1();
      while (ViewsForTesting$FastGameWindowCoroutineDispatcher$executePending$lambda(this)($receiver.size)) {
        var element = ViewsForTesting$FastGameWindowCoroutineDispatcher$executePending$lambda_0(this)($receiver.size);
        $receiver.add_11rb$(element);
      }
      var timedTasks = $receiver;
      this.$outer;
      var tmp$;
      var n = 0;
      while (n < timedTasks.size) {
        var this$ViewsForTesting = this.$outer;
        var item = timedTasks.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
        var tmp$_0, tmp$_1, tmp$_2, tmp$_3;
        var tmp$_4 = DateTime.Companion;
        var a = this$ViewsForTesting.time.unixMillis;
        var b = item.time.millisecondsDouble;
        this$ViewsForTesting.time = tmp$_4.fromUnix_14dthe$(Math_0.max(a, b));
        if (item.exception != null) {
          if ((tmp$_0 = item.continuation) != null) {
            var exception = ensureNotNull(item.exception);
            tmp$_0.resumeWith_tl1gpc$(new Result(createFailure(exception)));
          }if (item.callback != null) {
            (tmp$_1 = item.exception) != null ? (printStackTrace(tmp$_1), Unit) : null;
          }} else {
          if ((tmp$_2 = item.continuation) != null) {
            tmp$_2.resumeWith_tl1gpc$(new Result(Unit));
          }(tmp$_3 = item.callback) != null ? (tmp$_3.run(), Unit) : null;
        }
      }
      while (!this.tasks.isEmpty()) {
        var task = this.tasks.dequeue();
        task.run();
      }
    } catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        println('Error in GameWindowCoroutineDispatcher.executePending:');
        printStackTrace(e);
      } else
        throw e;
    }
  };
  ViewsForTesting$FastGameWindowCoroutineDispatcher.prototype.toString = function () {
    return 'FastGameWindowCoroutineDispatcher';
  };
  ViewsForTesting$FastGameWindowCoroutineDispatcher.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FastGameWindowCoroutineDispatcher',
    interfaces: [GameWindowCoroutineDispatcher]
  };
  function ViewsForTesting$timeProvider$ObjectLiteral(this$ViewsForTesting) {
    this.this$ViewsForTesting = this$ViewsForTesting;
  }
  ViewsForTesting$timeProvider$ObjectLiteral.prototype.now = function () {
    return this.this$ViewsForTesting.time;
  };
  ViewsForTesting$timeProvider$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [TimeProvider]
  };
  function ViewsForTesting$gameWindow$ObjectLiteral(this$ViewsForTesting) {
    GameWindowLog.call(this);
    this.coroutineDispatcher_shr972$_0 = this$ViewsForTesting.dispatcher;
  }
  Object.defineProperty(ViewsForTesting$gameWindow$ObjectLiteral.prototype, 'coroutineDispatcher', {
    get: function () {
      return this.coroutineDispatcher_shr972$_0;
    }
  });
  ViewsForTesting$gameWindow$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [GameWindowLog]
  };
  ViewsForTesting.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewsForTesting',
    interfaces: []
  };
  function TiledMapData() {
    this.width = 0;
    this.height = 0;
    this.tilewidth = 0;
    this.tileheight = 0;
    this.allLayers = ArrayList_init_1();
    this.tilesets = ArrayList_init_1();
  }
  Object.defineProperty(TiledMapData.prototype, 'pixelWidth', {
    get: function () {
      return Kotlin.imul(this.width, this.tilewidth);
    }
  });
  Object.defineProperty(TiledMapData.prototype, 'pixelHeight', {
    get: function () {
      return Kotlin.imul(this.height, this.tileheight);
    }
  });
  Object.defineProperty(TiledMapData.prototype, 'patternLayers', {
    get: defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.TiledMapData.get_patternLayers', wrapFunction(function () {
      var TiledMap$Layer$Patterns = _.com.soywiz.korge.tiled.TiledMap.Layer.Patterns;
      var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
      return function () {
        var $receiver = this.allLayers;
        var destination = ArrayList_init();
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (Kotlin.isType(element, TiledMap$Layer$Patterns))
            destination.add_11rb$(element);
        }
        return destination;
      };
    }))
  });
  Object.defineProperty(TiledMapData.prototype, 'imageLayers', {
    get: defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.TiledMapData.get_imageLayers', wrapFunction(function () {
      var TiledMap$Layer$Image = _.com.soywiz.korge.tiled.TiledMap.Layer.Image;
      var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
      return function () {
        var $receiver = this.allLayers;
        var destination = ArrayList_init();
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (Kotlin.isType(element, TiledMap$Layer$Image))
            destination.add_11rb$(element);
        }
        return destination;
      };
    }))
  });
  Object.defineProperty(TiledMapData.prototype, 'objectLayers', {
    get: defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.TiledMapData.get_objectLayers', wrapFunction(function () {
      var TiledMap$Layer$Objects = _.com.soywiz.korge.tiled.TiledMap.Layer.Objects;
      var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
      return function () {
        var $receiver = this.allLayers;
        var destination = ArrayList_init();
        var tmp$;
        tmp$ = $receiver.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (Kotlin.isType(element, TiledMap$Layer$Objects))
            destination.add_11rb$(element);
        }
        return destination;
      };
    }))
  });
  TiledMapData.prototype.getObjectByName_61zpoe$ = function (name) {
    var $receiver = this.allLayers;
    var destination = ArrayList_init_1();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (Kotlin.isType(element, TiledMap$Layer$Objects))
        destination.add_11rb$(element);
    }
    var destination_0 = ArrayList_init_1();
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var element_0 = tmp$_0.next();
      var tmp$_0_0;
      if ((tmp$_0_0 = element_0.getByName_61zpoe$(name)) != null) {
        destination_0.add_11rb$(tmp$_0_0);
      }}
    return firstOrNull_0(destination_0);
  };
  Object.defineProperty(TiledMapData.prototype, 'maxGid', {
    get: function () {
      var tmp$;
      var $receiver = this.tilesets;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(item.firstgid + item.tilecount | 0);
      }
      return (tmp$ = max(destination)) != null ? tmp$ : 0;
    }
  });
  TiledMapData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TiledMapData',
    interfaces: []
  };
  function getPos($receiver, map) {
    var x = get_bounds($receiver).x / map.tilewidth;
    var y = get_bounds($receiver).y / map.tileheight;
    return new Point(numberToDouble(x), numberToDouble(y));
  }
  function getObjectPosByName($receiver, name) {
    var tmp$;
    tmp$ = $receiver != null ? $receiver.getObjectByName_61zpoe$(name) : null;
    if (tmp$ == null) {
      return null;
    }var obj = tmp$;
    return getPos(obj, $receiver);
  }
  function TileSetData(name, firstgid, tilewidth, tileheight, tilecount, spacing, margin, columns, image, source, width, height) {
    this.name = name;
    this.firstgid = firstgid;
    this.tilewidth = tilewidth;
    this.tileheight = tileheight;
    this.tilecount = tilecount;
    this.spacing = spacing;
    this.margin = margin;
    this.columns = columns;
    this.image = image;
    this.source = source;
    this.width = width;
    this.height = height;
  }
  TileSetData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TileSetData',
    interfaces: []
  };
  TileSetData.prototype.component1 = function () {
    return this.name;
  };
  TileSetData.prototype.component2 = function () {
    return this.firstgid;
  };
  TileSetData.prototype.component3 = function () {
    return this.tilewidth;
  };
  TileSetData.prototype.component4 = function () {
    return this.tileheight;
  };
  TileSetData.prototype.component5 = function () {
    return this.tilecount;
  };
  TileSetData.prototype.component6 = function () {
    return this.spacing;
  };
  TileSetData.prototype.component7 = function () {
    return this.margin;
  };
  TileSetData.prototype.component8 = function () {
    return this.columns;
  };
  TileSetData.prototype.component9 = function () {
    return this.image;
  };
  TileSetData.prototype.component10 = function () {
    return this.source;
  };
  TileSetData.prototype.component11 = function () {
    return this.width;
  };
  TileSetData.prototype.component12 = function () {
    return this.height;
  };
  TileSetData.prototype.copy_uczygz$ = function (name, firstgid, tilewidth, tileheight, tilecount, spacing, margin, columns, image, source, width, height) {
    return new TileSetData(name === void 0 ? this.name : name, firstgid === void 0 ? this.firstgid : firstgid, tilewidth === void 0 ? this.tilewidth : tilewidth, tileheight === void 0 ? this.tileheight : tileheight, tilecount === void 0 ? this.tilecount : tilecount, spacing === void 0 ? this.spacing : spacing, margin === void 0 ? this.margin : margin, columns === void 0 ? this.columns : columns, image === void 0 ? this.image : image, source === void 0 ? this.source : source, width === void 0 ? this.width : width, height === void 0 ? this.height : height);
  };
  TileSetData.prototype.toString = function () {
    return 'TileSetData(name=' + Kotlin.toString(this.name) + (', firstgid=' + Kotlin.toString(this.firstgid)) + (', tilewidth=' + Kotlin.toString(this.tilewidth)) + (', tileheight=' + Kotlin.toString(this.tileheight)) + (', tilecount=' + Kotlin.toString(this.tilecount)) + (', spacing=' + Kotlin.toString(this.spacing)) + (', margin=' + Kotlin.toString(this.margin)) + (', columns=' + Kotlin.toString(this.columns)) + (', image=' + Kotlin.toString(this.image)) + (', source=' + Kotlin.toString(this.source)) + (', width=' + Kotlin.toString(this.width)) + (', height=' + Kotlin.toString(this.height)) + ')';
  };
  TileSetData.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.firstgid) | 0;
    result = result * 31 + Kotlin.hashCode(this.tilewidth) | 0;
    result = result * 31 + Kotlin.hashCode(this.tileheight) | 0;
    result = result * 31 + Kotlin.hashCode(this.tilecount) | 0;
    result = result * 31 + Kotlin.hashCode(this.spacing) | 0;
    result = result * 31 + Kotlin.hashCode(this.margin) | 0;
    result = result * 31 + Kotlin.hashCode(this.columns) | 0;
    result = result * 31 + Kotlin.hashCode(this.image) | 0;
    result = result * 31 + Kotlin.hashCode(this.source) | 0;
    result = result * 31 + Kotlin.hashCode(this.width) | 0;
    result = result * 31 + Kotlin.hashCode(this.height) | 0;
    return result;
  };
  TileSetData.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.firstgid, other.firstgid) && Kotlin.equals(this.tilewidth, other.tilewidth) && Kotlin.equals(this.tileheight, other.tileheight) && Kotlin.equals(this.tilecount, other.tilecount) && Kotlin.equals(this.spacing, other.spacing) && Kotlin.equals(this.margin, other.margin) && Kotlin.equals(this.columns, other.columns) && Kotlin.equals(this.image, other.image) && Kotlin.equals(this.source, other.source) && Kotlin.equals(this.width, other.width) && Kotlin.equals(this.height, other.height)))));
  };
  function TiledMap(data, tilesets, tileset) {
    this.data = data;
    this.tilesets = tilesets;
    this.tileset = tileset;
  }
  Object.defineProperty(TiledMap.prototype, 'width', {
    get: function () {
      return this.data.width;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'height', {
    get: function () {
      return this.data.height;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'tilewidth', {
    get: function () {
      return this.data.tilewidth;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'tileheight', {
    get: function () {
      return this.data.tileheight;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'pixelWidth', {
    get: function () {
      return this.data.pixelWidth;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'pixelHeight', {
    get: function () {
      return this.data.pixelHeight;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'allLayers', {
    get: function () {
      return this.data.allLayers;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'patternLayers', {
    get: function () {
      var $receiver = this.data.allLayers;
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Patterns))
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'imageLayers', {
    get: function () {
      var $receiver = this.data.allLayers;
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Image))
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  Object.defineProperty(TiledMap.prototype, 'objectLayers', {
    get: function () {
      var $receiver = this.data.allLayers;
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Objects))
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  function TiledMap$TiledTileset(tileset, firstgid) {
    if (firstgid === void 0)
      firstgid = 0;
    this.tileset = tileset;
    this.firstgid = firstgid;
  }
  TiledMap$TiledTileset.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TiledTileset',
    interfaces: []
  };
  function TiledMap$Layer() {
    this.name = '';
    this.visible = true;
    this.draworder = '';
    this.color = color.Colors.WHITE;
    this.opacity = 1.0;
    this.offsetx = 0.0;
    this.offsety = 0.0;
    this.properties = HashMap_init();
  }
  function TiledMap$Layer$Patterns() {
    TiledMap$Layer.call(this);
    this.map = new Bitmap32(0, 0);
  }
  TiledMap$Layer$Patterns.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Patterns',
    interfaces: [TiledMap$Layer]
  };
  function TiledMap$Layer$ObjectInfo(id, gid, name, rotation, type, bounds, objprops) {
    this.id = id;
    this.gid = gid;
    this.name = name;
    this.rotation = rotation;
    this.type = type;
    this.bounds = bounds;
    this.objprops = objprops;
  }
  TiledMap$Layer$ObjectInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ObjectInfo',
    interfaces: []
  };
  TiledMap$Layer$ObjectInfo.prototype.component1 = function () {
    return this.id;
  };
  TiledMap$Layer$ObjectInfo.prototype.component2 = function () {
    return this.gid;
  };
  TiledMap$Layer$ObjectInfo.prototype.component3 = function () {
    return this.name;
  };
  TiledMap$Layer$ObjectInfo.prototype.component4 = function () {
    return this.rotation;
  };
  TiledMap$Layer$ObjectInfo.prototype.component5 = function () {
    return this.type;
  };
  TiledMap$Layer$ObjectInfo.prototype.component6 = function () {
    return this.bounds;
  };
  TiledMap$Layer$ObjectInfo.prototype.component7 = function () {
    return this.objprops;
  };
  TiledMap$Layer$ObjectInfo.prototype.copy_z7d95n$ = function (id, gid, name, rotation, type, bounds, objprops) {
    return new TiledMap$Layer$ObjectInfo(id === void 0 ? this.id : id, gid === void 0 ? this.gid : gid, name === void 0 ? this.name : name, rotation === void 0 ? this.rotation : rotation, type === void 0 ? this.type : type, bounds === void 0 ? this.bounds : bounds, objprops === void 0 ? this.objprops : objprops);
  };
  TiledMap$Layer$ObjectInfo.prototype.toString = function () {
    return 'ObjectInfo(id=' + Kotlin.toString(this.id) + (', gid=' + Kotlin.toString(this.gid)) + (', name=' + Kotlin.toString(this.name)) + (', rotation=' + Kotlin.toString(this.rotation)) + (', type=' + Kotlin.toString(this.type)) + (', bounds=' + Kotlin.toString(this.bounds)) + (', objprops=' + Kotlin.toString(this.objprops)) + ')';
  };
  TiledMap$Layer$ObjectInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.gid) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.rotation) | 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.bounds) | 0;
    result = result * 31 + Kotlin.hashCode(this.objprops) | 0;
    return result;
  };
  TiledMap$Layer$ObjectInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.gid, other.gid) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.rotation, other.rotation) && Kotlin.equals(this.type, other.type) && Kotlin.equals(this.bounds, other.bounds) && Kotlin.equals(this.objprops, other.objprops)))));
  };
  function TiledMap$Layer$Objects() {
    TiledMap$Layer.call(this);
    this.objects = ArrayList_init_1();
    this.objectsById_3gi93x$_0 = lazy(TiledMap$Layer$Objects$objectsById$lambda(this));
    this.objectsByName_evrlkj$_0 = lazy(TiledMap$Layer$Objects$objectsByName$lambda(this));
  }
  function TiledMap$Layer$Objects$Object() {
  }
  TiledMap$Layer$Objects$Object.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Object',
    interfaces: []
  };
  function TiledMap$Layer$Objects$Poly() {
  }
  TiledMap$Layer$Objects$Poly.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Poly',
    interfaces: [TiledMap$Layer$Objects$Object]
  };
  function TiledMap$Layer$Objects$PPoint(info) {
    this.info_otwyhf$_0 = info;
  }
  Object.defineProperty(TiledMap$Layer$Objects$PPoint.prototype, 'info', {
    get: function () {
      return this.info_otwyhf$_0;
    }
  });
  TiledMap$Layer$Objects$PPoint.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PPoint',
    interfaces: [TiledMap$Layer$Objects$Object]
  };
  TiledMap$Layer$Objects$PPoint.prototype.component1 = function () {
    return this.info;
  };
  TiledMap$Layer$Objects$PPoint.prototype.copy_dgvk9q$ = function (info) {
    return new TiledMap$Layer$Objects$PPoint(info === void 0 ? this.info : info);
  };
  TiledMap$Layer$Objects$PPoint.prototype.toString = function () {
    return 'PPoint(info=' + Kotlin.toString(this.info) + ')';
  };
  TiledMap$Layer$Objects$PPoint.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    return result;
  };
  TiledMap$Layer$Objects$PPoint.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.info, other.info))));
  };
  function TiledMap$Layer$Objects$Rect(info) {
    this.info_pcr9ch$_0 = info;
  }
  Object.defineProperty(TiledMap$Layer$Objects$Rect.prototype, 'info', {
    get: function () {
      return this.info_pcr9ch$_0;
    }
  });
  TiledMap$Layer$Objects$Rect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Rect',
    interfaces: [TiledMap$Layer$Objects$Object]
  };
  TiledMap$Layer$Objects$Rect.prototype.component1 = function () {
    return this.info;
  };
  TiledMap$Layer$Objects$Rect.prototype.copy_dgvk9q$ = function (info) {
    return new TiledMap$Layer$Objects$Rect(info === void 0 ? this.info : info);
  };
  TiledMap$Layer$Objects$Rect.prototype.toString = function () {
    return 'Rect(info=' + Kotlin.toString(this.info) + ')';
  };
  TiledMap$Layer$Objects$Rect.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    return result;
  };
  TiledMap$Layer$Objects$Rect.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.info, other.info))));
  };
  function TiledMap$Layer$Objects$Ellipse(info) {
    this.info_iux9wz$_0 = info;
  }
  Object.defineProperty(TiledMap$Layer$Objects$Ellipse.prototype, 'info', {
    get: function () {
      return this.info_iux9wz$_0;
    }
  });
  TiledMap$Layer$Objects$Ellipse.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ellipse',
    interfaces: [TiledMap$Layer$Objects$Object]
  };
  TiledMap$Layer$Objects$Ellipse.prototype.component1 = function () {
    return this.info;
  };
  TiledMap$Layer$Objects$Ellipse.prototype.copy_dgvk9q$ = function (info) {
    return new TiledMap$Layer$Objects$Ellipse(info === void 0 ? this.info : info);
  };
  TiledMap$Layer$Objects$Ellipse.prototype.toString = function () {
    return 'Ellipse(info=' + Kotlin.toString(this.info) + ')';
  };
  TiledMap$Layer$Objects$Ellipse.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    return result;
  };
  TiledMap$Layer$Objects$Ellipse.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.info, other.info))));
  };
  function TiledMap$Layer$Objects$Polyline(info, points) {
    this.info_t5ghar$_0 = info;
    this.points_3ptevs$_0 = points;
  }
  Object.defineProperty(TiledMap$Layer$Objects$Polyline.prototype, 'info', {
    get: function () {
      return this.info_t5ghar$_0;
    }
  });
  Object.defineProperty(TiledMap$Layer$Objects$Polyline.prototype, 'points', {
    get: function () {
      return this.points_3ptevs$_0;
    }
  });
  TiledMap$Layer$Objects$Polyline.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Polyline',
    interfaces: [TiledMap$Layer$Objects$Poly]
  };
  TiledMap$Layer$Objects$Polyline.prototype.component1 = function () {
    return this.info;
  };
  TiledMap$Layer$Objects$Polyline.prototype.component2 = function () {
    return this.points;
  };
  TiledMap$Layer$Objects$Polyline.prototype.copy_ky5p5l$ = function (info, points) {
    return new TiledMap$Layer$Objects$Polyline(info === void 0 ? this.info : info, points === void 0 ? this.points : points);
  };
  TiledMap$Layer$Objects$Polyline.prototype.toString = function () {
    return 'Polyline(info=' + Kotlin.toString(this.info) + (', points=' + Kotlin.toString(this.points)) + ')';
  };
  TiledMap$Layer$Objects$Polyline.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    result = result * 31 + Kotlin.hashCode(this.points) | 0;
    return result;
  };
  TiledMap$Layer$Objects$Polyline.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.info, other.info) && Kotlin.equals(this.points, other.points)))));
  };
  function TiledMap$Layer$Objects$Polygon(info, points) {
    this.info_pxyzmx$_0 = info;
    this.points_w8vlzo$_0 = points;
  }
  Object.defineProperty(TiledMap$Layer$Objects$Polygon.prototype, 'info', {
    get: function () {
      return this.info_pxyzmx$_0;
    }
  });
  Object.defineProperty(TiledMap$Layer$Objects$Polygon.prototype, 'points', {
    get: function () {
      return this.points_w8vlzo$_0;
    }
  });
  TiledMap$Layer$Objects$Polygon.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Polygon',
    interfaces: [TiledMap$Layer$Objects$Poly]
  };
  TiledMap$Layer$Objects$Polygon.prototype.component1 = function () {
    return this.info;
  };
  TiledMap$Layer$Objects$Polygon.prototype.component2 = function () {
    return this.points;
  };
  TiledMap$Layer$Objects$Polygon.prototype.copy_ky5p5l$ = function (info, points) {
    return new TiledMap$Layer$Objects$Polygon(info === void 0 ? this.info : info, points === void 0 ? this.points : points);
  };
  TiledMap$Layer$Objects$Polygon.prototype.toString = function () {
    return 'Polygon(info=' + Kotlin.toString(this.info) + (', points=' + Kotlin.toString(this.points)) + ')';
  };
  TiledMap$Layer$Objects$Polygon.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    result = result * 31 + Kotlin.hashCode(this.points) | 0;
    return result;
  };
  TiledMap$Layer$Objects$Polygon.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.info, other.info) && Kotlin.equals(this.points, other.points)))));
  };
  Object.defineProperty(TiledMap$Layer$Objects.prototype, 'objectsById', {
    get: function () {
      return this.objectsById_3gi93x$_0.value;
    }
  });
  Object.defineProperty(TiledMap$Layer$Objects.prototype, 'objectsByName', {
    get: function () {
      return this.objectsByName_evrlkj$_0.value;
    }
  });
  TiledMap$Layer$Objects.prototype.getById_za3lpa$ = function (id) {
    return this.objectsById.get_11rb$(id);
  };
  TiledMap$Layer$Objects.prototype.getByName_61zpoe$ = function (name) {
    return this.objectsByName.get_11rb$(name);
  };
  function TiledMap$Layer$Objects$objectsById$lambda(this$Objects) {
    return function () {
      var $receiver = this$Objects.objects;
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver, 10)), 16);
      var destination = LinkedHashMap_init_0(capacity);
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        destination.put_xwzc9p$(get_id(element), element);
      }
      return destination;
    };
  }
  function TiledMap$Layer$Objects$objectsByName$lambda(this$Objects) {
    return function () {
      var $receiver = this$Objects.objects;
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver, 10)), 16);
      var destination = LinkedHashMap_init_0(capacity);
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        destination.put_xwzc9p$(get_name(element), element);
      }
      return destination;
    };
  }
  TiledMap$Layer$Objects.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Objects',
    interfaces: [TiledMap$Layer]
  };
  function TiledMap$Layer$Image() {
    TiledMap$Layer.call(this);
    this.width = 0;
    this.height = 0;
    this.source = '';
    this.image = new Bitmap32(0, 0);
  }
  TiledMap$Layer$Image.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Image',
    interfaces: [TiledMap$Layer]
  };
  TiledMap$Layer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Layer',
    interfaces: []
  };
  TiledMap.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TiledMap',
    interfaces: []
  };
  function get_id($receiver) {
    return $receiver.info.id;
  }
  function get_name($receiver) {
    return $receiver.info.name;
  }
  function get_bounds($receiver) {
    return $receiver.info.bounds;
  }
  function get_objprops($receiver) {
    return $receiver.info.objprops;
  }
  var get_patterns = defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.get_patterns_b7bx3x$', wrapFunction(function () {
    var TiledMap$Layer$Patterns = _.com.soywiz.korge.tiled.TiledMap.Layer.Patterns;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
    return function ($receiver) {
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Patterns))
          destination.add_11rb$(element);
      }
      return destination;
    };
  }));
  var get_images = defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.get_images_b7bx3x$', wrapFunction(function () {
    var TiledMap$Layer$Image = _.com.soywiz.korge.tiled.TiledMap.Layer.Image;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
    return function ($receiver) {
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Image))
          destination.add_11rb$(element);
      }
      return destination;
    };
  }));
  var get_objects = defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.get_objects_b7bx3x$', wrapFunction(function () {
    var TiledMap$Layer$Objects = _.com.soywiz.korge.tiled.TiledMap.Layer.Objects;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
    return function ($receiver) {
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (Kotlin.isType(element, TiledMap$Layer$Objects))
          destination.add_11rb$(element);
      }
      return destination;
    };
  }));
  var spaces;
  var tilemapLog;
  function TiledFile(name) {
    this.name = name;
  }
  TiledFile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TiledFile',
    interfaces: []
  };
  function parseProperties($receiver) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var out = LinkedHashMap_init();
    tmp$ = $receiver.children_61zpoe$('property').iterator();
    while (tmp$.hasNext()) {
      var property = tmp$.next();
      var pname = property.str_puj7f4$('name');
      var rawValue = property.hasAttribute_61zpoe$('value') ? property.str_puj7f4$('value') : property.text;
      var type = property.str_puj7f4$('type', 'text');
      switch (type) {
        case 'bool':
          tmp$_2 = equals(rawValue, 'true');
          break;
        case 'color':
          tmp$_2 = color.Colors.get_61zpoe$(rawValue);
          break;
        case 'text':
          tmp$_2 = rawValue;
          break;
        case 'int':
          tmp$_2 = (tmp$_0 = toIntOrNull(rawValue)) != null ? tmp$_0 : 0;
          break;
        case 'float':
          tmp$_2 = (tmp$_1 = toDoubleOrNull(rawValue)) != null ? tmp$_1 : 0.0;
          break;
        case 'file':
          tmp$_2 = new TiledFile(pname);
          break;
        default:tmp$_2 = rawValue;
          break;
      }
      var pvalue = tmp$_2;
      out.put_xwzc9p$(pname, pvalue);
    }
    return out;
  }
  function Coroutine$readTiledMapData($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$folder = void 0;
    this.local$tiledMap = void 0;
    this.local$elements = void 0;
    this.local$n = void 0;
    this.local$tmp$ = void 0;
    this.local$firstgid = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readTiledMapData.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readTiledMapData.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readTiledMapData.prototype.constructor = Coroutine$readTiledMapData;
  Coroutine$readTiledMapData.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2;
            var log = tilemapLog;
            var file = this.local$$receiver;
            this.local$folder = this.local$$receiver.parent.jail();
            this.local$tiledMap = new TiledMapData();
            this.state_0 = 2;
            this.result_0 = readXml(file, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var mapXml = this.result_0;
            if (!equals(mapXml.nameLC, 'map')) {
              throw IllegalStateException_init_0('Not a TiledMap XML TMX file starting with <map>'.toString());
            }
            this.local$tiledMap.width = (tmp$ = mapXml.getInt_61zpoe$('width')) != null ? tmp$ : 0;
            this.local$tiledMap.height = (tmp$_0 = mapXml.getInt_61zpoe$('height')) != null ? tmp$_0 : 0;
            this.local$tiledMap.tilewidth = (tmp$_1 = mapXml.getInt_61zpoe$('tilewidth')) != null ? tmp$_1 : 32;
            this.local$tiledMap.tileheight = (tmp$_2 = mapXml.getInt_61zpoe$('tileheight')) != null ? tmp$_2 : 32;
            var $this = tilemapLog;
            var level = Logger$Level.TRACE;
            if ($this.isEnabled_fs4ikx$(level)) {
              $this.actualLog_pwm3k3$(level, 'tilemap: width=' + this.local$tiledMap.width + ', height=' + this.local$tiledMap.height + ', tilewidth=' + this.local$tiledMap.tilewidth + ', tileheight=' + this.local$tiledMap.tileheight);
            }
            var $this_0 = tilemapLog;
            var level_0 = Logger$Level.TRACE;
            if ($this_0.isEnabled_fs4ikx$(level_0)) {
              $this_0.actualLog_pwm3k3$(level_0, 'tilemap: ' + this.local$tiledMap);
            }
            this.local$elements = mapXml.allChildrenNoComments;
            var $this_1 = tilemapLog;
            var level_1 = Logger$Level.TRACE;
            if ($this_1.isEnabled_fs4ikx$(level_1)) {
              $this_1.actualLog_pwm3k3$(level_1, 'tilemap: elements=' + this.local$elements.size);
            }
            var $this_2 = tilemapLog;
            var level_2 = Logger$Level.TRACE;
            if ($this_2.isEnabled_fs4ikx$(level_2)) {
              $this_2.actualLog_pwm3k3$(level_2, 'tilemap: elements=' + this.local$elements);
            }
            var maxGid = 1;
            var tmp$_3;
            this.local$n = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$n >= this.local$elements.size) {
              this.state_0 = 7;
              continue;
            }
            var element = this.local$elements.get_za3lpa$((tmp$_3 = this.local$n, this.local$n = tmp$_3 + 1 | 0, tmp$_3));
            var tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17, tmp$_18, tmp$_19;
            var elementName = element.nameLC;
            if (equals(elementName, 'tileset')) {
              var $this_3 = tilemapLog;
              var level_3 = Logger$Level.TRACE;
              if ($this_3.isEnabled_fs4ikx$(level_3)) {
                $this_3.actualLog_pwm3k3$(level_3, 'tileset');
              }this.local$firstgid = element.int_bm4lxs$('firstgid');
              if (element.hasAttribute_61zpoe$('source')) {
                this.state_0 = 4;
                this.result_0 = readXml(this.local$folder.get_61zpoe$(element.str_puj7f4$('source')), this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              } else {
                this.local$tmp$ = element;
                this.state_0 = 5;
                continue;
              }
            } else {
              if (equals(elementName, 'layer') || equals(elementName, 'objectgroup') || equals(elementName, 'imagelayer')) {
                var $this_4 = tilemapLog;
                var level_4 = Logger$Level.TRACE;
                if ($this_4.isEnabled_fs4ikx$(level_4)) {
                  $this_4.actualLog_pwm3k3$(level_4, 'layer:' + elementName);
                }switch (element.nameLC) {
                  case 'layer':
                    tmp$_7 = new TiledMap$Layer$Patterns();
                    break;
                  case 'objectgroup':
                    tmp$_7 = new TiledMap$Layer$Objects();
                    break;
                  case 'imagelayer':
                    tmp$_7 = new TiledMap$Layer$Image();
                    break;
                  default:tmp$_7 = lang.invalidOp;
                    break;
                }
                var layer = tmp$_7;
                this.local$tiledMap.allLayers.add_11rb$(layer);
                layer.name = element.str_puj7f4$('name');
                layer.visible = element.int_bm4lxs$('visible', 1) !== 0;
                layer.draworder = element.str_puj7f4$('draworder', '');
                layer.color = color.Colors.get_61zpoe$(element.str_puj7f4$('color', '#ffffff'));
                layer.opacity = element.double_io5o9c$('opacity', 1.0);
                layer.offsetx = element.double_io5o9c$('offsetx', 0.0);
                layer.offsety = element.double_io5o9c$('offsety', 0.0);
                var properties = (tmp$_8 = element.child_61zpoe$('properties')) != null ? parseProperties(tmp$_8) : null;
                if (properties != null) {
                  layer.properties.putAll_a2k3zr$(properties);
                }if (Kotlin.isType(layer, TiledMap$Layer$Patterns)) {
                  var width = element.int_bm4lxs$('width');
                  var height = element.int_bm4lxs$('height');
                  var count = Kotlin.imul(width, height);
                  var data = element.child_61zpoe$('data');
                  var encoding = (tmp$_9 = data != null ? data.str_puj7f4$('encoding', '') : null) != null ? tmp$_9 : '';
                  var compression = (tmp$_10 = data != null ? data.str_puj7f4$('compression', '') : null) != null ? tmp$_10 : '';
                  if (equals(encoding, '') || equals(encoding, 'xml')) {
                    var tmp$_20;
                    if ((tmp$_11 = data != null ? data.children_61zpoe$('tile') : null) != null) {
                      var destination = ArrayList_init_0(collectionSizeOrDefault(tmp$_11, 10));
                      var tmp$_21;
                      tmp$_21 = tmp$_11.iterator();
                      while (tmp$_21.hasNext()) {
                        var item = tmp$_21.next();
                        destination.add_11rb$(uint(item, 'gid'));
                      }
                      tmp$_20 = destination;
                    } else
                      tmp$_20 = null;
                    var items = (tmp$_12 = tmp$_20) != null ? tmp$_12 : emptyList();
                    tmp$_16 = toIntArray(items);
                  } else if (equals(encoding, 'csv')) {
                    var content = (tmp$_13 = data != null ? data.text : null) != null ? tmp$_13 : '';
                    var $receiver = split_0(spaces.replace_x2uqeu$(content, ''), Kotlin.charArrayOf(44));
                    var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
                    var tmp$_22;
                    tmp$_22 = $receiver.iterator();
                    while (tmp$_22.hasNext()) {
                      var item_0 = tmp$_22.next();
                      destination_0.add_11rb$(toUInt(item_0).data);
                    }
                    var items_0 = destination_0;
                    tmp$_16 = toIntArray(items_0);
                  } else if (equals(encoding, 'base64')) {
                    var $receiver_0 = (tmp$_14 = data != null ? data.text : null) != null ? tmp$_14 : '';
                    var tmp$_23;
                    var base64Content = trim(Kotlin.isCharSequence(tmp$_23 = $receiver_0) ? tmp$_23 : throwCCE()).toString();
                    var rawContent = fromBase64(base64Content);
                    switch (compression) {
                      case '':
                        tmp$_15 = rawContent;
                        break;
                      case 'gzip':
                        tmp$_15 = uncompress(rawContent, GZIP.Companion);
                        break;
                      case 'zlib':
                        tmp$_15 = uncompress(rawContent, ZLib.Companion);
                        break;
                      default:tmp$_15 = lang.invalidOp;
                        break;
                    }
                    var content_0 = tmp$_15;
                    tmp$_16 = readIntArrayLE(content_0, 0, count);
                  } else
                    tmp$_16 = invalidOp("Unhandled encoding '" + encoding + "'");
                  var tilesArray = tmp$_16;
                  if (tilesArray.length !== count)
                    invalidOp('');
                  layer.map = new Bitmap32(width, height, new RgbaArray(tilesArray));
                } else if (Kotlin.isType(layer, TiledMap$Layer$Image)) {
                  tmp$_17 = element.children_61zpoe$('image').iterator();
                  while (tmp$_17.hasNext()) {
                    var image = tmp$_17.next();
                    layer.source = image.str_puj7f4$('source');
                    layer.width = image.int_bm4lxs$('width');
                    layer.height = image.int_bm4lxs$('height');
                  }
                } else if (Kotlin.isType(layer, TiledMap$Layer$Objects)) {
                  tmp$_18 = element.children_61zpoe$('object').iterator();
                  while (tmp$_18.hasNext()) {
                    var obj = tmp$_18.next();
                    var id = obj.int_bm4lxs$('id');
                    var rotation = obj.double_io5o9c$('rotation');
                    var gid = obj.intNull_61zpoe$('gid');
                    var name = obj.str_puj7f4$('name');
                    var type = obj.str_puj7f4$('type');
                    var bounds = new Rectangle(obj.double_io5o9c$('x'), obj.double_io5o9c$('y'), obj.double_io5o9c$('width'), obj.double_io5o9c$('height'));
                    var rkind = RKind$RECT_getInstance();
                    var points = emptyList();
                    var objprops = LinkedHashMap_init();
                    tmp$_19 = obj.allNodeChildren.iterator();
                    while (tmp$_19.hasNext()) {
                      var kind = tmp$_19.next();
                      var kindType = kind.nameLC;
                      if (equals(kindType, 'ellipse'))
                        rkind = RKind$ELLIPSE_getInstance();
                      else if (equals(kindType, 'polyline') || equals(kindType, 'polygon')) {
                        var pointsStr = kind.str_puj7f4$('points');
                        var $receiver_1 = spaces.split_905azu$(pointsStr, 0);
                        var destination_1 = ArrayList_init_0(collectionSizeOrDefault($receiver_1, 10));
                        var tmp$_24;
                        tmp$_24 = $receiver_1.iterator();
                        while (tmp$_24.hasNext()) {
                          var item_1 = tmp$_24.next();
                          var tmp$_25 = destination_1.add_11rb$;
                          var $receiver_2 = split_0(item_1, Kotlin.charArrayOf(44));
                          var destination_2 = ArrayList_init_0(collectionSizeOrDefault($receiver_2, 10));
                          var tmp$_26;
                          tmp$_26 = $receiver_2.iterator();
                          while (tmp$_26.hasNext()) {
                            var item_2 = tmp$_26.next();
                            var tmp$_27;
                            var tmp$_28;
                            destination_2.add_11rb$((tmp$_27 = toDoubleOrNull(trim(Kotlin.isCharSequence(tmp$_28 = item_2) ? tmp$_28 : throwCCE()).toString())) != null ? tmp$_27 : 0.0);
                          }
                          var parts = destination_2;
                          tmp$_25.call(destination_1, new Point(parts.get_za3lpa$(0), parts.get_za3lpa$(1)));
                        }
                        points = destination_1;
                        rkind = equals(kindType, 'polyline') ? RKind$POLYLINE_getInstance() : RKind$POLYGON_getInstance();
                      } else if (equals(kindType, 'properties'))
                        objprops = parseProperties(kind);
                      else if (equals(kindType, 'point'))
                        rkind = RKind$POINT_getInstance();
                      else
                        invalidOp("Invalid object kind '" + kindType + "'");
                    }
                    var info = new TiledMap$Layer$ObjectInfo(id, gid, name, rotation, type, bounds, objprops);
                    var tmp$_29;
                    tmp$_29 = layer.objects;
                    var tmp$_30;
                    switch (rkind.name) {
                      case 'POINT':
                        tmp$_30 = new TiledMap$Layer$Objects$PPoint(info);
                        break;
                      case 'RECT':
                        tmp$_30 = new TiledMap$Layer$Objects$Rect(info);
                        break;
                      case 'ELLIPSE':
                        tmp$_30 = new TiledMap$Layer$Objects$Ellipse(info);
                        break;
                      case 'POLYLINE':
                        tmp$_30 = new TiledMap$Layer$Objects$Polyline(info, points);
                        break;
                      case 'POLYGON':
                        tmp$_30 = new TiledMap$Layer$Objects$Polygon(info, points);
                        break;
                      default:tmp$_30 = Kotlin.noWhenBranchMatched();
                        break;
                    }
                    var element_0 = tmp$_30;
                    tmp$_29.add_11rb$(element_0);
                  }
                }}this.state_0 = 6;
              continue;
            }

          case 4:
            this.local$tmp$ = this.result_0;
            this.state_0 = 5;
            continue;
          case 5:
            var element_1 = this.local$tmp$;
            var name_0 = element_1.str_puj7f4$('name');
            var tilewidth = element_1.int_bm4lxs$('tilewidth');
            var tileheight = element_1.int_bm4lxs$('tileheight');
            var tilecount = element_1.int_bm4lxs$('tilecount', -1);
            var spacing = element_1.int_bm4lxs$('spacing');
            var margin = element_1.int_bm4lxs$('margin');
            var columns = element_1.int_bm4lxs$('columns', -1);
            var image_0 = element_1.child_61zpoe$('image');
            var source = (tmp$_4 = image_0 != null ? image_0.str_puj7f4$('source') : null) != null ? tmp$_4 : '';
            var width_0 = (tmp$_5 = image_0 != null ? image_0.int_bm4lxs$('width', 0) : null) != null ? tmp$_5 : 0;
            var height_0 = (tmp$_6 = image_0 != null ? image_0.int_bm4lxs$('height', 0) : null) != null ? tmp$_6 : 0;
            var $receiver_3 = this.local$tiledMap.tilesets;
            var element_2 = new TileSetData(name_0, this.local$firstgid, tilewidth, tileheight, tilecount, spacing, margin, columns, image_0, source, width_0, height_0);
            $receiver_3.add_11rb$(element_2);
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 3;
            continue;
          case 7:
            return this.local$tiledMap;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readTiledMapData($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readTiledMapData($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function uint($receiver, name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = 0;
    var tmp$, tmp$_0, tmp$_1;
    return (tmp$_1 = (tmp$_0 = (tmp$ = $receiver.attributesLC.get_11rb$(name)) != null ? toUIntOrNull(tmp$) : null) != null ? tmp$_0.data : null) != null ? tmp$_1 : defaultValue;
  }
  function Coroutine$readTiledMap($receiver_0, hasTransparentColor_0, transparentColor_0, createBorder_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$folder = void 0;
    this.local$data = void 0;
    this.local$combinedTileset = void 0;
    this.local$destination = void 0;
    this.local$n = void 0;
    this.local$layer = void 0;
    this.local$tiledTilesets = void 0;
    this.local$$receiver_0 = void 0;
    this.local$n_0 = void 0;
    this.local$tileset = void 0;
    this.local$$receiver = $receiver_0;
    this.local$hasTransparentColor = hasTransparentColor_0;
    this.local$transparentColor = transparentColor_0;
    this.local$createBorder = createBorder_0;
  }
  Coroutine$readTiledMap.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readTiledMap.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readTiledMap.prototype.constructor = Coroutine$readTiledMap;
  Coroutine$readTiledMap.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$hasTransparentColor === void 0)
              this.local$hasTransparentColor = false;
            if (this.local$transparentColor === void 0)
              this.local$transparentColor = color.Colors.FUCHSIA;
            if (this.local$createBorder === void 0)
              this.local$createBorder = 1;
            this.local$folder = this.local$$receiver.parent.jail();
            this.state_0 = 2;
            this.result_0 = readTiledMapData(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$data = this.result_0;
            this.local$combinedTileset = Kotlin.newArray(this.local$data.maxGid + 1 | 0, null);
            var $receiver = this.local$data.allLayers;
            this.local$destination = ArrayList_init_1();
            var tmp$;
            tmp$ = $receiver.iterator();
            while (tmp$.hasNext()) {
              var element = tmp$.next();
              if (Kotlin.isType(element, TiledMap$Layer$Image))
                this.local$destination.add_11rb$(element);
            }

            var tmp$_0;
            this.local$n = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$n >= this.local$destination.size) {
              this.state_0 = 5;
              continue;
            }
            this.local$layer = this.local$destination.get_za3lpa$((tmp$_0 = this.local$n, this.local$n = tmp$_0 + 1 | 0, tmp$_0));
            this.state_0 = 4;
            this.result_0 = readBitmapOptimized(this.local$folder.get_61zpoe$(this.local$layer.source), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$layer.image = this.result_0;
            this.state_0 = 3;
            continue;
          case 5:
            this.local$tiledTilesets = ArrayList_init_1();
            this.local$$receiver_0 = this.local$data.tilesets;
            var tmp$_1;
            this.local$n_0 = 0;
            this.state_0 = 6;
            continue;
          case 6:
            if (this.local$n_0 >= this.local$$receiver_0.size) {
              this.state_0 = 8;
              continue;
            }
            this.local$tileset = this.local$$receiver_0.get_za3lpa$((tmp$_1 = this.local$n_0, this.local$n_0 = tmp$_1 + 1 | 0, tmp$_1));
            var tmp$_2, tmp$_3, tmp$_4, tmp$_5;
            this.state_0 = 7;
            this.result_0 = readBitmapOptimized(this.local$folder.get_61zpoe$(this.local$tileset.source), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            var bmp = this.result_0;
            if (this.local$hasTransparentColor) {
              bmp = bmp.toBMP32();
              tmp$_2 = bmp.area;
              for (var n = 0; n < tmp$_2; n++) {
                if ((tmp$_3 = bmp.data.get_za3lpa$(n)) != null ? tmp$_3.equals(this.local$transparentColor) : null)
                  bmp.data.set_vlvk8p$(n, color.Colors.TRANSPARENT_BLACK);
              }
            }
            if (this.local$createBorder > 0) {
              bmp = bmp.toBMP32();
              if (this.local$tileset.spacing >= this.local$createBorder) {
                tmp$_4 = new TileSet(TileSet$Companion_getInstance().extractBmpSlices_jiywit$(bmp, this.local$tileset.tilewidth, this.local$tileset.tileheight, this.local$tileset.columns, this.local$tileset.tilecount, this.local$tileset.spacing, this.local$tileset.margin), this.local$tileset.tilewidth, this.local$tileset.tileheight, bmp);
              } else {
                tmp$_4 = TileSet$Companion_getInstance().fromBitmaps_m8cj3d$(this.local$tileset.tilewidth, this.local$tileset.tileheight, TileSet$Companion_getInstance().extractBitmaps_jiywit$(bmp, this.local$tileset.tilewidth, this.local$tileset.tileheight, this.local$tileset.columns, this.local$tileset.tilecount, this.local$tileset.spacing, this.local$tileset.margin), this.local$createBorder, false);
              }
            } else {
              tmp$_4 = TileSet$Companion_getInstance().invoke_le1w3n$(slice(bmp), this.local$tileset.tilewidth, this.local$tileset.tileheight, this.local$tileset.columns, this.local$tileset.tilecount);
            }

            var ptileset = tmp$_4;
            var tiledTileset = new TiledMap$TiledTileset(ptileset, this.local$tileset.firstgid);
            this.local$tiledTilesets.add_11rb$(tiledTileset);
            var $this = tilemapLog;
            var level = Logger$Level.TRACE;
            if ($this.isEnabled_fs4ikx$(level)) {
              $this.actualLog_pwm3k3$(level, 'tileset:' + tiledTileset);
            }
            tmp$_5 = ptileset.textures.size;
            for (var n_0 = 0; n_0 < tmp$_5; n_0++) {
              this.local$combinedTileset[this.local$tileset.firstgid + n_0 | 0] = ptileset.textures.get_za3lpa$(n_0);
            }

            this.state_0 = 6;
            continue;
          case 8:
            return new TiledMap(this.local$data, this.local$tiledTilesets, new TileSet(toList(this.local$combinedTileset), this.local$data.tilewidth, this.local$data.tileheight));
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readTiledMap($receiver_0, hasTransparentColor_0, transparentColor_0, createBorder_0, continuation_0, suspended) {
    var instance = new Coroutine$readTiledMap($receiver_0, hasTransparentColor_0, transparentColor_0, createBorder_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function RKind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function RKind_initFields() {
    RKind_initFields = function () {
    };
    RKind$POINT_instance = new RKind('POINT', 0);
    RKind$RECT_instance = new RKind('RECT', 1);
    RKind$ELLIPSE_instance = new RKind('ELLIPSE', 2);
    RKind$POLYLINE_instance = new RKind('POLYLINE', 3);
    RKind$POLYGON_instance = new RKind('POLYGON', 4);
  }
  var RKind$POINT_instance;
  function RKind$POINT_getInstance() {
    RKind_initFields();
    return RKind$POINT_instance;
  }
  var RKind$RECT_instance;
  function RKind$RECT_getInstance() {
    RKind_initFields();
    return RKind$RECT_instance;
  }
  var RKind$ELLIPSE_instance;
  function RKind$ELLIPSE_getInstance() {
    RKind_initFields();
    return RKind$ELLIPSE_instance;
  }
  var RKind$POLYLINE_instance;
  function RKind$POLYLINE_getInstance() {
    RKind_initFields();
    return RKind$POLYLINE_instance;
  }
  var RKind$POLYGON_instance;
  function RKind$POLYGON_getInstance() {
    RKind_initFields();
    return RKind$POLYGON_instance;
  }
  RKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RKind',
    interfaces: [Enum]
  };
  function RKind$values() {
    return [RKind$POINT_getInstance(), RKind$RECT_getInstance(), RKind$ELLIPSE_getInstance(), RKind$POLYLINE_getInstance(), RKind$POLYGON_getInstance()];
  }
  RKind.values = RKind$values;
  function RKind$valueOf(name) {
    switch (name) {
      case 'POINT':
        return RKind$POINT_getInstance();
      case 'RECT':
        return RKind$RECT_getInstance();
      case 'ELLIPSE':
        return RKind$ELLIPSE_getInstance();
      case 'POLYLINE':
        return RKind$POLYLINE_getInstance();
      case 'POLYGON':
        return RKind$POLYGON_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.tiled.RKind.' + name);
    }
  }
  RKind.valueOf_61zpoe$ = RKind$valueOf;
  var tiledMapView = defineInlineFunction('korge-root-korge.com.soywiz.korge.tiled.tiledMapView_ursl2q$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var TiledMapView_init = _.com.soywiz.korge.tiled.TiledMapView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function tiledMapView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, tiledMap, showShapes, callback) {
      if (showShapes === void 0)
        showShapes = true;
      if (callback === void 0)
        callback = tiledMapView$lambda;
      var $receiver_0 = addTo(new TiledMapView_init(tiledMap, showShapes), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function TiledMapView(tiledMap, showShapes) {
    if (showShapes === void 0)
      showShapes = true;
    Container.call(this);
    this.tiledMap = tiledMap;
    var $receiver = this.tiledMap.allLayers;
    var n = 0;
    while (n < $receiver.size) {
      var closure$showShapes = showShapes;
      var layer = $receiver.get_za3lpa$(n);
      var tmp$;
      if (Kotlin.isType(layer, TiledMap$Layer$Patterns)) {
        var map = layer.map;
        var tileset = this.tiledMap.tileset;
        var repeatX;
        var repeatY;
        repeatX = TileMap$Repeat.NONE;
        repeatY = repeatX;
        tmp$ = repeat(addTo(new TileMap(toIntArray2(map), tileset), this), repeatX, repeatY);
      } else if (Kotlin.isType(layer, TiledMap$Layer$Image)) {
        tmp$ = addTo(Image_init(layer.image, 0.0, 0.0), this);
      } else if (Kotlin.isType(layer, TiledMap$Layer$Objects)) {
        var $receiver_0 = addTo(new Container(), this);
        var tmp$_0, tmp$_1, tmp$_2;
        tmp$_0 = layer.objects.iterator();
        while (tmp$_0.hasNext()) {
          var obj = tmp$_0.next();
          var info = obj.info;
          var bounds = info.bounds;
          var gid = obj.info.gid;
          var shouldShow = closure$showShapes;
          if (Kotlin.isType(obj, TiledMap$Layer$Objects$PPoint)) {
            tmp$_2 = addTo(new SolidRect(1.0, 1.0, color.Colors.WHITE), $receiver_0);
          } else if (Kotlin.isType(obj, TiledMap$Layer$Objects$Ellipse)) {
            tmp$_2 = addTo(new Ellipse(bounds.width / 2, bounds.height / 2, color.Colors.WHITE, true), $receiver_0);
          } else if (Kotlin.isType(obj, TiledMap$Layer$Objects$Rect))
            if (gid != null) {
              var tileTex = (tmp$_1 = this.tiledMap.tileset.get_za3lpa$(gid)) != null ? tmp$_1 : bitmap.Bitmaps.transparent;
              shouldShow = true;
              tmp$_2 = addTo(new Image(tileTex, 0.0, 0.0), $receiver_0);
            } else {
              tmp$_2 = addTo(new SolidRect(bounds.width, bounds.height, color.Colors.WHITE), $receiver_0);
            }
           else if (Kotlin.isType(obj, TiledMap$Layer$Objects$Poly)) {
            var $receiver_1 = addTo(new Graphics(false), $receiver_0);
            $receiver_1.beginFill_9bhh2t$($receiver_1.toColorFill_kzd6w3$(color.Colors.WHITE, 1.0));
            try {
              var tmp$_3;
              var first = true;
              tmp$_3 = obj.points.iterator();
              while (tmp$_3.hasNext()) {
                var point = tmp$_3.next();
                if (first) {
                  first = false;
                  $receiver_1.moveTo_lu1900$(point.x, point.y);
                } else {
                  $receiver_1.lineTo_lu1900$(point.x, point.y);
                }
              }
              $receiver_1.close();
            }finally {
              $receiver_1.endFill();
            }
            tmp$_2 = $receiver_1;
          } else {
            println('WARNING: Unsupported tiled object ' + obj);
            tmp$_2 = dummyView($receiver_0);
          }
          var view = tmp$_2;
          view.visible = shouldShow;
          var $receiver_2 = info.name;
          view.name = $receiver_2.length > 0 ? $receiver_2 : null;
          var $receiver_3 = rotation(xy(view, bounds.x, bounds.y), get_degrees(info.rotation));
          $receiver_3.addProp_4w9ihe$('type', info.type);
          $receiver_3.addProps_zb9t9x$(info.objprops);
        }
        tmp$ = $receiver_0;
      } else
        tmp$ = dummyView(this);
      var view_0 = tmp$;
      view_0.visible = layer.visible;
      var $receiver_4 = layer.name;
      view_0.name = $receiver_4.length > 0 ? $receiver_4 : null;
      alpha(xy(view_0, layer.offsetx, layer.offsety), layer.opacity).addProps_zb9t9x$(layer.properties);
      n = n + 1 | 0;
    }
  }
  TiledMapView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TiledMapView',
    interfaces: [Container]
  };
  function createView($receiver) {
    return new TiledMapView($receiver);
  }
  function toTimeProvider$lambda(this$toTimeProvider) {
    return function () {
      return DateTime.Companion.fromUnix_14dthe$(this$toTimeProvider.now().millisecondsDouble);
    };
  }
  function toTimeProvider($receiver) {
    return TimeProvider.Companion.invoke_x2enld$(toTimeProvider$lambda($receiver));
  }
  function suspendCancellableCoroutine$lambda(closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function suspendCoroutine$lambda(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  function TimerRef(ref) {
    this.ref = ref;
  }
  TimerRef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimerRef',
    interfaces: []
  };
  TimerRef.prototype.unbox = function () {
    return this.ref;
  };
  TimerRef.prototype.toString = function () {
    return 'TimerRef(ref=' + Kotlin.toString(this.ref) + ')';
  };
  TimerRef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.ref) | 0;
    return result;
  };
  TimerRef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.ref, other.ref))));
  };
  function TimerComponents(view) {
    this.view_tya6ih$_0 = view;
    this._timers_0 = ArrayList_init_1();
  }
  Object.defineProperty(TimerComponents.prototype, 'view', {
    get: function () {
      return this.view_tya6ih$_0;
    }
  });
  TimerComponents.prototype.update_seyb0p$ = function (dt) {
    var $receiver = this._timers_0;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$))(dt);
    }
  };
  TimerComponents.prototype.addTimer_0 = function (callback) {
    this._timers_0.add_11rb$(callback);
  };
  TimerComponents.prototype.removeTimer_0 = function (callback) {
    this._timers_0.remove_11rb$(callback);
  };
  TimerComponents.prototype.wait_fv8bff$ = function (time, continuation) {
    return this.wait_seyb0p$(get_hr(time), continuation);
  };
  function TimerComponents$wait$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_tl1gpc$(new Result(Unit));
      return Unit;
    };
  }
  function TimerComponents$wait$lambda(closure$time, this$TimerComponents) {
    return function (c) {
      this$TimerComponents.timeout_9estks$(closure$time, TimerComponents$wait$lambda$lambda(c));
      return Unit;
    };
  }
  function Coroutine$wait_seyb0p$($this, time_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$time = time_0;
  }
  Coroutine$wait_seyb0p$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$wait_seyb0p$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$wait_seyb0p$.prototype.constructor = Coroutine$wait_seyb0p$;
  Coroutine$wait_seyb0p$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda(TimerComponents$wait$lambda(this.local$time, this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TimerComponents.prototype.wait_seyb0p$ = function (time_0, continuation_0, suspended) {
    var instance = new Coroutine$wait_seyb0p$(this, time_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function TimerComponents$waitFrame$lambda$lambda(closure$timer, this$TimerComponents, closure$c) {
    return function (it) {
      this$TimerComponents.removeTimer_0(closure$timer.v == null ? throwUPAE('timer') : closure$timer.v);
      closure$c.resumeWith_tl1gpc$(new Result(Unit));
      return Unit;
    };
  }
  function TimerComponents$waitFrame$lambda(this$TimerComponents) {
    return function (c) {
      var timer = {v: null};
      timer.v = TimerComponents$waitFrame$lambda$lambda(timer, this$TimerComponents, c);
      this$TimerComponents.addTimer_0(timer.v == null ? throwUPAE('timer') : timer.v);
      return Unit;
    };
  }
  function Coroutine$waitFrame($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$waitFrame.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitFrame.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitFrame.prototype.constructor = Coroutine$waitFrame;
  Coroutine$waitFrame.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda(TimerComponents$waitFrame$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TimerComponents.prototype.waitFrame = function (continuation_0, suspended) {
    var instance = new Coroutine$waitFrame(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  TimerComponents.prototype.waitMilliseconds_14dthe$ = function (time, continuation) {
    return this.wait_seyb0p$(get_hrMilliseconds(time), continuation);
  };
  function TimerComponents$waitMilliseconds$lambda() {
    return Unit;
  }
  TimerComponents.prototype.waitMilliseconds_5jeynf$ = function (time, callback) {
    if (callback === void 0)
      callback = TimerComponents$waitMilliseconds$lambda;
    return this.timeoutMs_5jeynf$(time, callback);
  };
  function TimerComponents$_interval$lambda() {
    return Unit;
  }
  function TimerComponents$_interval$lambda_0(closure$elapsed, closure$time, closure$repeat, closure$timer, this$TimerComponents, closure$callback) {
    return function (deltaMs) {
      closure$elapsed.v = closure$elapsed.v.plus_seyb0p$(deltaMs);
      while (closure$elapsed.v.compareTo_11rb$(closure$time) >= 0) {
        if (!closure$repeat)
          this$TimerComponents.removeTimer_0(closure$timer.v == null ? throwUPAE('timer') : closure$timer.v);
        closure$elapsed.v = closure$elapsed.v.minus_seyb0p$(closure$time);
        closure$callback();
        if (!closure$repeat)
          break;
      }
      return Unit;
    };
  }
  function TimerComponents$_interval$lambda_1(closure$timer, this$TimerComponents) {
    return function () {
      this$TimerComponents.removeTimer_0(closure$timer.v == null ? throwUPAE('timer') : closure$timer.v);
      return Unit;
    };
  }
  TimerComponents.prototype._interval_0 = function (time, repeat, callback) {
    if (callback === void 0)
      callback = TimerComponents$_interval$lambda;
    var timer = {v: null};
    var elapsed = {v: get_hrNanoseconds(0)};
    timer.v = TimerComponents$_interval$lambda_0(elapsed, time, repeat, timer, this, callback);
    this.addTimer_0(timer.v == null ? throwUPAE('timer') : timer.v);
    return Closeable.Companion.invoke_o14v8n$(TimerComponents$_interval$lambda_1(timer, this));
  };
  function TimerComponents$timeout$lambda() {
    return Unit;
  }
  TimerComponents.prototype.timeout_9estks$ = function (time, callback) {
    if (callback === void 0)
      callback = TimerComponents$timeout$lambda;
    return this._interval_0(time, false, callback);
  };
  function TimerComponents$interval$lambda() {
    return Unit;
  }
  TimerComponents.prototype.interval_9estks$ = function (time, callback) {
    if (callback === void 0)
      callback = TimerComponents$interval$lambda;
    return this._interval_0(time, true, callback);
  };
  function TimerComponents$timeoutMs$lambda() {
    return Unit;
  }
  TimerComponents.prototype.timeoutMs_5jeynf$ = function (time, callback) {
    if (callback === void 0)
      callback = TimerComponents$timeoutMs$lambda;
    return this.timeout_9estks$(get_hrMilliseconds(time), callback);
  };
  function TimerComponents$intervalMs$lambda() {
    return Unit;
  }
  TimerComponents.prototype.intervalMs_5jeynf$ = function (time, callback) {
    if (callback === void 0)
      callback = TimerComponents$intervalMs$lambda;
    return this.interval_9estks$(get_hrMilliseconds(time), callback);
  };
  TimerComponents.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimerComponents',
    interfaces: [UpdateComponentV2]
  };
  function get_timers($receiver) {
    var $this = $receiver.componentsSure;
    var clazz = getKClass(TimerComponents);
    var tmp$;
    var array = $this.eupdate;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new TimerComponents($receiver);
      var element = component;
      array.add_11rb$(element);
    }return Kotlin.isType(tmp$ = component, TimerComponents) ? tmp$ : throwCCE();
  }
  function waitMs($receiver, time, continuation) {
    return delay_1($receiver, TimeSpan.Companion.fromMilliseconds_14dthe$(time), continuation);
  }
  function wait($receiver, time, continuation) {
    return delay_1($receiver, time, continuation);
  }
  function waitFrame($receiver, continuation) {
    return delayFrame($receiver, continuation);
  }
  function sleepMs_0($receiver, time, continuation) {
    return delay_1($receiver, TimeSpan.Companion.fromMilliseconds_14dthe$(time), continuation);
  }
  function sleep_0($receiver, time, continuation) {
    return delay_1($receiver, time, continuation);
  }
  function sleepFrame($receiver, continuation) {
    return delayFrame($receiver, continuation);
  }
  function timer($receiver, time, callback) {
    return timeout($receiver, time, callback);
  }
  function timeout($receiver, time, callback) {
    return get_timers($receiver).timeoutMs_5jeynf$(time.milliseconds, callback);
  }
  function interval($receiver, time, callback) {
    return get_timers($receiver).intervalMs_5jeynf$(time.milliseconds, callback);
  }
  function delay_1($receiver, time, continuation) {
    return get_timers($receiver).wait_fv8bff$(time, continuation);
  }
  function delayFrame($receiver, continuation) {
    return get_timers($receiver).waitFrame(continuation);
  }
  function suspendCancellableCoroutine$lambda_0(closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function TweenComponent(view, vs, time, easing, callback, c) {
    if (time === void 0)
      time = HRTimeSpan.Companion.NULL;
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    this.view_p50uss$_0 = view;
    this.vs_0 = vs;
    this.time = time;
    this.easing = easing;
    this.callback = callback;
    this.c = c;
    this.elapsed = get_hrNanoseconds(0);
    var tmp$, tmp$_0;
    var tmp$_1;
    if (!((tmp$ = this.time) != null ? tmp$.equals(HRTimeSpan.Companion.NULL) : null))
      tmp$_1 = this.time;
    else {
      var $receiver = this.vs_0;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
      var tmp$_2;
      tmp$_2 = $receiver.iterator();
      while (tmp$_2.hasNext()) {
        var item = tmp$_2.next();
        destination.add_11rb$(item.endTime.nanosecondsDouble);
      }
      tmp$_1 = get_hrNanoseconds_0((tmp$_0 = max_0(destination)) != null ? tmp$_0 : 0.0);
    }
    this.hrtime = tmp$_1;
    this.cancelled = false;
    this.done = false;
    this.c.invokeOnCancellation_f05bi3$(TweenComponent_init$lambda(this));
    this.update_14dthe$(0.0);
  }
  Object.defineProperty(TweenComponent.prototype, 'view', {
    get: function () {
      return this.view_p50uss$_0;
    }
  });
  TweenComponent.prototype.completeOnce = function () {
    if (!this.done) {
      this.done = true;
      detach_6(this);
      this.c.resumeWith_tl1gpc$(new Result(Unit));
    }};
  TweenComponent.prototype.update_seyb0p$ = function (dt) {
    if (this.cancelled) {
      return this.completeOnce();
    }this.elapsed = this.elapsed.plus_seyb0p$(dt);
    var ratio = clamp_0(this.elapsed.div_seyb0p$(this.hrtime), 0.0, 1.0);
    this.setTo_seyb0p$(this.elapsed);
    this.callback(this.easing.invoke_14dthe$(ratio));
    if (ratio >= 1.0) {
      return this.completeOnce();
    }};
  TweenComponent.prototype.setToMs_za3lpa$ = function (elapsed) {
    this.setTo_seyb0p$(get_hrMilliseconds_0(elapsed));
  };
  TweenComponent.prototype.setTo_seyb0p$ = function (elapsed) {
    if (elapsed != null ? elapsed.equals(get_hrNanoseconds(0)) : null) {
      var $receiver = this.vs_0;
      var tmp$;
      var n = 0;
      while (n < $receiver.size) {
        $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).init();
      }
    }var $receiver_0 = this.vs_0;
    var tmp$_0;
    var n_0 = 0;
    while (n_0 < $receiver_0.size) {
      var v = $receiver_0.get_za3lpa$((tmp$_0 = n_0, n_0 = tmp$_0 + 1 | 0, tmp$_0));
      var $receiver_1 = v.duration;
      var durationInTween = !($receiver_1 != null ? $receiver_1.equals(HRTimeSpan.Companion.NULL) : null) ? $receiver_1 : this.hrtime.minus_seyb0p$(v.startTime);
      var elapsedInTween = clamp_1(elapsed.minus_seyb0p$(v.startTime), get_hrNanoseconds(0), durationInTween);
      var ratioInTween = durationInTween.compareTo_11rb$(get_hrNanoseconds(0)) <= 0 ? 1.0 : elapsedInTween.div_seyb0p$(durationInTween);
      v.set_14dthe$(this.easing.invoke_14dthe$(ratioInTween));
    }
  };
  TweenComponent.prototype.toString = function () {
    return 'TweenComponent(' + this.view + ')';
  };
  function TweenComponent_init$lambda(this$TweenComponent) {
    return function (it) {
      this$TweenComponent.cancelled = true;
      return Unit;
    };
  }
  TweenComponent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TweenComponent',
    interfaces: [UpdateComponentV2]
  };
  function emptyCallback$lambda(it) {
    return Unit;
  }
  var emptyCallback;
  function tween$lambda$lambda(this$tween, closure$vs, closure$time, closure$easing, closure$callback, closure$tc) {
    return function (c) {
      var view = this$tween;
      var tmp$ = closure$tc;
      var $receiver = new TweenComponent(view, toList(closure$vs), get_hr(closure$time), closure$easing, closure$callback, c);
      attach_6($receiver);
      tmp$.v = $receiver;
      return Unit;
    };
  }
  function Coroutine$tween$lambda(this$tween_0, closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, closure$tc_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$tween = this$tween_0;
    this.local$closure$vs = closure$vs_0;
    this.local$closure$time = closure$time_0;
    this.local$closure$easing = closure$easing_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$tc = closure$tc_0;
  }
  Coroutine$tween$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tween$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tween$lambda.prototype.constructor = Coroutine$tween$lambda;
  Coroutine$tween$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_0(tween$lambda$lambda(this.local$this$tween, this.local$closure$vs, this.local$closure$time, this.local$closure$easing, this.local$closure$callback, this.local$closure$tc))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function tween$lambda(this$tween_0, closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, closure$tc_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$tween$lambda(this$tween_0, closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, closure$tc_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$tween($receiver_0, vs_0, time_0, easing_0, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.local$tc = void 0;
    this.local$$receiver = $receiver_0;
    this.local$vs = vs_0;
    this.local$time = time_0;
    this.local$easing = easing_0;
    this.local$callback = callback_0;
  }
  Coroutine$tween.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tween.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tween.prototype.constructor = Coroutine$tween;
  Coroutine$tween.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$easing === void 0)
              this.local$easing = Easing.Companion.LINEAR;
            if (this.local$callback === void 0)
              this.local$callback = emptyCallback;
            var tmp$;
            if (this.local$$receiver != null) {
              this.local$tc = {v: null};
              this.exceptionState_0 = 2;
              this.state_0 = 1;
              this.result_0 = withTimeout_0(Kotlin.Long.fromInt(300).add(this.local$time.millisecondsLong.multiply(Kotlin.Long.fromInt(2))), tween$lambda(this.local$$receiver, this.local$vs, this.local$time, this.local$easing, this.local$callback, this.local$tc), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 4;
              continue;
            }

          case 1:
            this.exceptionState_0 = 5;
            this.state_0 = 3;
            continue;
          case 2:
            this.exceptionState_0 = 5;
            var e = this.exception_0;
            if (Kotlin.isType(e, TimeoutCancellationException)) {
              (tmp$ = this.local$tc.v) != null ? (tmp$.setTo_seyb0p$(get_hr(this.local$time)), Unit) : null;
            } else
              throw e;
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
          default:this.state_0 = 5;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 5) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function tween($receiver_0, vs_0, time_0, easing_0, callback_0, continuation_0, suspended) {
    var instance = new Coroutine$tween($receiver_0, vs_0, time_0, easing_0, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$tweenAsync$lambda(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$vs = closure$vs_0;
    this.local$closure$time = closure$time_0;
    this.local$closure$easing = closure$easing_0;
    this.local$closure$callback = closure$callback_0;
    this.local$this$tweenAsync = this$tweenAsync_0;
  }
  Coroutine$tweenAsync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tweenAsync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tweenAsync$lambda.prototype.constructor = Coroutine$tweenAsync$lambda;
  Coroutine$tweenAsync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = tween(this.local$this$tweenAsync, this.local$closure$vs.slice(), this.local$closure$time, this.local$closure$easing, this.local$closure$callback, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function tweenAsync$lambda(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$tweenAsync$lambda(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function tweenAsync($receiver, vs, time, easing, callback, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    if (callback === void 0)
      callback = emptyCallback;
    return asyncImmediately_0(continuation.context, tweenAsync$lambda(vs, time, easing, callback, $receiver));
  }
  function Coroutine$tweenAsync$lambda_0(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$vs = closure$vs_0;
    this.local$closure$time = closure$time_0;
    this.local$closure$easing = closure$easing_0;
    this.local$closure$callback = closure$callback_0;
    this.local$this$tweenAsync = this$tweenAsync_0;
  }
  Coroutine$tweenAsync$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tweenAsync$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tweenAsync$lambda_0.prototype.constructor = Coroutine$tweenAsync$lambda_0;
  Coroutine$tweenAsync$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = tween(this.local$this$tweenAsync, this.local$closure$vs.slice(), this.local$closure$time, this.local$closure$easing, this.local$closure$callback, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function tweenAsync$lambda_0(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$tweenAsync$lambda_0(closure$vs_0, closure$time_0, closure$easing_0, closure$callback_0, this$tweenAsync_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function tweenAsync_0($receiver, vs, coroutineContext, time, easing, callback) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    if (callback === void 0)
      callback = emptyCallback;
    return asyncImmediately_0(coroutineContext, tweenAsync$lambda_0(vs, time, easing, callback, $receiver));
  }
  function show$lambda(this$show) {
    return function (it) {
      this$show.visible = true;
      return Unit;
    };
  }
  function show($receiver, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_0 = getPropertyCallableRef('alpha', 0, function ($receiver) {
      return $receiver.alpha;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.alpha = value;
    }.bind(null, $receiver));
    return tween($receiver, [new V2($receiver_0, $receiver_0.get(), 1.0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, show$lambda($receiver), continuation);
  }
  function hide($receiver, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_0 = getPropertyCallableRef('alpha', 0, function ($receiver) {
      return $receiver.alpha;
    }.bind(null, $receiver), function ($receiver, value) {
      $receiver.alpha = value;
    }.bind(null, $receiver));
    return tween($receiver, [new V2($receiver_0, $receiver_0.get(), 0.0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  function moveTo($receiver, x, y, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
      return $receiver_0.x;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.x = value_0;
    }.bind(null, $receiver));
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), x, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
      return $receiver_0.y;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.y = value_0;
    }.bind(null, $receiver));
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), y, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.moveTo_mo66qj$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_2, x, y, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
        return $receiver_0.x;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.x = value_0;
      }.bind(null, $receiver_2));
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), x, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
        return $receiver_0.y;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.y = value_0;
      }.bind(null, $receiver_2));
      Kotlin.suspendCall(tween($receiver_2, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), y, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function moveBy($receiver, dx, dy, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
      return $receiver_0.x;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.x = value_0;
    }.bind(null, $receiver));
    var end_1 = $receiver.x + dx;
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), end_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
      return $receiver_0.y;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.y = value_0;
    }.bind(null, $receiver));
    var end_2 = $receiver.y + dy;
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), end_2, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.moveBy_mo66qj$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_2, dx, dy, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
        return $receiver_0.x;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.x = value_0;
      }.bind(null, $receiver_2));
      var end_1 = $receiver_2.x + dx;
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), end_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
        return $receiver_0.y;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.y = value_0;
      }.bind(null, $receiver_2));
      var end_2 = $receiver_2.y + dy;
      Kotlin.suspendCall(tween($receiver_2, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), end_2, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function scaleTo($receiver, sx, sy, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_3 = getPropertyCallableRef('scaleX', 0, function ($receiver_0) {
      return $receiver_0.scaleX;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.scaleX = value_0;
    }.bind(null, $receiver));
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), sx, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('scaleY', 0, function ($receiver_0) {
      return $receiver_0.scaleY;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.scaleY = value_0;
    }.bind(null, $receiver));
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), sy, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.scaleTo_mo66qj$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_2, sx, sy, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var $receiver_3 = getPropertyCallableRef('scaleX', 0, function ($receiver_0) {
        return $receiver_0.scaleX;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.scaleX = value_0;
      }.bind(null, $receiver_2));
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), sx, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('scaleY', 0, function ($receiver_0) {
        return $receiver_0.scaleY;
      }.bind(null, $receiver_2), function ($receiver_0, value_0) {
        $receiver_0.scaleY = value_0;
      }.bind(null, $receiver_2));
      Kotlin.suspendCall(tween($receiver_2, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), sy, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function moveTo_0($receiver, x, y, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var x_1 = numberToDouble(x);
    var y_1 = numberToDouble(y);
    var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
      return $receiver_0.x;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.x = value_0;
    }.bind(null, $receiver));
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), x_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
      return $receiver_0.y;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.y = value_0;
    }.bind(null, $receiver));
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), y_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.moveTo_58is8l$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var numberToDouble = Kotlin.numberToDouble;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_0, x, y, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var x_1 = numberToDouble(x);
      var y_1 = numberToDouble(y);
      var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
        return $receiver_0.x;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.x = value_0;
      }.bind(null, $receiver_0));
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), x_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
        return $receiver_0.y;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.y = value_0;
      }.bind(null, $receiver_0));
      Kotlin.suspendCall(tween($receiver_0, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), y_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function moveBy_0($receiver, dx, dy, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var dx_1 = numberToDouble(dx);
    var dy_1 = numberToDouble(dy);
    var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
      return $receiver_0.x;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.x = value_0;
    }.bind(null, $receiver));
    var end_1 = $receiver.x + dx_1;
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), end_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
      return $receiver_0.y;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.y = value_0;
    }.bind(null, $receiver));
    var end_2 = $receiver.y + dy_1;
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), end_2, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.moveBy_58is8l$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var numberToDouble = Kotlin.numberToDouble;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_0, dx, dy, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var dx_1 = numberToDouble(dx);
      var dy_1 = numberToDouble(dy);
      var $receiver_3 = getPropertyCallableRef('x', 0, function ($receiver_0) {
        return $receiver_0.x;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.x = value_0;
      }.bind(null, $receiver_0));
      var end_1 = $receiver_0.x + dx_1;
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), end_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('y', 0, function ($receiver_0) {
        return $receiver_0.y;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.y = value_0;
      }.bind(null, $receiver_0));
      var end_2 = $receiver_0.y + dy_1;
      Kotlin.suspendCall(tween($receiver_0, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), end_2, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function scaleTo_0($receiver, sx, sy, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var sx_1 = numberToDouble(sx);
    var sy_1 = numberToDouble(sy);
    var $receiver_3 = getPropertyCallableRef('scaleX', 0, function ($receiver_0) {
      return $receiver_0.scaleX;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.scaleX = value_0;
    }.bind(null, $receiver));
    var tmp$_0 = new V2($receiver_3, $receiver_3.get(), sx_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false);
    var $receiver_4 = getPropertyCallableRef('scaleY', 0, function ($receiver_0) {
      return $receiver_0.scaleY;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.scaleY = value_0;
    }.bind(null, $receiver));
    return tween($receiver, [tmp$_0, new V2($receiver_4, $receiver_4.get(), sy_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.scaleTo_58is8l$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var numberToDouble = Kotlin.numberToDouble;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_0, sx, sy, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var sx_1 = numberToDouble(sx);
      var sy_1 = numberToDouble(sy);
      var $receiver_3 = getPropertyCallableRef('scaleX', 0, function ($receiver_0) {
        return $receiver_0.scaleX;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.scaleX = value_0;
      }.bind(null, $receiver_0));
      var tmp$_0 = new V2_init($receiver_3, $receiver_3.get(), sx_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
      var $receiver_4 = getPropertyCallableRef('scaleY', 0, function ($receiver_0) {
        return $receiver_0.scaleY;
      }.bind(null, $receiver_0), function ($receiver_0, value_0) {
        $receiver_0.scaleY = value_0;
      }.bind(null, $receiver_0));
      Kotlin.suspendCall(tween($receiver_0, [tmp$_0, new V2_init($receiver_4, $receiver_4.get(), sy_1, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function rotateTo($receiver, deg, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_2 = getPropertyCallableRef('rotationRadians', 0, function ($receiver_0) {
      return $receiver_0.rotationRadians;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.rotationRadians = value_0;
    }.bind(null, $receiver));
    var end_0 = deg.radians;
    return tween($receiver, [new V2($receiver_2, $receiver_2.get(), end_0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.rotateTo_ei9i4u$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_1, deg, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var $receiver_2 = getPropertyCallableRef('rotationRadians', 0, function ($receiver_0) {
        return $receiver_0.rotationRadians;
      }.bind(null, $receiver_1), function ($receiver_0, value_0) {
        $receiver_0.rotationRadians = value_0;
      }.bind(null, $receiver_1));
      var end_0 = deg.radians;
      Kotlin.suspendCall(tween($receiver_1, [new V2_init($receiver_2, $receiver_2.get(), end_0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function rotateBy($receiver, ddeg, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    var $receiver_2 = getPropertyCallableRef('rotationRadians', 0, function ($receiver_0) {
      return $receiver_0.rotationRadians;
    }.bind(null, $receiver), function ($receiver_0, value_0) {
      $receiver_0.rotationRadians = value_0;
    }.bind(null, $receiver));
    var end_0 = $receiver.rotationRadians + ddeg.radians;
    return tween($receiver, [new V2($receiver_2, $receiver_2.get(), end_0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
      return _interpolate(ratio_0, l_0, r_0);
    }), false)], time, easing, void 0, continuation);
  }
  defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.rotateBy_ei9i4u$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
    var tween = _.com.soywiz.korge.tween.tween_t8t7it$;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver_1, ddeg, time, easing, continuation) {
      if (easing === void 0)
        easing = Easing.Companion.LINEAR;
      var $receiver_2 = getPropertyCallableRef('rotationRadians', 0, function ($receiver_0) {
        return $receiver_0.rotationRadians;
      }.bind(null, $receiver_1), function ($receiver_0, value_0) {
        $receiver_0.rotationRadians = value_0;
      }.bind(null, $receiver_1));
      var end_0 = $receiver_1.rotationRadians + ddeg.radians;
      Kotlin.suspendCall(tween($receiver_1, [new V2_init($receiver_2, $receiver_2.get(), end_0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false)], time, easing, void 0, Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function V2(key, initial, end, interpolator, includeStart, startTime, duration) {
    if (startTime === void 0)
      startTime = get_hrNanoseconds(0);
    if (duration === void 0)
      duration = HRTimeSpan.Companion.NULL;
    this.key = key;
    this.initial = initial;
    this.end = end;
    this.interpolator = interpolator;
    this.includeStart = includeStart;
    this.startTime = startTime;
    this.duration = duration;
    var $receiver = this.duration;
    this.endTime = this.startTime.plus_seyb0p$(!($receiver != null ? $receiver.equals(HRTimeSpan.Companion.NULL) : null) ? $receiver : get_hrNanoseconds(0));
  }
  V2.prototype.init = function () {
    if (!this.includeStart) {
      this.initial = this.key.get();
    }};
  V2.prototype.set_14dthe$ = function (ratio) {
    this.key.set(this.interpolator(ratio, this.initial, this.end));
  };
  V2.prototype.toString = function () {
    return 'V2(key=' + this.key.callableName + ', range=[' + this.initial + '-' + this.end + '], startTime=' + this.startTime + ', duration=' + this.duration + ')';
  };
  V2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'V2',
    interfaces: []
  };
  function V2_init(key, initial, end, includeStart, $this) {
    if (includeStart === void 0)
      includeStart = false;
    $this = $this || Object.create(V2.prototype);
    V2.call($this, key, initial, end, getCallableRef('_interpolateAny', function (ratio, l, r) {
      return $this;
    }), includeStart);
    return $this;
  }
  V2.prototype.component1 = function () {
    return this.key;
  };
  V2.prototype.component2 = function () {
    return this.initial;
  };
  V2.prototype.component3 = function () {
    return this.end;
  };
  V2.prototype.component4 = function () {
    return this.interpolator;
  };
  V2.prototype.component5 = function () {
    return this.includeStart;
  };
  V2.prototype.component6 = function () {
    return this.startTime;
  };
  V2.prototype.component7 = function () {
    return this.duration;
  };
  V2.prototype.copy_rw184p$ = function (key, initial, end, interpolator, includeStart, startTime, duration) {
    return new V2(key === void 0 ? this.key : key, initial === void 0 ? this.initial : initial, end === void 0 ? this.end : end, interpolator === void 0 ? this.interpolator : interpolator, includeStart === void 0 ? this.includeStart : includeStart, startTime === void 0 ? this.startTime : startTime, duration === void 0 ? this.duration : duration);
  };
  V2.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.key) | 0;
    result = result * 31 + Kotlin.hashCode(this.initial) | 0;
    result = result * 31 + Kotlin.hashCode(this.end) | 0;
    result = result * 31 + Kotlin.hashCode(this.interpolator) | 0;
    result = result * 31 + Kotlin.hashCode(this.includeStart) | 0;
    result = result * 31 + Kotlin.hashCode(this.startTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.duration) | 0;
    return result;
  };
  V2.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.key, other.key) && Kotlin.equals(this.initial, other.initial) && Kotlin.equals(this.end, other.end) && Kotlin.equals(this.interpolator, other.interpolator) && Kotlin.equals(this.includeStart, other.includeStart) && Kotlin.equals(this.startTime, other.startTime) && Kotlin.equals(this.duration, other.duration)))));
  };
  function get_3($receiver, end) {
    return new V2($receiver, $receiver.get(), end, getCallableRef('_interpolateAny', function (ratio, l, r) {
      return _interpolateAny(ratio, l, r);
    }), false);
  }
  function get_4($receiver, initial, end) {
    return new V2($receiver, initial, end, getCallableRef('_interpolateAny', function (ratio, l, r) {
      return _interpolateAny(ratio, l, r);
    }), true);
  }
  function _interpolate(ratio, l, r) {
    return interpolate(ratio, l, r);
  }
  function _interpolateFloat(ratio, l, r) {
    return interpolate_0(ratio, l, r);
  }
  function _interpolateAny(ratio, l, r) {
    return interpolateAny(ratio, l, r);
  }
  function _interpolateColor(ratio, l, r) {
    return RGBA.Companion.mixRgba_utyrs$(l, r, ratio);
  }
  function _interpolateAngle(ratio, l, r) {
    return new Angle(_interpolate(ratio, l.radians, r.radians));
  }
  function _interpolateTimeSpan(ratio, l, r) {
    var $receiver = _interpolate(ratio, l.milliseconds, r.milliseconds);
    return TimeSpan.Companion.fromMilliseconds_14dthe$($receiver);
  }
  var get_5 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_6g74bb$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }));
  var get_6 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_d5t5z9$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolate', function (ratio, l, r) {
        return _interpolate(ratio, l, r);
      }), true);
    };
  }));
  var get_7 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_rsnrrr$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }));
  var get_8 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_1q95j$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolate', function (ratio, l, r) {
        return _interpolate(ratio, l, r);
      }), true);
    };
  }));
  var get_9 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_4ej004$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }));
  var get_10 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_kkvgtz$', wrapFunction(function () {
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolate', function (ratio, l, r) {
        return _interpolate(ratio, l, r);
      }), true);
    };
  }));
  var get_11 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_1ml8v3$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      var end_0 = numberToDouble(end);
      return new V2_init($receiver, $receiver.get(), end_0, getCallableRef('_interpolate', function (ratio_0, l_0, r_0) {
        return _interpolate(ratio_0, l_0, r_0);
      }), false);
    };
  }));
  var get_12 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_8jpm3$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var _interpolate = _.com.soywiz.korge.tween._interpolate_yvo9jy$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, numberToDouble(initial), numberToDouble(end), getCallableRef('_interpolate', function (ratio, l, r) {
        return _interpolate(ratio, l, r);
      }), true);
    };
  }));
  var get_13 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_qupvg7$', wrapFunction(function () {
    var _interpolateColor = _.com.soywiz.korge.tween._interpolateColor_ax9ryg$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolateColor', function (ratio, l, r) {
        return _interpolateColor(ratio, l, r);
      }), false);
    };
  }));
  var get_14 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_kj4p66$', wrapFunction(function () {
    var _interpolateColor = _.com.soywiz.korge.tween._interpolateColor_ax9ryg$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolateColor', function (ratio, l, r) {
        return _interpolateColor(ratio, l, r);
      }), true);
    };
  }));
  var get_15 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_5z2m6h$', wrapFunction(function () {
    var _interpolateAngle = _.com.soywiz.korge.tween._interpolateAngle_a0zjys$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolateAngle', function (ratio_0, l_0, r_0) {
        return _interpolateAngle(ratio_0, l_0, r_0);
      }), false);
    };
  }));
  var get_16 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_er01ls$', wrapFunction(function () {
    var _interpolateAngle = _.com.soywiz.korge.tween._interpolateAngle_a0zjys$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolateAngle', function (ratio, l, r) {
        return _interpolateAngle(ratio, l, r);
      }), true);
    };
  }));
  var get_17 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_g76o3t$', wrapFunction(function () {
    var _interpolateTimeSpan = _.com.soywiz.korge.tween._interpolateTimeSpan_1syhps$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, end) {
      return new V2_init($receiver, $receiver.get(), end, getCallableRef('_interpolateTimeSpan', function (ratio, l, r) {
        return _interpolateTimeSpan(ratio, l, r);
      }), false);
    };
  }));
  var get_18 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.get_eqgkw2$', wrapFunction(function () {
    var _interpolateTimeSpan = _.com.soywiz.korge.tween._interpolateTimeSpan_1syhps$;
    var getCallableRef = Kotlin.getCallableRef;
    var V2_init = _.com.soywiz.korge.tween.V2;
    return function ($receiver, initial, end) {
      return new V2_init($receiver, initial, end, getCallableRef('_interpolateTimeSpan', function (ratio, l, r) {
        return _interpolateTimeSpan(ratio, l, r);
      }), true);
    };
  }));
  function easing$lambda(this$easing, closure$easing) {
    return function (ratio, a, b) {
      return this$easing.interpolator(closure$easing.invoke_14dthe$(ratio), a, b);
    };
  }
  function easing($receiver, easing) {
    return $receiver.copy_rw184p$(void 0, void 0, void 0, easing$lambda($receiver, easing));
  }
  var delay_2 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.delay_obe6bn$', wrapFunction(function () {
    var get_hr = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.hr.get_hr_5bmjl6$;
    return function ($receiver, startTime) {
      return $receiver.copy_rw184p$(void 0, void 0, void 0, void 0, void 0, get_hr(startTime));
    };
  }));
  var duration = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.duration_obe6bn$', wrapFunction(function () {
    var get_hr = _.$$importsForInline$$['klock-root-klock'].com.soywiz.klock.hr.get_hr_5bmjl6$;
    return function ($receiver, duration) {
      return $receiver.copy_rw184p$(void 0, void 0, void 0, void 0, void 0, void 0, get_hr(duration));
    };
  }));
  var delay_3 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.delay_fdiuq5$', function ($receiver, startTime) {
    return $receiver.copy_rw184p$(void 0, void 0, void 0, void 0, void 0, startTime);
  });
  var duration_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.duration_fdiuq5$', function ($receiver, duration) {
    return $receiver.copy_rw184p$(void 0, void 0, void 0, void 0, void 0, void 0, duration);
  });
  var linear = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.linear_2stsxw$', function ($receiver) {
    return $receiver;
  });
  var smooth = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.smooth_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.SMOOTH);
    };
  }));
  var easeIn = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeIn_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN);
    };
  }));
  var easeOut = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOut_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT);
    };
  }));
  var easeInOut = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInOut_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_OUT);
    };
  }));
  var easeOutIn = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutIn_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_IN);
    };
  }));
  var easeInBack = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInBack_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_BACK);
    };
  }));
  var easeOutBack = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutBack_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_BACK);
    };
  }));
  var easeInOutBack = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInOutBack_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_OUT_BACK);
    };
  }));
  var easeOutInBack = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutInBack_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_IN_BACK);
    };
  }));
  var easeInElastic = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInElastic_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_ELASTIC);
    };
  }));
  var easeOutElastic = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutElastic_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_ELASTIC);
    };
  }));
  var easeInOutElastic = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInOutElastic_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_OUT_ELASTIC);
    };
  }));
  var easeOutInElastic = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutInElastic_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_IN_ELASTIC);
    };
  }));
  var easeInBounce = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInBounce_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_BOUNCE);
    };
  }));
  var easeOutBounce = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutBounce_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_BOUNCE);
    };
  }));
  var easeInOutBounce = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInOutBounce_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_OUT_BOUNCE);
    };
  }));
  var easeOutInBounce = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutInBounce_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_IN_BOUNCE);
    };
  }));
  var easeInQuad = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInQuad_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_QUAD);
    };
  }));
  var easeOutQuad = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeOutQuad_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_OUT_QUAD);
    };
  }));
  var easeInOutQuad = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeInOutQuad_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_IN_OUT_QUAD);
    };
  }));
  var easeSine = defineInlineFunction('korge-root-korge.com.soywiz.korge.tween.easeSine_2stsxw$', wrapFunction(function () {
    var Easing = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.interpolation.Easing;
    var easing = _.com.soywiz.korge.tween.easing_lr91g1$;
    return function ($receiver) {
      return easing($receiver, Easing.Companion.EASE_SINE);
    };
  }));
  var iconButton = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.iconButton_2pt8on$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultCheckSkin = _.com.soywiz.korge.ui.get_defaultCheckSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var IconButton_init = _.com.soywiz.korge.ui.IconButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function iconButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, skin, iconSkin, block) {
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (iconSkin === void 0)
        iconSkin = get_defaultCheckSkin($receiver);
      if (block === void 0)
        block = iconButton$lambda;
      var $receiver_0 = addTo(new IconButton_init(numberToDouble(width), numberToDouble(height), skin, iconSkin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var iconButton_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.iconButton_392ti1$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultCheckSkin = _.com.soywiz.korge.ui.get_defaultCheckSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var IconButton_init = _.com.soywiz.korge.ui.IconButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function iconButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, skin, iconSkin, block) {
      if (width === void 0)
        width = 128.0;
      if (height === void 0)
        height = 64.0;
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (iconSkin === void 0)
        iconSkin = get_defaultCheckSkin($receiver);
      if (block === void 0)
        block = iconButton$lambda;
      var $receiver_0 = addTo(new IconButton_init(width, height, skin, iconSkin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function IconButton(width, height, skin, iconSkin) {
    if (width === void 0)
      width = 128.0;
    if (height === void 0)
      height = 64.0;
    if (skin === void 0)
      skin = get_DefaultUISkin();
    if (iconSkin === void 0)
      iconSkin = get_DefaultCheckSkin();
    UIButton.call(this, width, height, skin);
    this.iconSkin_lgr2d9$_0 = new UIObservable(iconSkin, IconButton$iconSkin$lambda(this));
    var $receiver = addTo(new NinePatch(iconSkin.normal, calculateWidth(iconSkin, width), calculateHeight(iconSkin, height), 0.0, 0.0, 0.0, 0.0), this);
    var closure$iconSkin = iconSkin;
    var closure$width = width;
    var closure$height = height;
    position_1($receiver, paddingLeft(closure$iconSkin, closure$width), paddingTop(closure$iconSkin, closure$height));
    this.icon = $receiver;
  }
  var IconButton$iconSkin_metadata = new PropertyMetadata('iconSkin');
  Object.defineProperty(IconButton.prototype, 'iconSkin', {
    get: function () {
      return this.iconSkin_lgr2d9$_0.getValue_t0xcdd$(this, IconButton$iconSkin_metadata);
    },
    set: function (iconSkin) {
      this.iconSkin_lgr2d9$_0.setValue_cvomos$(this, IconButton$iconSkin_metadata, iconSkin);
    }
  });
  IconButton.prototype.updateState = function () {
    var tmp$, tmp$_0;
    UIButton.prototype.updateState.call(this);
    tmp$_0 = this.icon;
    if (!this.enabled)
      tmp$ = this.iconSkin.disabled;
    else if (this.bpressing || this.forcePressed)
      tmp$ = this.iconSkin.down;
    else if (this.bover)
      tmp$ = this.iconSkin.over;
    else
      tmp$ = this.iconSkin.normal;
    tmp$_0.tex = tmp$;
  };
  IconButton.prototype.onSizeChanged = function () {
    UIButton.prototype.onSizeChanged.call(this);
    this.icon.width = calculateWidth(this.iconSkin, this.width);
    this.icon.height = calculateHeight(this.iconSkin, this.height);
    position_1(this.icon, paddingLeft(this.iconSkin, this.width), paddingTop(this.iconSkin, this.height));
    this.updateState();
  };
  function IconButton$iconSkin$lambda(this$IconButton) {
    return function (it) {
      this$IconButton.updateState();
      return Unit;
    };
  }
  IconButton.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IconButton',
    interfaces: [UIButton]
  };
  var textButton = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.textButton_r0qvm$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultUIFont = _.com.soywiz.korge.ui.get_defaultUIFont_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var TextButton_init = _.com.soywiz.korge.ui.TextButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function textButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, text, skin, textFont, block) {
      if (text === void 0)
        text = 'Button';
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (textFont === void 0)
        textFont = get_defaultUIFont($receiver);
      if (block === void 0)
        block = textButton$lambda;
      var $receiver_0 = addTo(new TextButton_init(numberToDouble(width), numberToDouble(height), text, skin, textFont), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var textButton_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.textButton_fibi1u$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultUIFont = _.com.soywiz.korge.ui.get_defaultUIFont_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var TextButton_init = _.com.soywiz.korge.ui.TextButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function textButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, text, skin, textFont, block) {
      if (width === void 0)
        width = 128.0;
      if (height === void 0)
        height = 64.0;
      if (text === void 0)
        text = 'Button';
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (textFont === void 0)
        textFont = get_defaultUIFont($receiver);
      if (block === void 0)
        block = textButton$lambda;
      var $receiver_0 = addTo(new TextButton_init(width, height, text, skin, textFont), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function TextButton(width, height, text, skin, textFont) {
    if (width === void 0)
      width = 128.0;
    if (height === void 0)
      height = 64.0;
    if (text === void 0)
      text = 'Button';
    if (skin === void 0)
      skin = get_DefaultUISkin();
    if (textFont === void 0)
      textFont = get_DefaultUIFont();
    UIButton.call(this, width, height, skin);
    this.text_dkj1z4$_0 = new UIObservable(text, TextButton$text$lambda(this));
    this.textSize_a07su7$_0 = new UIObservable(16, TextButton$textSize$lambda(this));
    this.textColor_iklqc1$_0 = new UIObservable(color.Colors.WHITE, TextButton$textColor$lambda(this));
    this.textAlignment_atxx4f$_0 = new UIObservable(Html$Alignment$Companion_getInstance().MIDDLE_CENTER, TextButton$textAlignment$lambda(this));
    this.textFont_9t62i9$_0 = new UIObservable(textFont, TextButton$textFont$lambda(this));
    this.shadowX_w8xzap$_0 = new UIObservable(1, TextButton$shadowX$lambda(this));
    this.shadowY_w8xz9u$_0 = new UIObservable(1, TextButton$shadowY$lambda(this));
    this.shadowSize_kd8kk4$_0 = new UIObservable(16, TextButton$shadowSize$lambda(this));
    this.shadowColor_dywp0$_0 = new UIObservable(color.Colors.BLACK.withA_za3lpa$(64), TextButton$shadowColor$lambda(this));
    this.shadowVisible_go94kr$_0 = new UIObservable(true, TextButton$shadowVisible$lambda(this));
    var text_0 = text;
    var color_0;
    var font;
    color_0 = color.Colors.WHITE;
    font = Fonts.Companion.defaultFont;
    this.textView_a1urh7$_0 = addTo(Text.Companion.invoke_8ii8iq$(text_0, 16.0, color_0, font), this);
    var text_1 = text;
    var color_1;
    var font_0;
    color_1 = color.Colors.WHITE;
    font_0 = Fonts.Companion.defaultFont;
    this.textShadow_pr9hc0$_0 = addTo(Text.Companion.invoke_8ii8iq$(text_1, 16.0, color_1, font_0), this);
    this.updateText_3z6021$_0();
    this.updateShadow_apq90$_0();
  }
  var TextButton$text_metadata = new PropertyMetadata('text');
  Object.defineProperty(TextButton.prototype, 'text', {
    get: function () {
      return this.text_dkj1z4$_0.getValue_t0xcdd$(this, TextButton$text_metadata);
    },
    set: function (text) {
      this.text_dkj1z4$_0.setValue_cvomos$(this, TextButton$text_metadata, text);
    }
  });
  var TextButton$textSize_metadata = new PropertyMetadata('textSize');
  Object.defineProperty(TextButton.prototype, 'textSize', {
    get: function () {
      return this.textSize_a07su7$_0.getValue_t0xcdd$(this, TextButton$textSize_metadata);
    },
    set: function (textSize) {
      this.textSize_a07su7$_0.setValue_cvomos$(this, TextButton$textSize_metadata, textSize);
    }
  });
  var TextButton$textColor_metadata = new PropertyMetadata('textColor');
  Object.defineProperty(TextButton.prototype, 'textColor', {
    get: function () {
      return this.textColor_iklqc1$_0.getValue_t0xcdd$(this, TextButton$textColor_metadata);
    },
    set: function (textColor) {
      this.textColor_iklqc1$_0.setValue_cvomos$(this, TextButton$textColor_metadata, textColor);
    }
  });
  var TextButton$textAlignment_metadata = new PropertyMetadata('textAlignment');
  Object.defineProperty(TextButton.prototype, 'textAlignment', {
    get: function () {
      return this.textAlignment_atxx4f$_0.getValue_t0xcdd$(this, TextButton$textAlignment_metadata);
    },
    set: function (textAlignment) {
      this.textAlignment_atxx4f$_0.setValue_cvomos$(this, TextButton$textAlignment_metadata, textAlignment);
    }
  });
  var TextButton$textFont_metadata = new PropertyMetadata('textFont');
  Object.defineProperty(TextButton.prototype, 'textFont', {
    get: function () {
      return this.textFont_9t62i9$_0.getValue_t0xcdd$(this, TextButton$textFont_metadata);
    },
    set: function (textFont) {
      this.textFont_9t62i9$_0.setValue_cvomos$(this, TextButton$textFont_metadata, textFont);
    }
  });
  var TextButton$shadowX_metadata = new PropertyMetadata('shadowX');
  Object.defineProperty(TextButton.prototype, 'shadowX', {
    get: function () {
      return this.shadowX_w8xzap$_0.getValue_t0xcdd$(this, TextButton$shadowX_metadata);
    },
    set: function (shadowX) {
      this.shadowX_w8xzap$_0.setValue_cvomos$(this, TextButton$shadowX_metadata, shadowX);
    }
  });
  var TextButton$shadowY_metadata = new PropertyMetadata('shadowY');
  Object.defineProperty(TextButton.prototype, 'shadowY', {
    get: function () {
      return this.shadowY_w8xz9u$_0.getValue_t0xcdd$(this, TextButton$shadowY_metadata);
    },
    set: function (shadowY) {
      this.shadowY_w8xz9u$_0.setValue_cvomos$(this, TextButton$shadowY_metadata, shadowY);
    }
  });
  var TextButton$shadowSize_metadata = new PropertyMetadata('shadowSize');
  Object.defineProperty(TextButton.prototype, 'shadowSize', {
    get: function () {
      return this.shadowSize_kd8kk4$_0.getValue_t0xcdd$(this, TextButton$shadowSize_metadata);
    },
    set: function (shadowSize) {
      this.shadowSize_kd8kk4$_0.setValue_cvomos$(this, TextButton$shadowSize_metadata, shadowSize);
    }
  });
  var TextButton$shadowColor_metadata = new PropertyMetadata('shadowColor');
  Object.defineProperty(TextButton.prototype, 'shadowColor', {
    get: function () {
      return this.shadowColor_dywp0$_0.getValue_t0xcdd$(this, TextButton$shadowColor_metadata);
    },
    set: function (shadowColor) {
      this.shadowColor_dywp0$_0.setValue_cvomos$(this, TextButton$shadowColor_metadata, shadowColor);
    }
  });
  var TextButton$shadowVisible_metadata = new PropertyMetadata('shadowVisible');
  Object.defineProperty(TextButton.prototype, 'shadowVisible', {
    get: function () {
      return this.shadowVisible_go94kr$_0.getValue_t0xcdd$(this, TextButton$shadowVisible_metadata);
    },
    set: function (shadowVisible) {
      this.shadowVisible_go94kr$_0.setValue_cvomos$(this, TextButton$shadowVisible_metadata, shadowVisible);
    }
  });
  TextButton.prototype.updateText_3z6021$_0 = function () {
    var tmp$, tmp$_0;
    var tmp$_1;
    tmp$_1 = this.textView_a1urh7$_0;
    Html_getInstance();
    tmp$ = this.textFont;
    tmp$_0 = this.textSize;
    tmp$_1.format = new Html$Format(void 0, this.textColor, tmp$, tmp$_0, void 0, void 0, this.textAlignment);
    var tmp$_2 = this.textView_a1urh7$_0;
    var width = this.width;
    var height = this.height;
    tmp$_2.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
    setText(this.textView_a1urh7$_0, this.text);
  };
  TextButton.prototype.updateShadow_apq90$_0 = function () {
    var tmp$, tmp$_0;
    var tmp$_1;
    this.textShadow_pr9hc0$_0.visible = this.shadowVisible;
    tmp$_1 = this.textShadow_pr9hc0$_0;
    Html_getInstance();
    tmp$ = this.textFont;
    tmp$_0 = this.shadowSize;
    tmp$_1.format = new Html$Format(void 0, this.shadowColor, tmp$, tmp$_0, void 0, void 0, this.textAlignment);
    var tmp$_2 = this.textShadow_pr9hc0$_0;
    var width = this.width;
    var height = this.height;
    tmp$_2.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
    setText(this.textShadow_pr9hc0$_0, this.text);
    position_0(this.textShadow_pr9hc0$_0, this.shadowX, this.shadowY);
  };
  TextButton.prototype.onSizeChanged = function () {
    UIButton.prototype.onSizeChanged.call(this);
    var tmp$ = this.textView_a1urh7$_0;
    var width = this.width;
    var height = this.height;
    tmp$.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
    var tmp$_0 = this.textShadow_pr9hc0$_0;
    var width_0 = this.width;
    var height_0 = this.height;
    tmp$_0.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width_0), numberToDouble(height_0)));
  };
  function TextButton$text$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateText_3z6021$_0();
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$textSize$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateText_3z6021$_0();
      return Unit;
    };
  }
  function TextButton$textColor$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateText_3z6021$_0();
      return Unit;
    };
  }
  function TextButton$textAlignment$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateText_3z6021$_0();
      return Unit;
    };
  }
  function TextButton$textFont$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateText_3z6021$_0();
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$shadowX$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$shadowY$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$shadowSize$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$shadowColor$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  function TextButton$shadowVisible$lambda(this$TextButton) {
    return function (it) {
      this$TextButton.updateShadow_apq90$_0();
      return Unit;
    };
  }
  TextButton.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextButton',
    interfaces: [UIButton]
  };
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_5(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_5(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_5(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_5(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_6(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_6(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_6(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_6(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_7(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_7(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_7(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_7(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_8(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_8(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_8(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_8(closure$handler, it));
      return Unit;
    };
  }
  var uiButton = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiButton_vxni81$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UIButton_init = _.com.soywiz.korge.ui.UIButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, skin, block) {
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (block === void 0)
        block = uiButton$lambda;
      var $receiver_0 = addTo(new UIButton_init(numberToDouble(width), numberToDouble(height), skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiButton_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiButton_paiay9$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIButton_init = _.com.soywiz.korge.ui.UIButton;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiButton$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, skin, block) {
      if (width === void 0)
        width = 128.0;
      if (height === void 0)
        height = 64.0;
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (block === void 0)
        block = uiButton$lambda;
      var $receiver_0 = addTo(new UIButton_init(width, height, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UIButton(width, height, skin) {
    if (width === void 0)
      width = 128.0;
    if (height === void 0)
      height = 64.0;
    if (skin === void 0)
      skin = get_DefaultUISkin();
    UIView.call(this, width, height);
    this.forcePressed_8s1t8j$_0 = new UIObservable(false, UIButton$forcePressed$lambda(this));
    this.skin_cjmvyh$_0 = new UIObservable(skin, UIButton$skin$lambda(this));
    this.rect_ckams0$_0 = addTo(new NinePatch(skin.normal, width, height, 10.0 / 64.0, 10.0 / 64.0, 54.0 / 64.0, 54.0 / 64.0), this);
    this.bover_tamkdm$_0 = new UIObservable(false, UIButton$bover$lambda(this));
    this.bpressing_rl59sx$_0 = new UIObservable(false, UIButton$bpressing$lambda(this));
    var $receiver_0 = get_mouse(this);
    getPropertyCallableRef('over', 1, function ($receiver_0) {
      return $receiver_0.over;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_5($receiver_0, UIButton_init$lambda$lambda(this)));
    getPropertyCallableRef('out', 1, function ($receiver_0) {
      return $receiver_0.out;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_6($receiver_0, UIButton_init$lambda$lambda_0(this)));
    getPropertyCallableRef('down', 1, function ($receiver_0) {
      return $receiver_0.down;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_7($receiver_0, UIButton_init$lambda$lambda_1(this)));
    getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
      return $receiver_0.upAnywhere;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_8($receiver_0, UIButton_init$lambda$lambda_2(this)));
  }
  var UIButton$forcePressed_metadata = new PropertyMetadata('forcePressed');
  Object.defineProperty(UIButton.prototype, 'forcePressed', {
    get: function () {
      return this.forcePressed_8s1t8j$_0.getValue_t0xcdd$(this, UIButton$forcePressed_metadata);
    },
    set: function (forcePressed) {
      this.forcePressed_8s1t8j$_0.setValue_cvomos$(this, UIButton$forcePressed_metadata, forcePressed);
    }
  });
  var UIButton$skin_metadata = new PropertyMetadata('skin');
  Object.defineProperty(UIButton.prototype, 'skin', {
    get: function () {
      return this.skin_cjmvyh$_0.getValue_t0xcdd$(this, UIButton$skin_metadata);
    },
    set: function (skin) {
      this.skin_cjmvyh$_0.setValue_cvomos$(this, UIButton$skin_metadata, skin);
    }
  });
  Object.defineProperty(UIButton.prototype, 'rect', {
    get: function () {
      return this.rect_ckams0$_0;
    }
  });
  var UIButton$bover_metadata = new PropertyMetadata('bover');
  Object.defineProperty(UIButton.prototype, 'bover', {
    get: function () {
      return this.bover_tamkdm$_0.getValue_t0xcdd$(this, UIButton$bover_metadata);
    },
    set: function (bover) {
      this.bover_tamkdm$_0.setValue_cvomos$(this, UIButton$bover_metadata, bover);
    }
  });
  var UIButton$bpressing_metadata = new PropertyMetadata('bpressing');
  Object.defineProperty(UIButton.prototype, 'bpressing', {
    get: function () {
      return this.bpressing_rl59sx$_0.getValue_t0xcdd$(this, UIButton$bpressing_metadata);
    },
    set: function (bpressing) {
      this.bpressing_rl59sx$_0.setValue_cvomos$(this, UIButton$bpressing_metadata, bpressing);
    }
  });
  UIButton.prototype.simulateOver = function () {
    this.bover = true;
  };
  UIButton.prototype.simulateOut = function () {
    this.bover = false;
  };
  UIButton.prototype.simulatePressing_6taknv$ = function (value) {
    this.bpressing = value;
  };
  UIButton.prototype.simulateDown = function () {
    this.bpressing = true;
  };
  UIButton.prototype.simulateUp = function () {
    this.bpressing = false;
  };
  UIButton.prototype.updateState = function () {
    var tmp$, tmp$_0;
    tmp$_0 = this.rect;
    if (!this.enabled)
      tmp$ = this.skin.disabled;
    else if (this.bpressing || this.forcePressed)
      tmp$ = this.skin.down;
    else if (this.bover)
      tmp$ = this.skin.over;
    else
      tmp$ = this.skin.normal;
    tmp$_0.tex = tmp$;
  };
  UIButton.prototype.onSizeChanged = function () {
    UIView.prototype.onSizeChanged.call(this);
    this.rect.width = this.width;
    this.rect.height = this.height;
    this.updateState();
  };
  function UIButton$forcePressed$lambda(this$UIButton) {
    return function (it) {
      this$UIButton.updateState();
      return Unit;
    };
  }
  function UIButton$skin$lambda(this$UIButton) {
    return function (it) {
      this$UIButton.updateState();
      return Unit;
    };
  }
  function UIButton$bover$lambda(this$UIButton) {
    return function (it) {
      this$UIButton.updateState();
      return Unit;
    };
  }
  function UIButton$bpressing$lambda(this$UIButton) {
    return function (it) {
      this$UIButton.updateState();
      return Unit;
    };
  }
  function Coroutine$UIButton_init$lambda$lambda(this$UIButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIButton = this$UIButton_0;
  }
  Coroutine$UIButton_init$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIButton_init$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIButton_init$lambda$lambda.prototype.constructor = Coroutine$UIButton_init$lambda$lambda;
  Coroutine$UIButton_init$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIButton.simulateOver(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIButton_init$lambda$lambda(this$UIButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIButton_init$lambda$lambda(this$UIButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIButton_init$lambda$lambda_0(this$UIButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIButton = this$UIButton_0;
  }
  Coroutine$UIButton_init$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIButton_init$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIButton_init$lambda$lambda_0.prototype.constructor = Coroutine$UIButton_init$lambda$lambda_0;
  Coroutine$UIButton_init$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIButton.simulateOut(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIButton_init$lambda$lambda_0(this$UIButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIButton_init$lambda$lambda_0(this$UIButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIButton_init$lambda$lambda_1(this$UIButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIButton = this$UIButton_0;
  }
  Coroutine$UIButton_init$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIButton_init$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIButton_init$lambda$lambda_1.prototype.constructor = Coroutine$UIButton_init$lambda$lambda_1;
  Coroutine$UIButton_init$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIButton.simulateDown(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIButton_init$lambda$lambda_1(this$UIButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIButton_init$lambda$lambda_1(this$UIButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIButton_init$lambda$lambda_2(this$UIButton_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIButton = this$UIButton_0;
  }
  Coroutine$UIButton_init$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIButton_init$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIButton_init$lambda$lambda_2.prototype.constructor = Coroutine$UIButton_init$lambda$lambda_2;
  Coroutine$UIButton_init$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIButton.simulateUp(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIButton_init$lambda$lambda_2(this$UIButton_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIButton_init$lambda$lambda_2(this$UIButton_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  UIButton.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIButton',
    interfaces: [UIView]
  };
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_9(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_9(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_9(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_9(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_10(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_10(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_10(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_10(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_11(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_11(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_11(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_11(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_12(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_12(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_12(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_12(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_13(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_13(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_13(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_13(closure$handler, it));
      return Unit;
    };
  }
  var uiCheckBox = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiCheckBox_ydbvhj$', wrapFunction(function () {
    var get_defaultUIFont = _.com.soywiz.korge.ui.get_defaultUIFont_gohfi1$;
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultCheckSkin = _.com.soywiz.korge.ui.get_defaultCheckSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UICheckBox_init = _.com.soywiz.korge.ui.UICheckBox;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiCheckBox$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, checked, text, textFont, skin, checkIcon, block) {
      if (checked === void 0)
        checked = false;
      if (text === void 0)
        text = 'CheckBox';
      if (textFont === void 0)
        textFont = get_defaultUIFont($receiver);
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (checkIcon === void 0)
        checkIcon = get_defaultCheckSkin($receiver);
      if (block === void 0)
        block = uiCheckBox$lambda;
      var $receiver_0 = addTo(new UICheckBox_init(numberToDouble(width), numberToDouble(height), checked, text, textFont, skin, checkIcon), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiCheckBox_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiCheckBox_lvts0n$', wrapFunction(function () {
    var get_defaultUIFont = _.com.soywiz.korge.ui.get_defaultUIFont_gohfi1$;
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var get_defaultCheckSkin = _.com.soywiz.korge.ui.get_defaultCheckSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UICheckBox_init = _.com.soywiz.korge.ui.UICheckBox;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiCheckBox$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, checked, text, textFont, skin, checkIcon, block) {
      if (width === void 0)
        width = 120.0;
      if (height === void 0)
        height = 32.0;
      if (checked === void 0)
        checked = false;
      if (text === void 0)
        text = 'CheckBox';
      if (textFont === void 0)
        textFont = get_defaultUIFont($receiver);
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (checkIcon === void 0)
        checkIcon = get_defaultCheckSkin($receiver);
      if (block === void 0)
        block = uiCheckBox$lambda;
      var $receiver_0 = addTo(new UICheckBox_init(width, height, checked, text, textFont, skin, checkIcon), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UICheckBox(width, height, checked, text, textFont, skin, checkIcon) {
    if (width === void 0)
      width = 120.0;
    if (height === void 0)
      height = 32.0;
    if (checked === void 0)
      checked = false;
    if (text === void 0)
      text = 'CheckBox';
    if (textFont === void 0)
      textFont = get_DefaultUIFont();
    if (skin === void 0)
      skin = get_DefaultUISkin();
    if (checkIcon === void 0)
      checkIcon = get_DefaultCheckSkin();
    UIView.call(this, width, height);
    this.skin_sr40rs$_0 = skin;
    this.checkIcon_533w1e$_0 = checkIcon;
    this.checked_byw0eg$_0 = new UIObservable(checked, UICheckBox$checked$lambda(this));
    this.text_srkapk$_0 = new UIObservable(text, UICheckBox$text$lambda(this));
    this.textFont_896afr$_0 = new UIObservable(textFont, UICheckBox$textFont$lambda(this));
    this.textSize_824k3t$_0 = new UIObservable(16, UICheckBox$textSize$lambda(this));
    this.textColor_qsv0ux$_0 = new UIObservable(color.Colors.WHITE, UICheckBox$textColor$lambda(this));
    this.onChange = new Signal();
    this.background_3zgkd3$_0 = addTo(new SolidRect(width, height, color.Colors.TRANSPARENT_BLACK), this);
    this.box_sexwis$_0 = addTo(new NinePatch(this.skin_sr40rs$_0.normal, height, height, 10.0 / 64.0, 10.0 / 64.0, 54.0 / 64.0, 54.0 / 64.0), this);
    var $receiver_1 = position_1(addTo(new NinePatch(this.checkIcon_533w1e$_0.normal, calculateWidth(this.checkIcon_533w1e$_0, height), calculateHeight(this.checkIcon_533w1e$_0, height), 0.0, 0.0, 0.0, 0.0), this), paddingLeft(this.checkIcon_533w1e$_0, height), paddingTop(this.checkIcon_533w1e$_0, height));
    $receiver_1.visible = false;
    this.icon_slh3e4$_0 = $receiver_1;
    var text_0 = text;
    var color_0;
    var font;
    color_0 = color.Colors.WHITE;
    font = Fonts.Companion.defaultFont;
    this.textView_80hlgt$_0 = addTo(Text.Companion.invoke_8ii8iq$(text_0, 16.0, color_0, font), this);
    this.over_sp3sdt$_2vx4vt$_0 = new UIObservable(false, UICheckBox$over$lambda(this));
    this.pressing_5qwbkq$_ttiqlq$_0 = new UIObservable(false, UICheckBox$pressing$lambda(this));
    var $receiver_2 = get_mouse(this);
    getPropertyCallableRef('over', 1, function ($receiver_0) {
      return $receiver_0.over;
    }).get($receiver_2).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_9($receiver_2, UICheckBox_init$lambda$lambda(this)));
    getPropertyCallableRef('out', 1, function ($receiver_0) {
      return $receiver_0.out;
    }).get($receiver_2).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_10($receiver_2, UICheckBox_init$lambda$lambda_0(this)));
    getPropertyCallableRef('down', 1, function ($receiver_0) {
      return $receiver_0.down;
    }).get($receiver_2).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_11($receiver_2, UICheckBox_init$lambda$lambda_1(this)));
    getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
      return $receiver_0.upAnywhere;
    }).get($receiver_2).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_12($receiver_2, UICheckBox_init$lambda$lambda_2(this)));
    getPropertyCallableRef('click', 1, function ($receiver_0) {
      return $receiver_0.click;
    }).get($receiver_2).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_13($receiver_2, UICheckBox_init$lambda$lambda_3(this)));
    this.updateText_wzm5ox$_0();
  }
  var UICheckBox$checked_metadata = new PropertyMetadata('checked');
  Object.defineProperty(UICheckBox.prototype, 'checked', {
    get: function () {
      return this.checked_byw0eg$_0.getValue_t0xcdd$(this, UICheckBox$checked_metadata);
    },
    set: function (checked) {
      this.checked_byw0eg$_0.setValue_cvomos$(this, UICheckBox$checked_metadata, checked);
    }
  });
  var UICheckBox$text_metadata = new PropertyMetadata('text');
  Object.defineProperty(UICheckBox.prototype, 'text', {
    get: function () {
      return this.text_srkapk$_0.getValue_t0xcdd$(this, UICheckBox$text_metadata);
    },
    set: function (text) {
      this.text_srkapk$_0.setValue_cvomos$(this, UICheckBox$text_metadata, text);
    }
  });
  var UICheckBox$textFont_metadata = new PropertyMetadata('textFont');
  Object.defineProperty(UICheckBox.prototype, 'textFont', {
    get: function () {
      return this.textFont_896afr$_0.getValue_t0xcdd$(this, UICheckBox$textFont_metadata);
    },
    set: function (textFont) {
      this.textFont_896afr$_0.setValue_cvomos$(this, UICheckBox$textFont_metadata, textFont);
    }
  });
  var UICheckBox$textSize_metadata = new PropertyMetadata('textSize');
  Object.defineProperty(UICheckBox.prototype, 'textSize', {
    get: function () {
      return this.textSize_824k3t$_0.getValue_t0xcdd$(this, UICheckBox$textSize_metadata);
    },
    set: function (textSize) {
      this.textSize_824k3t$_0.setValue_cvomos$(this, UICheckBox$textSize_metadata, textSize);
    }
  });
  var UICheckBox$textColor_metadata = new PropertyMetadata('textColor');
  Object.defineProperty(UICheckBox.prototype, 'textColor', {
    get: function () {
      return this.textColor_qsv0ux$_0.getValue_t0xcdd$(this, UICheckBox$textColor_metadata);
    },
    set: function (textColor) {
      this.textColor_qsv0ux$_0.setValue_cvomos$(this, UICheckBox$textColor_metadata, textColor);
    }
  });
  var UICheckBox$over_metadata = new PropertyMetadata('over');
  Object.defineProperty(UICheckBox.prototype, 'over_sp3sdt$_0', {
    get: function () {
      return this.over_sp3sdt$_2vx4vt$_0.getValue_t0xcdd$(this, UICheckBox$over_metadata);
    },
    set: function (over) {
      this.over_sp3sdt$_2vx4vt$_0.setValue_cvomos$(this, UICheckBox$over_metadata, over);
    }
  });
  var UICheckBox$pressing_metadata = new PropertyMetadata('pressing');
  Object.defineProperty(UICheckBox.prototype, 'pressing_5qwbkq$_0', {
    get: function () {
      return this.pressing_5qwbkq$_ttiqlq$_0.getValue_t0xcdd$(this, UICheckBox$pressing_metadata);
    },
    set: function (pressing) {
      this.pressing_5qwbkq$_ttiqlq$_0.setValue_cvomos$(this, UICheckBox$pressing_metadata, pressing);
    }
  });
  UICheckBox.prototype.updateState = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    UIView.prototype.updateState.call(this);
    tmp$_0 = this.box_sexwis$_0;
    if (!this.enabled)
      tmp$ = this.skin_sr40rs$_0.disabled;
    else if (this.pressing_5qwbkq$_0)
      tmp$ = this.skin_sr40rs$_0.down;
    else if (this.over_sp3sdt$_0)
      tmp$ = this.skin_sr40rs$_0.over;
    else
      tmp$ = this.skin_sr40rs$_0.normal;
    tmp$_0.tex = tmp$;
    tmp$_2 = this.icon_slh3e4$_0;
    if (!this.enabled)
      tmp$_1 = this.checkIcon_533w1e$_0.disabled;
    else if (this.pressing_5qwbkq$_0)
      tmp$_1 = this.checkIcon_533w1e$_0.down;
    else if (this.over_sp3sdt$_0)
      tmp$_1 = this.checkIcon_533w1e$_0.over;
    else
      tmp$_1 = this.checkIcon_533w1e$_0.normal;
    tmp$_2.tex = tmp$_1;
    this.icon_slh3e4$_0.visible = this.checked;
    this.onChange.invoke_11rb$(this);
  };
  UICheckBox.prototype.updateText_wzm5ox$_0 = function () {
    var tmp$, tmp$_0;
    var tmp$_1;
    tmp$_1 = this.textView_80hlgt$_0;
    Html_getInstance();
    tmp$ = this.textFont;
    tmp$_0 = this.textSize;
    tmp$_1.format = new Html$Format(void 0, this.textColor, tmp$, tmp$_0, void 0, void 0, Html$Alignment$Companion_getInstance().MIDDLE_LEFT);
    var tmp$_2 = this.textView_80hlgt$_0;
    var width = this.width - this.height;
    var height = this.height;
    tmp$_2.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
    setText(this.textView_80hlgt$_0, this.text);
    xy(this.textView_80hlgt$_0, numberToDouble(this.height + 8.0), numberToDouble(0));
  };
  UICheckBox.prototype.onSizeChanged = function () {
    UIView.prototype.onSizeChanged.call(this);
    size(this.background_3zgkd3$_0, this.width, this.height);
    size(this.box_sexwis$_0, this.height, this.height);
    this.icon_slh3e4$_0.width = calculateWidth(this.checkIcon_533w1e$_0, this.height);
    this.icon_slh3e4$_0.height = calculateHeight(this.checkIcon_533w1e$_0, this.height);
    xy(this.textView_80hlgt$_0, numberToDouble(this.height + 8.0), numberToDouble(0));
    var tmp$ = this.textView_80hlgt$_0;
    var width = this.width - this.height - 8.0;
    var height = this.height;
    tmp$.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
  };
  function UICheckBox$checked$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateState();
      return Unit;
    };
  }
  function UICheckBox$text$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateText_wzm5ox$_0();
      return Unit;
    };
  }
  function UICheckBox$textFont$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateText_wzm5ox$_0();
      return Unit;
    };
  }
  function UICheckBox$textSize$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateText_wzm5ox$_0();
      return Unit;
    };
  }
  function UICheckBox$textColor$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateText_wzm5ox$_0();
      return Unit;
    };
  }
  function UICheckBox$over$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateState();
      return Unit;
    };
  }
  function UICheckBox$pressing$lambda(this$UICheckBox) {
    return function (it) {
      this$UICheckBox.updateState();
      return Unit;
    };
  }
  function Coroutine$UICheckBox_init$lambda$lambda(this$UICheckBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UICheckBox = this$UICheckBox_0;
  }
  Coroutine$UICheckBox_init$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UICheckBox_init$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UICheckBox_init$lambda$lambda.prototype.constructor = Coroutine$UICheckBox_init$lambda$lambda;
  Coroutine$UICheckBox_init$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UICheckBox.over_sp3sdt$_0 = true, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UICheckBox_init$lambda$lambda(this$UICheckBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UICheckBox_init$lambda$lambda(this$UICheckBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UICheckBox_init$lambda$lambda_0(this$UICheckBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UICheckBox = this$UICheckBox_0;
  }
  Coroutine$UICheckBox_init$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UICheckBox_init$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UICheckBox_init$lambda$lambda_0.prototype.constructor = Coroutine$UICheckBox_init$lambda$lambda_0;
  Coroutine$UICheckBox_init$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UICheckBox.over_sp3sdt$_0 = false, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UICheckBox_init$lambda$lambda_0(this$UICheckBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UICheckBox_init$lambda$lambda_0(this$UICheckBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UICheckBox_init$lambda$lambda_1(this$UICheckBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UICheckBox = this$UICheckBox_0;
  }
  Coroutine$UICheckBox_init$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UICheckBox_init$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UICheckBox_init$lambda$lambda_1.prototype.constructor = Coroutine$UICheckBox_init$lambda$lambda_1;
  Coroutine$UICheckBox_init$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UICheckBox.pressing_5qwbkq$_0 = true, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UICheckBox_init$lambda$lambda_1(this$UICheckBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UICheckBox_init$lambda$lambda_1(this$UICheckBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UICheckBox_init$lambda$lambda_2(this$UICheckBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UICheckBox = this$UICheckBox_0;
  }
  Coroutine$UICheckBox_init$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UICheckBox_init$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UICheckBox_init$lambda$lambda_2.prototype.constructor = Coroutine$UICheckBox_init$lambda$lambda_2;
  Coroutine$UICheckBox_init$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UICheckBox.pressing_5qwbkq$_0 = false, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UICheckBox_init$lambda$lambda_2(this$UICheckBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UICheckBox_init$lambda$lambda_2(this$UICheckBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UICheckBox_init$lambda$lambda_3(this$UICheckBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UICheckBox = this$UICheckBox_0;
  }
  Coroutine$UICheckBox_init$lambda$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UICheckBox_init$lambda$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UICheckBox_init$lambda$lambda_3.prototype.constructor = Coroutine$UICheckBox_init$lambda$lambda_3;
  Coroutine$UICheckBox_init$lambda$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UICheckBox.checked = !this.local$this$UICheckBox.checked, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UICheckBox_init$lambda$lambda_3(this$UICheckBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UICheckBox_init$lambda$lambda_3(this$UICheckBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  UICheckBox.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UICheckBox',
    interfaces: [UIView]
  };
  function Coroutine$doMouseEvent$lambda$lambda$lambda_3(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_3.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_3;
  Coroutine$doMouseEvent$lambda$lambda$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_3(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_3(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_3(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_3(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_4(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_4.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_4;
  Coroutine$doMouseEvent$lambda$lambda$lambda_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_4(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_4(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_4(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_4(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_5(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_5.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_5;
  Coroutine$doMouseEvent$lambda$lambda$lambda_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_5(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_5(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_5(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_5(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_6(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_6.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_6;
  Coroutine$doMouseEvent$lambda$lambda$lambda_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_6(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_6(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_6(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_6(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_7(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_7.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_7.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_7.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_7;
  Coroutine$doMouseEvent$lambda$lambda$lambda_7.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_7(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_7(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_7(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_7(closure$handler, it));
      return Unit;
    };
  }
  var uiComboBox = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiComboBox_wpdnfp$', wrapFunction(function () {
    var get_defaultComboBoxSkin = _.com.soywiz.korge.ui.get_defaultComboBoxSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UIComboBox_init = _.com.soywiz.korge.ui.UIComboBox;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiComboBox$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, selectedIndex, items, verticalScroll, skin, block) {
      if (selectedIndex === void 0)
        selectedIndex = 0;
      if (verticalScroll === void 0)
        verticalScroll = true;
      if (skin === void 0)
        skin = get_defaultComboBoxSkin($receiver);
      if (block === void 0)
        block = uiComboBox$lambda;
      var $receiver_0 = addTo(new UIComboBox_init(numberToDouble(width), numberToDouble(height), selectedIndex, items, verticalScroll, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiComboBox_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiComboBox_ceke0l$', wrapFunction(function () {
    var get_defaultComboBoxSkin = _.com.soywiz.korge.ui.get_defaultComboBoxSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIComboBox_init = _.com.soywiz.korge.ui.UIComboBox;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiComboBox$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, selectedIndex, items, verticalScroll, skin, block) {
      if (width === void 0)
        width = 192.0;
      if (height === void 0)
        height = 32.0;
      if (selectedIndex === void 0)
        selectedIndex = 0;
      if (verticalScroll === void 0)
        verticalScroll = true;
      if (skin === void 0)
        skin = get_defaultComboBoxSkin($receiver);
      if (block === void 0)
        block = uiComboBox$lambda;
      var $receiver_0 = addTo(new UIComboBox_init(width, height, selectedIndex, items, verticalScroll, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UIComboBox(width, height, selectedIndex, items, verticalScroll, skin) {
    if (width === void 0)
      width = 192.0;
    if (height === void 0)
      height = 32.0;
    if (selectedIndex === void 0)
      selectedIndex = 0;
    if (verticalScroll === void 0)
      verticalScroll = true;
    if (skin === void 0)
      skin = get_DefaultComboBoxSkin();
    UIView.call(this, width, height);
    this.skin_sl02le$_0 = skin;
    this.selectedIndex_h0r8xu$_0 = new UIObservable(selectedIndex, UIComboBox$selectedIndex$lambda(this));
    this.items_t44ytx$_0 = new UIObservable(items, UIComboBox$items$lambda(this));
    this.itemHeight_klev8b$_0 = new UIObservable(32, UIComboBox$itemHeight$lambda(this));
    this.viewportHeight_jz61vy$_0 = new UIObservable(196, UIComboBox$viewportHeight$lambda(this));
    var $receiver_1 = addTo(new UIScrollableArea(256.0, 256.0, 512.0, 512.0, 32.0, verticalScroll, false, get_defaultHorScrollBarSkin(this), get_defaultVerScrollBarSkin(this)), this);
    $receiver_1.visible = false;
    this.itemsView_aatltc$_0 = $receiver_1;
    this.selectedButton_cg5ar6$_0 = addTo(new TextButton(width - height, height, '', this.skin_sl02le$_0.selectedSkin, this.skin_sl02le$_0.textFont), this);
    this.expandButton_olb6dv$_0 = xy(addTo(new IconButton(height, height, this.skin_sl02le$_0.expandSkin, get_defaultCheckSkin(this)), this), numberToDouble(width - height), numberToDouble(0));
    this.invisibleRect_ww88hw$_0 = addTo(new SolidRect(width, height, color.Colors.TRANSPARENT_BLACK), this);
    this.showItems_t9bidq$_0 = false;
    this.onSelectionUpdate = new Signal();
    this.updateItems_f8hdxe$_0();
    var $receiver_2 = this.invisibleRect_ww88hw$_0;
    var prop = getPropertyCallableRef('over', 1, function ($receiver) {
      return $receiver.over;
    });
    var tmp$;
    if ((tmp$ = $receiver_2 != null ? get_mouse($receiver_2) : null) != null) {
      prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda_3(tmp$, UIComboBox_init$lambda(this)));
    }var $receiver_3 = this.invisibleRect_ww88hw$_0;
    var prop_0 = getPropertyCallableRef('out', 1, function ($receiver) {
      return $receiver.out;
    });
    var tmp$_0;
    if ((tmp$_0 = $receiver_3 != null ? get_mouse($receiver_3) : null) != null) {
      prop_0.get(tmp$_0).add_qlkmfe$(doMouseEvent$lambda$lambda_4(tmp$_0, UIComboBox_init$lambda_0(this)));
    }var $receiver_4 = this.invisibleRect_ww88hw$_0;
    var prop_1 = getPropertyCallableRef('down', 1, function ($receiver) {
      return $receiver.down;
    });
    var tmp$_1;
    if ((tmp$_1 = $receiver_4 != null ? get_mouse($receiver_4) : null) != null) {
      prop_1.get(tmp$_1).add_qlkmfe$(doMouseEvent$lambda$lambda_5(tmp$_1, UIComboBox_init$lambda_1(this)));
    }var $receiver_5 = this.invisibleRect_ww88hw$_0;
    var prop_2 = getPropertyCallableRef('up', 1, function ($receiver_0) {
      return $receiver_0.up;
    });
    var tmp$_2;
    if ((tmp$_2 = $receiver_5 != null ? get_mouse($receiver_5) : null) != null) {
      prop_2.get(tmp$_2).add_qlkmfe$(doMouseEvent$lambda$lambda_6(tmp$_2, UIComboBox_init$lambda_2(this)));
    }var $receiver_6 = this.invisibleRect_ww88hw$_0;
    var prop_3 = getPropertyCallableRef('click', 1, function ($receiver_0) {
      return $receiver_0.click;
    });
    var tmp$_3;
    if ((tmp$_3 = $receiver_6 != null ? get_mouse($receiver_6) : null) != null) {
      prop_3.get(tmp$_3).add_qlkmfe$(doMouseEvent$lambda$lambda_7(tmp$_3, UIComboBox_init$lambda_3(this)));
    }}
  var UIComboBox$selectedIndex_metadata = new PropertyMetadata('selectedIndex');
  Object.defineProperty(UIComboBox.prototype, 'selectedIndex', {
    get: function () {
      return this.selectedIndex_h0r8xu$_0.getValue_t0xcdd$(this, UIComboBox$selectedIndex_metadata);
    },
    set: function (selectedIndex) {
      this.selectedIndex_h0r8xu$_0.setValue_cvomos$(this, UIComboBox$selectedIndex_metadata, selectedIndex);
    }
  });
  Object.defineProperty(UIComboBox.prototype, 'selectedItem', {
    get: function () {
      return getOrNull(this.items, this.selectedIndex);
    },
    set: function (value) {
      this.selectedIndex = indexOf(this.items, value);
    }
  });
  var UIComboBox$items_metadata = new PropertyMetadata('items');
  Object.defineProperty(UIComboBox.prototype, 'items', {
    get: function () {
      return this.items_t44ytx$_0.getValue_t0xcdd$(this, UIComboBox$items_metadata);
    },
    set: function (items) {
      this.items_t44ytx$_0.setValue_cvomos$(this, UIComboBox$items_metadata, items);
    }
  });
  var UIComboBox$itemHeight_metadata = new PropertyMetadata('itemHeight');
  Object.defineProperty(UIComboBox.prototype, 'itemHeight', {
    get: function () {
      return this.itemHeight_klev8b$_0.getValue_t0xcdd$(this, UIComboBox$itemHeight_metadata);
    },
    set: function (itemHeight) {
      this.itemHeight_klev8b$_0.setValue_cvomos$(this, UIComboBox$itemHeight_metadata, itemHeight);
    }
  });
  var UIComboBox$viewportHeight_metadata = new PropertyMetadata('viewportHeight');
  Object.defineProperty(UIComboBox.prototype, 'viewportHeight', {
    get: function () {
      return this.viewportHeight_jz61vy$_0.getValue_t0xcdd$(this, UIComboBox$viewportHeight_metadata);
    },
    set: function (viewportHeight) {
      this.viewportHeight_jz61vy$_0.setValue_cvomos$(this, UIComboBox$viewportHeight_metadata, viewportHeight);
    }
  });
  UIComboBox.prototype.updateItemsSize_a0q62l$_0 = function () {
    var tmp$;
    if ((tmp$ = this.itemsView_aatltc$_0.container._children) != null) {
      var n = 0;
      while (n < tmp$.size) {
        var index = n;
        var child = tmp$.get_za3lpa$(n);
        child.height = this.itemHeight;
        position_0(child, 0, Kotlin.imul(index, this.itemHeight));
        n = n + 1 | 0;
      }
    }};
  function Coroutine$UIComboBox$updateItems$lambda$lambda(this$UIComboBox_0, closure$index_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
    this.local$closure$index = closure$index_0;
  }
  Coroutine$UIComboBox$updateItems$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox$updateItems$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox$updateItems$lambda$lambda.prototype.constructor = Coroutine$UIComboBox$updateItems$lambda$lambda;
  Coroutine$UIComboBox$updateItems$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.showItems_t9bidq$_0 = false;
            return this.local$this$UIComboBox.selectedIndex = this.local$closure$index, Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox$updateItems$lambda$lambda(this$UIComboBox_0, closure$index_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox$updateItems$lambda$lambda(this$UIComboBox_0, closure$index_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  UIComboBox.prototype.updateItems_f8hdxe$_0 = function () {
    this.itemsView_aatltc$_0.container.removeChildren();
    var index = 0;
    for (var tmp$ = this.items.iterator(); tmp$.hasNext(); ++index) {
      var item = tmp$.next();
      var $receiver = this.itemsView_aatltc$_0.container;
      var width = this.width - 32;
      var height = this.itemHeight;
      var text = toString(item);
      var skin = this.skin_sl02le$_0.itemSkin;
      var textFont = this.skin_sl02le$_0.textFont;
      var $receiver_1 = addTo(new TextButton(numberToDouble(width), numberToDouble(height), text, skin, textFont), $receiver);
      position_0($receiver_1, 0, Kotlin.imul(index, this.itemHeight));
      var prop = getPropertyCallableRef('click', 1, function ($receiver_0) {
        return $receiver_0.click;
      });
      var tmp$_0;
      if ((tmp$_0 = $receiver_1 != null ? get_mouse($receiver_1) : null) != null) {
        prop.get(tmp$_0).add_qlkmfe$(doMouseEvent$lambda$lambda_7(tmp$_0, UIComboBox$updateItems$lambda$lambda(this, index)));
      }}
    this.itemsView_aatltc$_0.contentHeight = Kotlin.imul(this.items.size, this.itemHeight);
    this.updateState();
  };
  UIComboBox.prototype.updateState = function () {
    var tmp$;
    this.onSizeChanged();
    tmp$ = this.items;
    for (var i = 0; i !== tmp$.size; ++i) {
      var tmp$_0, tmp$_1;
      tmp$_1 = Kotlin.isType(tmp$_0 = this.itemsView_aatltc$_0.container.getChildAtOrNull_za3lpa$(i), UIButton) ? tmp$_0 : null;
      if (tmp$_1 == null) {
        continue;
      }var button = tmp$_1;
      button.forcePressed = this.selectedIndex === i;
    }
    this.onSelectionUpdate.invoke_11rb$(this);
  };
  UIComboBox.prototype.onSizeChanged = function () {
    var tmp$, tmp$_0;
    UIView.prototype.onSizeChanged.call(this);
    this.itemsView_aatltc$_0.visible = this.showItems_t9bidq$_0;
    var $receiver = this.itemsView_aatltc$_0;
    var width = this.width;
    var height = this.viewportHeight;
    var $receiver_0 = size($receiver, numberToDouble(width), numberToDouble(height));
    var y = this.height;
    xy($receiver_0, numberToDouble(0), numberToDouble(y));
    this.selectedButton_cg5ar6$_0.simulatePressing_6taknv$(this.showItems_t9bidq$_0);
    this.expandButton_olb6dv$_0.simulatePressing_6taknv$(this.showItems_t9bidq$_0);
    this.expandButton_olb6dv$_0.skin = this.skin_sl02le$_0.expandSkin;
    this.expandButton_olb6dv$_0.iconSkin = this.showItems_t9bidq$_0 ? this.skin_sl02le$_0.hideIcon : this.skin_sl02le$_0.showIcon;
    size(this.invisibleRect_ww88hw$_0, this.width, this.height);
    size(this.selectedButton_cg5ar6$_0, this.width - this.height, this.height);
    this.selectedButton_cg5ar6$_0.text = (tmp$_0 = (tmp$ = this.selectedItem) != null ? tmp$.toString() : null) != null ? tmp$_0 : '';
    size(xy(this.expandButton_olb6dv$_0, numberToDouble(this.width - this.height), numberToDouble(0)), this.height, this.height);
  };
  function UIComboBox$selectedIndex$lambda(this$UIComboBox) {
    return function (it) {
      this$UIComboBox.updateState();
      return Unit;
    };
  }
  function UIComboBox$items$lambda(this$UIComboBox) {
    return function (it) {
      this$UIComboBox.updateItems_f8hdxe$_0();
      return Unit;
    };
  }
  function UIComboBox$itemHeight$lambda(this$UIComboBox) {
    return function (it) {
      this$UIComboBox.updateItemsSize_a0q62l$_0();
      return Unit;
    };
  }
  function UIComboBox$viewportHeight$lambda(this$UIComboBox) {
    return function (it) {
      this$UIComboBox.onSizeChanged();
      return Unit;
    };
  }
  function Coroutine$UIComboBox_init$lambda(this$UIComboBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
  }
  Coroutine$UIComboBox_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox_init$lambda.prototype.constructor = Coroutine$UIComboBox_init$lambda;
  Coroutine$UIComboBox_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.selectedButton_cg5ar6$_0.simulateOver();
            return this.local$this$UIComboBox.expandButton_olb6dv$_0.simulateOver(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox_init$lambda(this$UIComboBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox_init$lambda(this$UIComboBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIComboBox_init$lambda_0(this$UIComboBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
  }
  Coroutine$UIComboBox_init$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox_init$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox_init$lambda_0.prototype.constructor = Coroutine$UIComboBox_init$lambda_0;
  Coroutine$UIComboBox_init$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.selectedButton_cg5ar6$_0.simulateOut();
            return this.local$this$UIComboBox.expandButton_olb6dv$_0.simulateOut(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox_init$lambda_0(this$UIComboBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox_init$lambda_0(this$UIComboBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIComboBox_init$lambda_1(this$UIComboBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
  }
  Coroutine$UIComboBox_init$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox_init$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox_init$lambda_1.prototype.constructor = Coroutine$UIComboBox_init$lambda_1;
  Coroutine$UIComboBox_init$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.selectedButton_cg5ar6$_0.simulateDown();
            return this.local$this$UIComboBox.expandButton_olb6dv$_0.simulateDown(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox_init$lambda_1(this$UIComboBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox_init$lambda_1(this$UIComboBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIComboBox_init$lambda_2(this$UIComboBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
  }
  Coroutine$UIComboBox_init$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox_init$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox_init$lambda_2.prototype.constructor = Coroutine$UIComboBox_init$lambda_2;
  Coroutine$UIComboBox_init$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.selectedButton_cg5ar6$_0.simulateUp();
            return this.local$this$UIComboBox.expandButton_olb6dv$_0.simulateUp(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox_init$lambda_2(this$UIComboBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox_init$lambda_2(this$UIComboBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIComboBox_init$lambda_3(this$UIComboBox_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIComboBox = this$UIComboBox_0;
  }
  Coroutine$UIComboBox_init$lambda_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIComboBox_init$lambda_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIComboBox_init$lambda_3.prototype.constructor = Coroutine$UIComboBox_init$lambda_3;
  Coroutine$UIComboBox_init$lambda_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIComboBox.showItems_t9bidq$_0 = !this.local$this$UIComboBox.showItems_t9bidq$_0;
            return this.local$this$UIComboBox.onSizeChanged(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIComboBox_init$lambda_3(this$UIComboBox_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIComboBox_init$lambda_3(this$UIComboBox_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  UIComboBox.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIComboBox',
    interfaces: [UIView]
  };
  var uiObservable = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiObservable_7uhc0p$', wrapFunction(function () {
    var UIObservable_init = _.com.soywiz.korge.ui.UIObservable;
    return function (value, observe) {
      return new UIObservable_init(value, observe);
    };
  }));
  function UIObservable(initial, observe) {
    this.initial = initial;
    this.observe = observe;
    this.currentValue = this.initial;
  }
  UIObservable.prototype.getValue_t0xcdd$ = function (obj, prop) {
    return this.currentValue;
  };
  UIObservable.prototype.setValue_cvomos$ = function (obj, prop, value) {
    this.currentValue = value;
    this.observe(value);
  };
  UIObservable.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIObservable',
    interfaces: []
  };
  var uiProgressBar = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiProgressBar_qqs6v7$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UIProgressBar_init = _.com.soywiz.korge.ui.UIProgressBar;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiProgressBar$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, current, maximum, skin, block) {
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (block === void 0)
        block = uiProgressBar$lambda;
      var $receiver_0 = addTo(new UIProgressBar_init(numberToDouble(width), numberToDouble(height), numberToDouble(current), numberToDouble(maximum), skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiProgressBar_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiProgressBar_nezu8z$', wrapFunction(function () {
    var get_defaultUISkin = _.com.soywiz.korge.ui.get_defaultUISkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIProgressBar_init = _.com.soywiz.korge.ui.UIProgressBar;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiProgressBar$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, current, maximum, skin, block) {
      if (width === void 0)
        width = 256.0;
      if (height === void 0)
        height = 24.0;
      if (current === void 0)
        current = 0.0;
      if (maximum === void 0)
        maximum = 1.0;
      if (skin === void 0)
        skin = get_defaultUISkin($receiver);
      if (block === void 0)
        block = uiProgressBar$lambda;
      var $receiver_0 = addTo(new UIProgressBar_init(width, height, current, maximum, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UIProgressBar(width, height, current, maximum, skin) {
    if (width === void 0)
      width = 256.0;
    if (height === void 0)
      height = 24.0;
    if (current === void 0)
      current = 0.0;
    if (maximum === void 0)
      maximum = 1.0;
    if (skin === void 0)
      skin = get_DefaultUISkin();
    UIView.call(this, width, height);
    this.current_lvs3en$_0 = new UIObservable(current, UIProgressBar$current$lambda(this));
    this.maximum_j9jzi0$_0 = new UIObservable(maximum, UIProgressBar$maximum$lambda(this));
    this.skin_jy1dtt$_0 = new UIObservable(skin, UIProgressBar$skin$lambda(this));
    this.background_5w8jvy$_0 = addTo(new SolidRect(width, height, skin.backColor), this);
    this.progressView_r6nmui$_0 = addTo(new NinePatch(skin.normal, width * current / maximum, height, 1.0 / 4.0, 1.0 / 4.0, 3.0 / 4.0, 3.0 / 4.0), this);
  }
  var UIProgressBar$current_metadata = new PropertyMetadata('current');
  Object.defineProperty(UIProgressBar.prototype, 'current', {
    get: function () {
      return this.current_lvs3en$_0.getValue_t0xcdd$(this, UIProgressBar$current_metadata);
    },
    set: function (current) {
      this.current_lvs3en$_0.setValue_cvomos$(this, UIProgressBar$current_metadata, current);
    }
  });
  var UIProgressBar$maximum_metadata = new PropertyMetadata('maximum');
  Object.defineProperty(UIProgressBar.prototype, 'maximum', {
    get: function () {
      return this.maximum_j9jzi0$_0.getValue_t0xcdd$(this, UIProgressBar$maximum_metadata);
    },
    set: function (maximum) {
      this.maximum_j9jzi0$_0.setValue_cvomos$(this, UIProgressBar$maximum_metadata, maximum);
    }
  });
  var UIProgressBar$skin_metadata = new PropertyMetadata('skin');
  Object.defineProperty(UIProgressBar.prototype, 'skin', {
    get: function () {
      return this.skin_jy1dtt$_0.getValue_t0xcdd$(this, UIProgressBar$skin_metadata);
    },
    set: function (skin) {
      this.skin_jy1dtt$_0.setValue_cvomos$(this, UIProgressBar$skin_metadata, skin);
    }
  });
  Object.defineProperty(UIProgressBar.prototype, 'ratio', {
    get: function () {
      return this.current / this.maximum;
    },
    set: function (value) {
      this.current = value * this.maximum;
    }
  });
  Object.defineProperty(UIProgressBar.prototype, 'progressView', {
    get: function () {
      return this.progressView_r6nmui$_0;
    }
  });
  UIProgressBar.prototype.onSizeChanged = function () {
    size(this.background_5w8jvy$_0, this.width, this.height);
    this.updateState();
  };
  UIProgressBar.prototype.updateState = function () {
    size(this.progressView, this.width * this.ratio, this.height);
  };
  UIProgressBar.prototype.onSkinChanged = function () {
    var tmp$, tmp$_0;
    (tmp$_0 = Kotlin.isType(tmp$ = this.progressView, NinePatch) ? tmp$ : null) != null ? (tmp$_0.tex = this.skin.normal) : null;
    this.background_5w8jvy$_0.color = this.skin.backColor;
  };
  function UIProgressBar$current$lambda(this$UIProgressBar) {
    return function (it) {
      this$UIProgressBar.updateState();
      return Unit;
    };
  }
  function UIProgressBar$maximum$lambda(this$UIProgressBar) {
    return function (it) {
      this$UIProgressBar.updateState();
      return Unit;
    };
  }
  function UIProgressBar$skin$lambda(this$UIProgressBar) {
    return function (it) {
      this$UIProgressBar.background_5w8jvy$_0.color = it.backColor;
      this$UIProgressBar.onSkinChanged();
      return Unit;
    };
  }
  UIProgressBar.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIProgressBar',
    interfaces: [UIView]
  };
  function Coroutine$doMouseEvent$lambda$lambda$lambda_8(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_8.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_8;
  Coroutine$doMouseEvent$lambda$lambda$lambda_8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_8(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_8(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_8(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_8(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$doMouseEvent$lambda$lambda$lambda_9(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$doMouseEvent$lambda$lambda$lambda_9.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$doMouseEvent$lambda$lambda$lambda_9.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$doMouseEvent$lambda$lambda$lambda_9.prototype.constructor = Coroutine$doMouseEvent$lambda$lambda$lambda_9;
  Coroutine$doMouseEvent$lambda$lambda$lambda_9.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function doMouseEvent$lambda$lambda$lambda_9(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$doMouseEvent$lambda$lambda$lambda_9(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function doMouseEvent$lambda$lambda_9(closure$mouse, closure$handler) {
    return function (it) {
      launchImmediately_0(closure$mouse.coroutineContext, doMouseEvent$lambda$lambda$lambda_9(closure$handler, it));
      return Unit;
    };
  }
  var uiScrollBar = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiScrollBar_wq53w0$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var UIScrollBar$Direction = _.com.soywiz.korge.ui.UIScrollBar.Direction;
    var get_defaultHorScrollBarSkin = _.com.soywiz.korge.ui.get_defaultHorScrollBarSkin_gohfi1$;
    var get_defaultVerScrollBarSkin = _.com.soywiz.korge.ui.get_defaultVerScrollBarSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIScrollBar_init = _.com.soywiz.korge.ui.UIScrollBar;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiScrollBar$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, current, pageSize, totalSize, buttonSize, stepSize, direction, skin, block) {
      if (direction === void 0)
        direction = numberToDouble(width) > numberToDouble(height) ? UIScrollBar$Direction.Horizontal : UIScrollBar$Direction.Vertical;
      if (skin === void 0)
        skin = direction === UIScrollBar$Direction.Horizontal ? get_defaultHorScrollBarSkin($receiver) : get_defaultVerScrollBarSkin($receiver);
      if (block === void 0)
        block = uiScrollBar$lambda;
      var $receiver_0 = addTo(new UIScrollBar_init(numberToDouble(width), numberToDouble(height), numberToDouble(current), numberToDouble(pageSize), numberToDouble(totalSize), numberToDouble(buttonSize), numberToDouble(stepSize), direction, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiScrollBar_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiScrollBar_xq768o$', wrapFunction(function () {
    var UIScrollBar$Direction = _.com.soywiz.korge.ui.UIScrollBar.Direction;
    var get_defaultHorScrollBarSkin = _.com.soywiz.korge.ui.get_defaultHorScrollBarSkin_gohfi1$;
    var get_defaultVerScrollBarSkin = _.com.soywiz.korge.ui.get_defaultVerScrollBarSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIScrollBar_init = _.com.soywiz.korge.ui.UIScrollBar;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiScrollBar$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, current, pageSize, totalSize, buttonSize, stepSize, direction, skin, block) {
      if (current === void 0)
        current = 0.0;
      if (pageSize === void 0)
        pageSize = 1.0;
      if (totalSize === void 0)
        totalSize = 10.0;
      if (buttonSize === void 0)
        buttonSize = 32.0;
      if (stepSize === void 0)
        stepSize = pageSize / 10.0;
      if (direction === void 0)
        direction = UIScrollBar$Direction.Companion.auto_lu1900$(width, height);
      if (skin === void 0)
        skin = direction === UIScrollBar$Direction.Horizontal ? get_defaultHorScrollBarSkin($receiver) : get_defaultVerScrollBarSkin($receiver);
      if (block === void 0)
        block = uiScrollBar$lambda;
      var $receiver_0 = addTo(new UIScrollBar_init(width, height, current, pageSize, totalSize, buttonSize, stepSize, direction, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UIScrollBar(width, height, current, pageSize, totalSize, buttonSize, stepSize, direction, skin) {
    if (buttonSize === void 0)
      buttonSize = 32.0;
    if (stepSize === void 0)
      stepSize = pageSize / 10.0;
    if (direction === void 0)
      direction = UIScrollBar$Direction$Companion_getInstance().auto_lu1900$(width, height);
    if (skin === void 0)
      skin = direction === UIScrollBar$Direction$Horizontal_getInstance() ? get_DefaultHorScrollBarSkin() : get_DefaultVerScrollBarSkin();
    UIView.call(this);
    this.stepSize = stepSize;
    this.width_rf6xfy$_0 = new UIObservable(width, UIScrollBar$width$lambda(this));
    this.height_6lw0gb$_0 = new UIObservable(height, UIScrollBar$height$lambda(this));
    this.buttonSize_l8ncp5$_0 = new UIObservable(buttonSize, UIScrollBar$buttonSize$lambda(this));
    this.direction_gsqwt5$_0 = new UIObservable(direction, UIScrollBar$direction$lambda(this));
    this.current_wda89r$_0 = new UIObservable(current, UIScrollBar$current$lambda(this));
    this.pageSize_ck5x70$_0 = new UIObservable(pageSize, UIScrollBar$pageSize$lambda(this));
    this.totalSize_18cwhf$_0 = new UIObservable(totalSize, UIScrollBar$totalSize$lambda(this));
    this.buttonVisible_y40m20$_0 = new UIObservable(true, UIScrollBar$buttonVisible$lambda(this));
    this.onChange = new Signal();
    var color = skin.backColor;
    this.background = addTo(new SolidRect(numberToDouble(100), numberToDouble(100), color), this);
    var skin_0 = skin.upSkin;
    var iconSkin = skin.upIcon;
    this.upButton = addTo(new IconButton(numberToDouble(16), numberToDouble(16), skin_0, iconSkin), this);
    var skin_1 = skin.downSkin;
    var iconSkin_0 = skin.downIcon;
    this.downButton = addTo(new IconButton(numberToDouble(16), numberToDouble(16), skin_1, iconSkin_0), this);
    var skin_2 = skin.thumbSkin;
    this.thumb = addTo(new UIButton(numberToDouble(16), numberToDouble(16), skin_2), this);
    this.reshape();
    var $receiver_0 = this.upButton;
    var prop = getPropertyCallableRef('down', 1, function ($receiver) {
      return $receiver.down;
    });
    var tmp$;
    if ((tmp$ = $receiver_0 != null ? get_mouse($receiver_0) : null) != null) {
      prop.get(tmp$).add_qlkmfe$(doMouseEvent$lambda$lambda_8(tmp$, UIScrollBar_init$lambda(this)));
    }var $receiver_1 = this.downButton;
    var prop_0 = getPropertyCallableRef('down', 1, function ($receiver) {
      return $receiver.down;
    });
    var tmp$_0;
    if ((tmp$_0 = $receiver_1 != null ? get_mouse($receiver_1) : null) != null) {
      prop_0.get(tmp$_0).add_qlkmfe$(doMouseEvent$lambda$lambda_8(tmp$_0, UIScrollBar_init$lambda_0(this)));
    }var $receiver_2 = this.background;
    var prop_1 = getPropertyCallableRef('click', 1, function ($receiver_0) {
      return $receiver_0.click;
    });
    var tmp$_1;
    if ((tmp$_1 = $receiver_2 != null ? get_mouse($receiver_2) : null) != null) {
      prop_1.get(tmp$_1).add_qlkmfe$(doMouseEvent$lambda$lambda_9(tmp$_1, UIScrollBar_init$lambda_1(this)));
    }var tempP = Point.Companion.invoke();
    var initRatio = {v: 0.0};
    var startRatio = {v: 0.0};
    onMouseDrag(this.thumb, UIScrollBar_init$lambda_2(this, tempP, initRatio, startRatio));
  }
  function UIScrollBar$Direction(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function UIScrollBar$Direction_initFields() {
    UIScrollBar$Direction_initFields = function () {
    };
    UIScrollBar$Direction$Vertical_instance = new UIScrollBar$Direction('Vertical', 0);
    UIScrollBar$Direction$Horizontal_instance = new UIScrollBar$Direction('Horizontal', 1);
    UIScrollBar$Direction$Companion_getInstance();
  }
  var UIScrollBar$Direction$Vertical_instance;
  function UIScrollBar$Direction$Vertical_getInstance() {
    UIScrollBar$Direction_initFields();
    return UIScrollBar$Direction$Vertical_instance;
  }
  var UIScrollBar$Direction$Horizontal_instance;
  function UIScrollBar$Direction$Horizontal_getInstance() {
    UIScrollBar$Direction_initFields();
    return UIScrollBar$Direction$Horizontal_instance;
  }
  function UIScrollBar$Direction$Companion() {
    UIScrollBar$Direction$Companion_instance = this;
  }
  UIScrollBar$Direction$Companion.prototype.auto_lu1900$ = function (width, height) {
    return width > height ? UIScrollBar$Direction$Horizontal_getInstance() : UIScrollBar$Direction$Vertical_getInstance();
  };
  UIScrollBar$Direction$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var UIScrollBar$Direction$Companion_instance = null;
  function UIScrollBar$Direction$Companion_getInstance() {
    UIScrollBar$Direction_initFields();
    if (UIScrollBar$Direction$Companion_instance === null) {
      new UIScrollBar$Direction$Companion();
    }return UIScrollBar$Direction$Companion_instance;
  }
  UIScrollBar$Direction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Direction',
    interfaces: [Enum]
  };
  function UIScrollBar$Direction$values() {
    return [UIScrollBar$Direction$Vertical_getInstance(), UIScrollBar$Direction$Horizontal_getInstance()];
  }
  UIScrollBar$Direction.values = UIScrollBar$Direction$values;
  function UIScrollBar$Direction$valueOf(name) {
    switch (name) {
      case 'Vertical':
        return UIScrollBar$Direction$Vertical_getInstance();
      case 'Horizontal':
        return UIScrollBar$Direction$Horizontal_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.ui.UIScrollBar.Direction.' + name);
    }
  }
  UIScrollBar$Direction.valueOf_61zpoe$ = UIScrollBar$Direction$valueOf;
  var UIScrollBar$width_metadata = new PropertyMetadata('width');
  Object.defineProperty(UIScrollBar.prototype, 'width', {
    get: function () {
      return this.width_rf6xfy$_0.getValue_t0xcdd$(this, UIScrollBar$width_metadata);
    },
    set: function (width) {
      this.width_rf6xfy$_0.setValue_cvomos$(this, UIScrollBar$width_metadata, width);
    }
  });
  var UIScrollBar$height_metadata = new PropertyMetadata('height');
  Object.defineProperty(UIScrollBar.prototype, 'height', {
    get: function () {
      return this.height_6lw0gb$_0.getValue_t0xcdd$(this, UIScrollBar$height_metadata);
    },
    set: function (height) {
      this.height_6lw0gb$_0.setValue_cvomos$(this, UIScrollBar$height_metadata, height);
    }
  });
  var UIScrollBar$buttonSize_metadata = new PropertyMetadata('buttonSize');
  Object.defineProperty(UIScrollBar.prototype, 'buttonSize', {
    get: function () {
      return this.buttonSize_l8ncp5$_0.getValue_t0xcdd$(this, UIScrollBar$buttonSize_metadata);
    },
    set: function (buttonSize) {
      this.buttonSize_l8ncp5$_0.setValue_cvomos$(this, UIScrollBar$buttonSize_metadata, buttonSize);
    }
  });
  var UIScrollBar$direction_metadata = new PropertyMetadata('direction');
  Object.defineProperty(UIScrollBar.prototype, 'direction', {
    get: function () {
      return this.direction_gsqwt5$_0.getValue_t0xcdd$(this, UIScrollBar$direction_metadata);
    },
    set: function (direction) {
      this.direction_gsqwt5$_0.setValue_cvomos$(this, UIScrollBar$direction_metadata, direction);
    }
  });
  var UIScrollBar$current_metadata = new PropertyMetadata('current');
  Object.defineProperty(UIScrollBar.prototype, 'current', {
    get: function () {
      return this.current_wda89r$_0.getValue_t0xcdd$(this, UIScrollBar$current_metadata);
    },
    set: function (current) {
      this.current_wda89r$_0.setValue_cvomos$(this, UIScrollBar$current_metadata, current);
    }
  });
  var UIScrollBar$pageSize_metadata = new PropertyMetadata('pageSize');
  Object.defineProperty(UIScrollBar.prototype, 'pageSize', {
    get: function () {
      return this.pageSize_ck5x70$_0.getValue_t0xcdd$(this, UIScrollBar$pageSize_metadata);
    },
    set: function (pageSize) {
      this.pageSize_ck5x70$_0.setValue_cvomos$(this, UIScrollBar$pageSize_metadata, pageSize);
    }
  });
  var UIScrollBar$totalSize_metadata = new PropertyMetadata('totalSize');
  Object.defineProperty(UIScrollBar.prototype, 'totalSize', {
    get: function () {
      return this.totalSize_18cwhf$_0.getValue_t0xcdd$(this, UIScrollBar$totalSize_metadata);
    },
    set: function (totalSize) {
      this.totalSize_18cwhf$_0.setValue_cvomos$(this, UIScrollBar$totalSize_metadata, totalSize);
    }
  });
  var UIScrollBar$buttonVisible_metadata = new PropertyMetadata('buttonVisible');
  Object.defineProperty(UIScrollBar.prototype, 'buttonVisible', {
    get: function () {
      return this.buttonVisible_y40m20$_0.getValue_t0xcdd$(this, UIScrollBar$buttonVisible_metadata);
    },
    set: function (buttonVisible) {
      this.buttonVisible_y40m20$_0.setValue_cvomos$(this, UIScrollBar$buttonVisible_metadata, buttonVisible);
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'isHorizontal', {
    get: function () {
      return this.direction === UIScrollBar$Direction$Horizontal_getInstance();
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'isVertical', {
    get: function () {
      return this.direction === UIScrollBar$Direction$Vertical_getInstance();
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'buttonWidth', {
    get: function () {
      return !this.buttonVisible ? 0.0 : this.isHorizontal ? this.buttonSize : this.width;
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'buttonHeight', {
    get: function () {
      return !this.buttonVisible ? 0.0 : this.isHorizontal ? this.height : this.buttonSize;
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'trackWidth', {
    get: function () {
      return this.isHorizontal ? this.width - this.buttonWidth * 2 : this.width;
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'trackHeight', {
    get: function () {
      return this.isHorizontal ? this.height : this.height - this.buttonHeight * 2;
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'ratio', {
    get: function () {
      return clamp01(this.current / (this.totalSize - this.pageSize));
    },
    set: function (value) {
      this.current = clamp01(value) * (this.totalSize - this.pageSize);
    }
  });
  Object.defineProperty(UIScrollBar.prototype, 'views', {
    get: function () {
      var tmp$;
      return (tmp$ = this.stage) != null ? tmp$.views : null;
    }
  });
  UIScrollBar.prototype.changeCurrent_14dthe$ = function (value) {
    this.current = clamp_0(this.current + value, 0.0, this.totalSize - this.pageSize);
  };
  UIScrollBar.prototype.reshape = function () {
    if (this.isHorizontal) {
      size(xy(this.background, numberToDouble(this.buttonWidth), numberToDouble(0)), this.trackWidth, this.trackHeight);
      size(position_0(this.upButton, 0, 0), this.buttonWidth, this.buttonHeight);
      size(xy(this.downButton, numberToDouble(this.width - this.buttonWidth), numberToDouble(0)), this.buttonWidth, this.buttonHeight);
    } else {
      var $receiver = this.background;
      var y = this.buttonHeight;
      size(xy($receiver, numberToDouble(0), numberToDouble(y)), this.trackWidth, this.trackHeight);
      size(position_0(this.upButton, 0, 0), this.buttonWidth, this.buttonHeight);
      var $receiver_0 = this.downButton;
      var y_0 = this.height - this.buttonHeight;
      size(xy($receiver_0, numberToDouble(0), numberToDouble(y_0)), this.buttonWidth, this.buttonHeight);
    }
    this.updatePosition();
  };
  UIScrollBar.prototype.updatePosition = function () {
    if (this.isHorizontal) {
      var thumbWidth = clamp_0(this.trackWidth * (this.pageSize / this.totalSize), 4.0, this.trackWidth);
      size(xy(this.thumb, numberToDouble(this.buttonWidth + (this.trackWidth - thumbWidth) * this.ratio), numberToDouble(0)), thumbWidth, this.trackHeight);
    } else {
      var thumbHeight = clamp_0(this.trackHeight * (this.pageSize / this.totalSize), 4.0, this.trackHeight);
      var $receiver = this.thumb;
      var y = this.buttonHeight + (this.trackHeight - thumbHeight) * this.ratio;
      size(xy($receiver, numberToDouble(0), numberToDouble(y)), this.trackWidth, thumbHeight);
    }
    this.onChange.invoke_11rb$(this);
  };
  function UIScrollBar$width$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  function UIScrollBar$height$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  function UIScrollBar$buttonSize$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  function UIScrollBar$direction$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  function UIScrollBar$current$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.updatePosition();
      return Unit;
    };
  }
  function UIScrollBar$pageSize$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.updatePosition();
      return Unit;
    };
  }
  function UIScrollBar$totalSize$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.updatePosition();
      return Unit;
    };
  }
  function UIScrollBar$buttonVisible$lambda(this$UIScrollBar) {
    return function (it) {
      this$UIScrollBar.upButton.visible = it;
      this$UIScrollBar.downButton.visible = it;
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  function Coroutine$UIScrollBar_init$lambda(this$UIScrollBar_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIScrollBar = this$UIScrollBar_0;
  }
  Coroutine$UIScrollBar_init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIScrollBar_init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIScrollBar_init$lambda.prototype.constructor = Coroutine$UIScrollBar_init$lambda;
  Coroutine$UIScrollBar_init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIScrollBar.changeCurrent_14dthe$(-this.local$this$UIScrollBar.stepSize);
            return this.local$this$UIScrollBar.reshape(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIScrollBar_init$lambda(this$UIScrollBar_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIScrollBar_init$lambda(this$UIScrollBar_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIScrollBar_init$lambda_0(this$UIScrollBar_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIScrollBar = this$UIScrollBar_0;
  }
  Coroutine$UIScrollBar_init$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIScrollBar_init$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIScrollBar_init$lambda_0.prototype.constructor = Coroutine$UIScrollBar_init$lambda_0;
  Coroutine$UIScrollBar_init$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$this$UIScrollBar.changeCurrent_14dthe$(+this.local$this$UIScrollBar.stepSize);
            return this.local$this$UIScrollBar.reshape(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIScrollBar_init$lambda_0(this$UIScrollBar_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIScrollBar_init$lambda_0(this$UIScrollBar_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIScrollBar_init$lambda_1(this$UIScrollBar_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIScrollBar = this$UIScrollBar_0;
  }
  Coroutine$UIScrollBar_init$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIScrollBar_init$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIScrollBar_init$lambda_1.prototype.constructor = Coroutine$UIScrollBar_init$lambda_1;
  Coroutine$UIScrollBar_init$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var pos = this.local$this$UIScrollBar.isHorizontal ? this.local$this$UIScrollBar.thumb.localMouseX_gohfjx$(ensureNotNull(this.local$this$UIScrollBar.views)) : this.local$this$UIScrollBar.thumb.localMouseY_gohfjx$(ensureNotNull(this.local$this$UIScrollBar.views));
            return this.local$this$UIScrollBar.changeCurrent_14dthe$(Math_0.sign(pos) * 0.8 * this.local$this$UIScrollBar.pageSize), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIScrollBar_init$lambda_1(this$UIScrollBar_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIScrollBar_init$lambda_1(this$UIScrollBar_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function UIScrollBar_init$lambda_2(this$UIScrollBar, closure$tempP, closure$initRatio, closure$startRatio) {
    return function ($receiver, it) {
      var lmouse = this$UIScrollBar.background.localMouseXY_mv18lt$($receiver.views, closure$tempP);
      var curPosition = this$UIScrollBar.isHorizontal ? lmouse.x : lmouse.y;
      var size = this$UIScrollBar.isHorizontal ? this$UIScrollBar.background.width - this$UIScrollBar.thumb.width : this$UIScrollBar.background.height - this$UIScrollBar.thumb.height;
      var curRatio = curPosition / size;
      if (it.start) {
        closure$initRatio.v = this$UIScrollBar.ratio;
        closure$startRatio.v = curRatio;
      }this$UIScrollBar.ratio = closure$initRatio.v + (curRatio - closure$startRatio.v);
      this$UIScrollBar.reshape();
      return Unit;
    };
  }
  UIScrollBar.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIScrollBar',
    interfaces: [UIView]
  };
  var uiScrollableArea = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiScrollableArea_fclc0n$', wrapFunction(function () {
    var get_defaultHorScrollBarSkin = _.com.soywiz.korge.ui.get_defaultHorScrollBarSkin_gohfi1$;
    var get_defaultVerScrollBarSkin = _.com.soywiz.korge.ui.get_defaultVerScrollBarSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UIScrollableArea_init = _.com.soywiz.korge.ui.UIScrollableArea;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiScrollableArea$lambda($receiver) {
      return Unit;
    }
    function uiScrollableArea$lambda_0($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, contentWidth, contentHeight, buttonSize, verticalScroll, horizontalScroll, horSkin, verSkin, config, block) {
      if (contentWidth === void 0)
        contentWidth = 512.0;
      if (contentHeight === void 0)
        contentHeight = 512.0;
      if (buttonSize === void 0)
        buttonSize = 32.0;
      if (verticalScroll === void 0)
        verticalScroll = true;
      if (horizontalScroll === void 0)
        horizontalScroll = true;
      if (horSkin === void 0)
        horSkin = get_defaultHorScrollBarSkin($receiver);
      if (verSkin === void 0)
        verSkin = get_defaultVerScrollBarSkin($receiver);
      if (config === void 0)
        config = uiScrollableArea$lambda;
      if (block === void 0)
        block = uiScrollableArea$lambda_0;
      var $receiver_0 = addTo(new UIScrollableArea_init(numberToDouble(width), numberToDouble(height), numberToDouble(contentWidth), numberToDouble(contentHeight), numberToDouble(buttonSize), verticalScroll, horizontalScroll, horSkin, verSkin), $receiver);
      config($receiver_0);
      block($receiver_0.container);
      return $receiver_0;
    };
  }));
  var uiScrollableArea_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiScrollableArea_g817i9$', wrapFunction(function () {
    var get_defaultHorScrollBarSkin = _.com.soywiz.korge.ui.get_defaultHorScrollBarSkin_gohfi1$;
    var get_defaultVerScrollBarSkin = _.com.soywiz.korge.ui.get_defaultVerScrollBarSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIScrollableArea_init = _.com.soywiz.korge.ui.UIScrollableArea;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiScrollableArea$lambda($receiver) {
      return Unit;
    }
    function uiScrollableArea$lambda_0($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, contentWidth, contentHeight, buttonSize, verticalScroll, horizontalScroll, horSkin, verSkin, config, block) {
      if (width === void 0)
        width = 256.0;
      if (height === void 0)
        height = 256.0;
      if (contentWidth === void 0)
        contentWidth = 512.0;
      if (contentHeight === void 0)
        contentHeight = 512.0;
      if (buttonSize === void 0)
        buttonSize = 32.0;
      if (verticalScroll === void 0)
        verticalScroll = true;
      if (horizontalScroll === void 0)
        horizontalScroll = true;
      if (horSkin === void 0)
        horSkin = get_defaultHorScrollBarSkin($receiver);
      if (verSkin === void 0)
        verSkin = get_defaultVerScrollBarSkin($receiver);
      if (config === void 0)
        config = uiScrollableArea$lambda;
      if (block === void 0)
        block = uiScrollableArea$lambda_0;
      var $receiver_0 = addTo(new UIScrollableArea_init(width, height, contentWidth, contentHeight, buttonSize, verticalScroll, horizontalScroll, horSkin, verSkin), $receiver);
      config($receiver_0);
      block($receiver_0.container);
      return $receiver_0;
    };
  }));
  function UIScrollableArea(width, height, contentWidth, contentHeight, buttonSize, verticalScroll, horizontalScroll, horSkin, verSkin) {
    if (width === void 0)
      width = 256.0;
    if (height === void 0)
      height = 256.0;
    if (contentWidth === void 0)
      contentWidth = 512.0;
    if (contentHeight === void 0)
      contentHeight = 512.0;
    if (buttonSize === void 0)
      buttonSize = 32.0;
    if (verticalScroll === void 0)
      verticalScroll = true;
    if (horizontalScroll === void 0)
      horizontalScroll = true;
    if (horSkin === void 0)
      horSkin = get_DefaultHorScrollBarSkin();
    if (verSkin === void 0)
      verSkin = get_DefaultVerScrollBarSkin();
    UIView.call(this, width, height);
    this.buttonSize_ibqse5$_0 = new UIObservable(buttonSize, UIScrollableArea$buttonSize$lambda(this));
    this.contentWidth_fws495$_0 = new UIObservable(contentWidth, UIScrollableArea$contentWidth$lambda(this));
    this.contentHeight_cvuldu$_0 = new UIObservable(contentHeight, UIScrollableArea$contentHeight$lambda(this));
    this.verticalScroll_qjvbv1$_0 = new UIObservable(verticalScroll, UIScrollableArea$verticalScroll$lambda(this));
    this.horizontalScroll_9lm6kl$_0 = new UIObservable(horizontalScroll, UIScrollableArea$horizontalScroll$lambda(this));
    this.stepRatio_xp6q2p$_0 = new UIObservable(0.1, UIScrollableArea$stepRatio$lambda(this));
    this.clipContainer = addTo(new ClipContainer(this.viewportWidth, this.viewportHeight), this);
    var $receiver = this.clipContainer;
    this.container = addTo(new FixedSizeContainer(contentWidth, contentHeight, false), $receiver);
    var width_0 = width;
    var height_0 = buttonSize;
    var skin = horSkin;
    var $receiver_0 = addTo(new UIScrollBar(width_0, height_0, 0.0, 1.0, 10.0, 32.0, 1.0 / 10.0, UIScrollBar$Direction.Companion.auto_lu1900$(width_0, height_0), skin), this);
    $receiver_0.onChange.invoke_qlkmfe$(UIScrollableArea$horScrollBar$lambda$lambda(this));
    this.horScrollBar = $receiver_0;
    var width_1 = buttonSize;
    var height_1 = height;
    var skin_0 = verSkin;
    var $receiver_1 = addTo(new UIScrollBar(width_1, height_1, 0.0, 1.0, 10.0, 32.0, 1.0 / 10.0, UIScrollBar$Direction.Companion.auto_lu1900$(width_1, height_1), skin_0), this);
    $receiver_1.onChange.invoke_qlkmfe$(UIScrollableArea$verScrollBar$lambda$lambda(this));
    this.verScrollBar = $receiver_1;
    this.calculateSizes_hmxk7q$_0();
  }
  var UIScrollableArea$buttonSize_metadata = new PropertyMetadata('buttonSize');
  Object.defineProperty(UIScrollableArea.prototype, 'buttonSize', {
    get: function () {
      return this.buttonSize_ibqse5$_0.getValue_t0xcdd$(this, UIScrollableArea$buttonSize_metadata);
    },
    set: function (buttonSize) {
      this.buttonSize_ibqse5$_0.setValue_cvomos$(this, UIScrollableArea$buttonSize_metadata, buttonSize);
    }
  });
  var UIScrollableArea$contentWidth_metadata = new PropertyMetadata('contentWidth');
  Object.defineProperty(UIScrollableArea.prototype, 'contentWidth', {
    get: function () {
      return this.contentWidth_fws495$_0.getValue_t0xcdd$(this, UIScrollableArea$contentWidth_metadata);
    },
    set: function (contentWidth) {
      this.contentWidth_fws495$_0.setValue_cvomos$(this, UIScrollableArea$contentWidth_metadata, contentWidth);
    }
  });
  var UIScrollableArea$contentHeight_metadata = new PropertyMetadata('contentHeight');
  Object.defineProperty(UIScrollableArea.prototype, 'contentHeight', {
    get: function () {
      return this.contentHeight_cvuldu$_0.getValue_t0xcdd$(this, UIScrollableArea$contentHeight_metadata);
    },
    set: function (contentHeight) {
      this.contentHeight_cvuldu$_0.setValue_cvomos$(this, UIScrollableArea$contentHeight_metadata, contentHeight);
    }
  });
  var UIScrollableArea$verticalScroll_metadata = new PropertyMetadata('verticalScroll');
  Object.defineProperty(UIScrollableArea.prototype, 'verticalScroll', {
    get: function () {
      return this.verticalScroll_qjvbv1$_0.getValue_t0xcdd$(this, UIScrollableArea$verticalScroll_metadata);
    },
    set: function (verticalScroll) {
      this.verticalScroll_qjvbv1$_0.setValue_cvomos$(this, UIScrollableArea$verticalScroll_metadata, verticalScroll);
    }
  });
  var UIScrollableArea$horizontalScroll_metadata = new PropertyMetadata('horizontalScroll');
  Object.defineProperty(UIScrollableArea.prototype, 'horizontalScroll', {
    get: function () {
      return this.horizontalScroll_9lm6kl$_0.getValue_t0xcdd$(this, UIScrollableArea$horizontalScroll_metadata);
    },
    set: function (horizontalScroll) {
      this.horizontalScroll_9lm6kl$_0.setValue_cvomos$(this, UIScrollableArea$horizontalScroll_metadata, horizontalScroll);
    }
  });
  var UIScrollableArea$stepRatio_metadata = new PropertyMetadata('stepRatio');
  Object.defineProperty(UIScrollableArea.prototype, 'stepRatio', {
    get: function () {
      return this.stepRatio_xp6q2p$_0.getValue_t0xcdd$(this, UIScrollableArea$stepRatio_metadata);
    },
    set: function (stepRatio) {
      this.stepRatio_xp6q2p$_0.setValue_cvomos$(this, UIScrollableArea$stepRatio_metadata, stepRatio);
    }
  });
  Object.defineProperty(UIScrollableArea.prototype, 'viewportWidth', {
    get: function () {
      return this.verticalScroll ? this.width - this.buttonSize : this.width;
    }
  });
  Object.defineProperty(UIScrollableArea.prototype, 'viewportHeight', {
    get: function () {
      return this.horizontalScroll ? this.height - this.buttonSize : this.height;
    }
  });
  UIScrollableArea.prototype.onSizeChanged = function () {
    UIView.prototype.onSizeChanged.call(this);
    this.calculateSizes_hmxk7q$_0();
  };
  UIScrollableArea.prototype.calculateSizes_hmxk7q$_0 = function () {
    this.horScrollBar.totalSize = this.contentWidth;
    this.horScrollBar.pageSize = this.viewportWidth;
    this.horScrollBar.stepSize = this.viewportWidth * this.stepRatio;
    this.verScrollBar.totalSize = this.contentHeight;
    this.verScrollBar.pageSize = this.viewportHeight;
    this.verScrollBar.stepSize = this.viewportHeight * this.stepRatio;
    size(this.clipContainer, this.viewportWidth, this.viewportHeight);
    size(this.container, this.contentWidth, this.contentHeight);
    size(this.horScrollBar, this.viewportWidth, this.buttonSize);
    var $receiver = this.horScrollBar;
    var y = this.height - this.buttonSize;
    xy($receiver, numberToDouble(0), numberToDouble(y));
    this.horScrollBar.visible = this.horizontalScroll;
    size(this.verScrollBar, this.buttonSize, this.viewportHeight);
    xy(this.verScrollBar, numberToDouble(this.width - this.buttonSize), numberToDouble(0));
    this.verScrollBar.visible = this.verticalScroll;
  };
  UIScrollableArea.prototype.onMoved = function () {
    this.container.x = -this.horScrollBar.current;
    this.container.y = -this.verScrollBar.current;
  };
  function UIScrollableArea$buttonSize$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$contentWidth$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$contentHeight$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$verticalScroll$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$horizontalScroll$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$stepRatio$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onSizeChanged();
      return Unit;
    };
  }
  function UIScrollableArea$horScrollBar$lambda$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onMoved();
      return Unit;
    };
  }
  function UIScrollableArea$verScrollBar$lambda$lambda(this$UIScrollableArea) {
    return function (it) {
      this$UIScrollableArea.onMoved();
      return Unit;
    };
  }
  UIScrollableArea.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIScrollableArea',
    interfaces: [UIView]
  };
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_14(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_14(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_14(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_14(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_15(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_15(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_15(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_15(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_16(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_16(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_16(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_16(closure$handler, it));
      return Unit;
    };
  }
  function Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17(closure$handler_0, closure$it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$it = closure$it_0;
  }
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17.prototype.constructor = Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17;
  Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MouseEvents$_mouseEvent$lambda$lambda_17(closure$handler_0, closure$it_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$MouseEvents$_mouseEvent$lambda$lambda_17(closure$handler_0, closure$it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function MouseEvents$_mouseEvent$lambda_17(this$MouseEvents, closure$handler) {
    return function (it) {
      launchImmediately_0(this$MouseEvents.coroutineContext, MouseEvents$_mouseEvent$lambda$lambda_17(closure$handler, it));
      return Unit;
    };
  }
  var uiText = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiText_585i6l$', wrapFunction(function () {
    var get_defaultTextSkin = _.com.soywiz.korge.ui.get_defaultTextSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var UIText_init = _.com.soywiz.korge.ui.UIText;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiText$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, text, width, height, skin, block) {
      if (skin === void 0)
        skin = get_defaultTextSkin($receiver);
      if (block === void 0)
        block = uiText$lambda;
      var $receiver_0 = addTo(new UIText_init(text, numberToDouble(width), numberToDouble(height), skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  var uiText_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.ui.uiText_1ezp37$', wrapFunction(function () {
    var get_defaultTextSkin = _.com.soywiz.korge.ui.get_defaultTextSkin_gohfi1$;
    var Unit = Kotlin.kotlin.Unit;
    var UIText_init = _.com.soywiz.korge.ui.UIText;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function uiText$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, text, width, height, skin, block) {
      if (width === void 0)
        width = 128.0;
      if (height === void 0)
        height = 64.0;
      if (skin === void 0)
        skin = get_defaultTextSkin($receiver);
      if (block === void 0)
        block = uiText$lambda;
      var $receiver_0 = addTo(new UIText_init(text, width, height, skin), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function UIText(text, width, height, skin) {
    if (width === void 0)
      width = 128.0;
    if (height === void 0)
      height = 64.0;
    if (skin === void 0)
      skin = get_DefaultTextSkin();
    UIView.call(this, width, height);
    this.skin_0 = skin;
    this.text_p9qjzy$_0 = new UIObservable(text, UIText$text$lambda(this));
    this.textColor_ngy5kh$_0 = new UIObservable(this.skin_0.normal.color, UIText$textColor$lambda(this));
    this.textSize_fius01$_0 = new UIObservable(this.skin_0.normal.size, UIText$textSize$lambda(this));
    this.textFont_fbt1o3$_0 = new UIObservable(this.skin_0.normal.font, UIText$textFont$lambda(this));
    this.textAlignment_lhkxf5$_0 = new UIObservable(Html$Alignment$Companion_getInstance().MIDDLE_CENTER, UIText$textAlignment$lambda(this));
    this.bover_aezf3l$_0 = new UIObservable(false, UIText$bover$lambda(this));
    this.bpressing_otkim4$_0 = new UIObservable(false, UIText$bpressing$lambda(this));
    this.background_0 = addTo(new SolidRect(width, height, this.skin_0.backColor), this);
    var color_0;
    var font;
    color_0 = color.Colors.WHITE;
    font = Fonts.Companion.defaultFont;
    this.textView_0 = addTo(Text.Companion.invoke_8ii8iq$(text, 16.0, color_0, font), this);
    var $receiver_0 = get_mouse(this);
    getPropertyCallableRef('over', 1, function ($receiver_0) {
      return $receiver_0.over;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_14($receiver_0, UIText_init$lambda$lambda(this)));
    getPropertyCallableRef('out', 1, function ($receiver_0) {
      return $receiver_0.out;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_15($receiver_0, UIText_init$lambda$lambda_0(this)));
    getPropertyCallableRef('down', 1, function ($receiver_0) {
      return $receiver_0.down;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_16($receiver_0, UIText_init$lambda$lambda_1(this)));
    getPropertyCallableRef('upAnywhere', 1, function ($receiver_0) {
      return $receiver_0.upAnywhere;
    }).get($receiver_0).add_qlkmfe$(MouseEvents$_mouseEvent$lambda_17($receiver_0, UIText_init$lambda$lambda_2(this)));
    this.updateText_0();
  }
  var UIText$text_metadata = new PropertyMetadata('text');
  Object.defineProperty(UIText.prototype, 'text', {
    get: function () {
      return this.text_p9qjzy$_0.getValue_t0xcdd$(this, UIText$text_metadata);
    },
    set: function (text) {
      this.text_p9qjzy$_0.setValue_cvomos$(this, UIText$text_metadata, text);
    }
  });
  var UIText$textColor_metadata = new PropertyMetadata('textColor');
  Object.defineProperty(UIText.prototype, 'textColor', {
    get: function () {
      return this.textColor_ngy5kh$_0.getValue_t0xcdd$(this, UIText$textColor_metadata);
    },
    set: function (textColor) {
      this.textColor_ngy5kh$_0.setValue_cvomos$(this, UIText$textColor_metadata, textColor);
    }
  });
  var UIText$textSize_metadata = new PropertyMetadata('textSize');
  Object.defineProperty(UIText.prototype, 'textSize', {
    get: function () {
      return this.textSize_fius01$_0.getValue_t0xcdd$(this, UIText$textSize_metadata);
    },
    set: function (textSize) {
      this.textSize_fius01$_0.setValue_cvomos$(this, UIText$textSize_metadata, textSize);
    }
  });
  var UIText$textFont_metadata = new PropertyMetadata('textFont');
  Object.defineProperty(UIText.prototype, 'textFont', {
    get: function () {
      return this.textFont_fbt1o3$_0.getValue_t0xcdd$(this, UIText$textFont_metadata);
    },
    set: function (textFont) {
      this.textFont_fbt1o3$_0.setValue_cvomos$(this, UIText$textFont_metadata, textFont);
    }
  });
  var UIText$textAlignment_metadata = new PropertyMetadata('textAlignment');
  Object.defineProperty(UIText.prototype, 'textAlignment', {
    get: function () {
      return this.textAlignment_lhkxf5$_0.getValue_t0xcdd$(this, UIText$textAlignment_metadata);
    },
    set: function (textAlignment) {
      this.textAlignment_lhkxf5$_0.setValue_cvomos$(this, UIText$textAlignment_metadata, textAlignment);
    }
  });
  var UIText$bover_metadata = new PropertyMetadata('bover');
  Object.defineProperty(UIText.prototype, 'bover_0', {
    get: function () {
      return this.bover_aezf3l$_0.getValue_t0xcdd$(this, UIText$bover_metadata);
    },
    set: function (bover) {
      this.bover_aezf3l$_0.setValue_cvomos$(this, UIText$bover_metadata, bover);
    }
  });
  var UIText$bpressing_metadata = new PropertyMetadata('bpressing');
  Object.defineProperty(UIText.prototype, 'bpressing_0', {
    get: function () {
      return this.bpressing_otkim4$_0.getValue_t0xcdd$(this, UIText$bpressing_metadata);
    },
    set: function (bpressing) {
      this.bpressing_otkim4$_0.setValue_cvomos$(this, UIText$bpressing_metadata, bpressing);
    }
  });
  UIText.prototype.simulateOver = function () {
    this.bover_0 = true;
  };
  UIText.prototype.simulateOut = function () {
    this.bover_0 = false;
  };
  UIText.prototype.simulatePressing_6taknv$ = function (value) {
    this.bpressing_0 = value;
  };
  UIText.prototype.simulateDown = function () {
    this.bpressing_0 = true;
  };
  UIText.prototype.simulateUp = function () {
    this.bpressing_0 = false;
  };
  UIText.prototype.updateState = function () {
    var tmp$;
    if (!this.enabled)
      tmp$ = this.skin_0.disabled;
    else if (this.bpressing_0)
      tmp$ = this.skin_0.down;
    else if (this.bover_0)
      tmp$ = this.skin_0.over;
    else
      tmp$ = this.skin_0.normal;
    var tmp$_0 = tmp$;
    var color = tmp$_0.component1()
    , size = tmp$_0.component2()
    , font = tmp$_0.component3();
    this.textColor = color;
    this.textSize = size;
    this.textFont = font;
    this.updateText_0();
  };
  UIText.prototype.updateText_0 = function () {
    var tmp$, tmp$_0;
    var tmp$_1;
    tmp$_1 = this.textView_0;
    Html_getInstance();
    tmp$ = this.textFont;
    tmp$_0 = this.textSize;
    tmp$_1.format = new Html$Format(void 0, this.textColor, tmp$, tmp$_0, void 0, void 0, this.textAlignment);
    var tmp$_2 = this.textView_0;
    var width = this.width;
    var height = this.height;
    tmp$_2.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
    setText(this.textView_0, this.text);
  };
  UIText.prototype.onSizeChanged = function () {
    UIView.prototype.onSizeChanged.call(this);
    size(this.background_0, this.width, this.height);
    var tmp$ = this.textView_0;
    var width = this.width;
    var height = this.height;
    tmp$.setTextBounds_2da8yn$(new Rectangle(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height)));
  };
  function UIText$text$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateText_0();
      return Unit;
    };
  }
  function UIText$textColor$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateText_0();
      return Unit;
    };
  }
  function UIText$textSize$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateText_0();
      return Unit;
    };
  }
  function UIText$textFont$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateText_0();
      return Unit;
    };
  }
  function UIText$textAlignment$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateText_0();
      return Unit;
    };
  }
  function UIText$bover$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateState();
      return Unit;
    };
  }
  function UIText$bpressing$lambda(this$UIText) {
    return function (it) {
      this$UIText.updateState();
      return Unit;
    };
  }
  function Coroutine$UIText_init$lambda$lambda(this$UIText_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIText = this$UIText_0;
  }
  Coroutine$UIText_init$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIText_init$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIText_init$lambda$lambda.prototype.constructor = Coroutine$UIText_init$lambda$lambda;
  Coroutine$UIText_init$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIText.simulateOver(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIText_init$lambda$lambda(this$UIText_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIText_init$lambda$lambda(this$UIText_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIText_init$lambda$lambda_0(this$UIText_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIText = this$UIText_0;
  }
  Coroutine$UIText_init$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIText_init$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIText_init$lambda$lambda_0.prototype.constructor = Coroutine$UIText_init$lambda$lambda_0;
  Coroutine$UIText_init$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIText.simulateOut(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIText_init$lambda$lambda_0(this$UIText_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIText_init$lambda$lambda_0(this$UIText_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIText_init$lambda$lambda_1(this$UIText_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIText = this$UIText_0;
  }
  Coroutine$UIText_init$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIText_init$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIText_init$lambda$lambda_1.prototype.constructor = Coroutine$UIText_init$lambda$lambda_1;
  Coroutine$UIText_init$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIText.simulateDown(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIText_init$lambda$lambda_1(this$UIText_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIText_init$lambda$lambda_1(this$UIText_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$UIText_init$lambda$lambda_2(this$UIText_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$UIText = this$UIText_0;
  }
  Coroutine$UIText_init$lambda$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIText_init$lambda$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIText_init$lambda$lambda_2.prototype.constructor = Coroutine$UIText_init$lambda$lambda_2;
  Coroutine$UIText_init$lambda$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$UIText.simulateUp(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIText_init$lambda$lambda_2(this$UIText_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$UIText_init$lambda$lambda_2(this$UIText_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  UIText.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIText',
    interfaces: [UIView]
  };
  function UIView(width, height) {
    if (width === void 0)
      width = 90.0;
    if (height === void 0)
      height = 32.0;
    Container.call(this);
    this.width_d5qevb$_0 = new UIObservable(width, UIView$width$lambda(this));
    this.height_r57ebk$_0 = new UIObservable(height, UIView$height$lambda(this));
    this.registered_upbn0l$_0 = false;
  }
  var UIView$width_metadata = new PropertyMetadata('width');
  Object.defineProperty(UIView.prototype, 'width', {
    get: function () {
      return this.width_d5qevb$_0.getValue_t0xcdd$(this, UIView$width_metadata);
    },
    set: function (width) {
      this.width_d5qevb$_0.setValue_cvomos$(this, UIView$width_metadata, width);
    }
  });
  var UIView$height_metadata = new PropertyMetadata('height');
  Object.defineProperty(UIView.prototype, 'height', {
    get: function () {
      return this.height_r57ebk$_0.getValue_t0xcdd$(this, UIView$height_metadata);
    },
    set: function (height) {
      this.height_r57ebk$_0.setValue_cvomos$(this, UIView$height_metadata, height);
    }
  });
  Object.defineProperty(UIView.prototype, 'enabled', {
    get: function () {
      return this.mouseEnabled;
    },
    set: function (value) {
      this.mouseEnabled = value;
      this.updateState();
    }
  });
  UIView.prototype.enable_6taknv$ = function (set) {
    if (set === void 0)
      set = true;
    this.enabled = set;
  };
  UIView.prototype.disable = function () {
    this.enabled = false;
  };
  UIView.prototype.onSizeChanged = function () {
  };
  UIView.prototype.updateState = function () {
  };
  UIView.prototype.renderInternal_8isv09$ = function (ctx) {
    this.registerUISupportOnce_n74oac$_0();
    Container.prototype.renderInternal_8isv09$.call(this, ctx);
  };
  function Coroutine$UIView$registerUISupportOnce$lambda$lambda(it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$UIView$registerUISupportOnce$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UIView$registerUISupportOnce$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UIView$registerUISupportOnce$lambda$lambda.prototype.constructor = Coroutine$UIView$registerUISupportOnce$lambda$lambda;
  Coroutine$UIView$registerUISupportOnce$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UIView$registerUISupportOnce$lambda$lambda(it_0, continuation_0, suspended) {
    var instance = new Coroutine$UIView$registerUISupportOnce$lambda$lambda(it_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  UIView.prototype.registerUISupportOnce_n74oac$_0 = function () {
    var tmp$;
    if (this.registered_upbn0l$_0)
      return;
    tmp$ = this.stage;
    if (tmp$ == null) {
      return;
    }var stage = tmp$;
    this.registered_upbn0l$_0 = true;
    if (equals(getExtra(stage, 'uiSupport'), true))
      return;
    setExtra(stage, 'uiSupport', true);
    get_keys(stage).onKeyDown.invoke_25kf2w$(UIView$registerUISupportOnce$lambda$lambda);
    var $this = stage.componentsSure;
    var clazz = getKClass(DummyUpdateComponentWithViews);
    var array = $this.eupdateWV;
    var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
    if (component == null) {
      component = new DummyUpdateComponentWithViews(stage);
      var element = component;
      array.add_11rb$(element);
    }Kotlin.isType(component, DummyUpdateComponentWithViews) || throwCCE();
  };
  function UIView$width$lambda(this$UIView) {
    return function (it) {
      this$UIView.onSizeChanged();
      return Unit;
    };
  }
  function UIView$height$lambda(this$UIView) {
    return function (it) {
      this$UIView.onSizeChanged();
      return Unit;
    };
  }
  UIView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UIView',
    interfaces: [Container]
  };
  function DummyUpdateComponentWithViews(view) {
    this.view_9od16n$_0 = view;
  }
  Object.defineProperty(DummyUpdateComponentWithViews.prototype, 'view', {
    get: function () {
      return this.view_9od16n$_0;
    }
  });
  DummyUpdateComponentWithViews.prototype.update_vcgvf3$ = function (views, ms) {
  };
  DummyUpdateComponentWithViews.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DummyUpdateComponentWithViews',
    interfaces: [UpdateComponentWithViews]
  };
  function defaultTextSkin$lambda() {
    return get_DefaultTextSkin();
  }
  var defaultTextSkin;
  var defaultTextSkin_metadata = new PropertyMetadata('defaultTextSkin');
  function get_defaultTextSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultTextSkin.name) != null ? tmp$ : defaultTextSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultTextSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultTextSkin.name) != null ? tmp$_3 : defaultTextSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultTextSkin($receiver, defaultTextSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultTextSkin.name) != null ? tmp$ : defaultTextSkin_metadata.callableName, (tmp$_0 = defaultTextSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultUIFont$lambda() {
    return get_DefaultUIFont();
  }
  var defaultUIFont;
  var defaultUIFont_metadata = new PropertyMetadata('defaultUIFont');
  function get_defaultUIFont($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultUIFont.name) != null ? tmp$ : defaultUIFont_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultUIFont.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultUIFont.name) != null ? tmp$_3 : defaultUIFont_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultUIFont($receiver, defaultUIFont_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultUIFont.name) != null ? tmp$ : defaultUIFont_metadata.callableName, (tmp$_0 = defaultUIFont_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultUISkin$lambda() {
    return get_DefaultUISkin();
  }
  var defaultUISkin;
  var defaultUISkin_metadata = new PropertyMetadata('defaultUISkin');
  function get_defaultUISkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultUISkin.name) != null ? tmp$ : defaultUISkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultUISkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultUISkin.name) != null ? tmp$_3 : defaultUISkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultUISkin($receiver, defaultUISkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultUISkin.name) != null ? tmp$ : defaultUISkin_metadata.callableName, (tmp$_0 = defaultUISkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultCheckSkin$lambda() {
    return get_DefaultCheckSkin();
  }
  var defaultCheckSkin;
  var defaultCheckSkin_metadata = new PropertyMetadata('defaultCheckSkin');
  function get_defaultCheckSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultCheckSkin.name) != null ? tmp$ : defaultCheckSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultCheckSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultCheckSkin.name) != null ? tmp$_3 : defaultCheckSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultCheckSkin($receiver, defaultCheckSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultCheckSkin.name) != null ? tmp$ : defaultCheckSkin_metadata.callableName, (tmp$_0 = defaultCheckSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultUpSkin$lambda() {
    return get_DefaultUpSkin();
  }
  var defaultUpSkin;
  var defaultUpSkin_metadata = new PropertyMetadata('defaultUpSkin');
  function get_defaultUpSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultUpSkin.name) != null ? tmp$ : defaultUpSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultUpSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultUpSkin.name) != null ? tmp$_3 : defaultUpSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultUpSkin($receiver, defaultUpSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultUpSkin.name) != null ? tmp$ : defaultUpSkin_metadata.callableName, (tmp$_0 = defaultUpSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultDownSkin$lambda() {
    return get_DefaultDownSkin();
  }
  var defaultDownSkin;
  var defaultDownSkin_metadata = new PropertyMetadata('defaultDownSkin');
  function get_defaultDownSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultDownSkin.name) != null ? tmp$ : defaultDownSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultDownSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultDownSkin.name) != null ? tmp$_3 : defaultDownSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultDownSkin($receiver, defaultDownSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultDownSkin.name) != null ? tmp$ : defaultDownSkin_metadata.callableName, (tmp$_0 = defaultDownSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultLeftSkin$lambda() {
    return get_DefaultLeftSkin();
  }
  var defaultLeftSkin;
  var defaultLeftSkin_metadata = new PropertyMetadata('defaultLeftSkin');
  function get_defaultLeftSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultLeftSkin.name) != null ? tmp$ : defaultLeftSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultLeftSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultLeftSkin.name) != null ? tmp$_3 : defaultLeftSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultLeftSkin($receiver, defaultLeftSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultLeftSkin.name) != null ? tmp$ : defaultLeftSkin_metadata.callableName, (tmp$_0 = defaultLeftSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultRightSkin$lambda() {
    return get_DefaultRightSkin();
  }
  var defaultRightSkin;
  var defaultRightSkin_metadata = new PropertyMetadata('defaultRightSkin');
  function get_defaultRightSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultRightSkin.name) != null ? tmp$ : defaultRightSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultRightSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultRightSkin.name) != null ? tmp$_3 : defaultRightSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultRightSkin($receiver, defaultRightSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultRightSkin.name) != null ? tmp$ : defaultRightSkin_metadata.callableName, (tmp$_0 = defaultRightSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultComboBoxSkin$lambda() {
    return get_DefaultComboBoxSkin();
  }
  var defaultComboBoxSkin;
  var defaultComboBoxSkin_metadata = new PropertyMetadata('defaultComboBoxSkin');
  function get_defaultComboBoxSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultComboBoxSkin.name) != null ? tmp$ : defaultComboBoxSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultComboBoxSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultComboBoxSkin.name) != null ? tmp$_3 : defaultComboBoxSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultComboBoxSkin($receiver, defaultComboBoxSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultComboBoxSkin.name) != null ? tmp$ : defaultComboBoxSkin_metadata.callableName, (tmp$_0 = defaultComboBoxSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultVerScrollBarSkin$lambda() {
    return get_DefaultVerScrollBarSkin();
  }
  var defaultVerScrollBarSkin;
  var defaultVerScrollBarSkin_metadata = new PropertyMetadata('defaultVerScrollBarSkin');
  function get_defaultVerScrollBarSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultVerScrollBarSkin.name) != null ? tmp$ : defaultVerScrollBarSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultVerScrollBarSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultVerScrollBarSkin.name) != null ? tmp$_3 : defaultVerScrollBarSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultVerScrollBarSkin($receiver, defaultVerScrollBarSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultVerScrollBarSkin.name) != null ? tmp$ : defaultVerScrollBarSkin_metadata.callableName, (tmp$_0 = defaultVerScrollBarSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function defaultHorScrollBarSkin$lambda() {
    return get_DefaultHorScrollBarSkin();
  }
  var defaultHorScrollBarSkin;
  var defaultHorScrollBarSkin_metadata = new PropertyMetadata('defaultHorScrollBarSkin');
  function get_defaultHorScrollBarSkin($receiver) {
    var getValue_jvq2vc$result;
    getValue_jvq2vc$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = defaultHorScrollBarSkin.name) != null ? tmp$ : defaultHorScrollBarSkin_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = defaultHorScrollBarSkin.defaultGen();
        var tmp$_3, tmp$_4;
        setExtra($receiver, (tmp$_3 = defaultHorScrollBarSkin.name) != null ? tmp$_3 : defaultHorScrollBarSkin_metadata.callableName, (tmp$_4 = r) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE());
        getValue_jvq2vc$result = r;
        break getValue_jvq2vc$break;
      }getValue_jvq2vc$result = res;
    }
     while (false);
    return getValue_jvq2vc$result;
  }
  function set_defaultHorScrollBarSkin($receiver, defaultHorScrollBarSkin_0) {
    var tmp$, tmp$_0;
    setExtra($receiver, (tmp$ = defaultHorScrollBarSkin.name) != null ? tmp$ : defaultHorScrollBarSkin_metadata.callableName, (tmp$_0 = defaultHorScrollBarSkin_0) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE());
  }
  function DefaultTextSkin$lambda() {
    return new TextSkin(new TextFormat(RGBA.Companion.invoke_qt1dr2$(0, 0, 0), 16, new Html$FontFace$Bitmap(Fonts$Companion_getInstance().defaultFont)), new TextFormat(RGBA.Companion.invoke_qt1dr2$(80, 80, 80), 16, new Html$FontFace$Bitmap(Fonts$Companion_getInstance().defaultFont)), new TextFormat(RGBA.Companion.invoke_qt1dr2$(120, 120, 120), 16, new Html$FontFace$Bitmap(Fonts$Companion_getInstance().defaultFont)), new TextFormat(RGBA.Companion.invoke_qt1dr2$(160, 160, 160), 16, new Html$FontFace$Bitmap(Fonts$Companion_getInstance().defaultFont)), color.Colors.WHITE);
  }
  var DefaultTextSkin;
  function get_DefaultTextSkin() {
    return DefaultTextSkin.value;
  }
  function DefaultUIFont$lambda() {
    return new Html$FontFace$Bitmap(get_debugBmpFont());
  }
  var DefaultUIFont;
  function get_DefaultUIFont() {
    return DefaultUIFont.value;
  }
  function DEFAULT_UI_SKIN_IMG$lambda() {
    return format.PNG.decode_pdgdrr$(fromBase64('iVBORw0KGgoAAAANSUhEUgAAAQAAAADvCAMAAAAqyfq3AAABZVBMVEVHcExLS0tJSEt2dnZfX19jY2NKSktdXV5nZ2diYmN2dnZ3d3d2dnZCQEl1dXVLS01KSkpKSkp1dXV3d3d3d3d3d3dMTExMTEx3d3dMS010dHQ8OkRMTExMTExMTEx3d3dLSVRqampqamo8OkQ8OkRWVlZLS09jY2NLS0tSUlLX19c8OkR3d3dMTExqampLSVV0dHRJSUnw8PD4+Pinp6fKysqkpKSsrK3k5OTz8/P29vaenp76+vrMzMy7u7vOzs6VlZXU1NShoaG2t7eqqqrt7e3CwsKampvd3d3r6+u8vLywsLDb29vp6eni4uLn5+d6enuKi4uioqKYmJicnJzS0tLQ0NCurq65ubm+vr7FxcXGxsaysrO1tbXAwMDe3t7o6OiSkpLg4OCBgYNtbW2RkZH7+/uPj5BwcHCEhISGhoZYWFvIyMh+fn7Z2dm/v7/R0dFpaWljY2OdnZ1eXmKFhIlsa3KAF7cYAAAAKnRSTlMAoIqSDwqUBwIDpZ1wWLqpunGJ7kpjZ319S7Df77P7+97fV6r4+/MbQ6BTT4lFAAAMfklEQVR42u2d+VfUOhvHO2vbGcaBgWEZkU0Px4PDsAgq+CoCKldF2YTrer24XATUewdH//63SSeZdG+f5hxtwnf8gQPNke8naZM8eZ6iKEhq6fLFK9ci6MrFyyVVoYrfvjw2E0WTY2VL+4nCeCOKPo4XJpj2pYvXosqwe7HEqb02FM19W2ND5P+fGG80G9HUbDbGJ9rN9fQ1oNI6n/YzQLXbVxpAVXB7Bfz7Gw64tJ8BC7cH+282K3j84l9lY3XpegTNr27gZiXafmr5nwian+q0x1ZOW2eR1DrFzYz2E9jMVGRhBMZdoKL7t7WyfD3Sx/i30jIaXlTN9gf/i6yDdnt8/7eaR1H1ASEYU9VxkP02gnHV7MA7ywB9wV2I2x9cB+iO2R77P/sUXR/wEJhoxAHQmFAuG7/F3hJAy/M/jKaXUfuN5YgDCH+WcPsyGv/NQ4h+Gk3LNbB/RKBZU9AI3ocAWJp/i8Ywaj8FGUDLS+uoPboDzu6BdILugfFYABrjClq/PJqH6AG6B66g9vMwAOgeuILGcRMG4BCtiBrxADQUdCM+AOnRIpnNlmAjaAW1xQD2YEJtuQB4BNLTL7wANH41gKcgbb0mAOZht9AdAuDjBkzcAGyBdOthTACLFMBzmLgBuAXSMwogzjMEA7gNEzcA72H6lwCI8wxBJj6vwcQNwLv3kM8fLwmAOM8QDGAXJm4ANkH6dpcA+BukrVcUwA2YuAH4tgn5TL0gAOI8RJGJ2QWYuAGANV9dJwDiPER/CwCrIO2/IQCegWQ+RJGJ+n2YuAH4D6QVCgA2ibx7SQHchIkbgBWQ7jwhAN6BtPmYANj+EyZuABZB+nKTAIDNIpt3KYAnMHED8AWk1/cJgDizCAbwBiZuAF5B9PrhAgEA/P/XCYCvb2HiBuAhSH/diAdg9S0B8GEdJm4A/gXp5S4BEGcaxQBewMQNwGOQ7q4RAPsgHXQA3IWJGwAY//XvBMABSCtPCIDjlzBxAwC7A99uEABx1hHIxMlfMHEDAJyF9giAOyAt3qQAYE/hh9wAwJYhf94jAOIspJCJnVcwcQMAXIofEgBxFlIYwGuYuAGA7cUWjggA2K//aoEC+LII+nADANyOUwCwAfyQAjiC3UOL3ADAAlK7OwRAnJUkBgCbRla4AQAGZSkA2CT2kgL4BFtIHHADAIvKf/9BAMCWMY/XCIBD2FJynxsA4MnUMQEAW0q/oADuwTYTq9wAAM8mPxAAwL3MbQoAaIAbANjx/L2v8QCsPycA9r7BxA0AKEHl8NM2AbD+FvIx9xIYADCmxg3AEUwUACic8+YNBbDxB0zcAOzAVCcAYHupJ3sEwHNYWPndLwZwMksAxNlMIRPf3z8DfbgBODk5jv7v5PgzAQCL6t+kAG7DjpaecQNwDBMFANtM3j8kANZubYE+3AB8gOknAQA82juiAGDHy1vcAHyFqREPwAIFsAvLsHjKDcA2TE0CIM52Gpm4AcuxefSLAdQpAGCCxw4FAMuyesANQB2ms3gAdimABVie3Tw3ALMwUQCwFKfbvwcAlOz8GeS/0SLJ0s9B8ZQ9FE+4MoluAViuLb4FPsYFgNLdm58hap2SdPkjUDxlZ5uky2/AAExxSZdHBQ+nHwE6a82QgomfEABHP1qkYGIblG6/vBazYOKr0bRmlsycRbbfODs97ZTMnHyPqudHP+qdkpl9iP99PiUzuOhprtWMJsM+9t8umpo5jhZM2/v047g+0yma+rkaveRo6menaGoW4v+zWTTVLnubO42oaWvZXKsebRldb1nL5nY3l6O4X97ctZbNbUe1v90wB4DMhZONRsUsnc1Df/+8zqc91H+7fQZaOZrR4cXP12IWT1vaA4unS0zxNEC0ePqXl89r0cvnZ+zl87WIDMZrbPl8oIYu9Ye+tq9WVURTz9zcXD7ktV3GIjkjoP+wBLrwNiEjoP9wBLraG6WMgP7n5npC+5+d7RLQ/9xYeP+zvQL6D7wHGP+zFQH9d6vh/V9Qz/2f+0+OsqnhvB7Sf67Qm9FF899tGCzrofxnLxgGa7p4/l0IuPb/BWyxoIvn30HAs/9dCCT6+ZenNi0EXJ9/GWrTQiDZz/+xOTcC7s//3lk3Agmf//oZqynNf/6rMlYLmijz/4CTgOf8P+gkIMD6J20n4LP+qdgJCLH+sxHwXf/ZCAiy/rUQCFj/sgSKwqz/WQJB6/+K+2F5wvc/6dD+PQgkff+npUP7Z9dDIu1/86H9uxAQYv+fD+3fQUCQ+Ed+Lnz8IyOgfwuBoPgPS0AY/4qWD+1fUYri+TeUCu2fEhDKf5tAdzhPRQH9YwIh/StaUUD/inJ1SAt9bV+fpoip/vD5EEq1KqD/kZHQBKqjo8IR6J82FJJAF8qbr4rW/whAuDHQNYoAiDUGeqbb6gnZ/0hdAvqfHukJ7b8+KgyBgWlGAQQG2fqZLgH9BxAYtFYQiUBAs/mfnh4I7b9eHxSu/30JDDqryJJOQEtT293d9Mu062pXq1DbFy7QLyvC+M9mGQJuFzP+s1kxCOgd/5eyKG3AZwxoGWq5hq5lCCR2d6TnLf4NV5c8CehW/0IQYP3nzG8xBPKal3/zWi1Xo9/KJJKA2vFfzpJvsgSYhBC9aPePrmUI6Mn2n+t8O1d2IcD4L3Su1XKFBBPIpTr+LSEuhkCK5Ikx/q3XdggUExYnUzv+UzkbGkpgxCSguva/fQwki4BLN3vCYU06Brpa8ILzWyvr599ye6SyWf9OzhWTSCDlMdnRhx5DgPHvfm2HQDExAEqTxL8aMEUMl6q95EHvdS1ZIvQmKEg2NOy95DdlEhgeUpQ+k4BPSZRJoLcvSU9BTCCtBywTkH9FwwT8Jnq8TEyWf0wg7X9Fenr4qvmVQSBgy1dJnH+DwEDAAl4foH/luW8w6NrBxPk3AOhBsTIGQNC1yQNwNcwtMCTuLYAfgnk1IFZiEhDxIdieBvNBsTJRp8HScNiF0KSYCyFmpasHxIpSRZ+tEB4rzGYgOZsh782wbTtYzrKbQbdrGf/ZRIZDfLfDZet2uKD6bIWStB12mPSF4x0QESQkZCWglh23hycB1f/2+L2lBwdFVctE7yTgGytKFIFLWZdYETNFah0C2zV6LXMwkET/KE3YQSDnfixgPRjLOfxnEunfcjTqOBqz19br7NEovjb5/m2Hw75Hg9bD8azVf5JTR72OxzXXLZ9wx+PREiQU9wSJpKcOS54i40bAJ1YmYpKUovWEThJTtC7x/CtsomiAf4VNFBXHv0FgJGyiqNZOlRY2WVjSZOlI6fJadVSsVOk2gQgFE1Xh+t8cA3KXzJwXTWVTJa8f5YoC+nWYTNGTMMePCgk8+40qHCJ0J4ADf6ITaIdISUKA5UfFBOZ/RBVNinKOARr4F5kAEx617wSYePCgsP6Z4Kg9a4iJhVZ0Cfzbj8sZ/xlx+z/tdhJgjv+KAIHfQKU9+5+JAUrR/45j4kpiDz5B/e9Ilagk/OArlAa8EyUGE3rwD/RfVr39Czv+mXCwPUmCif4K3P/e/hXJ/F/y9l8T2P+IMz2C+B+1FokKqf5pL/9atXMGKm7/94+wiQEWVUetmRCC97/Tf10G/5L3/zkA6W8Bdgx4T4LbNTnGgJzLIMtCMOtFYFsSAmVJx4Dkm2ErASnDIZaAkM8YEDcgxr5IzYdAUeS7gAmK2tMjKwFvThBkDHgfi2hShMUtBOw/k+FgLOzRqMBHY+zhuL2eXJdjDLAE7O+QK4pTF+Aj1SdBoihBggRTRSlpigwtl3VLE8vJkCTVLpiVOE0Ol8xOypwo6Zsqmy0ImCqrlVKeEb9qISt+hw9NOoMAbfX1ih0EMP0PuwWC8NDAb40ROhCk0NfouL1ApP3WnGJOAv9uLxDp6xU/M4oNheV9AkEih8LSnu8J0KTIjrPkh+reYRCBCahpz/eqskEAgbfAincQQJJQmOpNQJUjDKKlPENhzAvSKiKPgZTnOxNUyQJBLqGwghQEmPdmDTiDAFKMAW8CqnRjwP7uBOZVWV0CE2DeHiUpAeb9af2yjwHHGxQ6LwwbFZpAt+cYYF4ZVpWCwIg3gdHqOYDzW0DMPZF3/2ty9L/PNCjDI5CZBHtknARzki8E/bYChXP/wvuXfTOcS8kdDtG9g6K6DEFRJiDoFxYXdwPgnR/KHIwI3P/5MH9hWOBjkbz3n1yU4WhQ9zkarchwNDrgfTg+KMXheCdFxmFSjhQZ9LfmvP7kLEmSkiFNLOVqUoo0OUwgJXOipKL4pcoWBff/f3hj2qjA5yOSAAAAAElFTkSuQmCC')).toBMP32();
  }
  var DEFAULT_UI_SKIN_IMG;
  function get_DEFAULT_UI_SKIN_IMG() {
    return DEFAULT_UI_SKIN_IMG.value;
  }
  function DefaultUISkin$lambda() {
    return new UISkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 0, 64, 64), sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 64, 0, 64, 64), sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 128, 0, 64, 64), sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 192, 0, 64, 64));
  }
  var DefaultUISkin;
  function get_DefaultUISkin() {
    return DefaultUISkin.value;
  }
  function DefaultCheckSkin$lambda() {
    var leftRight = (64.0 - 44.0) / 64.0 / 2.0;
    var topBottom = (64.0 - 33.0) / 64.0 / 2.0;
    return new IconSkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 64, 44, 33), void 0, void 0, sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 44, 64, 44, 33), leftRight, leftRight, topBottom, topBottom);
  }
  var DefaultCheckSkin;
  function get_DefaultCheckSkin() {
    return DefaultCheckSkin.value;
  }
  function DefaultUpSkin$lambda() {
    var leftRight = (64.0 - 44.0) / 64.0 / 2.0;
    var topBottom = (64.0 - 27.0) / 64.0 / 2.0;
    return new IconSkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 97, 44, 27), void 0, void 0, sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 44, 97, 44, 27), leftRight, leftRight, topBottom, topBottom);
  }
  var DefaultUpSkin;
  function get_DefaultUpSkin() {
    return DefaultUpSkin.value;
  }
  function DefaultDownSkin$lambda() {
    var leftRight = (64.0 - 44.0) / 64.0 / 2.0;
    var topBottom = (64.0 - 27.0) / 64.0 / 2.0;
    return new IconSkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 124, 44, 27), void 0, void 0, sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 44, 124, 44, 27), leftRight, leftRight, topBottom, topBottom);
  }
  var DefaultDownSkin;
  function get_DefaultDownSkin() {
    return DefaultDownSkin.value;
  }
  function DefaultLeftSkin$lambda() {
    var leftRight = (64.0 - 27.0) / 64.0 / 2.0;
    var topBottom = (64.0 - 44.0) / 64.0 / 2.0;
    return new IconSkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 151, 27, 44), void 0, void 0, sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 27, 151, 27, 44), leftRight, leftRight, topBottom, topBottom);
  }
  var DefaultLeftSkin;
  function get_DefaultLeftSkin() {
    return DefaultLeftSkin.value;
  }
  function DefaultRightSkin$lambda() {
    var leftRight = (64.0 - 27.0) / 64.0 / 2.0;
    var topBottom = (64.0 - 44.0) / 64.0 / 2.0;
    return new IconSkin(sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 0, 195, 27, 44), void 0, void 0, sliceWithSize(get_DEFAULT_UI_SKIN_IMG(), 27, 195, 27, 44), leftRight, leftRight, topBottom, topBottom);
  }
  var DefaultRightSkin;
  function get_DefaultRightSkin() {
    return DefaultRightSkin.value;
  }
  function DefaultComboBoxSkin$lambda() {
    return new ComboBoxSkin(get_DefaultUISkin(), void 0, void 0, get_DefaultDownSkin(), get_DefaultUpSkin(), get_DefaultVerScrollBarSkin(), get_DefaultUIFont());
  }
  var DefaultComboBoxSkin;
  function get_DefaultComboBoxSkin() {
    return DefaultComboBoxSkin.value;
  }
  function DefaultVerScrollBarSkin$lambda() {
    return new ScrollBarSkin(get_DefaultUISkin(), void 0, void 0, get_DefaultUpSkin(), get_DefaultDownSkin());
  }
  var DefaultVerScrollBarSkin;
  function get_DefaultVerScrollBarSkin() {
    return DefaultVerScrollBarSkin.value;
  }
  function DefaultHorScrollBarSkin$lambda() {
    return new ScrollBarSkin(get_DefaultUISkin(), void 0, void 0, get_DefaultLeftSkin(), get_DefaultRightSkin());
  }
  var DefaultHorScrollBarSkin;
  function get_DefaultHorScrollBarSkin() {
    return DefaultHorScrollBarSkin.value;
  }
  function TextFormat(color_0, size, font) {
    if (color_0 === void 0)
      color_0 = color.Colors.BLACK;
    if (size === void 0)
      size = 16;
    if (font === void 0)
      font = null;
    this.color = color_0;
    this.size = size;
    this.font = font;
  }
  TextFormat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextFormat',
    interfaces: []
  };
  TextFormat.prototype.component1 = function () {
    return this.color;
  };
  TextFormat.prototype.component2 = function () {
    return this.size;
  };
  TextFormat.prototype.component3 = function () {
    return this.font;
  };
  TextFormat.prototype.copy_op6hx2$ = function (color, size, font) {
    return new TextFormat(color === void 0 ? this.color : color, size === void 0 ? this.size : size, font === void 0 ? this.font : font);
  };
  TextFormat.prototype.toString = function () {
    return 'TextFormat(color=' + Kotlin.toString(this.color) + (', size=' + Kotlin.toString(this.size)) + (', font=' + Kotlin.toString(this.font)) + ')';
  };
  TextFormat.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.font) | 0;
    return result;
  };
  TextFormat.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.color, other.color) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.font, other.font)))));
  };
  function TextSkin(normal, over, down, disabled, backColor) {
    if (over === void 0)
      over = normal;
    if (down === void 0)
      down = normal;
    if (disabled === void 0)
      disabled = normal;
    if (backColor === void 0)
      backColor = color.Colors.TRANSPARENT_BLACK;
    this.normal = normal;
    this.over = over;
    this.down = down;
    this.disabled = disabled;
    this.backColor = backColor;
  }
  TextSkin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextSkin',
    interfaces: []
  };
  TextSkin.prototype.component1 = function () {
    return this.normal;
  };
  TextSkin.prototype.component2 = function () {
    return this.over;
  };
  TextSkin.prototype.component3 = function () {
    return this.down;
  };
  TextSkin.prototype.component4 = function () {
    return this.disabled;
  };
  TextSkin.prototype.component5 = function () {
    return this.backColor;
  };
  TextSkin.prototype.copy_y2uaa9$ = function (normal, over, down, disabled, backColor) {
    return new TextSkin(normal === void 0 ? this.normal : normal, over === void 0 ? this.over : over, down === void 0 ? this.down : down, disabled === void 0 ? this.disabled : disabled, backColor === void 0 ? this.backColor : backColor);
  };
  TextSkin.prototype.toString = function () {
    return 'TextSkin(normal=' + Kotlin.toString(this.normal) + (', over=' + Kotlin.toString(this.over)) + (', down=' + Kotlin.toString(this.down)) + (', disabled=' + Kotlin.toString(this.disabled)) + (', backColor=' + Kotlin.toString(this.backColor)) + ')';
  };
  TextSkin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.over) | 0;
    result = result * 31 + Kotlin.hashCode(this.down) | 0;
    result = result * 31 + Kotlin.hashCode(this.disabled) | 0;
    result = result * 31 + Kotlin.hashCode(this.backColor) | 0;
    return result;
  };
  TextSkin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.over, other.over) && Kotlin.equals(this.down, other.down) && Kotlin.equals(this.disabled, other.disabled) && Kotlin.equals(this.backColor, other.backColor)))));
  };
  function UISkin(normal, over, down, disabled, backColor) {
    if (over === void 0)
      over = normal;
    if (down === void 0)
      down = normal;
    if (disabled === void 0)
      disabled = normal;
    if (backColor === void 0)
      backColor = color.Colors.DARKGREY;
    this.normal = normal;
    this.over = over;
    this.down = down;
    this.disabled = disabled;
    this.backColor = backColor;
  }
  UISkin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UISkin',
    interfaces: []
  };
  UISkin.prototype.component1 = function () {
    return this.normal;
  };
  UISkin.prototype.component2 = function () {
    return this.over;
  };
  UISkin.prototype.component3 = function () {
    return this.down;
  };
  UISkin.prototype.component4 = function () {
    return this.disabled;
  };
  UISkin.prototype.component5 = function () {
    return this.backColor;
  };
  UISkin.prototype.copy_qrpy1d$ = function (normal, over, down, disabled, backColor) {
    return new UISkin(normal === void 0 ? this.normal : normal, over === void 0 ? this.over : over, down === void 0 ? this.down : down, disabled === void 0 ? this.disabled : disabled, backColor === void 0 ? this.backColor : backColor);
  };
  UISkin.prototype.toString = function () {
    return 'UISkin(normal=' + Kotlin.toString(this.normal) + (', over=' + Kotlin.toString(this.over)) + (', down=' + Kotlin.toString(this.down)) + (', disabled=' + Kotlin.toString(this.disabled)) + (', backColor=' + Kotlin.toString(this.backColor)) + ')';
  };
  UISkin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.over) | 0;
    result = result * 31 + Kotlin.hashCode(this.down) | 0;
    result = result * 31 + Kotlin.hashCode(this.disabled) | 0;
    result = result * 31 + Kotlin.hashCode(this.backColor) | 0;
    return result;
  };
  UISkin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.over, other.over) && Kotlin.equals(this.down, other.down) && Kotlin.equals(this.disabled, other.disabled) && Kotlin.equals(this.backColor, other.backColor)))));
  };
  function ComboBoxSkin(itemSkin, selectedSkin, expandSkin, showIcon, hideIcon, scrollbarSkin, textFont) {
    if (selectedSkin === void 0)
      selectedSkin = itemSkin;
    if (expandSkin === void 0)
      expandSkin = itemSkin;
    this.itemSkin = itemSkin;
    this.selectedSkin = selectedSkin;
    this.expandSkin = expandSkin;
    this.showIcon = showIcon;
    this.hideIcon = hideIcon;
    this.scrollbarSkin = scrollbarSkin;
    this.textFont = textFont;
  }
  ComboBoxSkin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ComboBoxSkin',
    interfaces: []
  };
  ComboBoxSkin.prototype.component1 = function () {
    return this.itemSkin;
  };
  ComboBoxSkin.prototype.component2 = function () {
    return this.selectedSkin;
  };
  ComboBoxSkin.prototype.component3 = function () {
    return this.expandSkin;
  };
  ComboBoxSkin.prototype.component4 = function () {
    return this.showIcon;
  };
  ComboBoxSkin.prototype.component5 = function () {
    return this.hideIcon;
  };
  ComboBoxSkin.prototype.component6 = function () {
    return this.scrollbarSkin;
  };
  ComboBoxSkin.prototype.component7 = function () {
    return this.textFont;
  };
  ComboBoxSkin.prototype.copy_mywf6o$ = function (itemSkin, selectedSkin, expandSkin, showIcon, hideIcon, scrollbarSkin, textFont) {
    return new ComboBoxSkin(itemSkin === void 0 ? this.itemSkin : itemSkin, selectedSkin === void 0 ? this.selectedSkin : selectedSkin, expandSkin === void 0 ? this.expandSkin : expandSkin, showIcon === void 0 ? this.showIcon : showIcon, hideIcon === void 0 ? this.hideIcon : hideIcon, scrollbarSkin === void 0 ? this.scrollbarSkin : scrollbarSkin, textFont === void 0 ? this.textFont : textFont);
  };
  ComboBoxSkin.prototype.toString = function () {
    return 'ComboBoxSkin(itemSkin=' + Kotlin.toString(this.itemSkin) + (', selectedSkin=' + Kotlin.toString(this.selectedSkin)) + (', expandSkin=' + Kotlin.toString(this.expandSkin)) + (', showIcon=' + Kotlin.toString(this.showIcon)) + (', hideIcon=' + Kotlin.toString(this.hideIcon)) + (', scrollbarSkin=' + Kotlin.toString(this.scrollbarSkin)) + (', textFont=' + Kotlin.toString(this.textFont)) + ')';
  };
  ComboBoxSkin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.itemSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.selectedSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.expandSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.showIcon) | 0;
    result = result * 31 + Kotlin.hashCode(this.hideIcon) | 0;
    result = result * 31 + Kotlin.hashCode(this.scrollbarSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.textFont) | 0;
    return result;
  };
  ComboBoxSkin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.itemSkin, other.itemSkin) && Kotlin.equals(this.selectedSkin, other.selectedSkin) && Kotlin.equals(this.expandSkin, other.expandSkin) && Kotlin.equals(this.showIcon, other.showIcon) && Kotlin.equals(this.hideIcon, other.hideIcon) && Kotlin.equals(this.scrollbarSkin, other.scrollbarSkin) && Kotlin.equals(this.textFont, other.textFont)))));
  };
  function ScrollBarSkin(thumbSkin, upSkin, downSkin, upIcon, downIcon, backColor) {
    if (upSkin === void 0)
      upSkin = thumbSkin;
    if (downSkin === void 0)
      downSkin = thumbSkin;
    if (backColor === void 0)
      backColor = color.Colors.DARKGREY;
    this.thumbSkin = thumbSkin;
    this.upSkin = upSkin;
    this.downSkin = downSkin;
    this.upIcon = upIcon;
    this.downIcon = downIcon;
    this.backColor = backColor;
  }
  ScrollBarSkin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ScrollBarSkin',
    interfaces: []
  };
  ScrollBarSkin.prototype.component1 = function () {
    return this.thumbSkin;
  };
  ScrollBarSkin.prototype.component2 = function () {
    return this.upSkin;
  };
  ScrollBarSkin.prototype.component3 = function () {
    return this.downSkin;
  };
  ScrollBarSkin.prototype.component4 = function () {
    return this.upIcon;
  };
  ScrollBarSkin.prototype.component5 = function () {
    return this.downIcon;
  };
  ScrollBarSkin.prototype.component6 = function () {
    return this.backColor;
  };
  ScrollBarSkin.prototype.copy_re1zl4$ = function (thumbSkin, upSkin, downSkin, upIcon, downIcon, backColor) {
    return new ScrollBarSkin(thumbSkin === void 0 ? this.thumbSkin : thumbSkin, upSkin === void 0 ? this.upSkin : upSkin, downSkin === void 0 ? this.downSkin : downSkin, upIcon === void 0 ? this.upIcon : upIcon, downIcon === void 0 ? this.downIcon : downIcon, backColor === void 0 ? this.backColor : backColor);
  };
  ScrollBarSkin.prototype.toString = function () {
    return 'ScrollBarSkin(thumbSkin=' + Kotlin.toString(this.thumbSkin) + (', upSkin=' + Kotlin.toString(this.upSkin)) + (', downSkin=' + Kotlin.toString(this.downSkin)) + (', upIcon=' + Kotlin.toString(this.upIcon)) + (', downIcon=' + Kotlin.toString(this.downIcon)) + (', backColor=' + Kotlin.toString(this.backColor)) + ')';
  };
  ScrollBarSkin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.thumbSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.upSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.downSkin) | 0;
    result = result * 31 + Kotlin.hashCode(this.upIcon) | 0;
    result = result * 31 + Kotlin.hashCode(this.downIcon) | 0;
    result = result * 31 + Kotlin.hashCode(this.backColor) | 0;
    return result;
  };
  ScrollBarSkin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.thumbSkin, other.thumbSkin) && Kotlin.equals(this.upSkin, other.upSkin) && Kotlin.equals(this.downSkin, other.downSkin) && Kotlin.equals(this.upIcon, other.upIcon) && Kotlin.equals(this.downIcon, other.downIcon) && Kotlin.equals(this.backColor, other.backColor)))));
  };
  function IconSkin(normal, over, down, disabled, indentRatioLeft, indentRatioRight, indentRatioTop, indentRatioBottom) {
    if (over === void 0)
      over = normal;
    if (down === void 0)
      down = normal;
    if (disabled === void 0)
      disabled = normal;
    if (indentRatioLeft === void 0)
      indentRatioLeft = 0.0;
    if (indentRatioRight === void 0)
      indentRatioRight = 0.0;
    if (indentRatioTop === void 0)
      indentRatioTop = 0.0;
    if (indentRatioBottom === void 0)
      indentRatioBottom = 0.0;
    this.normal = normal;
    this.over = over;
    this.down = down;
    this.disabled = disabled;
    this.indentRatioLeft = indentRatioLeft;
    this.indentRatioRight = indentRatioRight;
    this.indentRatioTop = indentRatioTop;
    this.indentRatioBottom = indentRatioBottom;
  }
  IconSkin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IconSkin',
    interfaces: []
  };
  IconSkin.prototype.component1 = function () {
    return this.normal;
  };
  IconSkin.prototype.component2 = function () {
    return this.over;
  };
  IconSkin.prototype.component3 = function () {
    return this.down;
  };
  IconSkin.prototype.component4 = function () {
    return this.disabled;
  };
  IconSkin.prototype.component5 = function () {
    return this.indentRatioLeft;
  };
  IconSkin.prototype.component6 = function () {
    return this.indentRatioRight;
  };
  IconSkin.prototype.component7 = function () {
    return this.indentRatioTop;
  };
  IconSkin.prototype.component8 = function () {
    return this.indentRatioBottom;
  };
  IconSkin.prototype.copy_y7j4i4$ = function (normal, over, down, disabled, indentRatioLeft, indentRatioRight, indentRatioTop, indentRatioBottom) {
    return new IconSkin(normal === void 0 ? this.normal : normal, over === void 0 ? this.over : over, down === void 0 ? this.down : down, disabled === void 0 ? this.disabled : disabled, indentRatioLeft === void 0 ? this.indentRatioLeft : indentRatioLeft, indentRatioRight === void 0 ? this.indentRatioRight : indentRatioRight, indentRatioTop === void 0 ? this.indentRatioTop : indentRatioTop, indentRatioBottom === void 0 ? this.indentRatioBottom : indentRatioBottom);
  };
  IconSkin.prototype.toString = function () {
    return 'IconSkin(normal=' + Kotlin.toString(this.normal) + (', over=' + Kotlin.toString(this.over)) + (', down=' + Kotlin.toString(this.down)) + (', disabled=' + Kotlin.toString(this.disabled)) + (', indentRatioLeft=' + Kotlin.toString(this.indentRatioLeft)) + (', indentRatioRight=' + Kotlin.toString(this.indentRatioRight)) + (', indentRatioTop=' + Kotlin.toString(this.indentRatioTop)) + (', indentRatioBottom=' + Kotlin.toString(this.indentRatioBottom)) + ')';
  };
  IconSkin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.normal) | 0;
    result = result * 31 + Kotlin.hashCode(this.over) | 0;
    result = result * 31 + Kotlin.hashCode(this.down) | 0;
    result = result * 31 + Kotlin.hashCode(this.disabled) | 0;
    result = result * 31 + Kotlin.hashCode(this.indentRatioLeft) | 0;
    result = result * 31 + Kotlin.hashCode(this.indentRatioRight) | 0;
    result = result * 31 + Kotlin.hashCode(this.indentRatioTop) | 0;
    result = result * 31 + Kotlin.hashCode(this.indentRatioBottom) | 0;
    return result;
  };
  IconSkin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.normal, other.normal) && Kotlin.equals(this.over, other.over) && Kotlin.equals(this.down, other.down) && Kotlin.equals(this.disabled, other.disabled) && Kotlin.equals(this.indentRatioLeft, other.indentRatioLeft) && Kotlin.equals(this.indentRatioRight, other.indentRatioRight) && Kotlin.equals(this.indentRatioTop, other.indentRatioTop) && Kotlin.equals(this.indentRatioBottom, other.indentRatioBottom)))));
  };
  function calculateWidth($receiver, parentWidth) {
    return parentWidth * (1.0 - $receiver.indentRatioLeft - $receiver.indentRatioRight);
  }
  function calculateHeight($receiver, parentHeight) {
    return parentHeight * (1.0 - $receiver.indentRatioTop - $receiver.indentRatioBottom);
  }
  function paddingLeft($receiver, width) {
    return width * $receiver.indentRatioLeft;
  }
  function paddingRight($receiver, width) {
    return width * $receiver.indentRatioRight;
  }
  function paddingTop($receiver, height) {
    return height * $receiver.indentRatioTop;
  }
  function paddingBottom($receiver, height) {
    return height * $receiver.indentRatioBottom;
  }
  function CancellableGroup() {
    this.cancellables_0 = ArrayList_init_1();
  }
  CancellableGroup.prototype.plusAssign_9rogis$ = function (c) {
    this.cancellables_0.add_11rb$(c);
  };
  CancellableGroup.prototype.plusAssign_72hza6$ = function (c) {
    var $receiver = this.cancellables_0;
    var element = cancellable(c);
    $receiver.add_11rb$(element);
  };
  CancellableGroup.prototype.addCancellable_9rogis$ = function (c) {
    this.cancellables_0.add_11rb$(c);
  };
  CancellableGroup.prototype.addCloseable_72hza6$ = function (c) {
    var $receiver = this.cancellables_0;
    var element = cancellable(c);
    $receiver.add_11rb$(element);
  };
  CancellableGroup.prototype.cancel_tcv7n7$$default = function (e) {
    cancel_0(this.cancellables_0, e);
  };
  CancellableGroup.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CancellableGroup',
    interfaces: [Cancellable]
  };
  function Coroutine$AutoClose(callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.local$group = void 0;
    this.local$callback = callback_0;
  }
  Coroutine$AutoClose.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AutoClose.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AutoClose.prototype.constructor = Coroutine$AutoClose;
  Coroutine$AutoClose.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$group = new CancellableGroup();
            this.exceptionState_0 = 4;
            this.state_0 = 1;
            this.result_0 = this.local$callback(this.local$group, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [2];
            this.state_0 = 5;
            this.$returnValue = this.result_0;
            continue;
          case 2:
            return this.$returnValue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            this.local$group.cancel_tcv7n7$();
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AutoClose(callback_0, continuation_0, suspended) {
    var instance = new Coroutine$AutoClose(callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function toIntArray2($receiver) {
    return new IntArray2($receiver.width, $receiver.height, $receiver.data.ints);
  }
  function Anchorable() {
  }
  Anchorable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Anchorable',
    interfaces: []
  };
  function anchor($receiver, ax, ay) {
    $receiver.anchorX = ax;
    $receiver.anchorY = ay;
    return $receiver;
  }
  var anchor_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.anchor_sjrorj$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var anchor = _.com.soywiz.korge.view.anchor_11wmr3$;
    return function ($receiver, ax, ay) {
      return anchor($receiver, numberToDouble(ax), numberToDouble(ay));
    };
  }));
  var anchor_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.anchor_l68kgm$', wrapFunction(function () {
    var anchor = _.com.soywiz.korge.view.anchor_11wmr3$;
    return function ($receiver, anchor_0) {
      return anchor($receiver, anchor_0.sx, anchor_0.sy);
    };
  }));
  function center($receiver) {
    return anchor($receiver, 0.5, 0.5);
  }
  function get_centered($receiver) {
    return anchor($receiver, 0.5, 0.5);
  }
  function BlendMode(name, ordinal, factors) {
    Enum.call(this);
    this.factors = factors;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function BlendMode_initFields() {
    BlendMode_initFields = function () {
    };
    BlendMode$INHERIT_instance = new BlendMode('INHERIT', 0, AG$Blending.Companion.NORMAL);
    BlendMode$NONE_instance = new BlendMode('NONE', 1, AG$AG$Blending_init(AG$BlendFactor.ONE, AG$BlendFactor.ZERO));
    BlendMode$NORMAL_instance = new BlendMode('NORMAL', 2, AG$Blending.Companion.NORMAL);
    BlendMode$ADD_instance = new BlendMode('ADD', 3, AG$Blending.Companion.ADD);
    BlendMode$MULTIPLY_instance = new BlendMode('MULTIPLY', 4, AG$AG$Blending_init(AG$BlendFactor.DESTINATION_COLOR, AG$BlendFactor.ONE_MINUS_SOURCE_ALPHA));
    BlendMode$SCREEN_instance = new BlendMode('SCREEN', 5, AG$AG$Blending_init(AG$BlendFactor.ONE, AG$BlendFactor.ONE_MINUS_SOURCE_COLOR));
    BlendMode$ERASE_instance = new BlendMode('ERASE', 6, AG$AG$Blending_init(AG$BlendFactor.ZERO, AG$BlendFactor.ONE_MINUS_SOURCE_ALPHA));
    BlendMode$MASK_instance = new BlendMode('MASK', 7, AG$AG$Blending_init(AG$BlendFactor.ZERO, AG$BlendFactor.SOURCE_ALPHA));
    BlendMode$BELOW_instance = new BlendMode('BELOW', 8, AG$AG$Blending_init(AG$BlendFactor.ONE_MINUS_DESTINATION_ALPHA, AG$BlendFactor.DESTINATION_ALPHA));
    BlendMode$SUBTRACT_instance = new BlendMode('SUBTRACT', 9, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE, AG$BlendEquation.REVERSE_SUBTRACT));
    BlendMode$LIGHTEN_instance = new BlendMode('LIGHTEN', 10, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$DARKEN_instance = new BlendMode('DARKEN', 11, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$DIFFERENCE_instance = new BlendMode('DIFFERENCE', 12, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$INVERT_instance = new BlendMode('INVERT', 13, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$ALPHA_instance = new BlendMode('ALPHA', 14, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$HARDLIGHT_instance = new BlendMode('HARDLIGHT', 15, new AG$Blending(AG$BlendFactor.SOURCE_ALPHA, AG$BlendFactor.DESTINATION_ALPHA, AG$BlendFactor.ONE, AG$BlendFactor.ONE));
    BlendMode$Companion_getInstance();
  }
  var BlendMode$INHERIT_instance;
  function BlendMode$INHERIT_getInstance() {
    BlendMode_initFields();
    return BlendMode$INHERIT_instance;
  }
  var BlendMode$NONE_instance;
  function BlendMode$NONE_getInstance() {
    BlendMode_initFields();
    return BlendMode$NONE_instance;
  }
  var BlendMode$NORMAL_instance;
  function BlendMode$NORMAL_getInstance() {
    BlendMode_initFields();
    return BlendMode$NORMAL_instance;
  }
  var BlendMode$ADD_instance;
  function BlendMode$ADD_getInstance() {
    BlendMode_initFields();
    return BlendMode$ADD_instance;
  }
  var BlendMode$MULTIPLY_instance;
  function BlendMode$MULTIPLY_getInstance() {
    BlendMode_initFields();
    return BlendMode$MULTIPLY_instance;
  }
  var BlendMode$SCREEN_instance;
  function BlendMode$SCREEN_getInstance() {
    BlendMode_initFields();
    return BlendMode$SCREEN_instance;
  }
  var BlendMode$ERASE_instance;
  function BlendMode$ERASE_getInstance() {
    BlendMode_initFields();
    return BlendMode$ERASE_instance;
  }
  var BlendMode$MASK_instance;
  function BlendMode$MASK_getInstance() {
    BlendMode_initFields();
    return BlendMode$MASK_instance;
  }
  var BlendMode$BELOW_instance;
  function BlendMode$BELOW_getInstance() {
    BlendMode_initFields();
    return BlendMode$BELOW_instance;
  }
  var BlendMode$SUBTRACT_instance;
  function BlendMode$SUBTRACT_getInstance() {
    BlendMode_initFields();
    return BlendMode$SUBTRACT_instance;
  }
  var BlendMode$LIGHTEN_instance;
  function BlendMode$LIGHTEN_getInstance() {
    BlendMode_initFields();
    return BlendMode$LIGHTEN_instance;
  }
  var BlendMode$DARKEN_instance;
  function BlendMode$DARKEN_getInstance() {
    BlendMode_initFields();
    return BlendMode$DARKEN_instance;
  }
  var BlendMode$DIFFERENCE_instance;
  function BlendMode$DIFFERENCE_getInstance() {
    BlendMode_initFields();
    return BlendMode$DIFFERENCE_instance;
  }
  var BlendMode$INVERT_instance;
  function BlendMode$INVERT_getInstance() {
    BlendMode_initFields();
    return BlendMode$INVERT_instance;
  }
  var BlendMode$ALPHA_instance;
  function BlendMode$ALPHA_getInstance() {
    BlendMode_initFields();
    return BlendMode$ALPHA_instance;
  }
  var BlendMode$HARDLIGHT_instance;
  function BlendMode$HARDLIGHT_getInstance() {
    BlendMode_initFields();
    return BlendMode$HARDLIGHT_instance;
  }
  function BlendMode$Companion() {
    BlendMode$Companion_instance = this;
    this.OVERLAY = BlendMode$NORMAL_getInstance();
    var $receiver = BlendMode$values();
    var destination = ArrayList_init_0($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.ordinal, item));
    }
    this.BY_ORDINAL = toMap(destination);
  }
  BlendMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BlendMode$Companion_instance = null;
  function BlendMode$Companion_getInstance() {
    BlendMode_initFields();
    if (BlendMode$Companion_instance === null) {
      new BlendMode$Companion();
    }return BlendMode$Companion_instance;
  }
  BlendMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BlendMode',
    interfaces: [Enum]
  };
  function BlendMode$values() {
    return [BlendMode$INHERIT_getInstance(), BlendMode$NONE_getInstance(), BlendMode$NORMAL_getInstance(), BlendMode$ADD_getInstance(), BlendMode$MULTIPLY_getInstance(), BlendMode$SCREEN_getInstance(), BlendMode$ERASE_getInstance(), BlendMode$MASK_getInstance(), BlendMode$BELOW_getInstance(), BlendMode$SUBTRACT_getInstance(), BlendMode$LIGHTEN_getInstance(), BlendMode$DARKEN_getInstance(), BlendMode$DIFFERENCE_getInstance(), BlendMode$INVERT_getInstance(), BlendMode$ALPHA_getInstance(), BlendMode$HARDLIGHT_getInstance()];
  }
  BlendMode.values = BlendMode$values;
  function BlendMode$valueOf(name) {
    switch (name) {
      case 'INHERIT':
        return BlendMode$INHERIT_getInstance();
      case 'NONE':
        return BlendMode$NONE_getInstance();
      case 'NORMAL':
        return BlendMode$NORMAL_getInstance();
      case 'ADD':
        return BlendMode$ADD_getInstance();
      case 'MULTIPLY':
        return BlendMode$MULTIPLY_getInstance();
      case 'SCREEN':
        return BlendMode$SCREEN_getInstance();
      case 'ERASE':
        return BlendMode$ERASE_getInstance();
      case 'MASK':
        return BlendMode$MASK_getInstance();
      case 'BELOW':
        return BlendMode$BELOW_getInstance();
      case 'SUBTRACT':
        return BlendMode$SUBTRACT_getInstance();
      case 'LIGHTEN':
        return BlendMode$LIGHTEN_getInstance();
      case 'DARKEN':
        return BlendMode$DARKEN_getInstance();
      case 'DIFFERENCE':
        return BlendMode$DIFFERENCE_getInstance();
      case 'INVERT':
        return BlendMode$INVERT_getInstance();
      case 'ALPHA':
        return BlendMode$ALPHA_getInstance();
      case 'HARDLIGHT':
        return BlendMode$HARDLIGHT_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.BlendMode.' + name);
    }
  }
  BlendMode.valueOf_61zpoe$ = BlendMode$valueOf;
  var camera = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.camera_crl2ny$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Camera_init = _.com.soywiz.korge.view.Camera;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function camera$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, callback) {
      if (callback === void 0)
        callback = camera$lambda;
      var $receiver_0 = addTo(new Camera_init(), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Camera() {
    Container.call(this);
  }
  Object.defineProperty(Camera.prototype, 'width', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.referenceParent) != null ? tmp$.width : null) != null ? tmp$_0 : 100.0;
    },
    set: function (f) {
    }
  });
  Object.defineProperty(Camera.prototype, 'height', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.referenceParent) != null ? tmp$.width : null) != null ? tmp$_0 : 100.0;
    },
    set: function (f) {
    }
  });
  Camera.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    var width = this.width;
    var height = this.height;
    out.setTo_6y0v78$(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height));
  };
  Camera.prototype.getLocalMatrixFittingGlobalRect_2da8yn$ = function (rect) {
    var tmp$, tmp$_0, tmp$_1;
    var destinationBounds = rect;
    var mat = (tmp$_1 = (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.globalMatrix : null) != null ? tmp$_0.clone() : null) != null ? tmp$_1 : new Matrix();
    mat.translate_lu1900$(-destinationBounds.x, -destinationBounds.y);
    mat.scale_lu1900$(this.width / destinationBounds.width, this.height / destinationBounds.height);
    return mat;
  };
  Camera.prototype.getLocalMatrixFittingView_gohfih$ = function (view) {
    var tmp$, tmp$_0;
    return this.getLocalMatrixFittingGlobalRect_2da8yn$((tmp$_0 = (tmp$ = view != null ? view : this.stage) != null ? tmp$.globalBounds : null) != null ? tmp$_0 : new Rectangle(0, 0, 100, 100));
  };
  Camera.prototype.setTo_gohfih$ = function (view) {
    this.localMatrix = this.getLocalMatrixFittingView_gohfih$(view);
  };
  Camera.prototype.setTo_2da8yn$ = function (rect) {
    this.localMatrix = this.getLocalMatrixFittingGlobalRect_2da8yn$(rect);
  };
  Camera.prototype.tweenTo_u17urr$ = function (view, vs, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    return tween(this, [get_4(getPropertyCallableRef('localMatrix', 0, function ($receiver) {
      return $receiver.localMatrix;
    }.bind(null, this), function ($receiver, value) {
      $receiver.localMatrix = value;
    }.bind(null, this)), this.localMatrix.clone(), this.getLocalMatrixFittingView_gohfih$(view))].concat(vs), time, easing, void 0, continuation);
  };
  Camera.prototype.tweenTo_f0e6dr$ = function (rect, vs, time, easing, continuation) {
    if (easing === void 0)
      easing = Easing.Companion.LINEAR;
    return tween(this, [get_4(getPropertyCallableRef('localMatrix', 0, function ($receiver) {
      return $receiver.localMatrix;
    }.bind(null, this), function ($receiver, value) {
      $receiver.localMatrix = value;
    }.bind(null, this)), this.localMatrix.clone(), this.getLocalMatrixFittingGlobalRect_2da8yn$(rect))].concat(vs), time, easing, void 0, continuation);
  };
  Camera.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Camera',
    interfaces: [View$Reference, Container]
  };
  var circle_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.circle_7rp01f$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var Unit = Kotlin.kotlin.Unit;
    var Circle_init = _.com.soywiz.korge.view.Circle;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function circle$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, radius, color_0, autoScaling, callback) {
      if (radius === void 0)
        radius = 16.0;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (autoScaling === void 0)
        autoScaling = true;
      if (callback === void 0)
        callback = circle$lambda;
      var $receiver_0 = addTo(new Circle_init(radius, color_0, autoScaling), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Circle(radius, color_0, autoScaling) {
    if (radius === void 0)
      radius = 16.0;
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (autoScaling === void 0)
      autoScaling = true;
    Graphics.call(this, autoScaling);
    this.radius_khfcbf$_0 = new UIObservable(radius, Circle$radius$lambda(this));
    this.color = color_0;
    this.updateGraphics_ifksjd$_0();
  }
  var Circle$radius_metadata = new PropertyMetadata('radius');
  Object.defineProperty(Circle.prototype, 'radius', {
    get: function () {
      return this.radius_khfcbf$_0.getValue_t0xcdd$(this, Circle$radius_metadata);
    },
    set: function (radius) {
      this.radius_khfcbf$_0.setValue_cvomos$(this, Circle$radius_metadata, radius);
    }
  });
  Object.defineProperty(Circle.prototype, 'color', {
    get: function () {
      return this.colorMul;
    },
    set: function (value) {
      this.colorMul = value;
    }
  });
  Object.defineProperty(Circle.prototype, 'bwidth', {
    get: function () {
      return this.radius * 2;
    }
  });
  Object.defineProperty(Circle.prototype, 'bheight', {
    get: function () {
      return this.radius * 2;
    }
  });
  Circle.prototype.updateGraphics_ifksjd$_0 = function () {
    this.clear();
    this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color.Colors.WHITE, 1.0));
    try {
      circle(this, this.radius, this.radius, this.radius);
    }finally {
      this.endFill();
    }
  };
  function Circle$radius$lambda(this$Circle) {
    return function (it) {
      this$Circle.updateGraphics_ifksjd$_0();
      return Unit;
    };
  }
  Circle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Circle',
    interfaces: [Graphics]
  };
  var clipContainer = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.clipContainer_kxyfno$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var ClipContainer_init = _.com.soywiz.korge.view.ClipContainer;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function clipContainer$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, callback) {
      if (callback === void 0)
        callback = clipContainer$lambda;
      var $receiver_0 = addTo(new ClipContainer_init(numberToDouble(width), numberToDouble(height)), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var clipContainer_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.clipContainer_cir104$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var ClipContainer_init = _.com.soywiz.korge.view.ClipContainer;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function clipContainer$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, callback) {
      if (callback === void 0)
        callback = clipContainer$lambda;
      var $receiver_0 = addTo(new ClipContainer_init(width, height), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function ClipContainer(width, height) {
    if (width === void 0)
      width = 100.0;
    if (height === void 0)
      height = 100.0;
    FixedSizeContainer.call(this, width, height, true);
  }
  ClipContainer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClipContainer',
    interfaces: [FixedSizeContainer]
  };
  var container = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.container_exzb34$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Container_init = _.com.soywiz.korge.view.Container;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function container$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, callback) {
      if (callback === void 0)
        callback = container$lambda;
      var $receiver_0 = addTo(new Container_init(), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Container() {
    View.call(this, true);
    this.tempMatrix_6lfzyf$_0 = new Matrix();
    this.bb_8tnmvw$_0 = new BoundsBuilder();
    this.tempRect_nf3rlo$_0 = Rectangle.Companion.invoke();
  }
  Object.defineProperty(Container.prototype, 'childrenInternal', {
    get: function () {
      if (this._children == null) {
        this._children = ArrayList_init_1();
      }return ensureNotNull(this._children);
    }
  });
  Object.defineProperty(Container.prototype, 'children', {
    get: function () {
      return this.childrenInternal;
    }
  });
  Object.defineProperty(Container.prototype, 'firstChild', {
    get: function () {
      var tmp$;
      return (tmp$ = this._children) != null ? firstOrNull_0(tmp$) : null;
    }
  });
  Object.defineProperty(Container.prototype, 'lastChild', {
    get: function () {
      var tmp$;
      return (tmp$ = this._children) != null ? lastOrNull(tmp$) : null;
    }
  });
  Container.prototype.sortChildrenBy_z58j1t$ = function (comparator) {
    var tmp$;
    (tmp$ = this._children) != null ? (sortWith(tmp$, comparator), Unit) : null;
    var tmp$_0;
    if ((tmp$_0 = this._children) != null) {
      var n = 0;
      while (n < tmp$_0.size) {
        var index = n;
        tmp$_0.get_za3lpa$(n).index = index;
        n = n + 1 | 0;
      }
    }};
  Object.defineProperty(Container.prototype, 'numChildren', {
    get: function () {
      var children = this._children;
      if (children == null)
        return 0;
      return children.size;
    }
  });
  Object.defineProperty(Container.prototype, 'size', {
    get: function () {
      return this.numChildren;
    }
  });
  Object.defineProperty(Container.prototype, 'containerRoot', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.containerRoot : null) != null ? tmp$_0 : this;
    }
  });
  Object.defineProperty(Container.prototype, 'referenceParent', {
    get: function () {
      var tmp$;
      if (Kotlin.isType(this.parent, View$Reference))
        return this.parent;
      return (tmp$ = this.parent) != null ? tmp$.referenceParent : null;
    }
  });
  Container.prototype.swapChildren_1kpf2s$ = function (view1, view2) {
    var tmp$, tmp$_0;
    if (equals(view1.parent, view2.parent) && equals(view1.parent, this)) {
      var index1 = view1.index;
      var index2 = view2.index;
      (tmp$ = this._children) != null ? tmp$.set_wxm5ur$(index1, view2) : null;
      view2.index = index1;
      (tmp$_0 = this._children) != null ? tmp$_0.set_wxm5ur$(index2, view1) : null;
      view1.index = index2;
    }};
  Container.prototype.addChildAt_pwlnko$ = function (view, index) {
    var tmp$;
    var aindex = clamp(index, 0, this.numChildren);
    view.removeFromParent();
    view.index = aindex;
    var children = this.childrenInternal;
    children.add_wxm5ur$(aindex, view);
    tmp$ = children.size;
    for (var n = aindex + 1 | 0; n < tmp$; n++)
      children.get_za3lpa$(n).index = n;
    view.parent = this;
    view.invalidate();
  };
  Container.prototype.getChildIndex_l5rad2$ = function (view) {
    return view.index;
  };
  Container.prototype.getChildAt_za3lpa$ = function (index) {
    return this.childrenInternal.get_za3lpa$(index);
  };
  Container.prototype.getChildAtOrNull_za3lpa$ = function (index) {
    var tmp$;
    return (tmp$ = this._children) != null ? getOrNull(tmp$, index) : null;
  };
  Container.prototype.getChildByName_61zpoe$ = function (name) {
    var tmp$;
    var tmp$_0;
    if ((tmp$ = this._children) != null) {
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_1;
        tmp$_1 = tmp$.iterator();
        while (tmp$_1.hasNext()) {
          var element = tmp$_1.next();
          if (equals(element.name, name)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }}
        firstOrNull$result = null;
      }
       while (false);
      tmp$_0 = firstOrNull$result;
    } else
      tmp$_0 = null;
    return tmp$_0;
  };
  Container.prototype.removeChild_gohfih$ = function (view) {
    if (equals(view != null ? view.parent : null, this)) {
      view != null ? (view.removeFromParent(), Unit) : null;
    }};
  Container.prototype.removeChildren = function () {
    var tmp$, tmp$_0;
    if ((tmp$ = this._children) != null) {
      var tmp$_1;
      var n = 0;
      while (n < tmp$.size) {
        var child = tmp$.get_za3lpa$((tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1));
        child.parent = null;
        child.index = -1;
      }
    }(tmp$_0 = this._children) != null ? (tmp$_0.clear(), Unit) : null;
  };
  Container.prototype.addChild_l5rad2$ = function (view) {
    this.plusAssign_l5rad2$(view);
  };
  Container.prototype.plusAssign_l5rad2$ = function (view) {
    view.removeFromParent();
    view.index = this.numChildren;
    this.childrenInternal.add_11rb$(view);
    view.parent = this;
    view.invalidate();
  };
  Container.prototype.get_za3lpa$ = function (index) {
    return this.getChildAt_za3lpa$(index);
  };
  Container.prototype.minusAssign_l5rad2$ = function (view) {
    this.removeChild_gohfih$(view);
  };
  Container.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    var tmp$;
    if ((tmp$ = this._children) != null) {
      var tmp$_0;
      var n = 0;
      while (n < tmp$.size) {
        tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)).render_8isv09$(ctx);
      }
    }};
  Container.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    this.bb_8tnmvw$_0.reset();
    var tmp$;
    if ((tmp$ = this._children) != null) {
      var tmp$_0;
      var n = 0;
      while (n < tmp$.size) {
        var child = tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0));
        child.getBounds_tvgmbo$(child, this.tempRect_nf3rlo$_0);
        add(this.bb_8tnmvw$_0, this.tempRect_nf3rlo$_0);
      }
    }this.bb_8tnmvw$_0.getBounds_2da8yn$(out);
  };
  Container.prototype.createInstance = function () {
    return new Container();
  };
  Container.prototype.clone = function () {
    var tmp$;
    var out = View.prototype.clone.call(this);
    if ((tmp$ = this._children) != null) {
      var tmp$_0;
      var n = 0;
      while (n < tmp$.size) {
        plusAssign(out, tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)).clone());
      }
    }return out;
  };
  Container.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Container',
    interfaces: [View]
  };
  function addTo($receiver, parent) {
    parent.plusAssign_l5rad2$($receiver);
    return $receiver;
  }
  function plusAssign($receiver, view) {
    var tmp$;
    var container = (tmp$ = $receiver) == null || Kotlin.isType(tmp$, Container) ? tmp$ : null;
    if (view != null)
      container != null ? (container.addChild_l5rad2$(view), Unit) : null;
  }
  function dummyView($receiver) {
    var $receiver_0 = new DummyView();
    $receiver.addChild_l5rad2$($receiver_0);
    return $receiver_0;
  }
  function DummyView() {
    View_init(this);
  }
  DummyView.prototype.createInstance = function () {
    return new DummyView();
  };
  DummyView.prototype.renderInternal_8isv09$ = function (ctx) {
  };
  DummyView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DummyView',
    interfaces: [View]
  };
  var ellipse_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.ellipse_neop41$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var Unit = Kotlin.kotlin.Unit;
    var Ellipse_init = _.com.soywiz.korge.view.Ellipse;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function ellipse$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, radiusX, radiusY, color_0, autoScaling, callback) {
      if (radiusX === void 0)
        radiusX = 16.0;
      if (radiusY === void 0)
        radiusY = 16.0;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (autoScaling === void 0)
        autoScaling = true;
      if (callback === void 0)
        callback = ellipse$lambda;
      var $receiver_0 = addTo(new Ellipse_init(radiusX, radiusY, color_0, autoScaling), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Ellipse(radiusX, radiusY, color_0, autoScaling) {
    if (radiusX === void 0)
      radiusX = 16.0;
    if (radiusY === void 0)
      radiusY = 16.0;
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (autoScaling === void 0)
      autoScaling = true;
    Graphics.call(this, autoScaling);
    this.radiusX_ahgv6z$_0 = new UIObservable(radiusX, Ellipse$radiusX$lambda(this));
    this.radiusY_ahgv64$_0 = new UIObservable(radiusY, Ellipse$radiusY$lambda(this));
    this.color = color_0;
    this.updateGraphics_4r3zej$_0();
  }
  var Ellipse$radiusX_metadata = new PropertyMetadata('radiusX');
  Object.defineProperty(Ellipse.prototype, 'radiusX', {
    get: function () {
      return this.radiusX_ahgv6z$_0.getValue_t0xcdd$(this, Ellipse$radiusX_metadata);
    },
    set: function (radiusX) {
      this.radiusX_ahgv6z$_0.setValue_cvomos$(this, Ellipse$radiusX_metadata, radiusX);
    }
  });
  var Ellipse$radiusY_metadata = new PropertyMetadata('radiusY');
  Object.defineProperty(Ellipse.prototype, 'radiusY', {
    get: function () {
      return this.radiusY_ahgv64$_0.getValue_t0xcdd$(this, Ellipse$radiusY_metadata);
    },
    set: function (radiusY) {
      this.radiusY_ahgv64$_0.setValue_cvomos$(this, Ellipse$radiusY_metadata, radiusY);
    }
  });
  Object.defineProperty(Ellipse.prototype, 'color', {
    get: function () {
      return this.colorMul;
    },
    set: function (value) {
      this.colorMul = value;
    }
  });
  Object.defineProperty(Ellipse.prototype, 'bwidth', {
    get: function () {
      return this.radiusX * 2;
    }
  });
  Object.defineProperty(Ellipse.prototype, 'bheight', {
    get: function () {
      return this.radiusY * 2;
    }
  });
  Ellipse.prototype.updateGraphics_4r3zej$_0 = function () {
    this.clear();
    this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color.Colors.WHITE, 1.0));
    try {
      ellipse(this, 0.0, 0.0, this.radiusX, this.radiusY);
    }finally {
      this.endFill();
    }
  };
  function Ellipse$radiusX$lambda(this$Ellipse) {
    return function (it) {
      this$Ellipse.updateGraphics_4r3zej$_0();
      return Unit;
    };
  }
  function Ellipse$radiusY$lambda(this$Ellipse) {
    return function (it) {
      this$Ellipse.updateGraphics_4r3zej$_0();
      return Unit;
    };
  }
  Ellipse.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Ellipse',
    interfaces: [Graphics]
  };
  function AG$renderToTexture$lambda(it) {
    return Unit;
  }
  function FilteredContainer() {
    Container.call(this);
  }
  FilteredContainer.prototype.renderInternal_8isv09$ = function (ctx) {
    var bounds = this.getLocalBounds_2da8yn$();
    var width = numberToInt(bounds.width);
    var height = numberToInt(bounds.height);
    ctx.flush();
    var $this = ctx.ag;
    var rb = $this.renderBuffers.alloc();
    $this.frameRenderBuffers.add_11rb$(rb);
    var oldRenderBuffer = $this.currentRenderBuffer;
    rb.setSize_vux9f0$(width, height);
    $this.setRenderBuffer_m67x29$(rb);
    try {
      $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
      var oldScissors = ctx.batch.scissor;
      ctx.batch.scissor = null;
      try {
        Container.prototype.renderInternal_8isv09$.call(this, ctx);
        ctx.flush();
      }finally {
        ctx.batch.scissor = oldScissors;
      }
    }finally {
      $this.setRenderBuffer_m67x29$(oldRenderBuffer);
    }
    try {
      var it = rb.tex;
      Texture.Companion.invoke_l6jlr1$(it, width, height);
      ctx.flush();
    }finally {
      $this.frameRenderBuffers.remove_11rb$(rb);
      $this.renderBuffers.free_11rb$(rb);
    }
  };
  FilteredContainer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FilteredContainer',
    interfaces: [View$Reference, Container]
  };
  var fixedSizeContainer = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.fixedSizeContainer_rcks04$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var FixedSizeContainer_init = _.com.soywiz.korge.view.FixedSizeContainer;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function fixedSizeContainer$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, clip, callback) {
      if (clip === void 0)
        clip = false;
      if (callback === void 0)
        callback = fixedSizeContainer$lambda;
      var $receiver_0 = addTo(new FixedSizeContainer_init(width, height, clip), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var fixedSizeContainer_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.fixedSizeContainer_xzpz9w$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var FixedSizeContainer_init = _.com.soywiz.korge.view.FixedSizeContainer;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function fixedSizeContainer$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, clip, callback) {
      if (clip === void 0)
        clip = false;
      if (callback === void 0)
        callback = fixedSizeContainer$lambda;
      var $receiver_0 = addTo(new FixedSizeContainer_init(numberToDouble(width), numberToDouble(height), clip), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function FixedSizeContainer(width, height, clip) {
    if (width === void 0)
      width = 100.0;
    if (height === void 0)
      height = 100.0;
    if (clip === void 0)
      clip = false;
    Container.call(this);
    this.width_qh61hh$_0 = width;
    this.height_ujosw2$_0 = height;
    this.clip = clip;
    this.tempBounds_hhpuv4$_0 = Rectangle.Companion.invoke();
  }
  Object.defineProperty(FixedSizeContainer.prototype, 'width', {
    get: function () {
      return this.width_qh61hh$_0;
    },
    set: function (width) {
      this.width_qh61hh$_0 = width;
    }
  });
  Object.defineProperty(FixedSizeContainer.prototype, 'height', {
    get: function () {
      return this.height_ujosw2$_0;
    },
    set: function (height) {
      this.height_ujosw2$_0 = height;
    }
  });
  FixedSizeContainer.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    var width = this.width;
    var height = this.height;
    out.setTo_6y0v78$(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height));
  };
  FixedSizeContainer.prototype.toString = function () {
    var out = Container.prototype.toString.call(this);
    out += ':size=(' + get_niceStr(this.width) + 'x' + get_niceStr(this.height) + ')';
    return out;
  };
  FixedSizeContainer.prototype.renderInternal_8isv09$ = function (ctx) {
    if (this.clip) {
      var c2d = ctx.ctx2d;
      var bounds = this.getGlobalBounds_2da8yn$(this.tempBounds_hhpuv4$_0);
      var x = bounds.x;
      var y = bounds.y;
      var width = bounds.width;
      var height = bounds.height;
      var oldScissor = c2d.batch.scissor;
      var returnScissor = c2d.scissorStart_e1n26z$(c2d.tempScissor.setTo_tjonv8$(numberToInt(x), numberToInt(y), numberToInt(width), numberToInt(height)));
      try {
        Container.prototype.renderInternal_8isv09$.call(this, ctx);
      }finally {
        c2d.scissorEnd_w8dcdw$(oldScissor, returnScissor);
      }
    } else {
      Container.prototype.renderInternal_8isv09$.call(this, ctx);
    }
  };
  FixedSizeContainer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FixedSizeContainer',
    interfaces: [View$Reference, Container]
  };
  function Fonts() {
    Fonts$Companion_getInstance();
    this.fonts = HashMap_init();
  }
  Fonts.prototype.registerFont_c58lmv$ = function (name, bmp) {
    var tmp$ = this.fonts;
    var key = name.toLowerCase();
    tmp$.put_xwzc9p$(key, bmp);
  };
  Fonts.prototype.getBitmapFont_bm4lxs$ = function (name, size) {
    var tmp$;
    var nameLC = name.toLowerCase();
    var $receiver = this.fonts;
    var tmp$_0;
    if (!(Kotlin.isType(tmp$_0 = $receiver, Map) ? tmp$_0 : throwCCE()).containsKey_11rb$(nameLC)) {
      this.registerFont_c58lmv$(name, BitmapFont.Companion.invoke_4hh8u8$(new SystemFont(name), Math_0.min(size, 32), CharacterSet.Companion.LATIN_ALL));
    }return (tmp$ = this.fonts.get_11rb$(nameLC)) != null ? tmp$ : Fonts$Companion_getInstance().defaultFont;
  };
  Fonts.prototype.getBitmapFont_a1ixm2$ = function (face, size) {
    if (Kotlin.isType(face, Html$FontFace$Named))
      return this.getBitmapFont_bm4lxs$(face.name, size);
    else if (Kotlin.isType(face, Html$FontFace$Bitmap))
      return face.font;
    else
      return invalidOp('Unsupported font face: ' + face);
  };
  Fonts.prototype.getBitmapFont_ktnn5$ = function (format) {
    return this.getBitmapFont_a1ixm2$(format.computedFace, format.computedSize);
  };
  Fonts.prototype.named_61zpoe$ = function (name) {
    return new Html$FontFace$Named(name);
  };
  Fonts.prototype.getBounds_1y5lg$ = function (text, format, out) {
    getBounds(this.getBitmapFont_a1ixm2$(format.computedFace, format.computedSize), text, format, out);
  };
  function Fonts$Companion() {
    Fonts$Companion_instance = this;
  }
  Object.defineProperty(Fonts$Companion.prototype, 'fonts', {
    get: function () {
      return get_Fonts_fonts();
    }
  });
  Object.defineProperty(Fonts$Companion.prototype, 'defaultFont', {
    get: function () {
      return get_debugBmpFont();
    }
  });
  Fonts$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Fonts$Companion_instance = null;
  function Fonts$Companion_getInstance() {
    if (Fonts$Companion_instance === null) {
      new Fonts$Companion();
    }return Fonts$Companion_instance;
  }
  Fonts.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Fonts',
    interfaces: [Html$MetricsProvider]
  };
  function Fonts_fonts$lambda() {
    return new Fonts();
  }
  var Fonts_fonts;
  function get_Fonts_fonts() {
    return Fonts_fonts.value;
  }
  var graphics = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.graphics_x4ijcn$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Graphics_init = _.com.soywiz.korge.view.Graphics;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function graphics$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, autoScaling, callback) {
      if (autoScaling === void 0)
        autoScaling = false;
      if (callback === void 0)
        callback = graphics$lambda;
      var $receiver_0 = addTo(new Graphics_init(autoScaling), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var sgraphics = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.sgraphics_gtcasc$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Graphics_init = _.com.soywiz.korge.view.Graphics;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function sgraphics$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, callback) {
      if (callback === void 0)
        callback = sgraphics$lambda;
      var $receiver_0 = addTo(new Graphics_init(true), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Graphics(autoScaling) {
    if (autoScaling === void 0)
      autoScaling = false;
    Image.call(this, bitmap.Bitmaps.transparent);
    this.autoScaling = autoScaling;
    this.graphicsPathPool_8be2vx$ = new Pool(Graphics$graphicsPathPool$lambda, void 0, Graphics$graphicsPathPool$lambda_0);
    this.shapeVersion_lz72oh$_0 = 0;
    this.shapes_ma9d56$_0 = ArrayList_init_1();
    this.compoundShape_se2l06$_0 = new CompoundShape(this.shapes_ma9d56$_0);
    this.fill_8xzolh$_0 = null;
    this.stroke_gcdx74$_0 = null;
    this.currentPath = this.graphicsPathPool_8be2vx$.alloc();
    this.dirty = true;
    this.hitShapeVersion_5i1n6m$_0 = -1;
    this.hitShapeAnchorVersion_6gxxhl$_0 = -1;
    this.tempVectorPath_lj4bro$_0 = new VectorPath();
    this.tempMatrix_amm1ub$_0 = new Matrix();
    this.customHitShape = null;
    this.thickness_1lzzdk$_0 = 1.0;
    this.pixelHinting_sjeydp$_0 = false;
    this.scaleMode_ij83vl$_0 = LineScaleMode.NORMAL;
    this.startCap_rbgifs$_0 = LineCap.BUTT;
    this.endCap_btcvn3$_0 = LineCap.BUTT;
    this.lineJoin_wiiwh6$_0 = LineJoin.MITER;
    this.miterLimit_rri8e$_0 = 4.0;
    this.hitTestUsingShapes = true;
    this.bb_jngok8$_0 = new BoundsBuilder();
    this.bounds_fxpyvn$_0 = Rectangle.Companion.invoke();
    this.renderedAtScaleX_7nml1q$_0 = 1.0;
    this.renderedAtScaleY_7nml0v$_0 = 1.0;
    this.matrixTransform_3qzf27$_0 = new Matrix$Transform();
    this.useNativeRendering = true;
  }
  Object.defineProperty(Graphics.prototype, 'hitShape', {
    get: function () {
      if (this.customHitShape != null)
        return this.customHitShape;
      if (this.hitShapeVersion_5i1n6m$_0 !== this.shapeVersion_lz72oh$_0) {
        this.hitShapeVersion_5i1n6m$_0 = this.shapeVersion_lz72oh$_0;
        this.tempVectorPath_lj4bro$_0.clear();
        this.tempVectorPath_lj4bro$_0.write_qtj57e$(this.compoundShape_se2l06$_0.getPath_lcui0n$(), this.tempMatrix_amm1ub$_0.identity());
      }return this.tempVectorPath_lj4bro$_0;
    },
    set: function (value) {
      this.customHitShape = value;
    }
  });
  Graphics.prototype.dirty_o14v8n$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.dirty_o14v8n$', function (callback) {
    this.dirty = true;
    callback();
    return this;
  });
  Graphics.prototype.clear = function () {
    var tmp$;
    tmp$ = this.shapes_ma9d56$_0.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var tmp$_0, tmp$_1, tmp$_2;
      if ((tmp$_2 = (tmp$_1 = Kotlin.isType(tmp$_0 = element, StyledShape) ? tmp$_0 : null) != null ? tmp$_1.path : null) != null) {
        this.graphicsPathPool_8be2vx$.free_11rb$(tmp$_2);
      }}
    this.shapes_ma9d56$_0.clear();
    this.currentPath.clear();
  };
  Graphics.prototype.lineStyle_881qbv$ = function (thickness, color, alpha) {
    throw new NotImplementedError_init();
  };
  Object.defineProperty(Graphics.prototype, 'lastX', {
    get: function () {
      return this.currentPath.lastX;
    }
  });
  Object.defineProperty(Graphics.prototype, 'lastY', {
    get: function () {
      return this.currentPath.lastY;
    }
  });
  Object.defineProperty(Graphics.prototype, 'totalPoints', {
    get: function () {
      return this.currentPath.totalPoints;
    }
  });
  Graphics.prototype.close = function () {
    this.currentPath.close();
  };
  Graphics.prototype.cubicTo_15yvbs$ = function (cx1, cy1, cx2, cy2, ax, ay) {
    this.currentPath.cubicTo_15yvbs$(cx1, cy1, cx2, cy2, ax, ay);
  };
  Graphics.prototype.lineTo_lu1900$ = function (x, y) {
    this.currentPath.lineTo_lu1900$(x, y);
  };
  Graphics.prototype.moveTo_lu1900$ = function (x, y) {
    this.currentPath.moveTo_lu1900$(x, y);
  };
  Graphics.prototype.quadTo_6y0v78$ = function (cx, cy, ax, ay) {
    this.currentPath.quadTo_6y0v78$(cx, cy, ax, ay);
  };
  Graphics.prototype.fill_5pc01c$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.fill_5pc01c$', function (color, alpha, callback) {
    if (alpha === void 0)
      alpha = 1.0;
    this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color, alpha));
    try {
      callback();
    }finally {
      this.endFill();
    }
  });
  Graphics.prototype.fill_n8gvc8$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.fill_n8gvc8$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (color, alpha, callback) {
      this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color, numberToDouble(alpha)));
      try {
        callback();
      }finally {
        this.endFill();
      }
    };
  }));
  Graphics.prototype.fill_gongu6$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.fill_gongu6$', function (paint, callback) {
    this.beginFill_9bhh2t$(paint);
    try {
      callback();
    }finally {
      this.endFill();
    }
  });
  Graphics.prototype.stroke_qr3jmc$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.stroke_qr3jmc$', wrapFunction(function () {
    var ColorPaint_init = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.vector.paint.ColorPaint;
    return function (color, info, callback) {
      this.beginStroke_emvel9$(new ColorPaint_init(color), info);
      try {
        callback();
      }finally {
        this.endStroke();
      }
    };
  }));
  Graphics.prototype.stroke_j109yo$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.stroke_j109yo$', function (paint, info, callback) {
    this.beginStroke_emvel9$(paint, info);
    try {
      callback();
    }finally {
      this.endStroke();
    }
  });
  Graphics.prototype.fillStroke_qvp509$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.fillStroke_qvp509$', function (fill, stroke, strokeInfo, callback) {
    this.beginFillStroke_3hgk8q$(fill, stroke, strokeInfo);
    try {
      callback();
    }finally {
      this.endFillStroke();
    }
  });
  Graphics.prototype.beginFillStroke_3hgk8q$ = function (fill, stroke, strokeInfo) {
    this.fill_8xzolh$_0 = fill;
    this.stroke_gcdx74$_0 = stroke;
    this.setStrokeInfo_h5uufk$_0(strokeInfo);
  };
  Graphics.prototype.beginFill_9bhh2t$ = function (paint) {
    this.dirty = true;
    this.fill_8xzolh$_0 = paint;
    this.currentPath.clear();
    return this;
  };
  Graphics.prototype.setStrokeInfo_h5uufk$_0 = function (info) {
    this.thickness_1lzzdk$_0 = info.thickness;
    this.pixelHinting_sjeydp$_0 = info.pixelHinting;
    this.scaleMode_ij83vl$_0 = info.scaleMode;
    this.startCap_rbgifs$_0 = info.startCap;
    this.endCap_btcvn3$_0 = info.endCap;
    this.lineJoin_wiiwh6$_0 = info.lineJoin;
    this.miterLimit_rri8e$_0 = info.miterLimit;
  };
  Graphics.prototype.beginStroke_emvel9$ = function (paint, info) {
    this.dirty = true;
    this.setStrokeInfo_h5uufk$_0(info);
    this.stroke_gcdx74$_0 = paint;
    this.currentPath.clear();
    return this;
  };
  Graphics.prototype.toColorFill_kzd6w3$ = function (color, alpha) {
    return new ColorPaint(RGBA.Companion.invoke_tjonv8$(color.r, color.g, color.b, clamp(numberToInt(color.a * alpha), 0, 255)));
  };
  Graphics.prototype.beginFill_kzd6w3$ = function (color, alpha) {
    return this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color, alpha));
  };
  Graphics.prototype.shape_d3txdv$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.shape_d3txdv$', function (shape) {
    this.dirty = true;
    this.currentPath.write_d3txdv$(shape);
    return this;
  });
  Graphics.prototype.shape_qtj57e$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.Graphics.shape_qtj57e$', function (shape, matrix) {
    this.dirty = true;
    this.currentPath.write_qtj57e$(shape, matrix);
    return this;
  });
  Graphics.prototype.endFill = function () {
    this.dirty = true;
    var tmp$;
    tmp$ = this.shapes_ma9d56$_0;
    var tmp$_0;
    var element = new FillShape(this.currentPath, null, (tmp$_0 = this.fill_8xzolh$_0) != null ? tmp$_0 : new ColorPaint(color.Colors.RED), new Matrix());
    tmp$.add_11rb$(element);
    this.currentPath = this.graphicsPathPool_8be2vx$.alloc();
    this.shapeVersion_lz72oh$_0 = this.shapeVersion_lz72oh$_0 + 1 | 0;
    return this;
  };
  Graphics.prototype.endStroke = function () {
    this.dirty = true;
    var tmp$;
    tmp$ = this.shapes_ma9d56$_0;
    var tmp$_0;
    var element = new PolylineShape(this.currentPath, null, (tmp$_0 = this.stroke_gcdx74$_0) != null ? tmp$_0 : new ColorPaint(color.Colors.RED), new Matrix(), this.thickness_1lzzdk$_0, this.pixelHinting_sjeydp$_0, this.scaleMode_ij83vl$_0, this.startCap_rbgifs$_0, this.endCap_btcvn3$_0, this.lineJoin_wiiwh6$_0, this.miterLimit_rri8e$_0);
    tmp$.add_11rb$(element);
    this.currentPath = this.graphicsPathPool_8be2vx$.alloc();
    this.shapeVersion_lz72oh$_0 = this.shapeVersion_lz72oh$_0 + 1 | 0;
    return this;
  };
  Graphics.prototype.endFillStroke = function () {
    this.dirty = true;
    var tmp$;
    tmp$ = this.shapes_ma9d56$_0;
    var tmp$_0;
    var element = new FillShape(this.currentPath, null, (tmp$_0 = this.fill_8xzolh$_0) != null ? tmp$_0 : new ColorPaint(color.Colors.RED), new Matrix());
    tmp$.add_11rb$(element);
    var tmp$_1;
    tmp$_1 = this.shapes_ma9d56$_0;
    var tmp$_2;
    var $receiver = this.graphicsPathPool_8be2vx$.alloc();
    $receiver.write_d3txdv$(this.currentPath);
    var element_0 = new PolylineShape($receiver, null, (tmp$_2 = this.stroke_gcdx74$_0) != null ? tmp$_2 : new ColorPaint(color.Colors.RED), new Matrix(), this.thickness_1lzzdk$_0, this.pixelHinting_sjeydp$_0, this.scaleMode_ij83vl$_0, this.startCap_rbgifs$_0, this.endCap_btcvn3$_0, this.lineJoin_wiiwh6$_0, this.miterLimit_rri8e$_0);
    tmp$_1.add_11rb$(element_0);
    this.currentPath = this.graphicsPathPool_8be2vx$.alloc();
    this.shapeVersion_lz72oh$_0 = this.shapeVersion_lz72oh$_0 + 1 | 0;
    return this;
  };
  Object.defineProperty(Graphics.prototype, '_sLeft_8be2vx$', {
    get: function () {
      return this.sLeft;
    }
  });
  Object.defineProperty(Graphics.prototype, '_sTop_8be2vx$', {
    get: function () {
      return this.sTop;
    }
  });
  Object.defineProperty(Graphics.prototype, 'sLeft', {
    get: function () {
      return this.bounds_fxpyvn$_0.x - this.anchorDispX;
    }
  });
  Object.defineProperty(Graphics.prototype, 'sTop', {
    get: function () {
      return this.bounds_fxpyvn$_0.y - this.anchorDispY;
    }
  });
  Object.defineProperty(Graphics.prototype, 'bwidth', {
    get: function () {
      return this.bitmap.width / this.renderedAtScaleX_7nml1q$_0;
    }
  });
  Object.defineProperty(Graphics.prototype, 'bheight', {
    get: function () {
      return this.bitmap.height / this.renderedAtScaleY_7nml0v$_0;
    }
  });
  Graphics.prototype.createImage_ck0n1b$_0 = function (width, height) {
    return this.useNativeRendering ? NativeImage(width, height) : new Bitmap32(width, height, void 0, true);
  };
  Graphics.prototype.renderInternal_8isv09$ = function (ctx) {
    if (this.autoScaling) {
      this.matrixTransform_3qzf27$_0.setMatrix_1ktkmn$(this.globalMatrix);
      var x = this.matrixTransform_3qzf27$_0.scaleX;
      var sx = Math_0.abs(x);
      var x_0 = this.matrixTransform_3qzf27$_0.scaleY;
      var sy = Math_0.abs(x_0);
      var x_1 = sx / this.renderedAtScaleX_7nml1q$_0 - 1.0;
      var diffX = Math_0.abs(x_1);
      var x_2 = sy / this.renderedAtScaleY_7nml0v$_0 - 1.0;
      var diffY = Math_0.abs(x_2);
      if (diffX >= 0.1 || diffY >= 0.1) {
        this.renderedAtScaleX_7nml1q$_0 = sx;
        this.renderedAtScaleY_7nml0v$_0 = sy;
        this.dirty = true;
      }}if (this.dirty) {
      this.dirty = false;
      this.getLocalBoundsInternalNoAnchor_2da8yn$(this.bounds_fxpyvn$_0);
      ctx.agBitmapTextureManager.removeBitmap_uler2c$(this.bitmap.bmp);
      var image = this.createImage_ck0n1b$_0(coerceAtLeast(numberToInt(this.bounds_fxpyvn$_0.width * this.renderedAtScaleX_7nml1q$_0), 1), coerceAtLeast(numberToInt(this.bounds_fxpyvn$_0.height * this.renderedAtScaleY_7nml0v$_0), 1));
      image.lock();
      try {
        var ctx_0 = image.getContext2d_6taknv$(true);
        try {
          ctx_0.scale_lu1900$(this.renderedAtScaleX_7nml1q$_0, this.renderedAtScaleY_7nml0v$_0);
          ctx_0.translate_lu1900$(-this.bounds_fxpyvn$_0.x, -this.bounds_fxpyvn$_0.y);
          this.compoundShape_se2l06$_0.draw_vuz2tk$(ctx_0);
        }finally {
          ctx_0.dispose();
        }
      }finally {
        image.unlock_2epnwg$(null);
      }
      this.bitmap = slice(image);
    }Image.prototype.renderInternal_8isv09$.call(this, ctx);
  };
  Graphics.prototype.getLocalBoundsInternalNoAnchor_2da8yn$ = function (out) {
    this.bb_jngok8$_0.reset();
    var $receiver = this.shapes_ma9d56$_0;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).addBounds_w97n1m$(this.bb_jngok8$_0);
    }
    this.bb_jngok8$_0.getBounds_2da8yn$(out);
  };
  Graphics.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    this.getLocalBoundsInternalNoAnchor_2da8yn$(out);
    out.displace_lu1900$(-this.anchorDispX, -this.anchorDispY);
  };
  function Graphics$graphicsPathPool$lambda(it) {
    it.clear();
    return Unit;
  }
  function Graphics$graphicsPathPool$lambda_0(it) {
    return new GraphicsPath();
  }
  Graphics.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Graphics',
    interfaces: [VectorBuilder, Image]
  };
  var image = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.image_bsvffa$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Image_init = _.com.soywiz.korge.view.Image;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function image$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, texture, anchorX, anchorY, callback) {
      if (anchorX === void 0)
        anchorX = 0.0;
      if (anchorY === void 0)
        anchorY = 0.0;
      if (callback === void 0)
        callback = image$lambda;
      var $receiver_0 = addTo(new Image_init(texture, anchorX, anchorY), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var image_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.image_aw59w$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Image_init = _.com.soywiz.korge.view.Image_init_8drxwf$;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function image$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, texture, anchorX, anchorY, callback) {
      if (anchorX === void 0)
        anchorX = 0.0;
      if (anchorY === void 0)
        anchorY = 0.0;
      if (callback === void 0)
        callback = image$lambda;
      var $receiver_0 = addTo(Image_init(texture, anchorX, anchorY), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Image(bitmap, anchorX, anchorY, hitShape, smoothing) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    RectBase.call(this, anchorX, anchorY, hitShape, smoothing);
    this.baseBitmap = bitmap;
  }
  Object.defineProperty(Image.prototype, 'bitmap', {
    get: function () {
      return this.baseBitmap;
    },
    set: function (v) {
      this.baseBitmap = v;
    }
  });
  Object.defineProperty(Image.prototype, 'texture', {
    get: function () {
      return this.baseBitmap;
    },
    set: function (v) {
      this.baseBitmap = v;
    }
  });
  Object.defineProperty(Image.prototype, 'bwidth', {
    get: function () {
      return this.bitmap.width;
    }
  });
  Object.defineProperty(Image.prototype, 'bheight', {
    get: function () {
      return this.bitmap.height;
    }
  });
  Image.prototype.createInstance = function () {
    return new Image(this.bitmap, this.anchorX, this.anchorY, this.hitShape, this.smoothing);
  };
  Image.prototype.toString = function () {
    return RectBase.prototype.toString.call(this) + (':bitmap=' + this.bitmap);
  };
  Image.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Image',
    interfaces: [RectBase]
  };
  function Image_init(bitmap, anchorX, anchorY, hitShape, smoothing, $this) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    $this = $this || Object.create(Image.prototype);
    Image.call($this, slice(bitmap), anchorX, anchorY, hitShape, smoothing);
    return $this;
  }
  function Mesh(texture, vertices, uvs, indices, drawMode) {
    if (texture === void 0)
      texture = null;
    if (vertices === void 0) {
      vertices = sliceFloat32Buffer(new ArrayBuffer_init(0 * 4 | 0));
    }if (uvs === void 0) {
      uvs = sliceFloat32Buffer(new ArrayBuffer_init(0 * 4 | 0));
    }if (indices === void 0)
      indices = Uint16BufferAlloc(0);
    if (drawMode === void 0)
      drawMode = Mesh$DrawModes$Triangles_getInstance();
    View_init(this);
    this.texture = texture;
    this.vertices = vertices;
    this.uvs = uvs;
    this.indices = indices;
    this.drawMode = drawMode;
    this.dirty = 0;
    this.indexDirty = 0;
    this.pivotX = 0.0;
    this.pivotY = 0.0;
    this.tva_wx6stn$_0 = new TexturedVertexArray(0, new Int32Array([]));
    this.bb_sk2kcq$_0 = new BoundsBuilder();
    this.localBounds_n8ewd2$_0 = Rectangle.Companion.invoke();
  }
  function Mesh$DrawModes(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Mesh$DrawModes_initFields() {
    Mesh$DrawModes_initFields = function () {
    };
    Mesh$DrawModes$Triangles_instance = new Mesh$DrawModes('Triangles', 0);
    Mesh$DrawModes$TriangleStrip_instance = new Mesh$DrawModes('TriangleStrip', 1);
  }
  var Mesh$DrawModes$Triangles_instance;
  function Mesh$DrawModes$Triangles_getInstance() {
    Mesh$DrawModes_initFields();
    return Mesh$DrawModes$Triangles_instance;
  }
  var Mesh$DrawModes$TriangleStrip_instance;
  function Mesh$DrawModes$TriangleStrip_getInstance() {
    Mesh$DrawModes_initFields();
    return Mesh$DrawModes$TriangleStrip_instance;
  }
  Mesh$DrawModes.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DrawModes',
    interfaces: [Enum]
  };
  function Mesh$DrawModes$values() {
    return [Mesh$DrawModes$Triangles_getInstance(), Mesh$DrawModes$TriangleStrip_getInstance()];
  }
  Mesh$DrawModes.values = Mesh$DrawModes$values;
  function Mesh$DrawModes$valueOf(name) {
    switch (name) {
      case 'Triangles':
        return Mesh$DrawModes$Triangles_getInstance();
      case 'TriangleStrip':
        return Mesh$DrawModes$TriangleStrip_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.Mesh.DrawModes.' + name);
    }
  }
  Mesh$DrawModes.valueOf_61zpoe$ = Mesh$DrawModes$valueOf;
  Object.defineProperty(Mesh.prototype, 'textureNN', {
    get: function () {
      var tmp$;
      return (tmp$ = this.texture) != null ? tmp$ : bitmap.Bitmaps.white;
    }
  });
  Mesh.prototype.updatedVertices = function () {
    this.dirtyVertices = true;
  };
  Mesh.prototype.recomputeVerticesIfRequired_wdfwi9$_0 = function () {
    var tmp$, tmp$_0;
    if (!this.dirtyVertices)
      return;
    this.dirtyVertices = false;
    var m = this.globalMatrix;
    var cmul = this.renderColorMul;
    var cadd = this.renderColorAdd;
    var vcount = this.vertices.length / 2 | 0;
    var isize = this.indices.size;
    this.tva_wx6stn$_0 = vcount > this.tva_wx6stn$_0.initialVcount || isize > this.tva_wx6stn$_0.indices.length ? new TexturedVertexArray(vcount, new Int32Array(isize)) : this.tva_wx6stn$_0;
    this.tva_wx6stn$_0.vcount = vcount;
    this.tva_wx6stn$_0.isize = isize;
    this.bb_sk2kcq$_0.reset();
    tmp$ = this.tva_wx6stn$_0.isize;
    for (var n = 0; n < tmp$; n++)
      this.tva_wx6stn$_0.indices[n] = this.indices.get_za3lpa$(n);
    tmp$_0 = this.tva_wx6stn$_0.vcount;
    for (var n_0 = 0; n_0 < tmp$_0; n_0++) {
      var x = this.vertices[(n_0 * 2 | 0) + 0 | 0] + this.pivotX;
      var y = this.vertices[(n_0 * 2 | 0) + 1 | 0] + this.pivotY;
      var tx = fastTransformX(m, x, y);
      var ty = fastTransformY(m, x, y);
      this.tva_wx6stn$_0.select_za3lpa$(n_0).xy_lu1900$(tx, ty).uv_dleff0$(this.uvs[(n_0 * 2 | 0) + 0 | 0], this.uvs[(n_0 * 2 | 0) + 1 | 0]).cols_3hpxcz$(cmul, cadd);
      this.bb_sk2kcq$_0.add_lu1900$(x, y);
    }
    this.bb_sk2kcq$_0.getBounds_2da8yn$(this.localBounds_n8ewd2$_0);
  };
  Mesh.prototype.renderInternal_8isv09$ = function (ctx) {
    this.recomputeVerticesIfRequired_wdfwi9$_0();
    ctx.batch.drawVertices_8go32q$(this.tva_wx6stn$_0, ctx.getTex_9byvhi$(this.textureNN).base, true, this.renderBlendMode.factors);
  };
  Mesh.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    this.recomputeVerticesIfRequired_wdfwi9$_0();
    out.copyFrom_2da8yn$(this.localBounds_n8ewd2$_0);
  };
  Mesh.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Mesh',
    interfaces: [View]
  };
  function pivot($receiver, x, y) {
    $receiver.pivotX = x;
    $receiver.pivotY = y;
    return $receiver;
  }
  var ninePatch = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.ninePatch_yck3qr$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var NinePatch_init = _.com.soywiz.korge.view.NinePatch;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function ninePatch$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, tex, width, height, left, top, right, bottom, callback) {
      if (callback === void 0)
        callback = ninePatch$lambda;
      var $receiver_0 = addTo(new NinePatch_init(tex, width, height, left, top, right, bottom), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function NinePatch(tex, width, height, left, top, right, bottom) {
    View_init(this);
    this.tex = tex;
    this.width_8rytfn$_0 = width;
    this.height_35700a$_0 = height;
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.smoothing = true;
    this.sLeft_0 = 0.0;
    this.sTop_0 = 0.0;
    this.posCuts = [new Point(0, 0), new Point(this.left, this.top), new Point(1.0 - this.right, 1.0 - this.bottom), new Point(1.0, 1.0)];
    this.texCuts = [new Point(0, 0), new Point(this.left, this.top), new Point(1.0 - this.right, 1.0 - this.bottom), new Point(1.0, 1.0)];
  }
  Object.defineProperty(NinePatch.prototype, 'width', {
    get: function () {
      return this.width_8rytfn$_0;
    },
    set: function (width) {
      this.width_8rytfn$_0 = width;
    }
  });
  Object.defineProperty(NinePatch.prototype, 'height', {
    get: function () {
      return this.height_35700a$_0;
    },
    set: function (height) {
      this.height_35700a$_0 = height;
    }
  });
  NinePatch.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    var texLeftWidth = this.tex.width * this.left;
    var texTopHeight = this.tex.height * this.top;
    var texRighttWidth = this.tex.width * this.right;
    var texBottomHeight = this.tex.height * this.bottom;
    var ratioX = this.width < this.tex.width ? this.width / this.tex.width : 1.0;
    var ratioY = this.height < this.tex.height ? this.height / this.tex.height : 1.0;
    var actualRatioX = Math_0.min(ratioX, ratioY);
    var actualRatioY = Math_0.min(ratioX, ratioY);
    this.posCuts[1].setTo_lu1900$(texLeftWidth * actualRatioX / this.width, texTopHeight * actualRatioY / this.height);
    this.posCuts[2].setTo_lu1900$(1.0 - texRighttWidth * actualRatioX / this.width, 1.0 - texBottomHeight * actualRatioY / this.height);
    ctx.batch.drawNinePatch_3jdr9x$(ctx.getTex_9byvhi$(this.tex), this.sLeft_0, this.sTop_0, this.width, this.height, this.posCuts, this.texCuts, this.globalMatrix, this.smoothing, this.renderColorMul, this.renderColorAdd, this.renderBlendMode.factors);
  };
  NinePatch.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_6y0v78$(this.sLeft_0, this.sTop_0, this.width, this.height);
  };
  NinePatch.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NinePatch',
    interfaces: [View]
  };
  var ninePatch_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.ninePatch_acklyn$', wrapFunction(function () {
    var NinePatchEx_init = _.com.soywiz.korge.view.NinePatchEx;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    return function ($receiver, tex, width, height, callback) {
      var $receiver_0 = addTo(new NinePatchEx_init(tex, width, height), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var ninePatch_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.ninePatch_qlcbrr$', wrapFunction(function () {
    var NinePatchEx = _.com.soywiz.korge.view.NinePatchEx;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    return function ($receiver, ninePatch, width, height, callback) {
      if (width === void 0)
        width = ninePatch.dwidth;
      if (height === void 0)
        height = ninePatch.dheight;
      var $receiver_0 = addTo(NinePatchEx.Companion.invoke_yiqimz$(ninePatch, width, height), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function NinePatchEx(ninePatch, width, height) {
    NinePatchEx$Companion_getInstance();
    View_init(this);
    this.ninePatch = ninePatch;
    this.width_6391me$_0 = width;
    this.height_fe9w7x$_0 = height;
    this.smoothing = true;
    this.bounds_0 = RectangleInt.Companion.invoke();
  }
  Object.defineProperty(NinePatchEx.prototype, 'width', {
    get: function () {
      return this.width_6391me$_0;
    },
    set: function (width) {
      this.width_6391me$_0 = width;
    }
  });
  Object.defineProperty(NinePatchEx.prototype, 'height', {
    get: function () {
      return this.height_fe9w7x$_0;
    },
    set: function (height) {
      this.height_fe9w7x$_0 = height;
    }
  });
  function NinePatchEx$Companion() {
    NinePatchEx$Companion_instance = this;
  }
  NinePatchEx$Companion.prototype.invoke_yiqimz$ = function (ninePatch, width, height) {
    if (width === void 0)
      width = ninePatch.width;
    if (height === void 0)
      height = ninePatch.height;
    return new NinePatchEx(NinePatchEx$NinePatchEx$Tex_init(ninePatch), width, height);
  };
  NinePatchEx$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var NinePatchEx$Companion_instance = null;
  function NinePatchEx$Companion_getInstance() {
    if (NinePatchEx$Companion_instance === null) {
      new NinePatchEx$Companion();
    }return NinePatchEx$Companion_instance;
  }
  function NinePatchEx$renderInternal$lambda$lambda(closure$ctx, this$NinePatchEx, closure$m) {
    return function (segment, x, y, width, height) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_2 = closure$ctx.batch;
      tmp$ = closure$ctx.getTex_9byvhi$(this$NinePatchEx.ninePatch.getSliceTex_5nxubg$(segment));
      tmp$_0 = this$NinePatchEx.renderColorMul;
      tmp$_1 = this$NinePatchEx.renderColorAdd;
      tmp$_2.drawQuad_w9nimi$(tmp$, x, y, width, height, closure$m, this$NinePatchEx.smoothing, tmp$_0, tmp$_1, this$NinePatchEx.renderBlendMode.factors);
      return Unit;
    };
  }
  NinePatchEx.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    var m = this.globalMatrix;
    var xscale = m.a;
    var yscale = m.d;
    setTo(this.bounds_0, 0, 0, numberToInt(this.width * xscale), numberToInt(this.height * yscale));
    var a = m.a;
    var b = m.b;
    var c = m.c;
    var d = m.d;
    var tx = m.tx;
    var ty = m.ty;
    try {
      m.prescale_lu1900$(1.0 / xscale, 1.0 / yscale);
      this.ninePatch.info.computeScale_89dyev$(this.bounds_0, NinePatchEx$renderInternal$lambda$lambda(ctx, this, m));
    }finally {
      m.a = a;
      m.b = b;
      m.c = c;
      m.d = d;
      m.tx = tx;
      m.ty = ty;
    }
  };
  NinePatchEx.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_6y0v78$(0.0, 0.0, this.width, this.height);
  };
  function NinePatchEx$Tex(tex, info) {
    this.tex = tex;
    this.info = info;
    this.tex_xjwzxv$_fy3lch$_0 = new Extra$PropertyThis(void 0, NinePatchEx$Tex$tex$lambda(this));
  }
  Object.defineProperty(NinePatchEx$Tex.prototype, 'width', {
    get: function () {
      return this.info.width;
    }
  });
  Object.defineProperty(NinePatchEx$Tex.prototype, 'height', {
    get: function () {
      return this.info.height;
    }
  });
  var NinePatchEx$Tex$tex_metadata = new PropertyMetadata('tex');
  NinePatchEx$Tex.prototype.get_tex_xjwzxv$ = function ($receiver) {
    var $this = this.tex_xjwzxv$_fy3lch$_0;
    var getValue_e5fciw$result;
    getValue_e5fciw$break: do {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = $receiver.extra;
      tmp$_0 = (tmp$ = $this.name) != null ? tmp$ : NinePatchEx$Tex$tex_metadata.callableName;
      var res = (tmp$_2 = tmp$_1 != null ? tmp$_1.get_11rb$(tmp$_0) : null) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      if (res == null) {
        var r = $this.defaultGen($receiver);
        var tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if ($receiver.extra == null)
          $receiver.extra = LinkedHashMap_init();
        tmp$_7 = $receiver.extra;
        tmp$_4 = (tmp$_3 = $this.name) != null ? tmp$_3 : NinePatchEx$Tex$tex_metadata.callableName;
        tmp$_6 = (tmp$_5 = r) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
        if (tmp$_7 != null) {
          tmp$_7.put_xwzc9p$(tmp$_4, tmp$_6);
        }getValue_e5fciw$result = r;
        break getValue_e5fciw$break;
      }getValue_e5fciw$result = res;
    }
     while (false);
    return getValue_e5fciw$result;
  };
  NinePatchEx$Tex.prototype.getSliceTex_5nxubg$ = function (s) {
    return this.get_tex_xjwzxv$(s);
  };
  function NinePatchEx$Tex$tex$lambda(this$Tex) {
    return function ($receiver) {
      return this$Tex.tex.slice_t9mhyo$($receiver.rect);
    };
  }
  NinePatchEx$Tex.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Tex',
    interfaces: []
  };
  function NinePatchEx$NinePatchEx$Tex_init(ninePatch, $this) {
    $this = $this || Object.create(NinePatchEx$Tex.prototype);
    NinePatchEx$Tex.call($this, ninePatch.content, ninePatch.info);
    return $this;
  }
  NinePatchEx.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NinePatchEx',
    interfaces: [View]
  };
  function RectBase(anchorX, anchorY, hitShape, smoothing) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    Container.call(this);
    this.smoothing = smoothing;
    this.hitShape = hitShape;
    this.anchorVersion = 0;
    this.baseBitmap_iavqr2$_0 = bitmap.Bitmaps.white;
    this.anchorX_gmgbkx$_0 = anchorX;
    this.anchorY_gmgbk2$_0 = anchorY;
    this.vertices_ustx7d$_0 = new TexturedVertexArray(4, TexturedVertexArray$Companion_getInstance().QUAD_INDICES);
  }
  Object.defineProperty(RectBase.prototype, 'baseBitmap', {
    get: function () {
      return this.baseBitmap_iavqr2$_0;
    },
    set: function (v) {
      this.baseBitmap_iavqr2$_0 = v;
      this.dirtyVertices = true;
    }
  });
  Object.defineProperty(RectBase.prototype, 'anchorX', {
    get: function () {
      return this.anchorX_gmgbkx$_0;
    },
    set: function (v) {
      this.anchorX_gmgbkx$_0 = v;
      this.dirtyVertices = true;
      this.anchorVersion = this.anchorVersion + 1 | 0;
    }
  });
  Object.defineProperty(RectBase.prototype, 'anchorY', {
    get: function () {
      return this.anchorY_gmgbk2$_0;
    },
    set: function (v) {
      this.anchorY_gmgbk2$_0 = v;
      this.dirtyVertices = true;
      this.anchorVersion = this.anchorVersion + 1 | 0;
    }
  });
  Object.defineProperty(RectBase.prototype, 'bwidth', {
    get: function () {
      return 0.0;
    }
  });
  Object.defineProperty(RectBase.prototype, 'bheight', {
    get: function () {
      return 0.0;
    }
  });
  Object.defineProperty(RectBase.prototype, 'anchorDispX', {
    get: function () {
      return this.anchorX * this.bwidth;
    }
  });
  Object.defineProperty(RectBase.prototype, 'anchorDispY', {
    get: function () {
      return this.anchorY * this.bheight;
    }
  });
  Object.defineProperty(RectBase.prototype, 'sLeft', {
    get: function () {
      return -this.anchorDispX;
    }
  });
  Object.defineProperty(RectBase.prototype, 'sTop', {
    get: function () {
      return -this.anchorDispY;
    }
  });
  Object.defineProperty(RectBase.prototype, 'sRight', {
    get: function () {
      return this.sLeft + this.bwidth;
    }
  });
  Object.defineProperty(RectBase.prototype, 'sBottom', {
    get: function () {
      return this.sTop + this.bheight;
    }
  });
  RectBase.prototype.computeVertexIfRequired_g6aac5$_0 = function () {
    if (!this.dirtyVertices)
      return;
    this.dirtyVertices = false;
    this.vertices_ustx7d$_0.quad_l5kpw6$(0, this.sLeft, this.sTop, this.bwidth, this.bheight, this.globalMatrix, this.baseBitmap, this.renderColorMul, this.renderColorAdd);
  };
  RectBase.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    if (this.baseBitmap !== bitmap.Bitmaps.transparent) {
      this.computeVertexIfRequired_g6aac5$_0();
      ctx.batch.drawVertices_8go32q$(this.vertices_ustx7d$_0, ctx.getTex_9byvhi$(this.baseBitmap).base, this.smoothing, this.renderBlendMode.factors);
    }Container.prototype.renderInternal_8isv09$.call(this, ctx);
  };
  RectBase.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_6y0v78$(this.sLeft, this.sTop, this.bwidth, this.bheight);
  };
  RectBase.prototype.toString = function () {
    var out = Container.prototype.toString.call(this);
    if (this.anchorX !== 0.0 || this.anchorY !== 0.0)
      out += ':anchor=(' + this.get_str_yrwdxr$(this.anchorX) + ', ' + this.get_str_yrwdxr$(this.anchorY) + ')';
    return out;
  };
  RectBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RectBase',
    interfaces: [Anchorable, Container]
  };
  function Renderable() {
  }
  Renderable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Renderable',
    interfaces: []
  };
  var roundRect_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.roundRect_9wto9d$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var RoundRect_init = _.com.soywiz.korge.view.RoundRect;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function roundRect$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, rx, ry, color_0, autoScaling, callback) {
      if (ry === void 0)
        ry = rx;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (autoScaling === void 0)
        autoScaling = true;
      if (callback === void 0)
        callback = roundRect$lambda;
      var $receiver_0 = addTo(new RoundRect_init(numberToDouble(width), numberToDouble(height), numberToDouble(rx), numberToDouble(ry), color_0, autoScaling), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var roundRect_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.roundRect_iy0hdd$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var Unit = Kotlin.kotlin.Unit;
    var RoundRect_init = _.com.soywiz.korge.view.RoundRect;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function roundRect$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, rx, ry, color_0, autoScaling, callback) {
      if (ry === void 0)
        ry = rx;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (autoScaling === void 0)
        autoScaling = true;
      if (callback === void 0)
        callback = roundRect$lambda;
      var $receiver_0 = addTo(new RoundRect_init(width, height, rx, ry, color_0, autoScaling), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function RoundRect(width, height, rx, ry, color_0, autoScaling) {
    if (ry === void 0)
      ry = rx;
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (autoScaling === void 0)
      autoScaling = true;
    Graphics.call(this, autoScaling);
    this.width_zgnkyn$_0 = new UIObservable(width, RoundRect$width$lambda(this));
    this.height_s97ycm$_0 = new UIObservable(height, RoundRect$height$lambda(this));
    this.rx_1m2iop$_0 = new UIObservable(rx, RoundRect$rx$lambda(this));
    this.ry_1m2inu$_0 = new UIObservable(ry, RoundRect$ry$lambda(this));
    this.colorMul = color_0;
    this.updateGraphics_0();
  }
  var RoundRect$width_metadata = new PropertyMetadata('width');
  Object.defineProperty(RoundRect.prototype, 'width', {
    get: function () {
      return this.width_zgnkyn$_0.getValue_t0xcdd$(this, RoundRect$width_metadata);
    },
    set: function (width) {
      this.width_zgnkyn$_0.setValue_cvomos$(this, RoundRect$width_metadata, width);
    }
  });
  var RoundRect$height_metadata = new PropertyMetadata('height');
  Object.defineProperty(RoundRect.prototype, 'height', {
    get: function () {
      return this.height_s97ycm$_0.getValue_t0xcdd$(this, RoundRect$height_metadata);
    },
    set: function (height) {
      this.height_s97ycm$_0.setValue_cvomos$(this, RoundRect$height_metadata, height);
    }
  });
  Object.defineProperty(RoundRect.prototype, 'bwidth', {
    get: function () {
      return this.width;
    }
  });
  Object.defineProperty(RoundRect.prototype, 'bheight', {
    get: function () {
      return this.height;
    }
  });
  var RoundRect$rx_metadata = new PropertyMetadata('rx');
  Object.defineProperty(RoundRect.prototype, 'rx', {
    get: function () {
      return this.rx_1m2iop$_0.getValue_t0xcdd$(this, RoundRect$rx_metadata);
    },
    set: function (rx) {
      this.rx_1m2iop$_0.setValue_cvomos$(this, RoundRect$rx_metadata, rx);
    }
  });
  var RoundRect$ry_metadata = new PropertyMetadata('ry');
  Object.defineProperty(RoundRect.prototype, 'ry', {
    get: function () {
      return this.ry_1m2inu$_0.getValue_t0xcdd$(this, RoundRect$ry_metadata);
    },
    set: function (ry) {
      this.ry_1m2inu$_0.setValue_cvomos$(this, RoundRect$ry_metadata, ry);
    }
  });
  Object.defineProperty(RoundRect.prototype, 'color', {
    get: function () {
      return this.colorMul;
    },
    set: function (value) {
      this.colorMul = value;
    }
  });
  RoundRect.prototype.updateGraphics_0 = function () {
    this.clear();
    this.beginFill_9bhh2t$(this.toColorFill_kzd6w3$(color.Colors.WHITE, 1.0));
    try {
      var w = this.width;
      var h = this.height;
      var rx = this.rx;
      var ry = this.ry;
      roundRect(this, numberToDouble(0), numberToDouble(0), numberToDouble(w), numberToDouble(h), numberToDouble(rx), numberToDouble(ry));
    }finally {
      this.endFill();
    }
  };
  function RoundRect$width$lambda(this$RoundRect) {
    return function (it) {
      this$RoundRect.updateGraphics_0();
      return Unit;
    };
  }
  function RoundRect$height$lambda(this$RoundRect) {
    return function (it) {
      this$RoundRect.updateGraphics_0();
      return Unit;
    };
  }
  function RoundRect$rx$lambda(this$RoundRect) {
    return function (it) {
      this$RoundRect.updateGraphics_0();
      return Unit;
    };
  }
  function RoundRect$ry$lambda(this$RoundRect) {
    return function (it) {
      this$RoundRect.updateGraphics_0();
      return Unit;
    };
  }
  RoundRect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RoundRect',
    interfaces: [Graphics]
  };
  function AG$renderToTexture$lambda_0(it) {
    return Unit;
  }
  var scaleView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.scaleView_pzl28r$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var ScaleView_init = _.com.soywiz.korge.view.ScaleView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function scaleView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, scale, filtering, callback) {
      if (scale === void 0)
        scale = 2.0;
      if (filtering === void 0)
        filtering = false;
      if (callback === void 0)
        callback = scaleView$lambda;
      var $receiver_0 = addTo(new ScaleView_init(width, height, scale, filtering), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function ScaleView(width, height, scale, filtering) {
    if (scale === void 0)
      scale = 2.0;
    if (filtering === void 0)
      filtering = false;
    FixedSizeContainer.call(this);
    this.filtering = filtering;
    this.width = width;
    this.height = height;
    this.scale = scale;
  }
  ScaleView.prototype.renderInternal_8isv09$ = function (ctx) {
    var iwidth = numberToInt(this.width);
    var iheight = numberToInt(this.height);
    ctx.flush();
    var $this = ctx.ag;
    var rb = $this.renderBuffers.alloc();
    $this.frameRenderBuffers.add_11rb$(rb);
    var oldRenderBuffer = $this.currentRenderBuffer;
    rb.setSize_vux9f0$(iwidth, iheight);
    $this.setRenderBuffer_m67x29$(rb);
    try {
      $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
      var oldScissors = ctx.batch.scissor;
      ctx.batch.scissor = null;
      try {
        FixedSizeContainer.prototype.renderInternal_8isv09$.call(this, ctx);
        ctx.flush();
      }finally {
        ctx.batch.scissor = oldScissors;
      }
    }finally {
      $this.setRenderBuffer_m67x29$(oldRenderBuffer);
    }
    try {
      var it = rb.tex;
      var renderTexture = Texture.Companion.invoke_l6jlr1$(it, iwidth, iheight);
      ctx.batch.drawQuad_w9nimi$(renderTexture, 0.0, 0.0, iwidth, iheight, this.globalMatrix, this.filtering, this.renderColorMul, this.renderColorAdd, this.renderBlendMode.factors);
      ctx.flush();
      ctx.flush();
    }finally {
      $this.frameRenderBuffers.remove_11rb$(rb);
      $this.renderBuffers.free_11rb$(rb);
    }
  };
  ScaleView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ScaleView',
    interfaces: [FixedSizeContainer, View$Reference]
  };
  var solidRect = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.solidRect_gl3y1$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var SolidRect_init = _.com.soywiz.korge.view.SolidRect;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function solidRect$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, color, callback) {
      if (callback === void 0)
        callback = solidRect$lambda;
      var $receiver_0 = addTo(new SolidRect_init(numberToDouble(width), numberToDouble(height), color), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var solidRect_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.solidRect_8ma1ih$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var SolidRect_init = _.com.soywiz.korge.view.SolidRect;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function solidRect$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, color, callback) {
      if (callback === void 0)
        callback = solidRect$lambda;
      var $receiver_0 = addTo(new SolidRect_init(width, height, color), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function SolidRect(width, height, color) {
    SolidRect$Companion_getInstance();
    RectBase.call(this);
    this.width_ffc1ss$_0 = width;
    this.height_a44ymb$_0 = height;
    this.colorMul = color;
  }
  function SolidRect$Companion() {
    SolidRect$Companion_instance = this;
  }
  SolidRect$Companion.prototype.invoke_eprly3$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.SolidRect.Companion.invoke_eprly3$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var SolidRect_init = _.com.soywiz.korge.view.SolidRect;
    return function (width, height, color) {
      return new SolidRect_init(numberToDouble(width), numberToDouble(height), color);
    };
  }));
  SolidRect$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SolidRect$Companion_instance = null;
  function SolidRect$Companion_getInstance() {
    if (SolidRect$Companion_instance === null) {
      new SolidRect$Companion();
    }return SolidRect$Companion_instance;
  }
  Object.defineProperty(SolidRect.prototype, 'width', {
    get: function () {
      return this.width_ffc1ss$_0;
    },
    set: function (v) {
      this.width_ffc1ss$_0 = v;
      this.dirtyVertices = true;
    }
  });
  Object.defineProperty(SolidRect.prototype, 'height', {
    get: function () {
      return this.height_a44ymb$_0;
    },
    set: function (v) {
      this.height_a44ymb$_0 = v;
      this.dirtyVertices = true;
    }
  });
  Object.defineProperty(SolidRect.prototype, 'bwidth', {
    get: function () {
      return this.width;
    }
  });
  Object.defineProperty(SolidRect.prototype, 'bheight', {
    get: function () {
      return this.height;
    }
  });
  Object.defineProperty(SolidRect.prototype, 'color', {
    get: function () {
      return this.colorMul;
    },
    set: function (value) {
      this.colorMul = value;
    }
  });
  SolidRect.prototype.createInstance = function () {
    return new SolidRect(this.width, this.height, this.colorMul);
  };
  SolidRect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SolidRect',
    interfaces: [RectBase]
  };
  var sprite = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.sprite_cmvtbc$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Sprite_init = _.com.soywiz.korge.view.Sprite_init_i2lxqn$;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function sprite$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, initialAnimation, anchorX, anchorY, callback) {
      if (anchorX === void 0)
        anchorX = 0.0;
      if (anchorY === void 0)
        anchorY = 0.0;
      if (callback === void 0)
        callback = sprite$lambda;
      var $receiver_0 = addTo(Sprite_init(initialAnimation, anchorX, anchorY), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var sprite_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.sprite_i7smvm$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Sprite_init = _.com.soywiz.korge.view.Sprite_init_lr3c3n$;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function sprite$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, texture, anchorX, anchorY, callback) {
      if (anchorX === void 0)
        anchorX = 0.0;
      if (anchorY === void 0)
        anchorY = 0.0;
      if (callback === void 0)
        callback = sprite$lambda;
      var $receiver_0 = addTo(Sprite_init(texture, anchorX, anchorY), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var sprite_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.sprite_gvz644$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Sprite_init = _.com.soywiz.korge.view.Sprite;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function sprite$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, texture, anchorX, anchorY, callback) {
      if (anchorX === void 0)
        anchorX = 0.0;
      if (anchorY === void 0)
        anchorY = 0.0;
      if (callback === void 0)
        callback = sprite$lambda;
      var $receiver_0 = addTo(new Sprite_init(texture, anchorX, anchorY), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Sprite(bitmap, anchorX, anchorY, hitShape, smoothing) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    Image_init(bitmap, anchorX, anchorY, hitShape, smoothing, this);
    this.animationRequested_qnd57s$_0 = false;
    this.animationNumberOfFramesRequested_2yytoe$_915z1t$_0 = 0;
    this.animationType_zef9x0$_0 = AnimationType$STANDARD_getInstance();
    this._onAnimationCompleted_sd4hhv$_0 = null;
    this._onAnimationStopped_3ymox7$_0 = null;
    this._onAnimationStarted_2mtvgp$_0 = null;
    this.spriteDisplayTime = TimeSpan.Companion.fromMilliseconds_14dthe$(50);
    this.animationLooped_g538jv$_0 = false;
    this.lastAnimationFrameTime_emrdai$_0 = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
    this.animationRemainingDuration_x9it7o$_k45ckl$_0 = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
    this.currentAnimation_jlujbd$_0 = null;
    this.currentSpriteIndex_7ezaby$_r4y07p$_0 = 0;
    this.reversed_bm7ti8$_0 = false;
    addUpdater(this, Sprite_init$lambda);
  }
  Object.defineProperty(Sprite.prototype, 'animationNumberOfFramesRequested_2yytoe$_0', {
    get: function () {
      return this.animationNumberOfFramesRequested_2yytoe$_915z1t$_0;
    },
    set: function (value) {
      if (value === 0) {
        this.stopAnimation();
        if (equals(this.animationType_zef9x0$_0, AnimationType$STANDARD_getInstance()))
          this.triggerEvent_x11asj$_0(this.onAnimationCompleted);
        else
          this.triggerEvent_x11asj$_0(this.onAnimationStopped);
      }this.animationNumberOfFramesRequested_2yytoe$_915z1t$_0 = value;
    }
  });
  Object.defineProperty(Sprite.prototype, 'onAnimationCompleted', {
    get: function () {
      if (this._onAnimationCompleted_sd4hhv$_0 == null)
        this._onAnimationCompleted_sd4hhv$_0 = new Signal();
      return ensureNotNull(this._onAnimationCompleted_sd4hhv$_0);
    }
  });
  Object.defineProperty(Sprite.prototype, 'onAnimationStopped', {
    get: function () {
      if (this._onAnimationStopped_3ymox7$_0 == null)
        this._onAnimationStopped_3ymox7$_0 = new Signal();
      return ensureNotNull(this._onAnimationStopped_3ymox7$_0);
    }
  });
  Object.defineProperty(Sprite.prototype, 'onAnimationStarted', {
    get: function () {
      if (this._onAnimationStarted_2mtvgp$_0 == null)
        this._onAnimationStarted_2mtvgp$_0 = new Signal();
      return ensureNotNull(this._onAnimationStarted_2mtvgp$_0);
    }
  });
  Object.defineProperty(Sprite.prototype, 'animationRemainingDuration_x9it7o$_0', {
    get: function () {
      return this.animationRemainingDuration_x9it7o$_k45ckl$_0;
    },
    set: function (value) {
      if (value.compareTo_11rb$(TimeSpan.Companion.fromMilliseconds_14dthe$(0)) <= 0 && this.animationType_zef9x0$_0 === AnimationType$DURATION_getInstance()) {
        this.stopAnimation();
        this.triggerEvent_x11asj$_0(this._onAnimationCompleted_sd4hhv$_0);
      }this.animationRemainingDuration_x9it7o$_k45ckl$_0 = value;
    }
  });
  Object.defineProperty(Sprite.prototype, 'currentSpriteIndex_7ezaby$_0', {
    get: function () {
      return this.currentSpriteIndex_7ezaby$_r4y07p$_0;
    },
    set: function (value) {
      this.setFrame_za3lpa$(value);
      this.currentSpriteIndex_7ezaby$_r4y07p$_0 = value;
    }
  });
  Sprite.prototype.getDefaultTime_6yz8h1$_0 = function (spriteAnimation) {
    var tmp$;
    if (spriteAnimation != null && !((tmp$ = spriteAnimation.defaultTimePerFrame) != null ? tmp$.equals(TimeSpan.Companion.NULL) : null))
      return spriteAnimation.defaultTimePerFrame;
    else
      return this.spriteDisplayTime;
  };
  Sprite.prototype.playAnimation_oufe8j$ = function (times, spriteAnimation, spriteDisplayTime, startFrame, reversed) {
    if (times === void 0)
      times = 1;
    if (spriteAnimation === void 0)
      spriteAnimation = this.currentAnimation_jlujbd$_0;
    if (spriteDisplayTime === void 0)
      spriteDisplayTime = this.getDefaultTime_6yz8h1$_0(spriteAnimation);
    if (startFrame === void 0)
      startFrame = -1;
    if (reversed === void 0)
      reversed = false;
    this.updateCurrentAnimation_fcswm8$_0(spriteAnimation, spriteDisplayTime, times, void 0, startFrame >= 0 ? startFrame : this.currentSpriteIndex_7ezaby$_0, void 0, reversed, AnimationType$STANDARD_getInstance());
  };
  Sprite.prototype.playAnimation_tsl5ct$ = function (spriteAnimation, spriteDisplayTime, startFrame, reversed) {
    if (spriteAnimation === void 0)
      spriteAnimation = this.currentAnimation_jlujbd$_0;
    if (spriteDisplayTime === void 0)
      spriteDisplayTime = this.getDefaultTime_6yz8h1$_0(spriteAnimation);
    if (startFrame === void 0)
      startFrame = -1;
    if (reversed === void 0)
      reversed = false;
    this.updateCurrentAnimation_fcswm8$_0(spriteAnimation, spriteDisplayTime, 1, void 0, startFrame >= 0 ? startFrame : this.currentSpriteIndex_7ezaby$_0, void 0, reversed, AnimationType$STANDARD_getInstance());
  };
  Sprite.prototype.playAnimationForDuration_ugh022$ = function (duration, spriteAnimation, spriteDisplayTime, startFrame, reversed) {
    if (spriteAnimation === void 0)
      spriteAnimation = this.currentAnimation_jlujbd$_0;
    if (spriteDisplayTime === void 0)
      spriteDisplayTime = this.getDefaultTime_6yz8h1$_0(spriteAnimation);
    if (startFrame === void 0)
      startFrame = -1;
    if (reversed === void 0)
      reversed = false;
    this.updateCurrentAnimation_fcswm8$_0(spriteAnimation, spriteDisplayTime, void 0, duration, startFrame >= 0 ? startFrame : this.currentSpriteIndex_7ezaby$_0, void 0, reversed, AnimationType$DURATION_getInstance());
  };
  Sprite.prototype.playAnimationLooped_tsl5ct$ = function (spriteAnimation, spriteDisplayTime, startFrame, reversed) {
    if (spriteAnimation === void 0)
      spriteAnimation = this.currentAnimation_jlujbd$_0;
    if (spriteDisplayTime === void 0)
      spriteDisplayTime = this.getDefaultTime_6yz8h1$_0(spriteAnimation);
    if (startFrame === void 0)
      startFrame = -1;
    if (reversed === void 0)
      reversed = false;
    this.updateCurrentAnimation_fcswm8$_0(spriteAnimation, spriteDisplayTime, void 0, void 0, startFrame >= 0 ? startFrame : this.currentSpriteIndex_7ezaby$_0, true, reversed, AnimationType$LOOPED_getInstance());
  };
  Sprite.prototype.stopAnimation = function () {
    this.animationRequested_qnd57s$_0 = false;
    this.triggerEvent_x11asj$_0(this._onAnimationStopped_3ymox7$_0);
  };
  Sprite.prototype.nextSprite_75fm91$_0 = function (frameTime) {
    this.lastAnimationFrameTime_emrdai$_0 = this.lastAnimationFrameTime_emrdai$_0.plus_fv8bff$(frameTime);
    if (this.lastAnimationFrameTime_emrdai$_0.plus_fv8bff$(frameTime).compareTo_11rb$(this.spriteDisplayTime) >= 0) {
      switch (this.animationType_zef9x0$_0.name) {
        case 'STANDARD':
          if (this.animationNumberOfFramesRequested_2yytoe$_0 > 0) {
            this.animationNumberOfFramesRequested_2yytoe$_0 = this.animationNumberOfFramesRequested_2yytoe$_0 - 1 | 0;
          }
          break;
        case 'DURATION':
          this.animationRemainingDuration_x9it7o$_0 = this.animationRemainingDuration_x9it7o$_0.minus_fv8bff$(this.lastAnimationFrameTime_emrdai$_0);
          break;
        case 'LOOPED':
          break;
      }
      this.setFrame_za3lpa$(this.reversed_bm7ti8$_0 ? (this.currentSpriteIndex_7ezaby$_0 = this.currentSpriteIndex_7ezaby$_0 - 1 | 0, this.currentSpriteIndex_7ezaby$_0) : (this.currentSpriteIndex_7ezaby$_0 = this.currentSpriteIndex_7ezaby$_0 + 1 | 0, this.currentSpriteIndex_7ezaby$_0));
      this.lastAnimationFrameTime_emrdai$_0 = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
    }};
  Sprite.prototype.updateCurrentAnimation_fcswm8$_0 = function (spriteAnimation, spriteDisplayTime, animationCyclesRequested, duration, startFrame, looped, reversed, type) {
    if (spriteDisplayTime === void 0)
      spriteDisplayTime = this.getDefaultTime_6yz8h1$_0(spriteAnimation);
    if (animationCyclesRequested === void 0)
      animationCyclesRequested = 1;
    if (duration === void 0) {
      duration = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
    }if (startFrame === void 0)
      startFrame = 0;
    if (looped === void 0)
      looped = false;
    if (reversed === void 0)
      reversed = false;
    if (type === void 0)
      type = AnimationType$STANDARD_getInstance();
    var tmp$;
    this.triggerEvent_x11asj$_0(this._onAnimationStarted_2mtvgp$_0);
    this.spriteDisplayTime = spriteDisplayTime;
    this.currentAnimation_jlujbd$_0 = spriteAnimation;
    this.animationLooped_g538jv$_0 = looped;
    this.animationRemainingDuration_x9it7o$_0 = duration;
    this.currentSpriteIndex_7ezaby$_0 = startFrame;
    this.reversed_bm7ti8$_0 = reversed;
    this.animationType_zef9x0$_0 = type;
    this.animationRequested_qnd57s$_0 = true;
    if ((tmp$ = this.currentAnimation_jlujbd$_0) != null) {
      this.animationNumberOfFramesRequested_2yytoe$_0 = !looped ? Kotlin.imul(animationCyclesRequested, tmp$.spriteStackSize) : tmp$.spriteStackSize;
    }};
  Sprite.prototype.setFrame_za3lpa$ = function (index) {
    var tmp$, tmp$_0;
    this.bitmap = (tmp$_0 = (tmp$ = this.currentAnimation_jlujbd$_0) != null ? tmp$.getSprite_za3lpa$(index) : null) != null ? tmp$_0 : this.bitmap;
  };
  Sprite.prototype.triggerEvent_x11asj$_0 = function (signal) {
    var tmp$;
    if (signal != null) {
      if ((tmp$ = this.currentAnimation_jlujbd$_0) != null) {
        signal.invoke_11rb$(tmp$);
      }}};
  function Sprite_init$lambda($receiver, frameTime) {
    if ($receiver.animationRequested_qnd57s$_0) {
      $receiver.nextSprite_75fm91$_0(frameTime);
    }return Unit;
  }
  Sprite.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Sprite',
    interfaces: [Image]
  };
  function Sprite_init(bmpSlice, anchorX, anchorY, hitShape, smoothing, $this) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    $this = $this || Object.create(Sprite.prototype);
    Sprite.call($this, bmpSlice.bmp, anchorX, anchorY, hitShape, smoothing);
    return $this;
  }
  function Sprite_init_0(initialAnimation, anchorX, anchorY, hitShape, smoothing, $this) {
    if (anchorX === void 0)
      anchorX = 0.0;
    if (anchorY === void 0)
      anchorY = anchorX;
    if (hitShape === void 0)
      hitShape = null;
    if (smoothing === void 0)
      smoothing = true;
    $this = $this || Object.create(Sprite.prototype);
    Sprite_init(initialAnimation.firstSprite, anchorX, anchorY, hitShape, smoothing, $this);
    $this.currentAnimation_jlujbd$_0 = initialAnimation;
    $this.setFrame_za3lpa$(0);
    return $this;
  }
  function AnimationType(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function AnimationType_initFields() {
    AnimationType_initFields = function () {
    };
    AnimationType$STANDARD_instance = new AnimationType('STANDARD', 0);
    AnimationType$LOOPED_instance = new AnimationType('LOOPED', 1);
    AnimationType$DURATION_instance = new AnimationType('DURATION', 2);
  }
  var AnimationType$STANDARD_instance;
  function AnimationType$STANDARD_getInstance() {
    AnimationType_initFields();
    return AnimationType$STANDARD_instance;
  }
  var AnimationType$LOOPED_instance;
  function AnimationType$LOOPED_getInstance() {
    AnimationType_initFields();
    return AnimationType$LOOPED_instance;
  }
  var AnimationType$DURATION_instance;
  function AnimationType$DURATION_getInstance() {
    AnimationType_initFields();
    return AnimationType$DURATION_instance;
  }
  AnimationType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AnimationType',
    interfaces: [Enum]
  };
  function AnimationType$values() {
    return [AnimationType$STANDARD_getInstance(), AnimationType$LOOPED_getInstance(), AnimationType$DURATION_getInstance()];
  }
  AnimationType.values = AnimationType$values;
  function AnimationType$valueOf(name) {
    switch (name) {
      case 'STANDARD':
        return AnimationType$STANDARD_getInstance();
      case 'LOOPED':
        return AnimationType$LOOPED_getInstance();
      case 'DURATION':
        return AnimationType$DURATION_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.AnimationType.' + name);
    }
  }
  AnimationType.valueOf_61zpoe$ = AnimationType$valueOf;
  function SpriteAnimation(sprites, defaultTimePerFrame) {
    SpriteAnimation$Companion_getInstance();
    if (defaultTimePerFrame === void 0)
      defaultTimePerFrame = TimeSpan.Companion.NULL;
    this.sprites = sprites;
    this.defaultTimePerFrame = defaultTimePerFrame;
  }
  function SpriteAnimation$Companion() {
    SpriteAnimation$Companion_instance = this;
  }
  SpriteAnimation$Companion.prototype.invoke_1yoynw$ = function (spriteMap, spriteWidth, spriteHeight, marginTop, marginLeft, columns, rows, offsetBetweenColumns, offsetBetweenRows) {
    if (spriteWidth === void 0)
      spriteWidth = 16;
    if (spriteHeight === void 0)
      spriteHeight = 16;
    if (marginTop === void 0)
      marginTop = 0;
    if (marginLeft === void 0)
      marginLeft = 0;
    if (columns === void 0)
      columns = 1;
    if (rows === void 0)
      rows = 1;
    if (offsetBetweenColumns === void 0)
      offsetBetweenColumns = 0;
    if (offsetBetweenRows === void 0)
      offsetBetweenRows = 0;
    var $receiver = ArrayList_init_1();
    for (var row = 0; row < rows; row++) {
      for (var col = 0; col < columns; col++) {
        $receiver.add_11rb$(sliceWithSize(spriteMap, marginLeft + Kotlin.imul(spriteWidth + offsetBetweenColumns | 0, col) | 0, marginTop + Kotlin.imul(spriteHeight + offsetBetweenRows | 0, row) | 0, spriteWidth, spriteHeight));
      }
    }
    return new SpriteAnimation($receiver);
  };
  SpriteAnimation$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SpriteAnimation$Companion_instance = null;
  function SpriteAnimation$Companion_getInstance() {
    if (SpriteAnimation$Companion_instance === null) {
      new SpriteAnimation$Companion();
    }return SpriteAnimation$Companion_instance;
  }
  Object.defineProperty(SpriteAnimation.prototype, 'spriteStackSize', {
    get: function () {
      return this.sprites.size;
    }
  });
  Object.defineProperty(SpriteAnimation.prototype, 'size', {
    get: function () {
      return this.sprites.size;
    }
  });
  Object.defineProperty(SpriteAnimation.prototype, 'firstSprite', {
    get: function () {
      return this.sprites.get_za3lpa$(0);
    }
  });
  SpriteAnimation.prototype.getSprite_za3lpa$ = function (index) {
    return this.sprites.get_za3lpa$(umod(index, this.sprites.size));
  };
  SpriteAnimation.prototype.get_za3lpa$ = function (index) {
    return this.getSprite_za3lpa$(index);
  };
  SpriteAnimation.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SpriteAnimation',
    interfaces: []
  };
  function getSpriteAnimation($receiver, prefix, defaultTimePerFrame) {
    if (prefix === void 0)
      prefix = '';
    if (defaultTimePerFrame === void 0)
      defaultTimePerFrame = TimeSpan.Companion.NULL;
    var $receiver_0 = $receiver.entries;
    var destination = ArrayList_init_1();
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (startsWith(element.filename, prefix))
        destination.add_11rb$(element);
    }
    var destination_0 = ArrayList_init_0(collectionSizeOrDefault(destination, 10));
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination_0.add_11rb$(item.slice);
    }
    return new SpriteAnimation(destination_0, defaultTimePerFrame);
  }
  function getSpriteAnimation_0($receiver, regex, defaultTimePerFrame) {
    if (defaultTimePerFrame === void 0)
      defaultTimePerFrame = TimeSpan.Companion.NULL;
    var $receiver_0 = $receiver.entries;
    var destination = ArrayList_init_1();
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (regex.matches_6bul2c$(element.filename))
        destination.add_11rb$(element);
    }
    var destination_0 = ArrayList_init_0(collectionSizeOrDefault(destination, 10));
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination_0.add_11rb$(item.slice);
    }
    return new SpriteAnimation(destination_0, defaultTimePerFrame);
  }
  function Stage(views) {
    Container.call(this);
    this.views = views;
    this.$delegate_gn0z9p$_0 = new EventDispatcher$Mixin();
    this.stage_iyx7r7$_0 = this;
    this.mouseXY_14eml1$_0 = new Point(0.0, 0.0);
  }
  Object.defineProperty(Stage.prototype, 'injector', {
    get: function () {
      return this.views.injector;
    }
  });
  Object.defineProperty(Stage.prototype, 'ag', {
    get: function () {
      return this.views.ag;
    }
  });
  Object.defineProperty(Stage.prototype, 'gameWindow', {
    get: function () {
      return this.views.gameWindow;
    }
  });
  Object.defineProperty(Stage.prototype, 'stage', {
    get: function () {
      return this.stage_iyx7r7$_0;
    }
  });
  Object.defineProperty(Stage.prototype, 'mouseXY', {
    get: function () {
      this.mouseXY_14eml1$_0.setTo_lu1900$(this.mouseX, this.mouseY);
      return this.mouseXY_14eml1$_0;
    }
  });
  Object.defineProperty(Stage.prototype, 'mouseX', {
    get: function () {
      return this.localMouseX_gohfjx$(this.views);
    }
  });
  Object.defineProperty(Stage.prototype, 'mouseY', {
    get: function () {
      return this.localMouseY_gohfjx$(this.views);
    }
  });
  Stage.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_tjonv8$(this.views.actualVirtualLeft, this.views.actualVirtualTop, this.views.actualVirtualWidth, this.views.actualVirtualHeight);
  };
  Stage.prototype.renderInternal_8isv09$ = function (ctx) {
    if (this.views.clipBorders) {
      var $this = ctx.ctx2d;
      var x = this.x;
      var y = this.y;
      var width = this.views.virtualWidth * this.scaleX;
      var height = this.views.virtualHeight * this.scaleY;
      var oldScissor = $this.batch.scissor;
      var returnScissor = $this.scissorStart_e1n26z$($this.tempScissor.setTo_tjonv8$(numberToInt(x), numberToInt(y), numberToInt(width), numberToInt(height)));
      try {
        Container.prototype.renderInternal_8isv09$.call(this, ctx);
      }finally {
        $this.scissorEnd_w8dcdw$(oldScissor, returnScissor);
      }
    } else {
      Container.prototype.renderInternal_8isv09$.call(this, ctx);
    }
  };
  Object.defineProperty(Stage.prototype, 'coroutineContext', {
    get: function () {
      return this.views.coroutineContext;
    }
  });
  Stage.prototype.addEventListener_xa594f$ = function (clazz, handler) {
    return this.$delegate_gn0z9p$_0.addEventListener_xa594f$(clazz, handler);
  };
  Stage.prototype.copyFrom_qquois$ = function (other) {
    return this.$delegate_gn0z9p$_0.copyFrom_qquois$(other);
  };
  Stage.prototype.dispatch_nipq8w$ = function (clazz, event) {
    return this.$delegate_gn0z9p$_0.dispatch_nipq8w$(clazz, event);
  };
  Stage.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stage',
    interfaces: [EventDispatcher, CoroutineScope_0, View$Reference, Container]
  };
  var text = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.text_bm8mfi$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var Fonts = _.com.soywiz.korge.view.Fonts;
    var Unit = Kotlin.kotlin.Unit;
    var Text = _.com.soywiz.korge.view.Text;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function text$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, text, textSize, color_0, font, callback) {
      if (textSize === void 0)
        textSize = 16.0;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (font === void 0)
        font = Fonts.Companion.defaultFont;
      if (callback === void 0)
        callback = text$lambda;
      var $receiver_0 = addTo(Text.Companion.invoke_8ii8iq$(text, textSize, color_0, font), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Text() {
    Text$Companion_getInstance();
    View_init(this);
    this.textBounds = new Rectangle(0, 0, 1024, 1024);
    this.tempRect_0 = Rectangle.Companion.invoke();
    this._text = '';
    this._html = '';
    this.document = null;
    this._format_0 = new Html$Format();
    this.filtering = true;
    this.autoSize_wspygq$_0 = true;
    this.bgcolor = color.Colors.TRANSPARENT_BLACK;
    this.fonts = Fonts$Companion_getInstance().fonts;
  }
  function Text$Companion() {
    Text$Companion_instance = this;
  }
  Text$Companion.prototype.invoke_8ii8iq$ = function (text, textSize, color_0, font) {
    if (textSize === void 0)
      textSize = 16.0;
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (font === void 0)
      font = Fonts$Companion_getInstance().defaultFont;
    var $receiver = new Text();
    $receiver.format = new Html$Format(void 0, color_0, new Html$FontFace$Bitmap(font), numberToInt(textSize));
    if (!equals(text, ''))
      $receiver.text = text;
    return $receiver;
  };
  Text$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Text$Companion_instance = null;
  function Text$Companion_getInstance() {
    if (Text$Companion_instance === null) {
      new Text$Companion();
    }return Text$Companion_instance;
  }
  Object.defineProperty(Text.prototype, 'autoSize', {
    get: function () {
      return this.autoSize_wspygq$_0;
    },
    set: function (value) {
      this.autoSize_wspygq$_0 = value;
      this.recalculateBoundsWhenRequired_0();
    }
  });
  Text.prototype.setTextBounds_2da8yn$ = function (rect) {
    this.textBounds.copyFrom_2da8yn$(rect);
    this.autoSize = false;
  };
  Text.prototype.unsetTextBounds = function () {
    this.autoSize = true;
  };
  Object.defineProperty(Text.prototype, 'format', {
    get: function () {
      return this._format_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1;
      this._format_0 = value;
      if (!equals(value, (tmp$ = this.document) != null ? tmp$.defaultFormat : null)) {
        (tmp$_1 = (tmp$_0 = this.document) != null ? tmp$_0.defaultFormat : null) != null ? (tmp$_1.parent = value) : null;
      }this.recalculateBoundsWhenRequired_0();
    }
  });
  Object.defineProperty(Text.prototype, 'font', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.format.computedFace) == null || Kotlin.isType(tmp$, Html$FontFace$Bitmap) ? tmp$ : null) != null ? tmp$_0.font : null;
    },
    set: function (value) {
      this.format.face = value != null ? new Html$FontFace$Bitmap(value) : null;
    }
  });
  Object.defineProperty(Text.prototype, 'color', {
    get: function () {
      return this.format.computedColor;
    },
    set: function (value) {
      this.format.color = value;
    }
  });
  Object.defineProperty(Text.prototype, 'textSize', {
    get: function () {
      return this.format.computedSize;
    },
    set: function (value) {
      this.format.size = numberToInt(value);
    }
  });
  Object.defineProperty(Text.prototype, 'text', {
    get: function () {
      var tmp$, tmp$_0, tmp$_1;
      return this.document != null ? (tmp$_1 = (tmp$_0 = (tmp$ = this.document) != null ? tmp$.xml : null) != null ? tmp$_0.text : null) != null ? tmp$_1 : '' : this._text;
    },
    set: function (value) {
      this._text = value;
      this._html = '';
      this.document = null;
      this.recalculateBoundsWhenRequired_0();
    }
  });
  Object.defineProperty(Text.prototype, 'html', {
    get: function () {
      return this.document != null ? this._html : this._text;
    },
    set: function (value) {
      this.document = Html_getInstance().parse_61zpoe$(value);
      this.relayout();
      ensureNotNull(this.document).defaultFormat.parent = this.format;
      this._text = '';
      this._html = value;
      this._format_0 = ensureNotNull(this.document).firstFormat.consolidate();
    }
  });
  Text.prototype.relayout = function () {
    var tmp$;
    (tmp$ = this.document) != null ? (tmp$.doPositioning_90chdb$(this.fonts, this.textBounds), Unit) : null;
  };
  Text.prototype.renderInternal_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    var colorMul = this.renderColorMul;
    var colorAdd = this.renderColorAdd;
    var m = this.globalMatrix;
    if (this.document != null) {
      var $receiver = ensureNotNull(this.document).allSpans;
      var tmp$;
      var n = 0;
      while (n < $receiver.size) {
        var span = $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
        var font = this.fonts.getBitmapFont_ktnn5$(span.format);
        var format = span.format;
        drawText(font, ctx, format.computedSize, this.text, numberToInt(span.bounds.x), numberToInt(span.bounds.y), m, RGBA.Companion.multiply_jh0t86$(colorMul, format.computedColor), colorAdd, this.renderBlendMode, this.filtering);
      }
    } else {
      var font_0 = this.fonts.getBitmapFont_ktnn5$(this.format);
      var anchor = this.format.computedAlign.anchor;
      this.fonts.getBounds_1y5lg$(this.text, this.format, this.tempRect_0);
      var px = this.textBounds.x + (this.textBounds.width - this.tempRect_0.width) * anchor.sx;
      var py = this.textBounds.y + (this.textBounds.height - this.tempRect_0.height) * anchor.sy;
      if (this.bgcolor.a !== 0) {
        ctx.batch.drawQuad_w9nimi$(ctx.getTex_9byvhi$(bitmap.Bitmaps.white), this.textBounds.x, this.textBounds.y, this.textBounds.width, this.textBounds.height, m, false, RGBA.Companion.multiply_jh0t86$(this.bgcolor, this.renderColorMul), colorAdd, this.renderBlendMode.factors);
      }drawText(font_0, ctx, this.format.computedSize, this.text, numberToInt(px), numberToInt(py), m, RGBA.Companion.multiply_jh0t86$(colorMul, this.format.computedColor), colorAdd, this.renderBlendMode, this.filtering);
    }
  };
  Text.prototype.recalculateBounds_0 = function () {
    this.fonts.getBounds_1y5lg$(this.text, this.format, this.textBounds);
  };
  Text.prototype.recalculateBoundsWhenRequired_0 = function () {
    if (this.autoSize)
      this.recalculateBounds_0();
  };
  Text.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    if (this.document != null) {
      out.copyFrom_2da8yn$(ensureNotNull(this.document).bounds);
    } else {
      if (this.autoSize) {
        this.fonts.getBounds_1y5lg$(this.text, this.format, out);
        out.setToAnchoredRectangle_7qw0rf$(out, this.format.computedAlign.anchor, this.textBounds);
      } else {
        out.copyFrom_2da8yn$(this.textBounds);
      }
    }
  };
  Text.prototype.createInstance = function () {
    return new Text();
  };
  Text.prototype.copyPropsFrom_l5rad2$ = function (source) {
    var tmp$;
    View.prototype.copyPropsFrom_l5rad2$.call(this, source);
    Kotlin.isType(tmp$ = source, Text) ? tmp$ : throwCCE();
    this.textBounds.copyFrom_2da8yn$(source.textBounds);
    if (source._html.length > 0) {
      this.html = source.html;
    } else {
      this.text = source.text;
    }
  };
  Text.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Text',
    interfaces: [IHtml, IText, View]
  };
  function IText() {
  }
  IText.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IText',
    interfaces: []
  };
  function IHtml() {
  }
  IHtml.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IHtml',
    interfaces: []
  };
  function setText$lambda(closure$text) {
    return function (it) {
      if (Kotlin.isType(it, IText))
        it.text = closure$text;
      return Unit;
    };
  }
  function setText($receiver, text) {
    foreachDescendant($receiver, setText$lambda(text));
  }
  function setHtml$lambda(closure$html) {
    return function (it) {
      if (Kotlin.isType(it, IHtml))
        it.html = closure$html;
      return Unit;
    };
  }
  function setHtml($receiver, html) {
    foreachDescendant($receiver, setHtml$lambda(html));
  }
  var text2 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.text2_cccbd8$', wrapFunction(function () {
    var color = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.color;
    var font = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.font;
    var HorizontalAlign = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.vector.HorizontalAlign;
    var VerticalAlign = _.$$importsForInline$$['korim-root-korim'].com.soywiz.korim.vector.VerticalAlign;
    var Unit = Kotlin.kotlin.Unit;
    var Text2_init = _.com.soywiz.korge.view.Text2;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function text2$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, text, fontSize, color_0, font_0, horizontalAlign, verticalAlign, renderer, block) {
      if (fontSize === void 0)
        fontSize = 64.0;
      if (color_0 === void 0)
        color_0 = color.Colors.WHITE;
      if (font_0 === void 0)
        font_0 = font.DefaultTtfFont;
      if (horizontalAlign === void 0)
        horizontalAlign = HorizontalAlign.Companion.LEFT;
      if (verticalAlign === void 0)
        verticalAlign = VerticalAlign.Companion.TOP;
      if (renderer === void 0)
        renderer = font.DefaultStringTextRenderer;
      if (block === void 0)
        block = text2$lambda;
      var $receiver_0 = addTo(new Text2_init(text, fontSize, color_0, font_0, horizontalAlign, verticalAlign, renderer), $receiver);
      block($receiver_0);
      return $receiver_0;
    };
  }));
  function Text2(text, fontSize, color_0, font_0, horizontalAlign, verticalAlign, renderer) {
    if (fontSize === void 0)
      fontSize = 64.0;
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (font_0 === void 0)
      font_0 = font.DefaultTtfFont;
    if (horizontalAlign === void 0)
      horizontalAlign = HorizontalAlign.Companion.LEFT;
    if (verticalAlign === void 0)
      verticalAlign = VerticalAlign.Companion.TOP;
    if (renderer === void 0)
      renderer = font.DefaultStringTextRenderer;
    Container.call(this);
    this.cachedVersion_hv59r2$_0 = -1;
    this.version_59ofz0$_0 = 0;
    this.text_rwbvyl$_0 = text;
    this.color_kdd80f$_0 = color_0;
    this.font_s3uttb$_0 = font_0;
    this.fontSize_ivzn68$_0 = fontSize;
    this.horizontalAlign_dwr4b7$_0 = horizontalAlign;
    this.verticalAlign_l88bf$_0 = verticalAlign;
    this.renderer_3xqsv1$_0 = renderer;
    this.textToBitmapResult_cssd9o$_dnq39e$_0 = this.textToBitmapResult_cssd9o$_dnq39e$_0;
    this.container_xo7hzn$_0 = addTo(new Container(), this);
    this.bitmapFontActions_8trap7$_0 = new Text2TextRendererActions();
  }
  Object.defineProperty(Text2.prototype, 'text', {
    get: function () {
      return this.text_rwbvyl$_0;
    },
    set: function (value) {
      if (!equals(this.text_rwbvyl$_0, value)) {
        this.text_rwbvyl$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'color', {
    get: function () {
      return this.color_kdd80f$_0;
    },
    set: function (value) {
      var tmp$;
      if (!((tmp$ = this.color_kdd80f$_0) != null ? tmp$.equals(value) : null)) {
        this.color_kdd80f$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'font', {
    get: function () {
      return this.font_s3uttb$_0;
    },
    set: function (value) {
      if (!equals(this.font_s3uttb$_0, value)) {
        this.font_s3uttb$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'fontSize', {
    get: function () {
      return this.fontSize_ivzn68$_0;
    },
    set: function (value) {
      if (this.fontSize_ivzn68$_0 !== value) {
        this.fontSize_ivzn68$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'horizontalAlign', {
    get: function () {
      return this.horizontalAlign_dwr4b7$_0;
    },
    set: function (value) {
      var tmp$;
      if (!((tmp$ = this.horizontalAlign_dwr4b7$_0) != null ? tmp$.equals(value) : null)) {
        this.horizontalAlign_dwr4b7$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'verticalAlign', {
    get: function () {
      return this.verticalAlign_l88bf$_0;
    },
    set: function (value) {
      var tmp$;
      if (!((tmp$ = this.verticalAlign_l88bf$_0) != null ? tmp$.equals(value) : null)) {
        this.verticalAlign_l88bf$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'renderer', {
    get: function () {
      return this.renderer_3xqsv1$_0;
    },
    set: function (value) {
      if (!equals(this.renderer_3xqsv1$_0, value)) {
        this.renderer_3xqsv1$_0 = value;
        this.version_59ofz0$_0 = this.version_59ofz0$_0 + 1 | 0;
      }}
  });
  Object.defineProperty(Text2.prototype, 'textToBitmapResult_cssd9o$_0', {
    get: function () {
      if (this.textToBitmapResult_cssd9o$_dnq39e$_0 == null)
        return throwUPAE('textToBitmapResult');
      return this.textToBitmapResult_cssd9o$_dnq39e$_0;
    },
    set: function (textToBitmapResult) {
      this.textToBitmapResult_cssd9o$_dnq39e$_0 = textToBitmapResult;
    }
  });
  Text2.prototype.renderInternal_8isv09$ = function (ctx) {
    var tmp$, tmp$_0;
    this.container_xo7hzn$_0.colorMul = this.color;
    if (Kotlin.isType(this.font, BitmapFont)) {
      this.bitmapFontActions_8trap7$_0.x = 0.0;
      this.bitmapFontActions_8trap7$_0.y = 0.0;
      this.bitmapFontActions_8trap7$_0.mreset();
      this.renderer(this.bitmapFontActions_8trap7$_0, this.text, this.fontSize, this.font);
      while (this.container_xo7hzn$_0.numChildren < this.bitmapFontActions_8trap7$_0.arrayTex_8be2vx$.size) {
        var $receiver = this.container_xo7hzn$_0;
        addTo(new Image(bitmap.Bitmaps.transparent, 0.0, 0.0), $receiver);
      }
      while (this.container_xo7hzn$_0.numChildren > this.bitmapFontActions_8trap7$_0.arrayTex_8be2vx$.size) {
        this.container_xo7hzn$_0.get_za3lpa$(this.container_xo7hzn$_0.numChildren - 1 | 0).removeFromParent();
      }
      tmp$ = this.bitmapFontActions_8trap7$_0.arrayTex_8be2vx$.size;
      for (var n = 0; n < tmp$; n++) {
        var $receiver_0 = Kotlin.isType(tmp$_0 = this.container_xo7hzn$_0.get_za3lpa$(n), Image) ? tmp$_0 : throwCCE();
        $receiver_0.texture = this.bitmapFontActions_8trap7$_0.arrayTex_8be2vx$.get_za3lpa$(n);
        $receiver_0.x = this.bitmapFontActions_8trap7$_0.arrayX_8be2vx$.get_za3lpa$(n);
        $receiver_0.y = this.bitmapFontActions_8trap7$_0.arrayY_8be2vx$.get_za3lpa$(n);
        $receiver_0.scaleX = this.bitmapFontActions_8trap7$_0.arraySX_8be2vx$.get_za3lpa$(n);
        $receiver_0.scaleY = this.bitmapFontActions_8trap7$_0.arraySY_8be2vx$.get_za3lpa$(n);
        $receiver_0.rotationRadians = this.bitmapFontActions_8trap7$_0.arrayRot_8be2vx$.get_za3lpa$(n);
      }
    } else {
      if (this.cachedVersion_hv59r2$_0 !== this.version_59ofz0$_0) {
        this.cachedVersion_hv59r2$_0 = this.version_59ofz0$_0;
        this.textToBitmapResult_cssd9o$_0 = renderTextToBitmap(this.font, this.fontSize, this.text, new ColorPaint(color.Colors.WHITE), true, void 0, this.renderer);
        var x = this.textToBitmapResult_cssd9o$_0.metrics.left - this.horizontalAlign.getOffsetX_14dthe$(this.textToBitmapResult_cssd9o$_0.bmp.width);
        var y = this.verticalAlign.getOffsetY_lu1900$(this.textToBitmapResult_cssd9o$_0.fmetrics.lineHeight, this.textToBitmapResult_cssd9o$_0.metrics.top);
        this.container_xo7hzn$_0.removeChildren();
        var $receiver_1 = this.container_xo7hzn$_0;
        position_1(addTo(Image_init(this.textToBitmapResult_cssd9o$_0.bmp, 0.0, 0.0), $receiver_1), x, y);
      }}
    Container.prototype.renderInternal_8isv09$.call(this, ctx);
  };
  Text2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Text2',
    interfaces: [Container]
  };
  function Text2TextRendererActions() {
    TextRendererActions.call(this);
    this.arrayTex_8be2vx$ = ArrayList_init_1();
    this.arrayX_8be2vx$ = doubleArrayListOf(new Float64Array([]));
    this.arrayY_8be2vx$ = doubleArrayListOf(new Float64Array([]));
    this.arraySX_8be2vx$ = doubleArrayListOf(new Float64Array([]));
    this.arraySY_8be2vx$ = doubleArrayListOf(new Float64Array([]));
    this.arrayRot_8be2vx$ = doubleArrayListOf(new Float64Array([]));
    this.tr_0 = new Matrix$Transform();
  }
  Text2TextRendererActions.prototype.mreset = function () {
    this.arrayTex_8be2vx$.clear();
    this.arrayX_8be2vx$.clear();
    this.arrayY_8be2vx$.clear();
    this.arraySX_8be2vx$.clear();
    this.arraySY_8be2vx$.clear();
    this.arrayRot_8be2vx$.clear();
  };
  Text2TextRendererActions.prototype.put_za3lpa$ = function (codePoint) {
    var tmp$;
    var bf = Kotlin.isType(tmp$ = this.font, BitmapFont) ? tmp$ : throwCCE();
    var m = this.getGlyphMetrics_za3lpa$(codePoint);
    var g = bf.get_za3lpa$(codePoint);
    var x = 0.0;
    var y = -m.height;
    this.tr_0.setMatrix_1ktkmn$(this.transform);
    var $receiver = this.arrayTex_8be2vx$;
    var element = g.texture;
    $receiver.add_11rb$(element);
    this.arrayX_8be2vx$.plusAssign_14dthe$(this.x + fastTransformX(this.transform, x, y));
    this.arrayY_8be2vx$.plusAssign_14dthe$(this.y + fastTransformY(this.transform, x, y));
    this.arraySX_8be2vx$.plusAssign_14dthe$(this.tr_0.scaleX);
    this.arraySY_8be2vx$.plusAssign_14dthe$(this.tr_0.scaleY);
    this.arrayRot_8be2vx$.plusAssign_14dthe$(this.tr_0.rotation.radians);
    return m;
  };
  Text2TextRendererActions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Text2TextRendererActions',
    interfaces: [TextRendererActions]
  };
  function AG$renderToTexture$lambda_1(it) {
    return Unit;
  }
  function ViewsDslMarker() {
  }
  ViewsDslMarker.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewsDslMarker',
    interfaces: [Annotation]
  };
  function View(isContainer) {
    View$Companion_getInstance();
    this.isContainer = isContainer;
    this.$delegate_l5rad2$_0 = new Extra$Mixin();
    this._children = null;
    this.propagateEvents = true;
    this.hitShape_977g50$_0 = null;
    this.ratio_u2g8cn$_0 = 0.0;
    this.index_pzwnz4$_0 = 0;
    this.speed = 1.0;
    this.parent_kog7oo$_0 = null;
    this.name = null;
    this.blendMode_yq02qm$_0 = BlendMode$INHERIT_getInstance();
    this._scaleX_lmzz6j$_0 = 1.0;
    this._scaleY_lmzz5o$_0 = 1.0;
    this._skewX_mc7zdf$_0 = 0.0;
    this._skewY_mc7zea$_0 = 0.0;
    this._rotation_rhtmt1$_0 = get_radians_0(0);
    this.pos = Point.Companion.invoke();
    this._props_l13xo1$_0 = LinkedHashMap_init();
    this.tempTransform_oa88oq$_0 = new Matrix$Transform();
    this.mouseEnabled_pfyrl2$_0 = true;
    this.visible_4zjruo$_0 = true;
    this.validLocalProps_8be2vx$ = true;
    this.validLocalMatrix_8be2vx$ = true;
    this._components = null;
    this.components = null;
    this._localMatrix_be57f9$_0 = new Matrix();
    this._globalMatrix_7kmipb$_0 = new Matrix();
    this._globalMatrixVersion_9lmpeb$_0 = -1;
    this._globalMatrixInv_b24upg$_0 = new Matrix();
    this._globalMatrixInvVersion_66zpqg$_0 = -1;
    this._colorTransform_xtf156$_0 = new ColorTransform_init(numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToDouble(1), numberToInt(0), numberToInt(0), numberToInt(0), numberToInt(0));
    this._renderColorTransform_hakpqs$_0 = new ColorTransform_init(1.0, 1.0, 1.0, 1.0, 0, 0, 0, 0);
    this._renderColorTransformVersion_8o3r54$_0 = -1;
    this._renderBlendMode_71wjjx$_0 = BlendMode$INHERIT_getInstance();
    this._renderBlendModeVersion_qg85nd$_0 = -1;
    this.dirtyVertices = true;
    this._version_lfabyh$_0 = 0;
    this._versionColor_ltl3ag$_0 = 0;
    this._requireInvalidate_8be2vx$ = false;
    this._requireInvalidateColor_8be2vx$ = false;
    this.filter = null;
    this.hitTestUsingShapes = null;
    this._localBounds_1cvyqn$_0 = Rectangle.Companion.invoke();
  }
  Object.defineProperty(View.prototype, 'anchorDispX', {
    get: function () {
      return 0.0;
    }
  });
  Object.defineProperty(View.prototype, 'anchorDispY', {
    get: function () {
      return 0.0;
    }
  });
  View.prototype.forEachChildren_5ve17j$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.forEachChildren_5ve17j$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    return function (callback) {
      var tmp$;
      var tmp$_0;
      if ((tmp$ = this._children) != null) {
        var tmp$_1;
        var n = 0;
        while (n < tmp$.size) {
          callback(tmp$.get_za3lpa$((tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1)));
        }
        tmp$_0 = Unit;
      } else
        tmp$_0 = null;
      return tmp$_0;
    };
  }));
  View.prototype.forEachChildrenWithIndex_tuqrwj$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.forEachChildrenWithIndex_tuqrwj$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    return function (callback) {
      var tmp$;
      var tmp$_0;
      if ((tmp$ = this._children) != null) {
        var n = 0;
        while (n < tmp$.size) {
          callback(n, tmp$.get_za3lpa$(n));
          n = n + 1 | 0;
        }
        tmp$_0 = Unit;
      } else
        tmp$_0 = null;
      return tmp$_0;
    };
  }));
  View.prototype.forEachChildrenReversed_5ve17j$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.forEachChildrenReversed_5ve17j$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    return function (callback) {
      var tmp$;
      var tmp$_0;
      if ((tmp$ = this._children) != null) {
        var n = 0;
        while (n < tmp$.size) {
          callback(tmp$.get_za3lpa$(tmp$.size - n - 1 | 0));
          n = n + 1 | 0;
        }
        tmp$_0 = Unit;
      } else
        tmp$_0 = null;
      return tmp$_0;
    };
  }));
  function View$Reference() {
  }
  View$Reference.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Reference',
    interfaces: []
  };
  function View$HitTestType(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function View$HitTestType_initFields() {
    View$HitTestType_initFields = function () {
    };
    View$HitTestType$BOUNDING_instance = new View$HitTestType('BOUNDING', 0);
    View$HitTestType$SHAPE_instance = new View$HitTestType('SHAPE', 1);
  }
  var View$HitTestType$BOUNDING_instance;
  function View$HitTestType$BOUNDING_getInstance() {
    View$HitTestType_initFields();
    return View$HitTestType$BOUNDING_instance;
  }
  var View$HitTestType$SHAPE_instance;
  function View$HitTestType$SHAPE_getInstance() {
    View$HitTestType_initFields();
    return View$HitTestType$SHAPE_instance;
  }
  View$HitTestType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HitTestType',
    interfaces: [Enum]
  };
  function View$HitTestType$values() {
    return [View$HitTestType$BOUNDING_getInstance(), View$HitTestType$SHAPE_getInstance()];
  }
  View$HitTestType.values = View$HitTestType$values;
  function View$HitTestType$valueOf(name) {
    switch (name) {
      case 'BOUNDING':
        return View$HitTestType$BOUNDING_getInstance();
      case 'SHAPE':
        return View$HitTestType$SHAPE_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.View.HitTestType.' + name);
    }
  }
  View$HitTestType.valueOf_61zpoe$ = View$HitTestType$valueOf;
  Object.defineProperty(View.prototype, 'hitShape', {
    get: function () {
      return this.hitShape_977g50$_0;
    },
    set: function (hitShape) {
      this.hitShape_977g50$_0 = hitShape;
    }
  });
  function View$Companion() {
    View$Companion_instance = this;
  }
  View$Companion.prototype.commonAncestor_75c0h2$ = function (left, right) {
    var l = left;
    var r = right;
    var lCount = get_ancestorCount(l);
    var rCount = get_ancestorCount(r);
    while (lCount !== rCount) {
      if (lCount > rCount) {
        lCount = lCount - 1 | 0;
        l = l != null ? l.parent : null;
      } else {
        rCount = rCount - 1 | 0;
        r = r != null ? r.parent : null;
      }
      if (lCount < 0 && rCount < 0)
        break;
    }
    return equals(l, r) ? l : null;
  };
  View$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var View$Companion_instance = null;
  function View$Companion_getInstance() {
    if (View$Companion_instance === null) {
      new View$Companion();
    }return View$Companion_instance;
  }
  Object.defineProperty(View.prototype, 'ratio', {
    get: function () {
      return this.ratio_u2g8cn$_0;
    },
    set: function (ratio) {
      this.ratio_u2g8cn$_0 = ratio;
    }
  });
  Object.defineProperty(View.prototype, 'index', {
    get: function () {
      return this.index_pzwnz4$_0;
    },
    set: function (index) {
      this.index_pzwnz4$_0 = index;
    }
  });
  Object.defineProperty(View.prototype, 'parent', {
    get: function () {
      return this.parent_kog7oo$_0;
    },
    set: function (parent) {
      this.parent_kog7oo$_0 = parent;
    }
  });
  Object.defineProperty(View.prototype, 'blendMode', {
    get: function () {
      return this.blendMode_yq02qm$_0;
    },
    set: function (value) {
      if (this.blendMode_yq02qm$_0 !== value) {
        this.blendMode_yq02qm$_0 = value;
        this.invalidate();
      }}
  });
  Object.defineProperty(View.prototype, 'globalSpeed', {
    get: function () {
      return this.parent != null ? ensureNotNull(this.parent).globalSpeed * this.speed : this.speed;
    }
  });
  Object.defineProperty(View.prototype, 'x', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0().pos.x;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this.pos.x !== v) {
        this.pos.x = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'y', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0().pos.y;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this.pos.y !== v) {
        this.pos.y = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'scaleX', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0()._scaleX_lmzz6j$_0;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this._scaleX_lmzz6j$_0 !== v) {
        this._scaleX_lmzz6j$_0 = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'scaleY', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0()._scaleY_lmzz5o$_0;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this._scaleY_lmzz5o$_0 !== v) {
        this._scaleY_lmzz5o$_0 = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'scale', {
    get: function () {
      return (this.scaleX + this.scaleY) / 2.0;
    },
    set: function (v) {
      this.scaleX = v;
      this.scaleY = v;
    }
  });
  Object.defineProperty(View.prototype, 'skewX', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0()._skewX_mc7zdf$_0;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this._skewX_mc7zdf$_0 !== v) {
        this._skewX_mc7zdf$_0 = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'skewY', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0()._skewY_mc7zea$_0;
    },
    set: function (v) {
      this.ensureTransform_4sgqg4$_0();
      if (this._skewY_mc7zea$_0 !== v) {
        this._skewY_mc7zea$_0 = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'rotation', {
    get: function () {
      return this.ensureTransform_4sgqg4$_0()._rotation_rhtmt1$_0;
    },
    set: function (v) {
      var tmp$;
      this.ensureTransform_4sgqg4$_0();
      if (!((tmp$ = this._rotation_rhtmt1$_0) != null ? tmp$.equals(v) : null)) {
        this._rotation_rhtmt1$_0 = v;
        this.invalidateMatrix();
      }}
  });
  Object.defineProperty(View.prototype, 'rotationRadians', {
    get: function () {
      return this.rotation.radians;
    },
    set: function (v) {
      this.rotation = get_radians(v);
    }
  });
  Object.defineProperty(View.prototype, 'rotationDegrees', {
    get: function () {
      return get_degrees_0(this.rotation);
    },
    set: function (v) {
      this.rotation = get_degrees(v);
    }
  });
  Object.defineProperty(View.prototype, 'globalX', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.localToGlobalX_lu1900$(this.x, this.y) : null) != null ? tmp$_0 : this.x;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      this.x = (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.globalToLocalX_lu1900$(value, this.globalY) : null) != null ? tmp$_0 : value;
    }
  });
  Object.defineProperty(View.prototype, 'globalY', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.localToGlobalY_lu1900$(this.x, this.y) : null) != null ? tmp$_0 : this.y;
    },
    set: function (value) {
      var tmp$, tmp$_0;
      this.y = (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.globalToLocalY_lu1900$(this.globalX, value) : null) != null ? tmp$_0 : value;
    }
  });
  View.prototype.setSize_lu1900$ = function (width, height) {
    this.width = width;
    this.height = height;
  };
  Object.defineProperty(View.prototype, 'width', {
    get: function () {
      return this.getLocalBounds_2da8yn$().width * this.scaleX;
    },
    set: function (value) {
      this.scaleX = value / this.getLocalBounds_2da8yn$().width;
    }
  });
  Object.defineProperty(View.prototype, 'height', {
    get: function () {
      return this.getLocalBounds_2da8yn$().height * this.scaleY;
    },
    set: function (value) {
      this.scaleY = value / this.getLocalBounds_2da8yn$().height;
    }
  });
  Object.defineProperty(View.prototype, 'colorMul', {
    get: function () {
      return this._colorTransform_xtf156$_0.colorMul;
    },
    set: function (v) {
      this._colorTransform_xtf156$_0.colorMul = v;
      this.invalidateColorTransform();
    }
  });
  Object.defineProperty(View.prototype, 'colorAdd', {
    get: function () {
      return this._colorTransform_xtf156$_0.colorAdd;
    },
    set: function (v) {
      this._colorTransform_xtf156$_0.colorAdd = v;
      this.invalidateColorTransform();
    }
  });
  Object.defineProperty(View.prototype, 'alpha', {
    get: function () {
      return this._colorTransform_xtf156$_0.mA;
    },
    set: function (v) {
      this._colorTransform_xtf156$_0.mA = v;
      this.invalidateColorTransform();
    }
  });
  Object.defineProperty(View.prototype, 'tint', {
    get: function () {
      return this.colorMul;
    },
    set: function (value) {
      this.colorMul = value;
    }
  });
  Object.defineProperty(View.prototype, 'props', {
    get: function () {
      return this._props_l13xo1$_0;
    }
  });
  View.prototype.hasProp_61zpoe$ = function (key) {
    var $receiver = this._props_l13xo1$_0;
    var tmp$;
    return (Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).containsKey_11rb$(key);
  };
  View.prototype.getPropString_puj7f4$ = function (key, default_0) {
    if (default_0 === void 0)
      default_0 = '';
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this._props_l13xo1$_0.get_11rb$(key)) != null ? tmp$.toString() : null) != null ? tmp$_0 : default_0;
  };
  View.prototype.getPropDouble_io5o9c$ = function (key, default_0) {
    if (default_0 === void 0)
      default_0 = 0.0;
    var tmp$;
    var value = this._props_l13xo1$_0.get_11rb$(key);
    if (Kotlin.isNumber(value))
      return numberToDouble(value);
    if (typeof value === 'string')
      return (tmp$ = toDoubleOrNull(value)) != null ? tmp$ : default_0;
    return default_0;
  };
  View.prototype.getPropInt_bm4lxs$ = function (key, default_0) {
    if (default_0 === void 0)
      default_0 = 0;
    return numberToInt(this.getPropDouble_io5o9c$(key, default_0));
  };
  View.prototype.addProp_4w9ihe$ = function (key, value) {
    this._props_l13xo1$_0.put_xwzc9p$(key, value);
  };
  View.prototype.addProps_zb9t9x$ = function (values) {
    var tmp$;
    tmp$ = values.entries.iterator();
    while (tmp$.hasNext()) {
      var pair = tmp$.next();
      this.addProp_4w9ihe$(pair.key, pair.value);
    }
  };
  View.prototype.ensureTransform_4sgqg4$_0 = function () {
    if (!this.validLocalProps_8be2vx$) {
      this.validLocalProps_8be2vx$ = true;
      var t = this.tempTransform_oa88oq$_0.setMatrix_1ktkmn$(this._localMatrix_be57f9$_0);
      this.pos.x = t.x;
      this.pos.y = t.y;
      this._scaleX_lmzz6j$_0 = t.scaleX;
      this._scaleY_lmzz5o$_0 = t.scaleY;
      this._skewX_mc7zdf$_0 = t.skewX;
      this._skewY_mc7zea$_0 = t.skewY;
      this._rotation_rhtmt1$_0 = t.rotation;
    }return this;
  };
  Object.defineProperty(View.prototype, 'root', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.root : null) != null ? tmp$_0 : this;
    }
  });
  Object.defineProperty(View.prototype, 'stage', {
    get: function () {
      var tmp$;
      return (tmp$ = this.root) == null || Kotlin.isType(tmp$, Stage) ? tmp$ : null;
    }
  });
  Object.defineProperty(View.prototype, 'mouseEnabled', {
    get: function () {
      return this.mouseEnabled_pfyrl2$_0;
    },
    set: function (mouseEnabled) {
      this.mouseEnabled_pfyrl2$_0 = mouseEnabled;
    }
  });
  Object.defineProperty(View.prototype, 'visible', {
    get: function () {
      return this.visible_4zjruo$_0;
    },
    set: function (visible) {
      this.visible_4zjruo$_0 = visible;
    }
  });
  View.prototype.setMatrix_1ktkmn$ = function (matrix) {
    this._localMatrix_be57f9$_0.copyFrom_1ktkmn$(matrix);
    this.validLocalProps_8be2vx$ = false;
    this.invalidate();
  };
  View.prototype.setMatrixInterpolated_n2skke$ = function (ratio, l, r) {
    this._localMatrix_be57f9$_0.setToInterpolated_bs4suk$(ratio, l, r);
    this.validLocalProps_8be2vx$ = false;
    this.invalidate();
  };
  View.prototype.setComputedTransform_p3a6ga$ = function (transform) {
    this._localMatrix_be57f9$_0.copyFrom_1ktkmn$(transform.matrix);
    this._setTransform_y2sis1$(transform.transform);
    this.invalidate();
    this.validLocalProps_8be2vx$ = true;
    this.validLocalMatrix_8be2vx$ = true;
  };
  View.prototype.setTransform_y2sis1$ = function (transform) {
    this._setTransform_y2sis1$(transform);
    this.invalidate();
    this.validLocalProps_8be2vx$ = true;
    this.validLocalMatrix_8be2vx$ = false;
  };
  View.prototype._setTransform_y2sis1$ = function (t) {
    this.pos.x = t.x;
    this.pos.y = t.y;
    this._scaleX_lmzz6j$_0 = t.scaleX;
    this._scaleY_lmzz5o$_0 = t.scaleY;
    this._skewX_mc7zdf$_0 = t.skewY;
    this._skewY_mc7zea$_0 = t.skewY;
    this._rotation_rhtmt1$_0 = t.rotation;
  };
  Object.defineProperty(View.prototype, 'componentsSure', {
    get: function () {
      if (this._components == null)
        this._components = new Components();
      return ensureNotNull(this._components);
    }
  });
  View.prototype.getOrCreateComponent_sc4rae$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponent_sc4rae$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eother;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentOther_sc4rae$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentOther_sc4rae$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eother;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentMouse_uc2kpb$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentMouse_uc2kpb$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.emouse;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentKey_xnacut$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentKey_xnacut$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.ekey;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentGamepad_iz751v$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentGamepad_iz751v$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.egamepad;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentTouch_bd5ofp$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentTouch_bd5ofp$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.etouch;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentEvent_d4b2fa$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentEvent_d4b2fa$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eevent;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentUpdateWithViews_8ozlm3$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentUpdateWithViews_8ozlm3$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eupdateWV;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentUpdate_ust5lp$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentUpdate_ust5lp$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eupdate;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.getOrCreateComponentResize_r1u6mq$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.View.getOrCreateComponentResize_r1u6mq$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, gen) {
      var $this = this.componentsSure;
      var clazz = getKClass(T_0);
      var tmp$;
      var array = $this.eresize;
      var component = $this.findFirstComponentOfType_vk2s05$(array, clazz);
      if (component == null) {
        component = gen(this);
        var element = component;
        array.add_11rb$(element);
      }return isT(tmp$ = component) ? tmp$ : throwCCE();
    };
  }));
  View.prototype.removeComponent_q5itx0$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_q5itx0$(c) : null;
  };
  View.prototype.removeComponent_e2nz5r$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_e2nz5r$(c) : null;
  };
  View.prototype.removeComponent_o9umex$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_o9umex$(c) : null;
  };
  View.prototype.removeComponent_v53w79$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_v53w79$(c) : null;
  };
  View.prototype.removeComponent_x1kvfd$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_x1kvfd$(c) : null;
  };
  View.prototype.removeComponent_di2fos$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_di2fos$(c) : null;
  };
  View.prototype.removeComponent_lbvl2b$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_lbvl2b$(c) : null;
  };
  View.prototype.removeComponent_3p33e3$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_3p33e3$(c) : null;
  };
  View.prototype.removeComponent_1vvkw$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? tmp$.remove_1vvkw$(c) : null;
  };
  View.prototype.removeComponents_796cw$ = function (c) {
    var tmp$;
    (tmp$ = this._components) != null ? (tmp$.removeAll_796cw$(c), Unit) : null;
  };
  View.prototype.removeAllComponents = function () {
    var tmp$;
    (tmp$ = this._components) != null ? (tmp$.removeAll(), Unit) : null;
  };
  View.prototype.addComponent_q5itx0$ = function (c) {
    return this.componentsSure.add_q5itx0$(c);
  };
  View.prototype.addComponent_e2nz5r$ = function (c) {
    return this.componentsSure.add_e2nz5r$(c);
  };
  View.prototype.addComponent_o9umex$ = function (c) {
    return this.componentsSure.add_o9umex$(c);
  };
  View.prototype.addComponent_v53w79$ = function (c) {
    return this.componentsSure.add_v53w79$(c);
  };
  View.prototype.addComponent_x1kvfd$ = function (c) {
    return this.componentsSure.add_x1kvfd$(c);
  };
  View.prototype.addComponent_di2fos$ = function (c) {
    return this.componentsSure.add_di2fos$(c);
  };
  View.prototype.addComponent_lbvl2b$ = function (c) {
    return this.componentsSure.add_lbvl2b$(c);
  };
  View.prototype.addComponent_3p33e3$ = function (c) {
    return this.componentsSure.add_3p33e3$(c);
  };
  View.prototype.addComponent_1vvkw$ = function (c) {
    return this.componentsSure.add_1vvkw$(c);
  };
  function View$addUpdatable$ObjectLiteral(this$View, closure$updatable) {
    this.this$View = this$View;
    this.closure$updatable = closure$updatable;
  }
  Object.defineProperty(View$addUpdatable$ObjectLiteral.prototype, 'view', {
    get: function () {
      return this.this$View;
    }
  });
  View$addUpdatable$ObjectLiteral.prototype.update_seyb0p$ = function (dt) {
    this.closure$updatable(dt.millisecondsInt);
  };
  View$addUpdatable$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [UpdateComponentV2]
  };
  function View$addUpdatable$lambda(closure$component) {
    return function (it) {
      detach_6(closure$component);
      return Unit;
    };
  }
  View.prototype.addUpdatable_b4k9x1$ = function (updatable) {
    var component = attach_6(new View$addUpdatable$ObjectLiteral(this, updatable));
    component.update_14dthe$(0.0);
    return Cancellable.Companion.invoke_4m4org$(View$addUpdatable$lambda(component));
  };
  View.prototype.deferWithViews_v1hos$ = function (block) {
    this.addComponent_lbvl2b$(new View$DeferWithViewsUpdateComponentWithViews(this, block));
  };
  function View$DeferWithViewsUpdateComponentWithViews(view, block) {
    this.view_vjik6h$_0 = view;
    this.block = block;
  }
  Object.defineProperty(View$DeferWithViewsUpdateComponentWithViews.prototype, 'view', {
    get: function () {
      return this.view_vjik6h$_0;
    }
  });
  View$DeferWithViewsUpdateComponentWithViews.prototype.update_vcgvf3$ = function (views, ms) {
    this.block(views);
    detach_5(this);
  };
  View$DeferWithViewsUpdateComponentWithViews.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DeferWithViewsUpdateComponentWithViews',
    interfaces: [UpdateComponentWithViews]
  };
  Object.defineProperty(View.prototype, 'localMatrix', {
    get: function () {
      if (!this.validLocalMatrix_8be2vx$) {
        this.validLocalMatrix_8be2vx$ = true;
        this._requireInvalidate_8be2vx$ = true;
        this._localMatrix_be57f9$_0.setTransform_5mv93l$(this.x, this.y, this.scaleX, this.scaleY, this.rotation, this.skewX, this.skewY);
      }return this._localMatrix_be57f9$_0;
    },
    set: function (value) {
      this.setMatrix_1ktkmn$(value);
      this.invalidate();
    }
  });
  Object.defineProperty(View.prototype, 'globalMatrix', {
    get: function () {
      if (this._globalMatrixVersion_9lmpeb$_0 !== this._version_lfabyh$_0) {
        this._globalMatrixVersion_9lmpeb$_0 = this._version_lfabyh$_0;
        this._requireInvalidate_8be2vx$ = true;
        if (this.parent != null) {
          this._globalMatrix_7kmipb$_0.multiply_19kw1g$(this.localMatrix, ensureNotNull(this.parent).globalMatrix);
        } else {
          this._globalMatrix_7kmipb$_0.copyFrom_1ktkmn$(this.localMatrix);
        }
      }return this._globalMatrix_7kmipb$_0;
    },
    set: function (value) {
      this._requireInvalidate_8be2vx$ = true;
      if (this.parent != null) {
        this.localMatrix.multiply_19kw1g$(value, ensureNotNull(this.parent).globalMatrixInv);
      } else {
        this.localMatrix.copyFrom_1ktkmn$(value);
      }
    }
  });
  Object.defineProperty(View.prototype, 'globalMatrixInv', {
    get: function () {
      if (this._globalMatrixInvVersion_66zpqg$_0 !== this._version_lfabyh$_0) {
        this._globalMatrixInvVersion_66zpqg$_0 = this._version_lfabyh$_0;
        this._requireInvalidate_8be2vx$ = true;
        this._globalMatrixInv_b24upg$_0.invert_1ktkmn$(this.globalMatrix);
      }return this._globalMatrixInv_b24upg$_0;
    }
  });
  Object.defineProperty(View.prototype, 'colorTransform', {
    get: function () {
      return this._colorTransform_xtf156$_0;
    },
    set: function (v) {
      this._colorTransform_xtf156$_0.copyFrom_54kf7e$(v);
      this.invalidate();
    }
  });
  Object.defineProperty(View.prototype, 'renderColorTransform', {
    get: function () {
      if (this._renderColorTransformVersion_8o3r54$_0 !== this._versionColor_ltl3ag$_0) {
        this._renderColorTransformVersion_8o3r54$_0 = this._versionColor_ltl3ag$_0;
        this._requireInvalidateColor_8be2vx$ = true;
        var tmp$;
        if (this.parent != null && ((tmp$ = this.parent) != null ? tmp$.filter : null) != null)
          this._renderColorTransform_hakpqs$_0.copyFrom_54kf7e$(this._colorTransform_xtf156$_0);
        else if (this.parent != null && !Kotlin.isType(this, View$Reference))
          this._renderColorTransform_hakpqs$_0.setToConcat_k8ycrk$(this._colorTransform_xtf156$_0, ensureNotNull(this.parent).renderColorTransform);
        else
          this._renderColorTransform_hakpqs$_0.copyFrom_54kf7e$(this._colorTransform_xtf156$_0);
      }return this._renderColorTransform_hakpqs$_0;
    }
  });
  Object.defineProperty(View.prototype, 'renderBlendMode', {
    get: function () {
      var tmp$, tmp$_0;
      if (this._renderBlendModeVersion_qg85nd$_0 !== this._version_lfabyh$_0) {
        this._renderBlendModeVersion_qg85nd$_0 = this._version_lfabyh$_0;
        this._requireInvalidate_8be2vx$ = true;
        this._renderBlendMode_71wjjx$_0 = this.blendMode === BlendMode$INHERIT_getInstance() ? (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.renderBlendMode : null) != null ? tmp$_0 : BlendMode$NORMAL_getInstance() : this.blendMode;
      }return this._renderBlendMode_71wjjx$_0;
    }
  });
  Object.defineProperty(View.prototype, 'renderColorMul', {
    get: function () {
      return this.renderColorTransform.colorMul;
    }
  });
  Object.defineProperty(View.prototype, 'renderColorAdd', {
    get: function () {
      return this.renderColorTransform.colorAdd;
    }
  });
  Object.defineProperty(View.prototype, 'renderAlpha', {
    get: function () {
      return this.renderColorTransform.mA;
    }
  });
  View.prototype.localMouseX_gohfjx$ = function (views) {
    return fastTransformX_0(this.globalMatrixInv, views.input.mouse);
  };
  View.prototype.localMouseY_gohfjx$ = function (views) {
    return fastTransformY_0(this.globalMatrixInv, views.input.mouse);
  };
  View.prototype.localMouseXY_mv18lt$ = function (views, target) {
    if (target === void 0)
      target = Point.Companion.invoke();
    return target.setTo_lu1900$(this.localMouseX_gohfjx$(views), this.localMouseY_gohfjx$(views));
  };
  View.prototype.invalidateMatrix = function () {
    this.validLocalMatrix_8be2vx$ = false;
    this.invalidate();
  };
  View.prototype.invalidate = function () {
    var tmp$;
    this._version_lfabyh$_0 = this._version_lfabyh$_0 + 1 | 0;
    this._requireInvalidate_8be2vx$ = false;
    this.dirtyVertices = true;
    if ((tmp$ = this._children) != null) {
      var tmp$_0;
      var n = 0;
      while (n < tmp$.size) {
        var child = tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0));
        if (child._requireInvalidate_8be2vx$) {
          child.invalidate();
        }}
    }};
  View.prototype.invalidateColorTransform = function () {
    var tmp$;
    this._versionColor_ltl3ag$_0 = this._versionColor_ltl3ag$_0 + 1 | 0;
    this._requireInvalidateColor_8be2vx$ = false;
    this.dirtyVertices = true;
    if ((tmp$ = this._children) != null) {
      var tmp$_0;
      var n = 0;
      while (n < tmp$.size) {
        var child = tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0));
        if (child._requireInvalidateColor_8be2vx$) {
          child.invalidateColorTransform();
        }}
    }};
  View.prototype.render_8isv09$ = function (ctx) {
    if (!this.visible)
      return;
    if (this.filter != null) {
      this.renderFiltered_tbgajv$_0(ctx, ensureNotNull(this.filter));
    } else {
      this.renderInternal_8isv09$(ctx);
    }
  };
  View.prototype.renderFiltered_tbgajv$_0 = function (ctx, filter) {
    var bounds = this.getLocalBounds_2da8yn$();
    var borderEffect = filter.border;
    var $this = ctx.matrixPool;
    var temp = $this.alloc();
    try {
      var $this_0 = ctx.matrix3DPool;
      var temp_0 = $this_0.alloc();
      try {
        var texWidth = numberToInt(bounds.width) + (borderEffect * 2 | 0) | 0;
        var texHeight = numberToInt(bounds.height) + (borderEffect * 2 | 0) | 0;
        var addx = -bounds.x + borderEffect;
        var addy = -bounds.y + borderEffect;
        ctx.flush();
        var $this_1 = ctx.ag;
        var rb = $this_1.renderBuffers.alloc();
        $this_1.frameRenderBuffers.add_11rb$(rb);
        var oldRenderBuffer = $this_1.currentRenderBuffer;
        rb.setSize_vux9f0$(texWidth, texHeight);
        $this_1.setRenderBuffer_m67x29$(rb);
        try {
          $this_1.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
          var oldScissors = ctx.batch.scissor;
          ctx.batch.scissor = null;
          try {
            temp.copyFrom_1ktkmn$(this.globalMatrixInv);
            temp.translate_lu1900$(addx, addy);
            var $this_2 = ctx.batch;
            $this_2.flush();
            temp_0.copyFrom_p62hku$($this_2.viewMat);
            copyFrom($this_2.viewMat, temp);
            try {
              this.renderInternal_8isv09$(ctx);
            }finally {
              $this_2.flush();
              $this_2.viewMat.copyFrom_p62hku$(temp_0);
            }
            ctx.flush();
          }finally {
            ctx.batch.scissor = oldScissors;
          }
        }finally {
          $this_1.setRenderBuffer_m67x29$(oldRenderBuffer);
        }
        try {
          var it = rb.tex;
          var texture = Texture.Companion.invoke_l6jlr1$(it, texWidth, texHeight);
          temp.copyFrom_1ktkmn$(this.globalMatrix);
          temp.pretranslate_lu1900$(-addx, -addy);
          filter.render_ricsvr$(ctx, temp, texture, texWidth, texHeight, this.renderColorAdd, this.renderColorMul, this.blendMode);
          ctx.flush();
        }finally {
          $this_1.frameRenderBuffers.remove_11rb$(rb);
          $this_1.renderBuffers.free_11rb$(rb);
        }
      }finally {
        $this_0.free_11rb$(temp_0);
      }
    }finally {
      $this.free_11rb$(temp);
    }
  };
  View.prototype.toString = function () {
    var out = get_portableSimpleName(Kotlin.getKClassFromExpression(this));
    if (this.x !== 0.0 || this.y !== 0.0)
      out += ':pos=(' + this.get_str_yrwdxr$(this.x) + ',' + this.get_str_yrwdxr$(this.y) + ')';
    if (this.scaleX !== 1.0 || this.scaleY !== 1.0)
      out += ':scale=(' + this.get_str_yrwdxr$(this.scaleX) + ',' + this.get_str_yrwdxr$(this.scaleY) + ')';
    if (this.skewX !== 0.0 || this.skewY !== 0.0)
      out += ':skew=(' + this.get_str_yrwdxr$(this.skewX) + ',' + this.get_str_yrwdxr$(this.skewY) + ')';
    if (this.rotationRadians !== 0.0)
      out += ':rotation=(' + this.get_str_yrwdxr$(this.rotationDegrees) + '\xBA)';
    if (this.name != null)
      out += ':name=(' + toString(this.name) + ')';
    if (this.blendMode !== BlendMode$INHERIT_getInstance())
      out += ':blendMode=(' + this.blendMode + ')';
    if (!this.visible)
      out += ':visible=' + this.visible;
    if (this.alpha !== 1.0)
      out += ':alpha=' + this.alpha;
    if (this.colorMul.rgb !== color.Colors.WHITE.rgb)
      out += ':colorMul=' + this.colorMul.hexString;
    if (this.colorAdd !== 2139062143)
      out += ':colorAdd=' + get_shex(this.colorAdd);
    return out;
  };
  View.prototype.get_str_yrwdxr$ = function ($receiver) {
    return toStringDecimal($receiver, 2, true);
  };
  View.prototype.globalToLocal_jhva45$ = function (p, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.globalToLocalXY_aaz6cc$(get_x(p), get_y(p), out);
  };
  View.prototype.globalToLocalXY_aaz6cc$ = function (x, y, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.globalMatrixInv.transform_aaz6cc$(x, y, out);
  };
  View.prototype.globalToLocalX_lu1900$ = function (x, y) {
    return fastTransformX(this.globalMatrixInv, x, y);
  };
  View.prototype.globalToLocalY_lu1900$ = function (x, y) {
    return fastTransformY(this.globalMatrixInv, x, y);
  };
  View.prototype.localToGlobal_jhva45$ = function (p, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.localToGlobalXY_aaz6cc$(get_x(p), get_y(p), out);
  };
  View.prototype.localToGlobalXY_aaz6cc$ = function (x, y, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.globalMatrix.transform_aaz6cc$(x, y, out);
  };
  View.prototype.localToGlobalX_lu1900$ = function (x, y) {
    return fastTransformX(this.globalMatrix, x, y);
  };
  View.prototype.localToGlobalY_lu1900$ = function (x, y) {
    return fastTransformY(this.globalMatrix, x, y);
  };
  View.prototype.renderToLocal_jhva45$ = function (p, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.renderToLocalXY_aaz6cc$(get_x(p), get_y(p), out);
  };
  View.prototype.renderToLocalXY_aaz6cc$ = function (x, y, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.globalMatrixInv.transform_aaz6cc$(x, y, out);
  };
  View.prototype.renderToLocalX_lu1900$ = function (x, y) {
    return fastTransformX(this.globalMatrixInv, x, y);
  };
  View.prototype.renderToLocalY_lu1900$ = function (x, y) {
    return fastTransformY(this.globalMatrixInv, x, y);
  };
  View.prototype.localToRender_jhva45$ = function (p, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.localToRenderXY_aaz6cc$(get_x(p), get_y(p), out);
  };
  View.prototype.localToRenderXY_aaz6cc$ = function (x, y, out) {
    if (out === void 0)
      out = Point.Companion.invoke();
    return this.globalMatrix.transform_aaz6cc$(x, y, out);
  };
  View.prototype.localToRenderX_lu1900$ = function (x, y) {
    return fastTransformX(this.globalMatrix, x, y);
  };
  View.prototype.localToRenderY_lu1900$ = function (x, y) {
    return fastTransformY(this.globalMatrix, x, y);
  };
  View.prototype.hitTest_lu1900$ = function (x, y) {
    var tmp$;
    if ((tmp$ = this._children) != null) {
      var n = 0;
      while (n < tmp$.size) {
        var child = tmp$.get_za3lpa$(tmp$.size - n - 1 | 0);
        var tmp$_0;
        if (child.visible) {
          if ((tmp$_0 = child.hitTest_lu1900$(x, y)) != null) {
            return tmp$_0;
          }}n = n + 1 | 0;
      }
    }var res = this.hitTestInternal_lu1900$(x, y);
    if (res != null)
      return res;
    return Kotlin.isType(this, Stage) ? this : null;
  };
  View.prototype.hitTestAny_lu1900$ = function (x, y) {
    return this.hitTest_lu1900$(x, y) != null;
  };
  View.prototype.hitTestInternal_lu1900$ = function (x, y) {
    var bounds = this.getLocalBounds_2da8yn$();
    var llx = this.globalToLocalX_lu1900$(x, y);
    var lly = this.globalToLocalY_lu1900$(x, y);
    if (!bounds.contains_lu1900$(llx, lly))
      return null;
    var anchorDispX = this.anchorDispX;
    var anchorDispY = this.anchorDispY;
    var lx = llx + anchorDispX;
    var ly = lly + anchorDispY;
    if (this.hitTestUsingShapes === true || (this.hitTestUsingShapes == null && this.hitShape != null)) {
      return ensureNotNull(this.hitShape).containsPoint_lu1900$(lx, ly) ? this : null;
    } else {
      return this;
    }
  };
  View.prototype.checkGlobalBounds_15yvbs$ = function (x, y, sLeft, sTop, sRight, sBottom) {
    return this.checkLocalBounds_15yvbs$(this.globalToLocalX_lu1900$(x, y), this.globalToLocalY_lu1900$(x, y), sLeft, sTop, sRight, sBottom);
  };
  View.prototype.checkLocalBounds_15yvbs$ = function (lx, ly, sLeft, sTop, sRight, sBottom) {
    return lx >= sLeft && ly >= sTop && lx < sRight && ly < sBottom;
  };
  View.prototype.reset = function () {
    this._localMatrix_be57f9$_0.identity();
    this.pos.setTo_lu1900$(0.0, 0.0);
    this._scaleX_lmzz6j$_0 = 1.0;
    this._scaleY_lmzz5o$_0 = 1.0;
    this._skewX_mc7zdf$_0 = 0.0;
    this._skewY_mc7zea$_0 = 0.0;
    this._rotation_rhtmt1$_0 = get_radians_0(0);
    this.validLocalMatrix_8be2vx$ = false;
    this.invalidate();
  };
  View.prototype.removeFromParent = function () {
    var tmp$, tmp$_0, tmp$_1;
    if (this.parent == null)
      return;
    var p = ensureNotNull(this.parent);
    tmp$ = this.index + 1 | 0;
    tmp$_0 = p.numChildren;
    for (var i = tmp$; i < tmp$_0; i++) {
      var tmp$_2;
      tmp$_2 = p.get_za3lpa$(i);
      tmp$_2.index = tmp$_2.index - 1 | 0;
    }
    (tmp$_1 = p._children) != null ? tmp$_1.removeAt_za3lpa$(this.index) : null;
    this.parent = null;
    this.index = -1;
  };
  View.prototype.getConcatMatrix_rhw83r$ = function (target, out) {
    if (out === void 0)
      out = new Matrix();
    var current = this;
    out.identity();
    while (current != null) {
      out.multiply_19kw1g$(out, current.localMatrix);
      if (equals(current, target))
        break;
      current = current.parent;
    }
    return out;
  };
  Object.defineProperty(View.prototype, 'globalBounds', {
    get: function () {
      return this.getGlobalBounds_2da8yn$();
    }
  });
  View.prototype.getGlobalBounds_2da8yn$ = function (out) {
    if (out === void 0)
      out = Rectangle.Companion.invoke();
    return this.getBounds_tvgmbo$(this.root, out);
  };
  View.prototype.getBounds_tvgmbo$ = function (target, out) {
    if (target === void 0)
      target = this;
    if (out === void 0)
      out = Rectangle.Companion.invoke();
    var concat = this.getConcatMatrix_rhw83r$(target != null ? target : this);
    var bb = new BoundsBuilder();
    this.getLocalBoundsInternal_2da8yn$(out);
    var p1x = out.left;
    var p1y = out.top;
    var p2x = out.right;
    var p2y = out.top;
    var p3x = out.right;
    var p3y = out.bottom;
    var p4x = out.left;
    var p4y = out.bottom;
    bb.add_lu1900$(fastTransformX(concat, p1x, p1y), fastTransformY(concat, p1x, p1y));
    bb.add_lu1900$(fastTransformX(concat, p2x, p2y), fastTransformY(concat, p2x, p2y));
    bb.add_lu1900$(fastTransformX(concat, p3x, p3y), fastTransformY(concat, p3x, p3y));
    bb.add_lu1900$(fastTransformX(concat, p4x, p4y), fastTransformY(concat, p4x, p4y));
    bb.getBounds_2da8yn$(out);
    return out;
  };
  View.prototype.getLocalBounds_2da8yn$ = function (out) {
    if (out === void 0)
      out = this._localBounds_1cvyqn$_0;
    this.getLocalBoundsInternal_2da8yn$(out);
    return out;
  };
  View.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    out.setTo_tjonv8$(0, 0, 0, 0);
  };
  View.prototype.getLocalBoundsInternal_2da8yn$ = function (out, callback$default) {
    if (out === void 0)
      out = this._localBounds_1cvyqn$_0;
    callback$default ? callback$default(out) : this.getLocalBoundsInternal_2da8yn$$default(out);
  };
  View.prototype.createInstance = function () {
    throw new MustOverrideException('Must Override ' + Kotlin.getKClassFromExpression(this) + '.createInstance()');
  };
  View.prototype.copyPropsFrom_l5rad2$ = function (source) {
    this.name = source.name;
    this.colorAdd = source.colorAdd;
    this.colorMul = source.colorMul;
    this.setMatrix_1ktkmn$(source.localMatrix);
    this.visible = source.visible;
    this.ratio = source.ratio;
    this.speed = source.speed;
    this.blendMode = source.blendMode;
  };
  View.prototype.findViewByName_61zpoe$ = function (name) {
    var tmp$;
    if (equals(this.name, name))
      return this;
    if (this.isContainer) {
      var tmp$_0;
      if ((tmp$_0 = (Kotlin.isType(tmp$ = this, Container) ? tmp$ : throwCCE())._children) != null) {
        var tmp$_1;
        var n = 0;
        while (n < tmp$_0.size) {
          var named = tmp$_0.get_za3lpa$((tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1)).findViewByName_61zpoe$(name);
          if (named != null)
            return named;
        }
      }}return null;
  };
  View.prototype.clone = function () {
    var $receiver = this.createInstance();
    $receiver.copyPropsFrom_l5rad2$(this);
    return $receiver;
  };
  Object.defineProperty(View.prototype, 'extra', {
    get: function () {
      return this.$delegate_l5rad2$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_l5rad2$_0.extra = tmp$;
    }
  });
  View.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'View',
    interfaces: [Extra, Renderable]
  };
  function View_init($this) {
    $this = $this || Object.create(View.prototype);
    View.call($this, false);
    return $this;
  }
  function hitTest($receiver, x, y) {
    return $receiver.hitTest_lu1900$(x, y);
  }
  function hitTest_0($receiver, pos) {
    return $receiver.hitTest_lu1900$(get_x(pos), get_y(pos));
  }
  function hasAncestor($receiver, ancestor) {
    var tmp$, tmp$_0;
    return equals($receiver, ancestor) ? true : (tmp$_0 = (tmp$ = $receiver.parent) != null ? hasAncestor(tmp$, ancestor) : null) != null ? tmp$_0 : false;
  }
  function replaceWith($receiver, view) {
    var tmp$, tmp$_0;
    if (equals($receiver, view))
      return false;
    if ($receiver.parent == null)
      return false;
    (tmp$_0 = (tmp$ = view.parent) != null ? tmp$._children : null) != null ? tmp$_0.remove_11rb$(view) : null;
    ensureNotNull($receiver.parent).childrenInternal.set_wxm5ur$($receiver.index, view);
    view.index = $receiver.index;
    view.parent = $receiver.parent;
    $receiver.parent = null;
    view.invalidate();
    $receiver.index = -1;
    return true;
  }
  function addUpdater$ObjectLiteral(this$addUpdater, closure$updatable) {
    this.this$addUpdater = this$addUpdater;
    this.closure$updatable = closure$updatable;
  }
  Object.defineProperty(addUpdater$ObjectLiteral.prototype, 'view', {
    get: function () {
      return this.this$addUpdater;
    }
  });
  addUpdater$ObjectLiteral.prototype.update_seyb0p$ = function (dt) {
    this.closure$updatable(this.this$addUpdater, get_timeSpan(dt));
  };
  addUpdater$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [UpdateComponentV2]
  };
  function addUpdater$lambda(closure$component) {
    return function (it) {
      detach_6(closure$component);
      return Unit;
    };
  }
  function addUpdater($receiver, updatable) {
    var component = attach_6(new addUpdater$ObjectLiteral($receiver, updatable));
    component.update_seyb0p$(HRTimeSpan.Companion.ZERO);
    return Cancellable.Companion.invoke_4m4org$(addUpdater$lambda(component));
  }
  function addHrUpdater$ObjectLiteral(this$addHrUpdater, closure$updatable) {
    this.this$addHrUpdater = this$addHrUpdater;
    this.closure$updatable = closure$updatable;
  }
  Object.defineProperty(addHrUpdater$ObjectLiteral.prototype, 'view', {
    get: function () {
      return this.this$addHrUpdater;
    }
  });
  addHrUpdater$ObjectLiteral.prototype.update_seyb0p$ = function (dt) {
    this.closure$updatable(this.this$addHrUpdater, dt);
  };
  addHrUpdater$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [UpdateComponentV2]
  };
  function addHrUpdater$lambda(closure$component) {
    return function (it) {
      detach_6(closure$component);
      return Unit;
    };
  }
  function addHrUpdater($receiver, updatable) {
    var component = attach_6(new addHrUpdater$ObjectLiteral($receiver, updatable));
    component.update_seyb0p$(HRTimeSpan.Companion.ZERO);
    return Cancellable.Companion.invoke_4m4org$(addHrUpdater$lambda(component));
  }
  function addFixedUpdater($receiver, time, initial, limitCallsPerFrame, updatable) {
    if (initial === void 0)
      initial = true;
    if (limitCallsPerFrame === void 0)
      limitCallsPerFrame = 16;
    return addFixedUpdater_1($receiver, get_hr(time), initial, limitCallsPerFrame, updatable);
  }
  function addFixedUpdater_0($receiver, timesPerSecond, initial, limitCallsPerFrame, updatable) {
    if (initial === void 0)
      initial = true;
    if (limitCallsPerFrame === void 0)
      limitCallsPerFrame = 16;
    return addFixedUpdater_1($receiver, get_hr(timesPerSecond.timeSpan), initial, limitCallsPerFrame, updatable);
  }
  function addFixedUpdater$ObjectLiteral(this$addFixedUpdater, closure$accum, closure$tickTime, closure$updatable, closure$limitCallsPerFrame) {
    this.this$addFixedUpdater = this$addFixedUpdater;
    this.closure$accum = closure$accum;
    this.closure$tickTime = closure$tickTime;
    this.closure$updatable = closure$updatable;
    this.closure$limitCallsPerFrame = closure$limitCallsPerFrame;
  }
  Object.defineProperty(addFixedUpdater$ObjectLiteral.prototype, 'view', {
    get: function () {
      return this.this$addFixedUpdater;
    }
  });
  addFixedUpdater$ObjectLiteral.prototype.update_seyb0p$ = function (dt) {
    this.closure$accum.v = this.closure$accum.v.plus_seyb0p$(dt);
    var calls = 0;
    while (this.closure$accum.v.compareTo_11rb$(this.closure$tickTime.times_14dthe$(0.75)) >= 0) {
      this.closure$accum.v = this.closure$accum.v.minus_seyb0p$(this.closure$tickTime);
      this.closure$updatable(this.this$addFixedUpdater);
      calls = calls + 1 | 0;
      if (calls >= this.closure$limitCallsPerFrame) {
        this.closure$accum.v = get_hrNanoseconds(0);
        break;
      }}
    if (calls > 0) {
      if (this.closure$accum.v.compareTo_11rb$(this.closure$tickTime.times_14dthe$(0.25)) < 0) {
        this.closure$accum.v = get_hrNanoseconds(0);
      }}};
  addFixedUpdater$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [UpdateComponentV2]
  };
  function addFixedUpdater$lambda(closure$component) {
    return function (it) {
      detach_6(closure$component);
      return Unit;
    };
  }
  function addFixedUpdater_1($receiver, time, initial, limitCallsPerFrame, updatable) {
    if (initial === void 0)
      initial = true;
    if (limitCallsPerFrame === void 0)
      limitCallsPerFrame = 16;
    var tickTime = time;
    var accum = {v: get_hrNanoseconds(0)};
    var component = attach_6(new addFixedUpdater$ObjectLiteral($receiver, accum, tickTime, updatable, limitCallsPerFrame));
    if (initial) {
      updatable($receiver);
    }return Cancellable.Companion.invoke_4m4org$(addFixedUpdater$lambda(component));
  }
  function onNextFrame$ObjectLiteral(this$onNextFrame, closure$updatable) {
    this.this$onNextFrame = this$onNextFrame;
    this.closure$updatable = closure$updatable;
  }
  Object.defineProperty(onNextFrame$ObjectLiteral.prototype, 'view', {
    get: function () {
      return this.this$onNextFrame;
    }
  });
  onNextFrame$ObjectLiteral.prototype.update_vcgvf3$ = function (views, ms) {
    removeFromView(this);
    this.closure$updatable(this.this$onNextFrame, views);
  };
  onNextFrame$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [UpdateComponentWithViews]
  };
  function onNextFrame($receiver, updatable) {
    attach_5(new onNextFrame$ObjectLiteral($receiver, updatable));
  }
  function get_ancestorCount($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    return (tmp$_1 = (tmp$_0 = (tmp$ = $receiver != null ? $receiver.parent : null) != null ? get_ancestorCount(tmp$) : null) != null ? tmp$_0 + 1 | 0 : null) != null ? tmp$_1 : 0;
  }
  function ancestorsUpTo($receiver, target) {
    var current = $receiver;
    var out = ArrayList_init_1();
    while (current != null && !equals(current, target)) {
      var element = current;
      out.add_11rb$(element);
      current = current.parent;
    }
    return out;
  }
  function get_ancestors($receiver) {
    return ancestorsUpTo($receiver, null);
  }
  function dump($receiver, indent, emit) {
    if (indent === void 0)
      indent = '';
    if (emit === void 0)
      emit = getCallableRef('println', function (message) {
        return println(message), Unit;
      });
    emit(indent + toString($receiver));
    if ($receiver != null && $receiver.isContainer) {
      var tmp$;
      if ((tmp$ = $receiver._children) != null) {
        var tmp$_0;
        var n = 0;
        while (n < tmp$.size) {
          dump(tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)), indent + ' ', emit);
        }
      }}}
  function dumpToString$lambda(closure$out) {
    return function (it) {
      closure$out.add_11rb$(it);
      return Unit;
    };
  }
  function dumpToString($receiver) {
    if ($receiver == null)
      return '';
    var out = ArrayList_init_1();
    dump($receiver, void 0, dumpToString$lambda(out));
    return joinToString(out, '\n');
  }
  function foreachDescendant($receiver, handler) {
    if ($receiver != null) {
      handler($receiver);
      if ($receiver.isContainer) {
        var tmp$;
        if ((tmp$ = $receiver._children) != null) {
          var tmp$_0;
          var n = 0;
          while (n < tmp$.size) {
            foreachDescendant(tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)), handler);
          }
        }}}}
  function descendantsWithProp$lambda(closure$value, closure$prop) {
    return function (it) {
      if (closure$value != null) {
        return equals(it.props.get_11rb$(closure$prop), closure$value);
      } else {
        var $receiver = it.props;
        var key = closure$prop;
        var tmp$;
        return (Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).containsKey_11rb$(key);
      }
    };
  }
  function descendantsWithProp($receiver, prop, value) {
    if (value === void 0)
      value = null;
    if ($receiver == null) {
      return emptyList();
    }return descendantsWith($receiver, void 0, descendantsWithProp$lambda(value, prop));
  }
  function descendantsWithPropString($receiver, prop, value) {
    if (value === void 0)
      value = null;
    var $receiver_0 = descendantsWithProp($receiver, prop, value);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item, item.getPropString_puj7f4$(prop)));
    }
    return destination;
  }
  function descendantsWithPropInt($receiver, prop, value) {
    if (value === void 0)
      value = null;
    var $receiver_0 = descendantsWithProp($receiver, prop, value != null ? toString(value) : null);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item, item.getPropInt_bm4lxs$(prop)));
    }
    return destination;
  }
  function descendantsWithPropDouble($receiver, prop, value) {
    if (value === void 0)
      value = null;
    var $receiver_0 = descendantsWithProp($receiver, prop, value != null ? toString(value) : null);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item, item.getPropInt_bm4lxs$(prop)));
    }
    return destination;
  }
  var getDescendantsOfType = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.getDescendantsOfType_fbtmzt$', wrapFunction(function () {
    var descendantsWith = _.com.soywiz.korge.view.descendantsWith_yd6hk$;
    function getDescendantsOfType$lambda(typeClosure$T, isT) {
      return function (it) {
        return isT(it);
      };
    }
    return function (T_0, isT, $receiver) {
      return descendantsWith($receiver, void 0, getDescendantsOfType$lambda(T_0, isT));
    };
  }));
  function get$lambda(closure$name) {
    return function (it) {
      return equals(it.name, closure$name);
    };
  }
  function get_19($receiver, name) {
    return firstDescendantWith($receiver, get$lambda(name));
  }
  var position = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.position_ynacpq$', wrapFunction(function () {
    var get_x = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.get_x_qai0ns$;
    var get_y = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.get_y_qai0ns$;
    var position = _.com.soywiz.korge.view.position_2cbtc5$;
    return function ($receiver, point) {
      return position($receiver, get_x(point), get_y(point));
    };
  }));
  var visible = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.visible_gngpky$', function ($receiver, visible) {
    $receiver.visible = visible;
    return $receiver;
  });
  var name_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.name_kzw694$', function ($receiver, name) {
    $receiver.name = name;
    return $receiver;
  });
  var hitShape = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.hitShape_p3mz7x$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var buildPath = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.shape.buildPath_rugifr$;
    function hitShape$lambda(closure$block) {
      return function ($receiver) {
        closure$block($receiver);
        return Unit;
      };
    }
    return function ($receiver, block) {
      $receiver.hitShape = buildPath(void 0, hitShape$lambda(block));
      return $receiver;
    };
  }));
  function size($receiver, width, height) {
    $receiver.width = width;
    $receiver.height = height;
    return $receiver;
  }
  function size_0($receiver, width, height) {
    return size($receiver, width, height);
  }
  function firstDescendantWithName($receiver, name) {
    return get_19($receiver, name);
  }
  function get_allDescendantNames$lambda(closure$out) {
    return function (it) {
      if (it.name != null) {
        var $receiver = closure$out;
        var element = ensureNotNull(it.name);
        $receiver.add_11rb$(element);
      }return Unit;
    };
  }
  function get_allDescendantNames($receiver) {
    var out = ArrayList_init_1();
    foreachDescendant($receiver, get_allDescendantNames$lambda(out));
    return out;
  }
  function firstDescendantWith($receiver, check) {
    if ($receiver == null)
      return null;
    if (check($receiver))
      return $receiver;
    if ($receiver.isContainer) {
      var tmp$;
      if ((tmp$ = $receiver._children) != null) {
        var tmp$_0;
        var n = 0;
        while (n < tmp$.size) {
          var res = firstDescendantWith(tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)), check);
          if (res != null)
            return res;
        }
      }}return null;
  }
  function descendantsWith($receiver, out, check) {
    if (out === void 0) {
      out = ArrayList_init_1();
    }if ($receiver != null) {
      if (check($receiver)) {
        out.add_11rb$($receiver);
      }if ($receiver.isContainer) {
        var tmp$;
        if ((tmp$ = $receiver._children) != null) {
          var tmp$_0;
          var n = 0;
          while (n < tmp$.size) {
            descendantsWith(tmp$.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)), out, check);
          }
        }}}return out;
  }
  function xy($receiver, x, y) {
    $receiver.x = x;
    $receiver.y = y;
    return $receiver;
  }
  function xy_0($receiver, x, y) {
    return xy($receiver, x, y);
  }
  function position_0($receiver, x, y) {
    return xy($receiver, x, y);
  }
  function position_1($receiver, x, y) {
    return xy($receiver, x, y);
  }
  function positionX($receiver, x) {
    $receiver.x = x;
    return $receiver;
  }
  function positionY($receiver, y) {
    $receiver.y = y;
    return $receiver;
  }
  function positionX_0($receiver, x) {
    return positionX($receiver, x);
  }
  function positionY_0($receiver, y) {
    return positionY($receiver, y);
  }
  function centerXBetween($receiver, x1, x2) {
    $receiver.x = (x2 + x1 - $receiver.width) / 2;
    return $receiver;
  }
  function centerYBetween($receiver, y1, y2) {
    $receiver.y = (y2 + y1 - $receiver.height) / 2;
    return $receiver;
  }
  function centerBetween($receiver, x1, y1, x2, y2) {
    return centerYBetween(centerXBetween($receiver, x1, x2), y1, y2);
  }
  function centerXOn($receiver, other) {
    return centerXBetween($receiver, other.x, other.x + other.width);
  }
  function centerYOn($receiver, other) {
    return centerYBetween($receiver, other.y, other.y + other.height);
  }
  function centerOn($receiver, other) {
    return centerYOn(centerXOn($receiver, other), other);
  }
  function alignLeftToLeftOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.x = other.x + padding;
    return $receiver;
  }
  function alignLeftToRightOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.x = other.x + other.width + padding;
    return $receiver;
  }
  function alignRightToLeftOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.x = other.x - $receiver.width - padding;
    return $receiver;
  }
  function alignRightToRightOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.x = other.x + other.width - $receiver.width - padding;
    return $receiver;
  }
  function alignTopToTopOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.y = other.y + padding;
    return $receiver;
  }
  function alignTopToBottomOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.y = other.y + other.height + padding;
    return $receiver;
  }
  function alignBottomToTopOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.y = other.y - $receiver.height - padding;
    return $receiver;
  }
  function alignBottomToBottomOf($receiver, other, padding) {
    if (padding === void 0)
      padding = 0.0;
    $receiver.y = other.y + other.height - $receiver.height - padding;
    return $receiver;
  }
  function rotation($receiver, rot) {
    $receiver.rotationRadians = rot.radians;
    return $receiver;
  }
  function skew($receiver, sx, sy) {
    $receiver.skewX = sx;
    $receiver.skewY = sy;
    return $receiver;
  }
  function scale_1($receiver, sx, sy) {
    if (sy === void 0)
      sy = sx;
    $receiver.scaleX = sx;
    $receiver.scaleY = sy;
    return $receiver;
  }
  function alpha($receiver, alpha) {
    $receiver.alpha = alpha;
    return $receiver;
  }
  var skew_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.skew_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var skew = _.com.soywiz.korge.view.skew_2cbtc5$;
    return function ($receiver, sx, sy) {
      return skew($receiver, numberToDouble(sx), numberToDouble(sy));
    };
  }));
  var scale_2 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.scale_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var scale = _.com.soywiz.korge.view.scale_2cbtc5$;
    return function ($receiver, sx, sy) {
      if (sy === void 0)
        sy = sx;
      return scale($receiver, numberToDouble(sx), numberToDouble(sy));
    };
  }));
  var alpha_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alpha_q8hyz9$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alpha = _.com.soywiz.korge.view.alpha_k0wlkj$;
    return function ($receiver, alpha_0) {
      return alpha($receiver, numberToDouble(alpha_0));
    };
  }));
  var rotation_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.rotation_q8hyz9$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var get_radians = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.get_radians_yrwdxr$;
    var rotation = _.com.soywiz.korge.view.rotation_17knrc$;
    return function ($receiver, rot) {
      return rotation($receiver, get_radians(numberToDouble(rot)));
    };
  }));
  var rotationDegrees = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.rotationDegrees_q8hyz9$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var get_degrees = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.get_degrees_yrwdxr$;
    var rotation = _.com.soywiz.korge.view.rotation_17knrc$;
    return function ($receiver, degs) {
      return rotation($receiver, get_degrees(numberToDouble(degs)));
    };
  }));
  var xy_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.xy_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var xy = _.com.soywiz.korge.view.xy_2cbtc5$;
    return function ($receiver, x, y) {
      return xy($receiver, numberToDouble(x), numberToDouble(y));
    };
  }));
  var position_2 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.position_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var xy = _.com.soywiz.korge.view.xy_2cbtc5$;
    return function ($receiver, x, y) {
      return xy($receiver, numberToDouble(x), numberToDouble(y));
    };
  }));
  var positionX_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.positionX_q8hyz9$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var positionX = _.com.soywiz.korge.view.positionX_k0wlkj$;
    return function ($receiver, x) {
      return positionX($receiver, numberToDouble(x));
    };
  }));
  var positionY_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.positionY_q8hyz9$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var positionY = _.com.soywiz.korge.view.positionY_k0wlkj$;
    return function ($receiver, y) {
      return positionY($receiver, numberToDouble(y));
    };
  }));
  var size_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.size_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var size = _.com.soywiz.korge.view.size_2cbtc5$;
    return function ($receiver, width, height) {
      return size($receiver, numberToDouble(width), numberToDouble(height));
    };
  }));
  var hitTest_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.hitTest_s453s7$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function ($receiver, x, y) {
      return $receiver.hitTest_lu1900$(numberToDouble(x), numberToDouble(y));
    };
  }));
  var centerXBetween_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.centerXBetween_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var centerXBetween = _.com.soywiz.korge.view.centerXBetween_2cbtc5$;
    return function ($receiver, x1, x2) {
      return centerXBetween($receiver, numberToDouble(x1), numberToDouble(x2));
    };
  }));
  var centerYBetween_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.centerYBetween_t6upcb$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var centerYBetween = _.com.soywiz.korge.view.centerYBetween_2cbtc5$;
    return function ($receiver, y1, y2) {
      return centerYBetween($receiver, numberToDouble(y1), numberToDouble(y2));
    };
  }));
  var centerBetween_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.centerBetween_mwsjbd$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var centerBetween = _.com.soywiz.korge.view.centerBetween_wgq76x$;
    return function ($receiver, x1, y1, x2, y2) {
      return centerBetween($receiver, numberToDouble(x1), numberToDouble(y1), numberToDouble(x2), numberToDouble(y2));
    };
  }));
  var alignLeftToLeftOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignLeftToLeftOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignLeftToLeftOf = _.com.soywiz.korge.view.alignLeftToLeftOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignLeftToLeftOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignLeftToRightOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignLeftToRightOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignLeftToRightOf = _.com.soywiz.korge.view.alignLeftToRightOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignLeftToRightOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignRightToLeftOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignRightToLeftOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignRightToLeftOf = _.com.soywiz.korge.view.alignRightToLeftOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignRightToLeftOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignRightToRightOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignRightToRightOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignRightToRightOf = _.com.soywiz.korge.view.alignRightToRightOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignRightToRightOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignTopToTopOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignTopToTopOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignTopToTopOf = _.com.soywiz.korge.view.alignTopToTopOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignTopToTopOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignTopToBottomOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignTopToBottomOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignTopToBottomOf = _.com.soywiz.korge.view.alignTopToBottomOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignTopToBottomOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignBottomToTopOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignBottomToTopOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignBottomToTopOf = _.com.soywiz.korge.view.alignBottomToTopOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignBottomToTopOf($receiver, other, numberToDouble(padding));
    };
  }));
  var alignBottomToBottomOf_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.alignBottomToBottomOf_1l5rrt$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var alignBottomToBottomOf = _.com.soywiz.korge.view.alignBottomToBottomOf_qcv975$;
    return function ($receiver, other, padding) {
      return alignBottomToBottomOf($receiver, other, numberToDouble(padding));
    };
  }));
  function ViewCollisionContext() {
    this.tempRect1 = Rectangle.Companion.invoke();
    this.tempRect2 = Rectangle.Companion.invoke();
    this.tempVectorPath1 = new VectorPath();
    this.tempVectorPath2 = new VectorPath();
    this.ident = new Matrix();
    this.lmat = new Matrix();
    this.rmat = new Matrix();
  }
  ViewCollisionContext.prototype.getVectorPath_900clp$ = function (view, out) {
    var tmp$;
    var hitShape = view.hitShape;
    if (hitShape == null) {
      view.getLocalBounds_2da8yn$(this.tempRect1);
      out.clear();
      var dispX = view.anchorDispX;
      var dispY = view.anchorDispY;
      rect(out, this.tempRect1.x + dispX, this.tempRect1.y + dispY, this.tempRect1.width, this.tempRect1.height);
      tmp$ = out;
    } else {
      tmp$ = hitShape;
    }
    return tmp$;
  };
  ViewCollisionContext.prototype.getGlobalMatrix_rhw83r$ = function (view, out) {
    var tmp$, tmp$_0;
    out.copyFrom_1ktkmn$(view.localMatrix);
    out.pretranslate_lu1900$(-view.anchorDispX, -view.anchorDispY);
    out.multiply_19kw1g$(out, (tmp$_0 = (tmp$ = view.parent) != null ? tmp$.globalMatrix : null) != null ? tmp$_0 : this.ident);
    return out;
  };
  ViewCollisionContext.prototype.collidesWith_g73kcr$ = function (left, right, kind) {
    left.getGlobalBounds_2da8yn$(this.tempRect1);
    right.getGlobalBounds_2da8yn$(this.tempRect2);
    if (!this.tempRect1.intersects_2da8yn$(this.tempRect2))
      return false;
    if (kind === CollisionKind$SHAPE_getInstance()) {
      var leftPath = this.getVectorPath_900clp$(left, this.tempVectorPath1);
      var rightPath = this.getVectorPath_900clp$(right, this.tempVectorPath2);
      return VectorPath.Companion.intersects_yoodik$(leftPath, this.getGlobalMatrix_rhw83r$(left, this.lmat), rightPath, this.getGlobalMatrix_rhw83r$(right, this.rmat));
    }return true;
  };
  ViewCollisionContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewCollisionContext',
    interfaces: []
  };
  function collisionContext$lambda() {
    return new ViewCollisionContext();
  }
  var collisionContext;
  function get_collisionContext() {
    return collisionContext.local.get();
  }
  function CollisionKind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function CollisionKind_initFields() {
    CollisionKind_initFields = function () {
    };
    CollisionKind$GLOBAL_RECT_instance = new CollisionKind('GLOBAL_RECT', 0);
    CollisionKind$SHAPE_instance = new CollisionKind('SHAPE', 1);
  }
  var CollisionKind$GLOBAL_RECT_instance;
  function CollisionKind$GLOBAL_RECT_getInstance() {
    CollisionKind_initFields();
    return CollisionKind$GLOBAL_RECT_instance;
  }
  var CollisionKind$SHAPE_instance;
  function CollisionKind$SHAPE_getInstance() {
    CollisionKind_initFields();
    return CollisionKind$SHAPE_instance;
  }
  CollisionKind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CollisionKind',
    interfaces: [Enum]
  };
  function CollisionKind$values() {
    return [CollisionKind$GLOBAL_RECT_getInstance(), CollisionKind$SHAPE_getInstance()];
  }
  CollisionKind.values = CollisionKind$values;
  function CollisionKind$valueOf(name) {
    switch (name) {
      case 'GLOBAL_RECT':
        return CollisionKind$GLOBAL_RECT_getInstance();
      case 'SHAPE':
        return CollisionKind$SHAPE_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.CollisionKind.' + name);
    }
  }
  CollisionKind.valueOf_61zpoe$ = CollisionKind$valueOf;
  function collidesWith($receiver, other, kind) {
    if (kind === void 0)
      kind = CollisionKind$GLOBAL_RECT_getInstance();
    return get_collisionContext().collidesWith_g73kcr$($receiver, other, kind);
  }
  function collidesWith_0($receiver, otherList, kind) {
    if (kind === void 0)
      kind = CollisionKind$GLOBAL_RECT_getInstance();
    var ctx = get_collisionContext();
    var tmp$;
    var n = 0;
    while (n < otherList.size) {
      if (ctx.collidesWith_g73kcr$($receiver, otherList.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)), kind))
        return true;
    }
    return false;
  }
  function collidesWithGlobalBoundingBox($receiver, other) {
    return collidesWith($receiver, other, CollisionKind$GLOBAL_RECT_getInstance());
  }
  function collidesWithGlobalBoundingBox_0($receiver, otherList) {
    return collidesWith_0($receiver, otherList, CollisionKind$GLOBAL_RECT_getInstance());
  }
  function collidesWithShape($receiver, other) {
    return collidesWith($receiver, other, CollisionKind$SHAPE_getInstance());
  }
  function collidesWithShape_0($receiver, otherList) {
    return collidesWith_0($receiver, otherList, CollisionKind$SHAPE_getInstance());
  }
  var findCollision = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.findCollision_pjyfn7$', wrapFunction(function () {
    var equals = Kotlin.equals;
    var findCollision = _.com.soywiz.korge.view.findCollision_2rv4n1$;
    var throwCCE = Kotlin.throwCCE;
    function findCollision$lambda(typeClosure$T, isT, closure$subject) {
      return function (it) {
        return isT(it) && !equals(it, closure$subject);
      };
    }
    return function (T_0, isT, $receiver, subject) {
      var tmp$;
      return (tmp$ = findCollision($receiver, subject, void 0, findCollision$lambda(T_0, isT, subject))) == null || isT(tmp$) ? tmp$ : throwCCE();
    };
  }));
  function findCollision$lambda(closure$matcher, closure$subject, closure$kind, closure$collides) {
    return function (it) {
      if (closure$matcher(it)) {
        if (collidesWith(closure$subject, it, closure$kind)) {
          closure$collides.v = it;
        }}return Unit;
    };
  }
  function findCollision_0($receiver, subject, kind, matcher) {
    if (kind === void 0)
      kind = CollisionKind$GLOBAL_RECT_getInstance();
    var collides = {v: null};
    foreachDescendant($receiver, findCollision$lambda(matcher, subject, kind, collides));
    return collides.v;
  }
  function onCollision$lambda(it) {
    return true;
  }
  function onCollision$lambda$lambda(this$, closure$filter, closure$kind, closure$callback) {
    return function (it) {
      if (!equals(this$, it) && closure$filter(it) && collidesWith(this$, it, closure$kind)) {
        closure$callback(this$, it);
      }return Unit;
    };
  }
  function onCollision$lambda_0(closure$root, closure$filter, closure$kind, closure$callback) {
    return function ($receiver, it) {
      foreachDescendant(closure$root != null ? closure$root : $receiver.root, onCollision$lambda$lambda($receiver, closure$filter, closure$kind, closure$callback));
      return Unit;
    };
  }
  function onCollision($receiver, filter, root, kind, callback) {
    if (filter === void 0)
      filter = onCollision$lambda;
    if (root === void 0)
      root = null;
    if (kind === void 0)
      kind = CollisionKind$GLOBAL_RECT_getInstance();
    return addUpdater($receiver, onCollision$lambda_0(root, filter, kind, callback));
  }
  function onCollisionShape$lambda(it) {
    return true;
  }
  function onCollisionShape($receiver, filter, root, callback) {
    if (filter === void 0)
      filter = onCollisionShape$lambda;
    if (root === void 0)
      root = null;
    return onCollision($receiver, filter, root, CollisionKind$SHAPE_getInstance(), callback);
  }
  function onDescendantCollision$lambda(it) {
    return true;
  }
  function onDescendantCollision$lambda_0(it) {
    return true;
  }
  function onDescendantCollision$lambda$lambda$lambda(closure$src, closure$filterDst, closure$kind, closure$callback) {
    return function (dst) {
      if (closure$src !== dst && closure$filterDst(dst) && collidesWith(closure$src, dst, closure$kind)) {
        closure$callback(closure$src, dst);
      }return Unit;
    };
  }
  function onDescendantCollision$lambda$lambda(closure$filterSrc, closure$root, closure$filterDst, closure$kind, closure$callback) {
    return function (src) {
      if (closure$filterSrc(src)) {
        foreachDescendant(closure$root, onDescendantCollision$lambda$lambda$lambda(src, closure$filterDst, closure$kind, closure$callback));
      }return Unit;
    };
  }
  function onDescendantCollision$lambda_1(closure$root, closure$filterSrc, closure$filterDst, closure$kind, closure$callback) {
    return function ($receiver, it) {
      foreachDescendant(closure$root, onDescendantCollision$lambda$lambda(closure$filterSrc, closure$root, closure$filterDst, closure$kind, closure$callback));
      return Unit;
    };
  }
  function onDescendantCollision($receiver, root, filterSrc, filterDst, kind, callback) {
    if (root === void 0)
      root = $receiver;
    if (filterSrc === void 0)
      filterSrc = onDescendantCollision$lambda;
    if (filterDst === void 0)
      filterDst = onDescendantCollision$lambda_0;
    if (kind === void 0)
      kind = CollisionKind$GLOBAL_RECT_getInstance();
    return addUpdater($receiver, onDescendantCollision$lambda_1(root, filterSrc, filterDst, kind, callback));
  }
  function renderToBitmap$lambda(closure$done, closure$bounds, closure$views, closure$view) {
    return function (it) {
      var tmp$ = closure$done;
      var $receiver = new Bitmap32(numberToInt(closure$bounds.width), numberToInt(closure$bounds.height));
      var closure$views_0 = closure$views;
      var closure$view_0 = closure$view;
      var ctx = new RenderContext(closure$views_0.ag, void 0, void 0, closure$views_0.coroutineContext);
      var $this = closure$views_0.ag;
      var width = $receiver.width;
      var height = $receiver.height;
      var rb = $this.renderBuffers.alloc();
      $this.frameRenderBuffers.add_11rb$(rb);
      var oldRenderBuffer = $this.currentRenderBuffer;
      rb.setSize_vux9f0$(width, height);
      $this.setRenderBuffer_m67x29$(rb);
      try {
        $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
        var $this_0 = ctx.batch;
        var matrix = closure$view_0.globalMatrixInv;
        var temp;
        temp = new Matrix3D();
        $this_0.flush();
        temp.copyFrom_p62hku$($this_0.viewMat);
        copyFrom($this_0.viewMat, matrix);
        try {
          closure$view_0.render_8isv09$(ctx);
        }finally {
          $this_0.flush();
          $this_0.viewMat.copyFrom_p62hku$(temp);
        }
        $this.readColor_59u9qz$($receiver);
      }finally {
        $this.setRenderBuffer_m67x29$(oldRenderBuffer);
      }
      try {
        rb.tex;
      }finally {
        $this.frameRenderBuffers.remove_11rb$(rb);
        $this.renderBuffers.free_11rb$(rb);
      }
      tmp$.complete_11rb$($receiver);
      return Unit;
    };
  }
  function renderToBitmap($receiver, views, continuation) {
    var view = $receiver;
    var bounds = $receiver.getLocalBounds_2da8yn$();
    var done = CompletableDeferred();
    views.onBeforeRender.once_qlkmfe$(renderToBitmap$lambda(done, bounds, views, view));
    return done.await(continuation);
  }
  function Views(coroutineContext, ag, injector, input, timeProvider, stats, gameWindow) {
    this.coroutineContext_xgztce$_0 = coroutineContext;
    this.ag = ag;
    this.injector = injector;
    this.input = input;
    this.timeProvider = timeProvider;
    this.stats = stats;
    this.gameWindow = gameWindow;
    this.$delegate_gohfjx$_0 = new Extra$Mixin();
    this.$delegate_gohfjx$_1 = new EventDispatcher$Mixin();
    this.imageFormats = format.RegisteredImageFormats;
    this.renderContext = new RenderContext(this.ag, this, this.stats, this.coroutineContext);
    this.agBitmapTextureManager = this.renderContext.agBitmapTextureManager;
    this.clearEachFrame = true;
    this.clearColor = color.Colors.BLACK;
    this.views_eqv2ql$_0 = this;
    this.propsTriggers = HashMap_init();
    this.clampElapsedTimeTo = HRTimeSpan.Companion.fromMilliseconds_14dthe$(100.0);
    this.virtualWidth_pbqlm6$_0 = 1280;
    this.virtualHeight_54lv2f$_0 = 720;
    this.actualVirtualLeft_bfyrcp$_0 = 0;
    this.actualVirtualTop_dds7ip$_0 = 0;
    this.actualVirtualWidth_5oahts$_0 = 1280;
    this.actualVirtualHeight_oyjd9j$_0 = 720;
    this.closeables_0 = ArrayList_init_1();
    this.scaleMode = ScaleMode.Companion.SHOW_ALL;
    this.scaleAnchor = Anchor.Companion.MIDDLE_CENTER;
    this.clipBorders = true;
    this.resizedEvent_0 = new ReshapeEvent(0, 0);
    this.stage = new Stage(this);
    this.root = this.stage;
    this.supportTogglingDebug = true;
    this.debugViews = false;
    this.debugHandlers = ArrayList_init_1();
    this.lastTime = this.timeProvider.now();
    this.tempViews_0 = ArrayList_init_1();
    this.virtualSize_0 = SizeInt.Companion.invoke();
    this.actualSize_0 = SizeInt.Companion.invoke();
    this.targetSize_0 = SizeInt.Companion.invoke();
    this.onBeforeRender = new Signal();
    this.onAfterRender = new Signal();
    this.targetFps = -1.0;
    this.injector.mapInstance_b1ce0a$(getKClass(CoroutineContext), this.coroutineContext);
    this.injector.mapInstance_b1ce0a$(getKClass(AG), this.ag);
    this.injector.mapInstance_b1ce0a$(getKClass(Views), this);
    this.onAfterRender.invoke_qlkmfe$(Views_init$lambda(this));
  }
  Object.defineProperty(Views.prototype, 'coroutineContext', {
    get: function () {
      return this.coroutineContext_xgztce$_0;
    }
  });
  Object.defineProperty(Views.prototype, 'keys', {
    get: function () {
      return this.input.keys;
    }
  });
  Object.defineProperty(Views.prototype, 'views', {
    get: function () {
      return this.views_eqv2ql$_0;
    }
  });
  Object.defineProperty(Views.prototype, 'nativeWidth', {
    get: function () {
      return this.ag.mainRenderBuffer.width;
    }
  });
  Object.defineProperty(Views.prototype, 'nativeHeight', {
    get: function () {
      return this.ag.mainRenderBuffer.height;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualWidth', {
    get: function () {
      return this.virtualWidth_pbqlm6$_0;
    },
    set: function (virtualWidth) {
      this.virtualWidth_pbqlm6$_0 = virtualWidth;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualHeight', {
    get: function () {
      return this.virtualHeight_54lv2f$_0;
    },
    set: function (virtualHeight) {
      this.virtualHeight_54lv2f$_0 = virtualHeight;
    }
  });
  Object.defineProperty(Views.prototype, 'actualVirtualLeft', {
    get: function () {
      return this.actualVirtualLeft_bfyrcp$_0;
    },
    set: function (actualVirtualLeft) {
      this.actualVirtualLeft_bfyrcp$_0 = actualVirtualLeft;
    }
  });
  Object.defineProperty(Views.prototype, 'actualVirtualTop', {
    get: function () {
      return this.actualVirtualTop_dds7ip$_0;
    },
    set: function (actualVirtualTop) {
      this.actualVirtualTop_dds7ip$_0 = actualVirtualTop;
    }
  });
  Object.defineProperty(Views.prototype, 'actualVirtualWidth', {
    get: function () {
      return this.actualVirtualWidth_5oahts$_0;
    },
    set: function (actualVirtualWidth) {
      this.actualVirtualWidth_5oahts$_0 = actualVirtualWidth;
    }
  });
  Object.defineProperty(Views.prototype, 'actualVirtualHeight', {
    get: function () {
      return this.actualVirtualHeight_oyjd9j$_0;
    },
    set: function (actualVirtualHeight) {
      this.actualVirtualHeight_oyjd9j$_0 = actualVirtualHeight;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualLeft', {
    get: function () {
      return (-this.actualVirtualLeft | 0) * this.views.stage.scaleX;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualTop', {
    get: function () {
      return (-this.actualVirtualTop | 0) * this.views.stage.scaleY;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualRight', {
    get: function () {
      return this.virtualLeft + this.virtualWidth * this.views.stage.scaleX;
    }
  });
  Object.defineProperty(Views.prototype, 'virtualBottom', {
    get: function () {
      return this.virtualTop + this.virtualHeight * this.views.stage.scaleY;
    }
  });
  function Views$onClose$ObjectLiteral(closure$callback) {
    this.closure$callback = closure$callback;
  }
  function Coroutine$close($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close.prototype.constructor = Coroutine$close;
  Coroutine$close.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Views$onClose$ObjectLiteral.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Views$onClose$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncCloseable]
  };
  Views.prototype.onClose_g2bo5h$ = function (callback) {
    var $receiver = this.closeables_0;
    var element = new Views$onClose$ObjectLiteral(callback);
    $receiver.add_11rb$(element);
  };
  function Coroutine$close_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$n = void 0;
  }
  Coroutine$close_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_0.prototype.constructor = Coroutine$close_0;
  Coroutine$close_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = this.$this.closeables_0;
            var tmp$;
            this.local$n = 0;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$n >= this.local$$receiver.size) {
              this.state_0 = 4;
              continue;
            }
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.get_za3lpa$((tmp$ = this.local$n, this.local$n = tmp$ + 1 | 0, tmp$)).close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            this.$this.closeables_0.clear();
            cancel(this.$this.coroutineContext);
            this.$this.gameWindow.close();
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Views.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Object.defineProperty(Views.prototype, 'actualVirtualRight', {
    get: function () {
      return this.actualVirtualWidth;
    }
  });
  Object.defineProperty(Views.prototype, 'actualVirtualBottom', {
    get: function () {
      return this.actualVirtualHeight;
    }
  });
  Object.defineProperty(Views.prototype, 'nativeMouseX', {
    get: function () {
      return this.input.mouse.x;
    }
  });
  Object.defineProperty(Views.prototype, 'nativeMouseY', {
    get: function () {
      return this.input.mouse.y;
    }
  });
  Object.defineProperty(Views.prototype, 'globalMouseXY', {
    get: function () {
      return this.stage.mouseXY;
    }
  });
  Object.defineProperty(Views.prototype, 'globalMouseX', {
    get: function () {
      return this.stage.mouseX;
    }
  });
  Object.defineProperty(Views.prototype, 'globalMouseY', {
    get: function () {
      return this.stage.mouseY;
    }
  });
  Object.defineProperty(Views.prototype, 'actualWidth', {
    get: function () {
      return this.actualSize_0.width;
    }
  });
  Object.defineProperty(Views.prototype, 'actualHeight', {
    get: function () {
      return this.actualSize_0.height;
    }
  });
  Views.prototype.dumpStats = function () {
    this.stats.dump();
  };
  Views.prototype.registerPropertyTrigger_4kjtw1$ = function (propName, gen) {
    this.propsTriggers.put_xwzc9p$(propName, gen);
  };
  function Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda(closure$gen_0, closure$view_0, closure$key_0, closure$value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$gen = closure$gen_0;
    this.local$closure$view = closure$view_0;
    this.local$closure$key = closure$key_0;
    this.local$closure$value = closure$value_0;
  }
  Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda.prototype.constructor = Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda;
  Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$gen(this.local$closure$view, this.local$closure$key, this.local$closure$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Views$registerPropertyTriggerSuspend$lambda$lambda(closure$gen_0, closure$view_0, closure$key_0, closure$value_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Views$registerPropertyTriggerSuspend$lambda$lambda(closure$gen_0, closure$view_0, closure$key_0, closure$value_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Views$registerPropertyTriggerSuspend$lambda(this$Views, closure$gen) {
    return function (view, key, value) {
      launchImmediately_0(this$Views.coroutineContext, Views$registerPropertyTriggerSuspend$lambda$lambda(closure$gen, view, key, value));
      return Unit;
    };
  }
  Views.prototype.registerPropertyTriggerSuspend_hkh80f$ = function (propName, gen) {
    this.propsTriggers.put_xwzc9p$(propName, Views$registerPropertyTriggerSuspend$lambda(this, gen));
  };
  Views.prototype.setVirtualSize_vux9f0$ = function (width, height) {
    this.virtualWidth = width;
    this.virtualHeight = height;
    this.resized();
  };
  Views.prototype.dispatch_nipq8w$ = function (clazz, event) {
    var e_0 = event;
    try {
      this.stage.dispatch_nipq8w$(clazz, event);
      var stagedViews = getAllDescendantViews(this.stage, this.tempViews_0);
      if (Kotlin.isType(e_0, MouseEvent)) {
        var tmp$;
        var n = 0;
        while (n < stagedViews.size) {
          var tmp$_0, tmp$_1;
          if ((tmp$_1 = (tmp$_0 = stagedViews.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$))._components) != null ? tmp$_0.mouse : null) != null) {
            var tmp$_2;
            var n_0 = 0;
            while (n_0 < tmp$_1.size) {
              tmp$_1.get_za3lpa$((tmp$_2 = n_0, n_0 = tmp$_2 + 1 | 0, tmp$_2)).onMouseEvent_y4dy1h$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, TouchEvent)) {
        var tmp$_3;
        var n_1 = 0;
        while (n_1 < stagedViews.size) {
          var tmp$_4, tmp$_5;
          if ((tmp$_5 = (tmp$_4 = stagedViews.get_za3lpa$((tmp$_3 = n_1, n_1 = tmp$_3 + 1 | 0, tmp$_3))._components) != null ? tmp$_4.touch : null) != null) {
            var tmp$_6;
            var n_2 = 0;
            while (n_2 < tmp$_5.size) {
              tmp$_5.get_za3lpa$((tmp$_6 = n_2, n_2 = tmp$_6 + 1 | 0, tmp$_6)).onTouchEvent_665627$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, ReshapeEvent)) {
        var tmp$_7;
        var n_3 = 0;
        while (n_3 < stagedViews.size) {
          var tmp$_8, tmp$_9;
          if ((tmp$_9 = (tmp$_8 = stagedViews.get_za3lpa$((tmp$_7 = n_3, n_3 = tmp$_7 + 1 | 0, tmp$_7))._components) != null ? tmp$_8.resize : null) != null) {
            var tmp$_10;
            var n_4 = 0;
            while (n_4 < tmp$_9.size) {
              tmp$_9.get_za3lpa$((tmp$_10 = n_4, n_4 = tmp$_10 + 1 | 0, tmp$_10)).resized_m5tlkz$(this.views, e_0.width, e_0.height);
            }
          }}
      } else if (Kotlin.isType(e_0, KeyEvent)) {
        this.input.triggerOldKeyEvent_5uhwd9$(e_0);
        this.input.keys.triggerKeyEvent_5xeie8$(e_0);
        if (this.supportTogglingDebug && (e_0.key === Key.F12 || e_0.key === Key.F7)) {
          this.debugViews = !this.debugViews;
        }var tmp$_11;
        var n_5 = 0;
        while (n_5 < stagedViews.size) {
          var tmp$_12, tmp$_13;
          if ((tmp$_13 = (tmp$_12 = stagedViews.get_za3lpa$((tmp$_11 = n_5, n_5 = tmp$_11 + 1 | 0, tmp$_11))._components) != null ? tmp$_12.key : null) != null) {
            var tmp$_14;
            var n_6 = 0;
            while (n_6 < tmp$_13.size) {
              tmp$_13.get_za3lpa$((tmp$_14 = n_6, n_6 = tmp$_14 + 1 | 0, tmp$_14)).onKeyEvent_dg4n0v$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, GamePadConnectionEvent)) {
        var tmp$_15;
        var n_7 = 0;
        while (n_7 < stagedViews.size) {
          var tmp$_16, tmp$_17;
          if ((tmp$_17 = (tmp$_16 = stagedViews.get_za3lpa$((tmp$_15 = n_7, n_7 = tmp$_15 + 1 | 0, tmp$_15))._components) != null ? tmp$_16.gamepad : null) != null) {
            var tmp$_18;
            var n_8 = 0;
            while (n_8 < tmp$_17.size) {
              tmp$_17.get_za3lpa$((tmp$_18 = n_8, n_8 = tmp$_18 + 1 | 0, tmp$_18)).onGamepadEvent_2v5e1d$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, GamePadUpdateEvent)) {
        var tmp$_19;
        var n_9 = 0;
        while (n_9 < stagedViews.size) {
          var tmp$_20, tmp$_21;
          if ((tmp$_21 = (tmp$_20 = stagedViews.get_za3lpa$((tmp$_19 = n_9, n_9 = tmp$_19 + 1 | 0, tmp$_19))._components) != null ? tmp$_20.gamepad : null) != null) {
            var tmp$_22;
            var n_10 = 0;
            while (n_10 < tmp$_21.size) {
              tmp$_21.get_za3lpa$((tmp$_22 = n_10, n_10 = tmp$_22 + 1 | 0, tmp$_22)).onGamepadEvent_1f9jqy$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, GamePadButtonEvent)) {
        var tmp$_23;
        var n_11 = 0;
        while (n_11 < stagedViews.size) {
          var tmp$_24, tmp$_25;
          if ((tmp$_25 = (tmp$_24 = stagedViews.get_za3lpa$((tmp$_23 = n_11, n_11 = tmp$_23 + 1 | 0, tmp$_23))._components) != null ? tmp$_24.gamepad : null) != null) {
            var tmp$_26;
            var n_12 = 0;
            while (n_12 < tmp$_25.size) {
              tmp$_25.get_za3lpa$((tmp$_26 = n_12, n_12 = tmp$_26 + 1 | 0, tmp$_26)).onGamepadEvent_l1ct8j$(this.views, e_0);
            }
          }}
      } else if (Kotlin.isType(e_0, GamePadStickEvent)) {
        var tmp$_27;
        var n_13 = 0;
        while (n_13 < stagedViews.size) {
          var tmp$_28, tmp$_29;
          if ((tmp$_29 = (tmp$_28 = stagedViews.get_za3lpa$((tmp$_27 = n_13, n_13 = tmp$_27 + 1 | 0, tmp$_27))._components) != null ? tmp$_28.gamepad : null) != null) {
            var tmp$_30;
            var n_14 = 0;
            while (n_14 < tmp$_29.size) {
              tmp$_29.get_za3lpa$((tmp$_30 = n_14, n_14 = tmp$_30 + 1 | 0, tmp$_30)).onGamepadEvent_hoxfe3$(this.views, e_0);
            }
          }}
      } else {
        var tmp$_31;
        var n_15 = 0;
        while (n_15 < stagedViews.size) {
          var tmp$_32, tmp$_33;
          if ((tmp$_33 = (tmp$_32 = stagedViews.get_za3lpa$((tmp$_31 = n_15, n_15 = tmp$_31 + 1 | 0, tmp$_31))._components) != null ? tmp$_32.event : null) != null) {
            var tmp$_34;
            var n_16 = 0;
            while (n_16 < tmp$_33.size) {
              tmp$_33.get_za3lpa$((tmp$_34 = n_16, n_16 = tmp$_34 + 1 | 0, tmp$_34)).onEvent_kd3tn9$(e_0);
            }
          }}
      }
    } catch (e) {
      if (!Kotlin.isType(e, PreventDefaultException))
        throw e;
    }
  };
  Views.prototype.render = function () {
    invoke(this.onBeforeRender);
    if (this.clearEachFrame)
      this.ag.clear_yvqa77$(this.clearColor, void 0, 0, true, void 0, true);
    this.stage.render_8isv09$(this.renderContext);
    if (this.debugViews) {
      var $receiver = this.debugHandlers;
      var tmp$;
      var n = 0;
      while (n < $receiver.size) {
        $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$))(this, this.renderContext);
      }
    }invoke(this.onAfterRender);
  };
  Views.prototype.frameUpdateAndRender_fv8bff$ = function (fixedSizeStep) {
    if (fixedSizeStep === void 0)
      fixedSizeStep = TimeSpan.Companion.NULL;
    var currentTime = this.timeProvider.now();
    this.views.stats.startFrame();
    var $this = Korge_getInstance().logger;
    var level = Logger$Level.TRACE;
    if ($this.isEnabled_fs4ikx$(level)) {
      $this.actualLog_pwm3k3$(level, 'ag.onRender');
    }var delta = currentTime.minus_seyb0p$(this.lastTime);
    var adelta = delta.compareTo_11rb$(this.views.clampElapsedTimeTo) > 0 ? this.views.clampElapsedTimeTo : delta;
    this.lastTime = currentTime;
    if (!(fixedSizeStep != null ? fixedSizeStep.equals(TimeSpan.Companion.NULL) : null)) {
      this.update_seyb0p$(get_hr(fixedSizeStep));
    } else {
      this.update_seyb0p$(adelta);
    }
    this.render();
  };
  Views.prototype.update_za3lpa$ = function (dtMs) {
    this.update_seyb0p$(get_hrMilliseconds_0(dtMs));
  };
  Views.prototype.update_seyb0p$ = function (elapsed) {
    this.input.startFrame_seyb0p$(elapsed);
    updateSingleViewWithViewsAll(this.stage, this, elapsed, this.tempViews_0);
    this.input.endFrame_seyb0p$(elapsed);
  };
  Views.prototype.mouseUpdated = function () {
  };
  Views.prototype.resized_vux9f0$ = function (width, height) {
    var actualWidth = width;
    var actualHeight = height;
    setTo_0(this.actualSize_0, actualWidth, actualHeight);
    this.resized();
  };
  Views.prototype.resized = function () {
    var virtualWidth = this.virtualWidth;
    var virtualHeight = this.virtualHeight;
    var anchor = this.scaleAnchor;
    setTo_0(this.virtualSize_0, virtualWidth, virtualHeight);
    this.scaleMode.invoke_n3lmo2$(this.virtualSize_0, this.actualSize_0, this.targetSize_0);
    var ratioX = this.targetSize_0.width / virtualWidth;
    var ratioY = this.targetSize_0.height / virtualHeight;
    this.actualVirtualWidth = numberToInt(this.actualSize_0.width / ratioX);
    this.actualVirtualHeight = numberToInt(this.actualSize_0.height / ratioY);
    this.stage.scaleX = ratioX;
    this.stage.scaleY = ratioY;
    this.stage.x = numberToInt((this.actualVirtualWidth - virtualWidth | 0) * anchor.sx * ratioX);
    this.stage.y = numberToInt((this.actualVirtualHeight - virtualHeight | 0) * anchor.sy * ratioY);
    this.actualVirtualLeft = -numberToInt(this.stage.x / ratioX) | 0;
    this.actualVirtualTop = -numberToInt(this.stage.y / ratioY) | 0;
    var $receiver = this.resizedEvent_0;
    $receiver.width = this.actualSize_0.width;
    $receiver.height = this.actualSize_0.height;
    var $receiver_0 = this.stage;
    var event = this.resizedEvent_0;
    $receiver_0.dispatch_nipq8w$(getKClass(ReshapeEvent), event);
    var event_0 = this.resizedEvent_0;
    this.dispatch_nipq8w$(getKClass(ReshapeEvent), event_0);
    this.stage.invalidate();
  };
  Views.prototype.dispose = function () {
  };
  Object.defineProperty(Views.prototype, 'extra', {
    get: function () {
      return this.$delegate_gohfjx$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_gohfjx$_0.extra = tmp$;
    }
  });
  Views.prototype.addEventListener_xa594f$ = function (clazz, handler) {
    return this.$delegate_gohfjx$_1.addEventListener_xa594f$(clazz, handler);
  };
  Views.prototype.copyFrom_qquois$ = function (other) {
    return this.$delegate_gohfjx$_1.copyFrom_qquois$(other);
  };
  Views.prototype.alert_61zpoe$ = function (message, continuation) {
    return this.gameWindow.alert_61zpoe$(message, continuation);
  };
  Views.prototype.browse_ptvjoy$ = function (url, continuation) {
    return this.gameWindow.browse_ptvjoy$(url, continuation);
  };
  Views.prototype.confirm_61zpoe$ = function (message, continuation) {
    return this.gameWindow.confirm_61zpoe$(message, continuation);
  };
  Views.prototype.openFileDialog_r0su5d$$default = function (filter, write, multi, continuation) {
    return this.gameWindow.openFileDialog_r0su5d$$default(filter, write, multi, continuation);
  };
  Views.prototype.prompt_puj7f4$$default = function (message, default_0, continuation) {
    return this.gameWindow.prompt_puj7f4$$default(message, default_0, continuation);
  };
  function Views_init$lambda(this$Views) {
    return function (it) {
      this$Views.renderContext.flush();
      this$Views.renderContext.finish();
      this$Views.agBitmapTextureManager.afterRender_8be2vx$();
      return Unit;
    };
  }
  Views.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Views',
    interfaces: [AsyncCloseable, DialogInterface, BoundsProvider, ViewsScope, CoroutineScope_0, EventDispatcher, Extra]
  };
  function Coroutine$viewsLog$lambda(closure$callback_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$viewsLog$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$viewsLog$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$viewsLog$lambda.prototype.constructor = Coroutine$viewsLog$lambda;
  Coroutine$viewsLog$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var log = new ViewsLog(this.local$$receiver.coroutineContext);
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(log.views.stage, log, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function viewsLog$lambda(closure$callback_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$viewsLog$lambda(closure$callback_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function viewsLog(callback) {
    return Korio(viewsLog$lambda(callback));
  }
  function GameWindowLog() {
    GameWindow.call(this);
  }
  GameWindowLog.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GameWindowLog',
    interfaces: [GameWindow]
  };
  function ViewsLog(coroutineContext, injector, ag, input, timeProvider, stats, gameWindow) {
    if (injector === void 0)
      injector = new AsyncInjector();
    if (ag === void 0)
      ag = new LogAG();
    if (input === void 0)
      input = new Input();
    if (timeProvider === void 0)
      timeProvider = HRTimeProvider.Companion;
    if (stats === void 0)
      stats = new Stats();
    if (gameWindow === void 0)
      gameWindow = new GameWindowLog();
    this.coroutineContext_hqjmbo$_0 = coroutineContext;
    this.injector = injector;
    this.ag = ag;
    this.input = input;
    this.timeProvider = timeProvider;
    this.stats = stats;
    this.gameWindow = gameWindow;
    this.views = new Views(this.coroutineContext, this.ag, this.injector, this.input, this.timeProvider, this.stats, this.gameWindow);
  }
  Object.defineProperty(ViewsLog.prototype, 'coroutineContext', {
    get: function () {
      return this.coroutineContext_hqjmbo$_0;
    }
  });
  ViewsLog.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewsLog',
    interfaces: [CoroutineScope_0]
  };
  function texture($receiver, bmp, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = false;
    return new Texture(new Texture$Base($receiver.ag.createTexture_lg0pjf$(bmp, mipmaps), bmp.width, bmp.height));
  }
  function texture_0($receiver, bmp, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = false;
    return new Texture(new Texture$Base($receiver.ag.createTexture_ejmmxi$(bmp, mipmaps), bmp.width, bmp.height));
  }
  function texture_1($receiver, views, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = false;
    return texture(views, $receiver, mipmaps);
  }
  function texture_2($receiver, width, height, mipmaps) {
    if (mipmaps === void 0)
      mipmaps = false;
    return texture($receiver, new Bitmap32(width, height), mipmaps);
  }
  function Coroutine$texture($receiver_0, bmp_0, mipmaps_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$bmp = bmp_0;
    this.local$mipmaps = mipmaps_0;
  }
  Coroutine$texture.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$texture.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$texture.prototype.constructor = Coroutine$texture;
  Coroutine$texture.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$mipmaps === void 0)
              this.local$mipmaps = false;
            this.state_0 = 2;
            this.result_0 = format.nativeImageFormatProvider.decode_fqrh44$(this.local$bmp, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return texture(this.local$$receiver, this.result_0, this.local$mipmaps);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function texture_3($receiver_0, bmp_0, mipmaps_0, continuation_0, suspended) {
    var instance = new Coroutine$texture($receiver_0, bmp_0, mipmaps_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function ViewsContainer() {
  }
  ViewsContainer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ViewsContainer',
    interfaces: []
  };
  function get_ag($receiver) {
    return $receiver.views.ag;
  }
  function KorgeFileLoaderTester(name, tester) {
    this.name = name;
    this.tester = tester;
  }
  KorgeFileLoaderTester.prototype.invoke_1wg0ys$ = function (s, injector, continuation) {
    return this.tester(s, injector, continuation);
  };
  KorgeFileLoaderTester.prototype.toString = function () {
    return 'KorgeFileTester(' + '"' + this.name + '"' + ')';
  };
  KorgeFileLoaderTester.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeFileLoaderTester',
    interfaces: []
  };
  KorgeFileLoaderTester.prototype.component1 = function () {
    return this.name;
  };
  KorgeFileLoaderTester.prototype.component2 = function () {
    return this.tester;
  };
  KorgeFileLoaderTester.prototype.copy_n2pgj8$ = function (name, tester) {
    return new KorgeFileLoaderTester(name === void 0 ? this.name : name, tester === void 0 ? this.tester : tester);
  };
  KorgeFileLoaderTester.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.tester) | 0;
    return result;
  };
  KorgeFileLoaderTester.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.tester, other.tester)))));
  };
  function KorgeFileLoader(name, loader) {
    this.name = name;
    this.loader = loader;
  }
  KorgeFileLoader.prototype.toString = function () {
    return 'KorgeFileLoader(' + '"' + this.name + '"' + ')';
  };
  KorgeFileLoader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KorgeFileLoader',
    interfaces: []
  };
  KorgeFileLoader.prototype.component1 = function () {
    return this.name;
  };
  KorgeFileLoader.prototype.component2 = function () {
    return this.loader;
  };
  KorgeFileLoader.prototype.copy_z7e06o$ = function (name, loader) {
    return new KorgeFileLoader(name === void 0 ? this.name : name, loader === void 0 ? this.loader : loader);
  };
  KorgeFileLoader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.loader) | 0;
    return result;
  };
  KorgeFileLoader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.loader, other.loader)))));
  };
  function getAllDescendantViews(view, out, reversed) {
    if (out === void 0) {
      out = ArrayList_init_1();
    }if (reversed === void 0)
      reversed = true;
    var tmp$, tmp$_0;
    if (out.size === 0)
      out.add_11rb$(view);
    else
      out.set_wxm5ur$(0, view);
    var count = {v: 1};
    var n = 0;
    if (reversed) {
      while (n < count.v) {
        if ((tmp$ = out.get_za3lpa$(n)._children) != null) {
          var n_0 = 0;
          while (n_0 < tmp$.size) {
            var it = tmp$.get_za3lpa$(tmp$.size - n_0 - 1 | 0);
            if (out.size <= count.v)
              out.add_11rb$(it);
            else
              out.set_wxm5ur$(count.v, it);
            count.v = count.v + 1 | 0;
            n_0 = n_0 + 1 | 0;
          }
        }n = n + 1 | 0;
      }
    } else {
      while (n < count.v) {
        if ((tmp$_0 = out.get_za3lpa$(n)._children) != null) {
          var tmp$_1;
          var n_1 = 0;
          while (n_1 < tmp$_0.size) {
            var it_0 = tmp$_0.get_za3lpa$((tmp$_1 = n_1, n_1 = tmp$_1 + 1 | 0, tmp$_1));
            if (out.size <= count.v)
              out.add_11rb$(it_0);
            else
              out.set_wxm5ur$(count.v, it_0);
            count.v = count.v + 1 | 0;
          }
        }n = n + 1 | 0;
      }
    }
    while (out.size > count.v)
      out.removeAt_za3lpa$(out.size - 1 | 0);
    return out;
  }
  function updateSingleView($receiver, dtMsD, tempViews) {
    if (tempViews === void 0) {
      tempViews = ArrayList_init_1();
    }var $receiver_0 = getAllDescendantViews($receiver, tempViews);
    var tmp$;
    var n = 0;
    while (n < $receiver_0.size) {
      var view = $receiver_0.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      var tmp$_0, tmp$_1;
      if ((tmp$_1 = (tmp$_0 = view._components) != null ? tmp$_0.update : null) != null) {
        var tmp$_2;
        var n_0 = 0;
        while (n_0 < tmp$_1.size) {
          tmp$_1.get_za3lpa$((tmp$_2 = n_0, n_0 = tmp$_2 + 1 | 0, tmp$_2)).update_14dthe$(dtMsD * view.globalSpeed);
        }
      }}
  }
  function updateSingleViewWithViews($receiver, views, dtMsD, tempViews) {
    if (tempViews === void 0) {
      tempViews = ArrayList_init_1();
    }var $receiver_0 = getAllDescendantViews($receiver, tempViews);
    var tmp$;
    var n = 0;
    while (n < $receiver_0.size) {
      var view = $receiver_0.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      var tmp$_0, tmp$_1;
      if ((tmp$_1 = (tmp$_0 = view._components) != null ? tmp$_0.updateWV : null) != null) {
        var tmp$_2;
        var n_0 = 0;
        while (n_0 < tmp$_1.size) {
          tmp$_1.get_za3lpa$((tmp$_2 = n_0, n_0 = tmp$_2 + 1 | 0, tmp$_2)).update_vcgvf3$(views, dtMsD * view.globalSpeed);
        }
      }}
  }
  function updateSingleViewWithViewsAll($receiver, views, delta, tempViews) {
    if (tempViews === void 0) {
      tempViews = ArrayList_init_1();
    }var $receiver_0 = getAllDescendantViews($receiver, tempViews);
    var tmp$;
    var n = 0;
    while (n < $receiver_0.size) {
      var view = $receiver_0.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      var tmp$_0, tmp$_1, tmp$_2, tmp$_3;
      if ((tmp$_1 = (tmp$_0 = view._components) != null ? tmp$_0.updateWV : null) != null) {
        var tmp$_4;
        var n_0 = 0;
        while (n_0 < tmp$_1.size) {
          tmp$_1.get_za3lpa$((tmp$_4 = n_0, n_0 = tmp$_4 + 1 | 0, tmp$_4)).update_xp3vpi$(views, delta.times_14dthe$(view.globalSpeed));
        }
      }if ((tmp$_3 = (tmp$_2 = view._components) != null ? tmp$_2.update : null) != null) {
        var tmp$_5;
        var n_1 = 0;
        while (n_1 < tmp$_3.size) {
          tmp$_3.get_za3lpa$((tmp$_5 = n_1, n_1 = tmp$_5 + 1 | 0, tmp$_5)).update_seyb0p$(delta.times_14dthe$(view.globalSpeed));
        }
      }}
  }
  function BoundsProvider() {
  }
  function BoundsProvider$Dummy() {
    BoundsProvider$Dummy_instance = this;
    this.virtualLeft_qayobp$_0 = 0.0;
    this.virtualTop_5fo4ab$_0 = 0.0;
    this.virtualRight_y10ddg$_0 = 0.0;
    this.virtualBottom_840f3z$_0 = 0.0;
  }
  Object.defineProperty(BoundsProvider$Dummy.prototype, 'virtualLeft', {
    get: function () {
      return this.virtualLeft_qayobp$_0;
    }
  });
  Object.defineProperty(BoundsProvider$Dummy.prototype, 'virtualTop', {
    get: function () {
      return this.virtualTop_5fo4ab$_0;
    }
  });
  Object.defineProperty(BoundsProvider$Dummy.prototype, 'virtualRight', {
    get: function () {
      return this.virtualRight_y10ddg$_0;
    }
  });
  Object.defineProperty(BoundsProvider$Dummy.prototype, 'virtualBottom', {
    get: function () {
      return this.virtualBottom_840f3z$_0;
    }
  });
  BoundsProvider$Dummy.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Dummy',
    interfaces: [BoundsProvider]
  };
  var BoundsProvider$Dummy_instance = null;
  function BoundsProvider$Dummy_getInstance() {
    if (BoundsProvider$Dummy_instance === null) {
      new BoundsProvider$Dummy();
    }return BoundsProvider$Dummy_instance;
  }
  BoundsProvider.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'BoundsProvider',
    interfaces: []
  };
  function ViewsScope() {
  }
  ViewsScope.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ViewsScope',
    interfaces: []
  };
  function AG$renderToTexture$lambda_2(it) {
    return Unit;
  }
  function BlurEffectView(initialRadius) {
    BlurEffectView$Companion_getInstance();
    if (initialRadius === void 0)
      initialRadius = 10.0;
    EffectView.call(this);
    this.weights_6tokn0$_0 = storageForMatrix3D(this.uniforms, BlurEffectView$Companion_getInstance().u_Weights_0, BlurEffectView$Companion_getInstance().KERNEL_GAUSSIAN_BLUR);
    this.radius_4jol99$_0 = initialRadius;
    this.radius = initialRadius;
    this.fragment = FragmentShader(BlurEffectView_init$lambda);
    this.identity_0 = new Matrix();
  }
  function BlurEffectView$Companion() {
    BlurEffectView$Companion_instance = this;
    this.u_Weights_0 = Uniform_init('weights', VarType.Mat3);
  }
  Object.defineProperty(BlurEffectView$Companion.prototype, 'KERNEL_GAUSSIAN_BLUR', {
    get: function () {
      return Convolute3Filter$Companion_getInstance().KERNEL_GAUSSIAN_BLUR;
    }
  });
  BlurEffectView$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BlurEffectView$Companion_instance = null;
  function BlurEffectView$Companion_getInstance() {
    if (BlurEffectView$Companion_instance === null) {
      new BlurEffectView$Companion();
    }return BlurEffectView$Companion_instance;
  }
  var BlurEffectView$weights_metadata = new PropertyMetadata('weights');
  Object.defineProperty(BlurEffectView.prototype, 'weights', {
    get: function () {
      return this.weights_6tokn0$_0.getValue_t0xcdd$(this, BlurEffectView$weights_metadata);
    }
  });
  Object.defineProperty(BlurEffectView.prototype, 'radius', {
    get: function () {
      return this.radius_4jol99$_0;
    },
    set: function (value) {
      this.radius_4jol99$_0 = value;
      this.borderEffect = numberToInt(value);
    }
  });
  BlurEffectView.prototype.renderFilterLevel_s94fqd$ = function (ctx, matrix, texture, texWidth, texHeight, level) {
    ctx.flush();
    var $this = ctx.ag;
    var rb = $this.renderBuffers.alloc();
    $this.frameRenderBuffers.add_11rb$(rb);
    var oldRenderBuffer = $this.currentRenderBuffer;
    rb.setSize_vux9f0$(texWidth, texHeight);
    $this.setRenderBuffer_m67x29$(rb);
    try {
      $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
      var oldScissors = ctx.batch.scissor;
      ctx.batch.scissor = null;
      try {
        var $this_0 = ctx.batch;
        var uniforms = this.uniforms;
        $this_0.flush();
        $this_0.tempOldUniforms.setTo_huk8u$($this_0.uniforms);
        $this_0.uniforms.put_huk8u$(uniforms);
        try {
          var tmp$, tmp$_0, tmp$_1, tmp$_2;
          tmp$_2 = ctx.batch;
          tmp$ = this.identity_0;
          tmp$_0 = this.filtering;
          tmp$_1 = this.renderColorAdd;
          tmp$_2.drawQuad_w9nimi$(texture, void 0, void 0, void 0, void 0, tmp$, tmp$_0, this.renderColorMul, tmp$_1, this.blendMode.factors, void 0, this.program);
        }finally {
          $this_0.flush();
          $this_0.uniforms.setTo_huk8u$($this_0.tempOldUniforms);
        }
        ctx.flush();
      }finally {
        ctx.batch.scissor = oldScissors;
      }
    }finally {
      $this.setRenderBuffer_m67x29$(oldRenderBuffer);
    }
    try {
      var it = rb.tex;
      var newtex = Texture.Companion.invoke_l6jlr1$(it, texWidth, texHeight);
      if (level > 0) {
        this.renderFilterLevel_s94fqd$(ctx, matrix, newtex, texWidth, texHeight, level - 1 | 0);
      } else {
        EffectView.prototype.renderFilter_anhu8j$.call(this, ctx, matrix, newtex, texWidth, texHeight);
      }
      ctx.flush();
    }finally {
      $this.frameRenderBuffers.remove_11rb$(rb);
      $this.renderBuffers.free_11rb$(rb);
    }
  };
  BlurEffectView.prototype.renderFilter_anhu8j$ = function (ctx, matrix, texture, texWidth, texHeight) {
    this.renderFilterLevel_s94fqd$(ctx, matrix, texture, texWidth, texHeight, this.borderEffect);
  };
  function BlurEffectView_init$lambda($receiver) {
    korag.DefaultShaders;
    $receiver.setTo_2oogdr$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0)]));
    for (var y = 0; y < 3; y++) {
      for (var x = 0; x < 3; x++) {
        $receiver.setTo_2oogdr$($receiver.out, $receiver.plus_2oogdr$($receiver.out, $receiver.times_2oogdr$(EffectView$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.plus_2oogdr$(EffectView$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.vec2_hywno3$([$receiver.get_lit_81szk$(x - 1 | 0), $receiver.get_lit_81szk$(y - 1 | 0)]))), $receiver.get_x14fz$($receiver.get_x14fz$(BlurEffectView$Companion_getInstance().u_Weights_0, x), y))));
      }
    }
    return Unit;
  }
  BlurEffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BlurEffectView',
    interfaces: [EffectView]
  };
  var blurEffectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.blurEffectView_pvuwqz$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var BlurEffectView_init = _.com.soywiz.korge.view.effect.BlurEffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function blurEffectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, radius, callback) {
      if (radius === void 0)
        radius = 10.0;
      if (callback === void 0)
        callback = blurEffectView$lambda;
      var $receiver_0 = addTo(new BlurEffectView_init(radius), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function ColorMatrixEffectView(colorMatrix) {
    ColorMatrixEffectView$Companion_getInstance();
    EffectView.call(this);
    this.colorMatrix_1ifdva$_0 = storageForMatrix3D(this.uniforms, ColorMatrixEffectView$Companion_getInstance().u_ColorMatrix, colorMatrix);
    this.fragment = FragmentShader(ColorMatrixEffectView_init$lambda);
  }
  function ColorMatrixEffectView$Companion() {
    ColorMatrixEffectView$Companion_instance = this;
    this.u_ColorMatrix = Uniform_init('colorMatrix', VarType.Mat4);
  }
  Object.defineProperty(ColorMatrixEffectView$Companion.prototype, 'GRAYSCALE_MATRIX', {
    get: function () {
      return ColorMatrixFilter$Companion_getInstance().GRAYSCALE_MATRIX;
    }
  });
  ColorMatrixEffectView$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ColorMatrixEffectView$Companion_instance = null;
  function ColorMatrixEffectView$Companion_getInstance() {
    if (ColorMatrixEffectView$Companion_instance === null) {
      new ColorMatrixEffectView$Companion();
    }return ColorMatrixEffectView$Companion_instance;
  }
  var ColorMatrixEffectView$colorMatrix_metadata = new PropertyMetadata('colorMatrix');
  Object.defineProperty(ColorMatrixEffectView.prototype, 'colorMatrix', {
    get: function () {
      return this.colorMatrix_1ifdva$_0.getValue_t0xcdd$(this, ColorMatrixEffectView$colorMatrix_metadata);
    }
  });
  function ColorMatrixEffectView_init$lambda($receiver) {
    $receiver.setTo_2oogdr$($receiver.out, $receiver.times_2oogdr$(ColorMatrixEffectView$Companion_getInstance().u_ColorMatrix, EffectView$Companion_getInstance().tex_wu6wrd$($receiver, EffectView$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver))));
    return Unit;
  }
  ColorMatrixEffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorMatrixEffectView',
    interfaces: [EffectView]
  };
  var colorMatrixEffectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.colorMatrixEffectView_wmhcxu$', wrapFunction(function () {
    var Matrix3D_init = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.Matrix3D;
    var Unit = Kotlin.kotlin.Unit;
    var ColorMatrixEffectView_init = _.com.soywiz.korge.view.effect.ColorMatrixEffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function colorMatrixEffectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, matrix, callback) {
      if (matrix === void 0)
        matrix = new Matrix3D_init();
      if (callback === void 0)
        callback = colorMatrixEffectView$lambda;
      var $receiver_0 = addTo(new ColorMatrixEffectView_init(matrix), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function Convolute3EffectView(kernel) {
    Convolute3EffectView$Companion_getInstance();
    EffectView.call(this);
    this.kernel = kernel;
    this.weights_gll8b7$_0 = storageForMatrix3D(this.uniforms, Convolute3EffectView$Companion_getInstance().u_Weights_0, this.kernel);
    this.borderEffect = 1;
    this.fragment = FragmentShader(Convolute3EffectView_init$lambda);
  }
  function Convolute3EffectView$Companion() {
    Convolute3EffectView$Companion_instance = this;
    this.u_Weights_0 = Uniform_init('weights', VarType.Mat3);
  }
  Object.defineProperty(Convolute3EffectView$Companion.prototype, 'KERNEL_GAUSSIAN_BLUR', {
    get: function () {
      return Convolute3Filter$Companion_getInstance().KERNEL_GAUSSIAN_BLUR;
    }
  });
  Object.defineProperty(Convolute3EffectView$Companion.prototype, 'KERNEL_BOX_BLUR', {
    get: function () {
      return Convolute3Filter$Companion_getInstance().KERNEL_BOX_BLUR;
    }
  });
  Object.defineProperty(Convolute3EffectView$Companion.prototype, 'KERNEL_IDENTITY', {
    get: function () {
      return Convolute3Filter$Companion_getInstance().KERNEL_IDENTITY;
    }
  });
  Object.defineProperty(Convolute3EffectView$Companion.prototype, 'KERNEL_EDGE_DETECTION', {
    get: function () {
      return Convolute3Filter$Companion_getInstance().KERNEL_EDGE_DETECTION;
    }
  });
  Convolute3EffectView$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Convolute3EffectView$Companion_instance = null;
  function Convolute3EffectView$Companion_getInstance() {
    if (Convolute3EffectView$Companion_instance === null) {
      new Convolute3EffectView$Companion();
    }return Convolute3EffectView$Companion_instance;
  }
  var Convolute3EffectView$weights_metadata = new PropertyMetadata('weights');
  Object.defineProperty(Convolute3EffectView.prototype, 'weights', {
    get: function () {
      return this.weights_gll8b7$_0.getValue_t0xcdd$(this, Convolute3EffectView$weights_metadata);
    }
  });
  function Convolute3EffectView_init$lambda($receiver) {
    korag.DefaultShaders;
    $receiver.setTo_2oogdr$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0)]));
    for (var y = 0; y < 3; y++) {
      for (var x = 0; x < 3; x++) {
        $receiver.setTo_2oogdr$($receiver.out, $receiver.plus_2oogdr$($receiver.out, $receiver.times_2oogdr$(EffectView$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.plus_2oogdr$(EffectView$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.vec2_hywno3$([$receiver.get_lit_81szk$(x - 1 | 0), $receiver.get_lit_81szk$(y - 1 | 0)]))), $receiver.get_x14fz$($receiver.get_x14fz$(Convolute3EffectView$Companion_getInstance().u_Weights_0, x), y))));
      }
    }
    return Unit;
  }
  Convolute3EffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Convolute3EffectView',
    interfaces: [EffectView]
  };
  var convolute3EffectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.convolute3EffectView_71gsis$', wrapFunction(function () {
    var Matrix3D_init = _.$$importsForInline$$['korma-root-korma'].com.soywiz.korma.geom.Matrix3D;
    var Unit = Kotlin.kotlin.Unit;
    var Convolute3EffectView_init = _.com.soywiz.korge.view.effect.Convolute3EffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function convolute3EffectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, kernel, callback) {
      if (kernel === void 0)
        kernel = new Matrix3D_init();
      if (callback === void 0)
        callback = convolute3EffectView$lambda;
      var $receiver_0 = addTo(new Convolute3EffectView_init(kernel), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function AG$renderToTexture$lambda_3(it) {
    return Unit;
  }
  function EffectView() {
    EffectView$Companion_getInstance();
    Container.call(this);
    this.filtering = true;
    this.oldViewMatrix_9uymhl$_0 = new Matrix3D();
    this.borderEffect_sz6v8x$_0 = 0;
    this.tempMat2d_dmah7c$_0 = new Matrix();
    this.vertex_wwjody$_0 = BatchBuilder2D$Companion_getInstance().VERTEX;
    this.fragment_h3lxum$_0 = EffectView$Companion_getInstance().DEFAULT_FRAGMENT;
    this.program = null;
    this.timeHolder_x9lool$_0 = new Float32Array(1);
    this.textureSizeHolder_sjfg5e$_0 = new Float32Array(2);
    this.uniforms = AG$AG$UniformValues_init([to(EffectView$Companion_getInstance().u_Time, this.timeHolder_x9lool$_0), to(EffectView$Companion_getInstance().u_TextureSize, this.textureSizeHolder_sjfg5e$_0)]);
    this.currentTimeMs_mne89m$_qp9xrx$_0 = 0;
    this.addUpdatable_b4k9x1$(EffectView_init$lambda(this));
  }
  Object.defineProperty(EffectView.prototype, 'borderEffect', {
    get: function () {
      return this.borderEffect_sz6v8x$_0;
    },
    set: function (borderEffect) {
      this.borderEffect_sz6v8x$_0 = borderEffect;
    }
  });
  Object.defineProperty(EffectView.prototype, 'vertex', {
    get: function () {
      return this.vertex_wwjody$_0;
    },
    set: function (value) {
      this.vertex_wwjody$_0 = value;
      this.program = null;
    }
  });
  Object.defineProperty(EffectView.prototype, 'fragment', {
    get: function () {
      return this.fragment_h3lxum$_0;
    },
    set: function (value) {
      this.fragment_h3lxum$_0 = value;
      this.program = null;
    }
  });
  function EffectView$Companion() {
    EffectView$Companion_instance = this;
    this.u_Time = Uniform_init('time', VarType.Float1);
    this.u_TextureSize = Uniform_init('effectTextureSize', VarType.Float2);
    this.DEFAULT_FRAGMENT = BatchBuilder2D$Companion_getInstance().buildTextureLookupFragment_6taknv$(false);
  }
  EffectView$Companion.prototype.get_fragmentCoords01_mw8vo7$ = function ($receiver) {
    return $receiver.get_hhgt4v$(korag.DefaultShaders.v_Tex, 'xy');
  };
  EffectView$Companion.prototype.get_fragmentCoords_mw8vo7$ = function ($receiver) {
    return $receiver.times_2oogdr$(this.get_fragmentCoords01_mw8vo7$($receiver), this.u_TextureSize);
  };
  EffectView$Companion.prototype.tex_wu6wrd$ = function ($receiver, coords) {
    return $receiver.texture2D_q0hzsk$(korag.DefaultShaders.u_Tex, $receiver.div_2oogdr$(coords, this.u_TextureSize));
  };
  EffectView$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var EffectView$Companion_instance = null;
  function EffectView$Companion_getInstance() {
    if (EffectView$Companion_instance === null) {
      new EffectView$Companion();
    }return EffectView$Companion_instance;
  }
  Object.defineProperty(EffectView.prototype, 'currentTimeMs_mne89m$_0', {
    get: function () {
      return this.currentTimeMs_mne89m$_qp9xrx$_0;
    },
    set: function (value) {
      this.currentTimeMs_mne89m$_qp9xrx$_0 = value;
      this.timeHolder_x9lool$_0[0] = this.currentTimeMs_mne89m$_0 / 1000.0;
    }
  });
  EffectView.prototype.renderInternal_8isv09$ = function (ctx) {
    var bounds = this.getLocalBounds_2da8yn$();
    var texWidth = numberToInt(bounds.width) + (this.borderEffect * 2 | 0) | 0;
    var texHeight = numberToInt(bounds.height) + (this.borderEffect * 2 | 0) | 0;
    ctx.flush();
    var $this = ctx.ag;
    var rb = $this.renderBuffers.alloc();
    $this.frameRenderBuffers.add_11rb$(rb);
    var oldRenderBuffer = $this.currentRenderBuffer;
    rb.setSize_vux9f0$(texWidth, texHeight);
    $this.setRenderBuffer_m67x29$(rb);
    try {
      $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
      var oldScissors = ctx.batch.scissor;
      ctx.batch.scissor = null;
      try {
        this.tempMat2d_dmah7c$_0.copyFrom_1ktkmn$(this.globalMatrixInv);
        this.tempMat2d_dmah7c$_0.translate_lu1900$(-bounds.x + this.borderEffect, -bounds.y + this.borderEffect);
        var $this_0 = ctx.batch;
        var matrix = this.tempMat2d_dmah7c$_0;
        var temp = this.oldViewMatrix_9uymhl$_0;
        $this_0.flush();
        temp.copyFrom_p62hku$($this_0.viewMat);
        copyFrom($this_0.viewMat, matrix);
        try {
          Container.prototype.renderInternal_8isv09$.call(this, ctx);
        }finally {
          $this_0.flush();
          $this_0.viewMat.copyFrom_p62hku$(temp);
        }
        ctx.flush();
      }finally {
        ctx.batch.scissor = oldScissors;
      }
    }finally {
      $this.setRenderBuffer_m67x29$(oldRenderBuffer);
    }
    try {
      var it = rb.tex;
      var texture = Texture.Companion.invoke_l6jlr1$(it, texWidth, texHeight);
      this.textureSizeHolder_sjfg5e$_0[0] = texture.base.width;
      this.textureSizeHolder_sjfg5e$_0[1] = texture.base.height;
      this.updateUniforms();
      this.tempMat2d_dmah7c$_0.copyFrom_1ktkmn$(this.globalMatrix);
      this.tempMat2d_dmah7c$_0.pretranslate_lu1900$((-this.borderEffect | 0) + bounds.x, (-this.borderEffect | 0) + bounds.y);
      if (this.program == null)
        this.program = new Program(this.vertex, this.fragment);
      this.renderFilter_anhu8j$(ctx, this.tempMat2d_dmah7c$_0, texture, texWidth, texHeight);
      ctx.flush();
    }finally {
      $this.frameRenderBuffers.remove_11rb$(rb);
      $this.renderBuffers.free_11rb$(rb);
    }
  };
  EffectView.prototype.renderFilter_anhu8j$ = function (ctx, matrix, texture, texWidth, texHeight) {
    var $this = ctx.batch;
    var uniforms = this.uniforms;
    $this.flush();
    $this.tempOldUniforms.setTo_huk8u$($this.uniforms);
    $this.uniforms.put_huk8u$(uniforms);
    try {
      var tmp$, tmp$_0, tmp$_1;
      tmp$_1 = ctx.batch;
      tmp$ = this.filtering;
      tmp$_0 = this.renderColorAdd;
      tmp$_1.drawQuad_w9nimi$(texture, void 0, void 0, void 0, void 0, matrix, tmp$, this.renderColorMul, tmp$_0, this.blendMode.factors, void 0, this.program);
    }finally {
      $this.flush();
      $this.uniforms.setTo_huk8u$($this.tempOldUniforms);
    }
  };
  EffectView.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    this.getLocalBoundsInternal_2da8yn$(out, Container.prototype.getLocalBoundsInternal_2da8yn$$default.bind(this));
    out.x = out.x - this.borderEffect;
    out.y = out.y - this.borderEffect;
    out.width = out.width + (this.borderEffect * 2 | 0);
    out.height = out.height + (this.borderEffect * 2 | 0);
  };
  EffectView.prototype.updateUniforms = function () {
  };
  function EffectView_init$lambda(this$EffectView) {
    return function (ms) {
      this$EffectView.currentTimeMs_mne89m$_0 = this$EffectView.currentTimeMs_mne89m$_0 + ms | 0;
      return Unit;
    };
  }
  EffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EffectView',
    interfaces: [Container]
  };
  var effectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.effectView_1ac47i$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var EffectView_init = _.com.soywiz.korge.view.effect.EffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function effectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, callback) {
      if (callback === void 0)
        callback = effectView$lambda;
      var $receiver_0 = addTo(new EffectView_init(), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function SwizzleColorsEffectView(initialSwizzle) {
    if (initialSwizzle === void 0)
      initialSwizzle = 'rgba';
    EffectView.call(this);
    this.swizzle_uyr81e$_0 = '';
    this.swizzle = initialSwizzle;
  }
  function SwizzleColorsEffectView$set_SwizzleColorsEffectView$swizzle$lambda(closure$value) {
    return function ($receiver) {
      $receiver.setTo_2oogdr$($receiver.out, $receiver.get_hhgt4v$($receiver.out, closure$value));
      return Unit;
    };
  }
  Object.defineProperty(SwizzleColorsEffectView.prototype, 'swizzle', {
    get: function () {
      return this.swizzle_uyr81e$_0;
    },
    set: function (value) {
      this.swizzle_uyr81e$_0 = value;
      this.fragment = appending(this.fragment, SwizzleColorsEffectView$set_SwizzleColorsEffectView$swizzle$lambda(value));
    }
  });
  SwizzleColorsEffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SwizzleColorsEffectView',
    interfaces: [EffectView]
  };
  var swizzleColorsEffectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.swizzleColorsEffectView_g9fr6a$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var SwizzleColorsEffectView_init = _.com.soywiz.korge.view.effect.SwizzleColorsEffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function swizzleColorsEffectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, swizzle, callback) {
      if (swizzle === void 0)
        swizzle = 'rgba';
      if (callback === void 0)
        callback = swizzleColorsEffectView$lambda;
      var $receiver_0 = addTo(new SwizzleColorsEffectView_init(swizzle), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function WaveEffectView() {
    WaveEffectView$Companion_getInstance();
    EffectView.call(this);
    this.amplitude_0 = storageFor(this.uniforms, WaveEffectView$Companion_getInstance().u_Amplitude);
    this.crestCount_0 = storageFor(this.uniforms, WaveEffectView$Companion_getInstance().u_crestCount);
    this.cyclesPerSecond_0 = storageFor(this.uniforms, WaveEffectView$Companion_getInstance().u_cyclesPerSecond);
    this.amplitudeX_vosvv2$_0 = this.amplitude_0.intDelegateX_8b5ljp$(10, WaveEffectView$amplitudeX$lambda(this));
    this.amplitudeY_vosvu7$_0 = this.amplitude_0.intDelegateY_8b5ljp$(10, WaveEffectView$amplitudeY$lambda(this));
    this.crestCountX_5vd9v$_0 = this.crestCount_0.floatDelegateX_quopaj$(2.0);
    this.crestCountY_5vd90$_0 = this.crestCount_0.floatDelegateY_quopaj$(2.0);
    this.cyclesPerSecondX_oiizpv$_0 = this.cyclesPerSecond_0.floatDelegateX_quopaj$(1.0);
    this.cyclesPerSecondY_oiizqq$_0 = this.cyclesPerSecond_0.floatDelegateY_quopaj$(1.0);
    this.updateBorderEffect_0();
    this.fragment = FragmentShader(WaveEffectView_init$lambda);
  }
  function WaveEffectView$Companion() {
    WaveEffectView$Companion_instance = this;
    this.u_Amplitude = Uniform_init('amplitude', VarType.Float2);
    this.u_crestCount = Uniform_init('crestCount', VarType.Float2);
    this.u_cyclesPerSecond = Uniform_init('cyclesPerSecond', VarType.Float2);
  }
  WaveEffectView$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var WaveEffectView$Companion_instance = null;
  function WaveEffectView$Companion_getInstance() {
    if (WaveEffectView$Companion_instance === null) {
      new WaveEffectView$Companion();
    }return WaveEffectView$Companion_instance;
  }
  var WaveEffectView$amplitudeX_metadata = new PropertyMetadata('amplitudeX');
  Object.defineProperty(WaveEffectView.prototype, 'amplitudeX', {
    get: function () {
      return this.amplitudeX_vosvv2$_0.getValue_t0xcdd$(this, WaveEffectView$amplitudeX_metadata);
    },
    set: function (amplitudeX) {
      this.amplitudeX_vosvv2$_0.setValue_imo3cj$(this, WaveEffectView$amplitudeX_metadata, amplitudeX);
    }
  });
  var WaveEffectView$amplitudeY_metadata = new PropertyMetadata('amplitudeY');
  Object.defineProperty(WaveEffectView.prototype, 'amplitudeY', {
    get: function () {
      return this.amplitudeY_vosvu7$_0.getValue_t0xcdd$(this, WaveEffectView$amplitudeY_metadata);
    },
    set: function (amplitudeY) {
      this.amplitudeY_vosvu7$_0.setValue_imo3cj$(this, WaveEffectView$amplitudeY_metadata, amplitudeY);
    }
  });
  var WaveEffectView$crestCountX_metadata = new PropertyMetadata('crestCountX');
  Object.defineProperty(WaveEffectView.prototype, 'crestCountX', {
    get: function () {
      return this.crestCountX_5vd9v$_0.getValue_t0xcdd$(this, WaveEffectView$crestCountX_metadata);
    },
    set: function (crestCountX) {
      this.crestCountX_5vd9v$_0.setValue_3eg8p2$(this, WaveEffectView$crestCountX_metadata, crestCountX);
    }
  });
  var WaveEffectView$crestCountY_metadata = new PropertyMetadata('crestCountY');
  Object.defineProperty(WaveEffectView.prototype, 'crestCountY', {
    get: function () {
      return this.crestCountY_5vd90$_0.getValue_t0xcdd$(this, WaveEffectView$crestCountY_metadata);
    },
    set: function (crestCountY) {
      this.crestCountY_5vd90$_0.setValue_3eg8p2$(this, WaveEffectView$crestCountY_metadata, crestCountY);
    }
  });
  var WaveEffectView$cyclesPerSecondX_metadata = new PropertyMetadata('cyclesPerSecondX');
  Object.defineProperty(WaveEffectView.prototype, 'cyclesPerSecondX', {
    get: function () {
      return this.cyclesPerSecondX_oiizpv$_0.getValue_t0xcdd$(this, WaveEffectView$cyclesPerSecondX_metadata);
    },
    set: function (cyclesPerSecondX) {
      this.cyclesPerSecondX_oiizpv$_0.setValue_3eg8p2$(this, WaveEffectView$cyclesPerSecondX_metadata, cyclesPerSecondX);
    }
  });
  var WaveEffectView$cyclesPerSecondY_metadata = new PropertyMetadata('cyclesPerSecondY');
  Object.defineProperty(WaveEffectView.prototype, 'cyclesPerSecondY', {
    get: function () {
      return this.cyclesPerSecondY_oiizqq$_0.getValue_t0xcdd$(this, WaveEffectView$cyclesPerSecondY_metadata);
    },
    set: function (cyclesPerSecondY) {
      this.cyclesPerSecondY_oiizqq$_0.setValue_3eg8p2$(this, WaveEffectView$cyclesPerSecondY_metadata, cyclesPerSecondY);
    }
  });
  WaveEffectView.prototype.updateBorderEffect_0 = function () {
    var a = this.amplitudeX;
    var b = this.amplitudeY;
    this.borderEffect = Math_0.max(a, b);
  };
  function WaveEffectView$amplitudeX$lambda(this$WaveEffectView) {
    return function (it) {
      this$WaveEffectView.updateBorderEffect_0();
      return Unit;
    };
  }
  function WaveEffectView$amplitudeY$lambda(this$WaveEffectView) {
    return function (it) {
      this$WaveEffectView.updateBorderEffect_0();
      return Unit;
    };
  }
  function WaveEffectView_init$lambda($receiver) {
    var $receiver_0 = korag.DefaultShaders;
    var tmpx = $receiver.get_x_rix7j$($receiver_0.t_Temp0);
    var tmpy = $receiver.get_y_rix7j$($receiver_0.t_Temp0);
    $receiver.setTo_2oogdr$(tmpx, $receiver.sin_dq1c34$($receiver.times_2oogdr$($receiver.get_lit_yrwdxr$(math.PI), $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.get_x_rix7j$(EffectView$Companion_getInstance().get_fragmentCoords01_mw8vo7$($receiver)), $receiver.get_x_rix7j$(WaveEffectView$Companion_getInstance().u_crestCount)), $receiver.times_2oogdr$(EffectView$Companion_getInstance().u_Time, $receiver.get_x_rix7j$(WaveEffectView$Companion_getInstance().u_cyclesPerSecond))))));
    $receiver.setTo_2oogdr$(tmpy, $receiver.sin_dq1c34$($receiver.times_2oogdr$($receiver.get_lit_yrwdxr$(math.PI), $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.get_y_rix7j$(EffectView$Companion_getInstance().get_fragmentCoords01_mw8vo7$($receiver)), $receiver.get_y_rix7j$(WaveEffectView$Companion_getInstance().u_crestCount)), $receiver.times_2oogdr$(EffectView$Companion_getInstance().u_Time, $receiver.get_y_rix7j$(WaveEffectView$Companion_getInstance().u_cyclesPerSecond))))));
    $receiver.setTo_2oogdr$($receiver.out, EffectView$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.minus_2oogdr$(EffectView$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.vec2_hywno3$([$receiver.times_2oogdr$(tmpy, $receiver.get_x_rix7j$(WaveEffectView$Companion_getInstance().u_Amplitude)), $receiver.times_2oogdr$(tmpx, $receiver.get_y_rix7j$(WaveEffectView$Companion_getInstance().u_Amplitude))]))));
    return Unit;
  }
  WaveEffectView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaveEffectView',
    interfaces: [EffectView]
  };
  var waveEffectView = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.effect.waveEffectView_2x85aj$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var WaveEffectView_init = _.com.soywiz.korge.view.effect.WaveEffectView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function waveEffectView$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, callback) {
      if (callback === void 0)
        callback = waveEffectView$lambda;
      var $receiver_0 = addTo(new WaveEffectView_init(), $receiver);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function BlurFilter(initialRadius) {
    if (initialRadius === void 0)
      initialRadius = 1.0;
    this.gaussianBlurs_0 = ArrayList_init_1();
    this.composedFilters_0 = ArrayList_init_1();
    this.composed_0 = new ComposedFilter(this.composedFilters_0);
    this.radius_heb8oy$_0 = initialRadius;
  }
  Object.defineProperty(BlurFilter.prototype, 'radius', {
    get: function () {
      return this.radius_heb8oy$_0;
    },
    set: function (value) {
      this.radius_heb8oy$_0 = clamp_0(value, 0.0, 32.0);
    }
  });
  Object.defineProperty(BlurFilter.prototype, 'border', {
    get: function () {
      return numberToInt(this.radius * 3);
    }
  });
  Object.defineProperty(BlurFilter.prototype, 'nsteps', {
    get: function () {
      return toIntCeil(this.radius);
    }
  });
  BlurFilter.prototype.render_ricsvr$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode) {
    var nsteps = this.nsteps;
    while (this.gaussianBlurs_0.size < nsteps) {
      this.gaussianBlurs_0.add_11rb$(new Convolute3Filter(Matrix3D.Companion.invoke_p62hku$(Convolute3Filter$Companion_getInstance().KERNEL_GAUSSIAN_BLUR), this.gaussianBlurs_0.size));
    }
    this.composedFilters_0.clear();
    var tmp$ = this.radius;
    var x = this.radius;
    var scale = tmp$ !== Math_0.ceil(x);
    for (var n = 0; n < nsteps; n++) {
      var isLast = n === (nsteps - 1 | 0);
      var blur = this.gaussianBlurs_0.get_za3lpa$(n);
      this.composedFilters_0.add_11rb$(blur);
      var tmp$_0;
      if (scale && isLast) {
        var x_0 = this.radius;
        tmp$_0 = 1.0 - (Math_0.ceil(x_0) - this.radius);
      } else
        tmp$_0 = 1.0;
      var ratio = tmp$_0;
      setToInterpolated(blur.weights, Convolute3Filter$Companion_getInstance().KERNEL_IDENTITY, Convolute3Filter$Companion_getInstance().KERNEL_GAUSSIAN_BLUR, ratio);
    }
    this.composed_0.render_ricsvr$(ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode);
  };
  BlurFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BlurFilter',
    interfaces: [Filter]
  };
  function ColorMatrixFilter(colorMatrix, blendRatio) {
    ColorMatrixFilter$Companion_getInstance();
    if (blendRatio === void 0)
      blendRatio = 1.0;
    ShaderFilter.call(this);
    this.colorMatrix_9nf8b1$_0 = storageForMatrix3D(this.uniforms, ColorMatrixFilter$Companion_getInstance().u_ColorMatrix_0, colorMatrix);
    this.blendRatio_xbu7jr$_0 = storageFor(this.uniforms, ColorMatrixFilter$Companion_getInstance().u_BlendRatio_0).doubleDelegateX_gjghr5$(blendRatio);
    this.fragment_8j3sxf$_0 = ColorMatrixFilter$Companion_getInstance().FRAGMENT_SHADER_0;
  }
  function ColorMatrixFilter$Companion() {
    ColorMatrixFilter$Companion_instance = this;
    this.u_ColorMatrix_0 = Uniform_init('colorMatrix', VarType.Mat4);
    this.u_BlendRatio_0 = Uniform_init('blendRatio', VarType.Float1);
    Matrix3D.Companion;
    this.GRAYSCALE_MATRIX = (new Matrix3D()).setColumns_8odxlg$(numberToDouble(0.33), numberToDouble(0.33), numberToDouble(0.33), numberToDouble(0.0), numberToDouble(0.59), numberToDouble(0.59), numberToDouble(0.59), numberToDouble(0.0), numberToDouble(0.11), numberToDouble(0.11), numberToDouble(0.11), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(1.0));
    Matrix3D.Companion;
    this.IDENTITY_MATRIX = (new Matrix3D()).setColumns_8odxlg$(numberToDouble(1.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(1.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(1.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(0.0), numberToDouble(1.0));
    this.FRAGMENT_SHADER_0 = FragmentShader(ColorMatrixFilter$Companion$FRAGMENT_SHADER$lambda(this));
  }
  function ColorMatrixFilter$Companion$FRAGMENT_SHADER$lambda(this$ColorMatrixFilter$) {
    return function ($receiver) {
      var this$ColorMatrixFilter$_0 = this$ColorMatrixFilter$;
      $receiver.setTo_2oogdr$($receiver.out, ShaderFilter$Companion_getInstance().tex_wu6wrd$($receiver, ShaderFilter$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver)));
      $receiver.setTo_2oogdr$($receiver.out, $receiver.mix_qzk4o8$($receiver.out, $receiver.times_2oogdr$(this$ColorMatrixFilter$_0.u_ColorMatrix_0, $receiver.out), this$ColorMatrixFilter$_0.u_BlendRatio_0));
      return Unit;
    };
  }
  ColorMatrixFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ColorMatrixFilter$Companion_instance = null;
  function ColorMatrixFilter$Companion_getInstance() {
    if (ColorMatrixFilter$Companion_instance === null) {
      new ColorMatrixFilter$Companion();
    }return ColorMatrixFilter$Companion_instance;
  }
  var ColorMatrixFilter$colorMatrix_metadata = new PropertyMetadata('colorMatrix');
  Object.defineProperty(ColorMatrixFilter.prototype, 'colorMatrix', {
    get: function () {
      return this.colorMatrix_9nf8b1$_0.getValue_t0xcdd$(this, ColorMatrixFilter$colorMatrix_metadata);
    },
    set: function (colorMatrix) {
      this.colorMatrix_9nf8b1$_0.setValue_809r6s$(this, ColorMatrixFilter$colorMatrix_metadata, colorMatrix);
    }
  });
  var ColorMatrixFilter$blendRatio_metadata = new PropertyMetadata('blendRatio');
  Object.defineProperty(ColorMatrixFilter.prototype, 'blendRatio', {
    get: function () {
      return this.blendRatio_xbu7jr$_0.getValue_t0xcdd$(this, ColorMatrixFilter$blendRatio_metadata);
    },
    set: function (blendRatio) {
      this.blendRatio_xbu7jr$_0.setValue_zb7g25$(this, ColorMatrixFilter$blendRatio_metadata, blendRatio);
    }
  });
  Object.defineProperty(ColorMatrixFilter.prototype, 'fragment', {
    get: function () {
      return this.fragment_8j3sxf$_0;
    }
  });
  ColorMatrixFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColorMatrixFilter',
    interfaces: [ShaderFilter]
  };
  function AG$renderToTexture$lambda_4(it) {
    return Unit;
  }
  function ComposedFilter(filters) {
    this.filters = filters;
    this.identity_0 = new Matrix();
  }
  Object.defineProperty(ComposedFilter.prototype, 'border', {
    get: function () {
      var tmp$;
      var sum = 0;
      tmp$ = this.filters.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        sum = sum + element.border | 0;
      }
      return sum;
    }
  });
  ComposedFilter.prototype.render_ricsvr$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode) {
    if (this.filters.isEmpty()) {
      IdentityFilter_getInstance().render_ricsvr$(ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode);
    } else {
      this.renderIndex_as1wjb$(ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode, this.filters.size - 1 | 0);
    }
  };
  ComposedFilter.prototype.renderIndex_as1wjb$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode, level) {
    var filter = this.filters.get_za3lpa$(this.filters.size - level - 1 | 0);
    var newTexWidth = texWidth + filter.border | 0;
    var newTexHeight = texHeight + filter.border | 0;
    ctx.flush();
    var $this = ctx.ag;
    var rb = $this.renderBuffers.alloc();
    $this.frameRenderBuffers.add_11rb$(rb);
    var oldRenderBuffer = $this.currentRenderBuffer;
    rb.setSize_vux9f0$(newTexWidth, newTexHeight);
    $this.setRenderBuffer_m67x29$(rb);
    try {
      $this.clear_yvqa77$(color_0.Colors.TRANSPARENT_BLACK);
      var oldScissors = ctx.batch.scissor;
      ctx.batch.scissor = null;
      try {
        filter.render_ricsvr$(ctx, this.identity_0, texture, newTexWidth, newTexHeight, renderColorAdd, renderColorMul, blendMode);
        ctx.flush();
      }finally {
        ctx.batch.scissor = oldScissors;
      }
    }finally {
      $this.setRenderBuffer_m67x29$(oldRenderBuffer);
    }
    try {
      var it = rb.tex;
      var newtex = Texture.Companion.invoke_l6jlr1$(it, newTexWidth, newTexHeight);
      if (level > 0) {
        this.renderIndex_as1wjb$(ctx, matrix, newtex, newTexWidth, newTexHeight, renderColorAdd, renderColorMul, blendMode, level - 1 | 0);
      } else {
        filter.render_ricsvr$(ctx, matrix, newtex, newTexWidth, newTexHeight, renderColorAdd, renderColorMul, blendMode);
      }
      ctx.flush();
    }finally {
      $this.frameRenderBuffers.remove_11rb$(rb);
      $this.renderBuffers.free_11rb$(rb);
    }
  };
  ComposedFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ComposedFilter',
    interfaces: [Filter]
  };
  function ComposedFilter_init(filters, $this) {
    $this = $this || Object.create(ComposedFilter.prototype);
    ComposedFilter.call($this, toList(filters));
    return $this;
  }
  function Convolute3Filter(kernel, dist) {
    Convolute3Filter$Companion_getInstance();
    if (dist === void 0)
      dist = 1.0;
    ShaderFilter.call(this);
    this.kernel = kernel;
    this.weights_j736a6$_0 = storageForMatrix3D(this.uniforms, Convolute3Filter$Companion_getInstance().u_Weights_0, this.kernel);
    this.dist_i2vom9$_0 = storageFor(this.uniforms, Convolute3Filter$Companion_getInstance().u_Dist_0).doubleDelegateX_gjghr5$(dist);
    this.applyAlpha_ryk0eh$_0 = storageFor(this.uniforms, Convolute3Filter$Companion_getInstance().u_ApplyAlpha_0).boolDelegateX_1l5823$(false);
    this.fragment_scd2lz$_0 = Convolute3Filter$Companion_getInstance().FRAGMENT_SHADER_0;
  }
  function Convolute3Filter$Companion() {
    Convolute3Filter$Companion_instance = this;
    this.u_ApplyAlpha_0 = Uniform_init('apply_alpha', VarType.Float1);
    this.u_Dist_0 = Uniform_init('dist', VarType.Float1);
    this.u_Weights_0 = Uniform_init('weights', VarType.Mat3);
    Matrix3D.Companion;
    var $receiver_0 = new Matrix3D();
    var a00_0 = numberToDouble(1.0);
    var a01_0 = numberToDouble(2.0);
    var a02_0 = numberToDouble(1.0);
    var a10_0 = numberToDouble(2.0);
    var a11_0 = numberToDouble(4.0);
    var a12_0 = numberToDouble(2.0);
    var a20_0 = numberToDouble(1.0);
    var a21_0 = numberToDouble(2.0);
    var a22_0 = numberToDouble(1.0);
    this.KERNEL_GAUSSIAN_BLUR = times($receiver_0.setRows_8odxlg$(numberToDouble(a00_0), numberToDouble(a01_0), numberToDouble(a02_0), 0.0, numberToDouble(a10_0), numberToDouble(a11_0), numberToDouble(a12_0), 0.0, numberToDouble(a20_0), numberToDouble(a21_0), numberToDouble(a22_0), 0.0, 0.0, 0.0, 0.0, 1.0), 1.0 / 16.0);
    Matrix3D.Companion;
    var $receiver_0_0 = new Matrix3D();
    var a00_0_0 = numberToDouble(1.0);
    var a01_0_0 = numberToDouble(1.0);
    var a02_0_0 = numberToDouble(1.0);
    var a10_0_0 = numberToDouble(1.0);
    var a11_0_0 = numberToDouble(1.0);
    var a12_0_0 = numberToDouble(1.0);
    var a20_0_0 = numberToDouble(1.0);
    var a21_0_0 = numberToDouble(1.0);
    var a22_0_0 = numberToDouble(1.0);
    this.KERNEL_BOX_BLUR = times($receiver_0_0.setRows_8odxlg$(numberToDouble(a00_0_0), numberToDouble(a01_0_0), numberToDouble(a02_0_0), 0.0, numberToDouble(a10_0_0), numberToDouble(a11_0_0), numberToDouble(a12_0_0), 0.0, numberToDouble(a20_0_0), numberToDouble(a21_0_0), numberToDouble(a22_0_0), 0.0, 0.0, 0.0, 0.0, 1.0), 1.0 / 9.0);
    Matrix3D.Companion;
    var $receiver_0_1 = new Matrix3D();
    var a00_0_1 = numberToDouble(0.0);
    var a01_0_1 = numberToDouble(0.0);
    var a02_0_1 = numberToDouble(0.0);
    var a10_0_1 = numberToDouble(0.0);
    var a11_0_1 = numberToDouble(1.0);
    var a12_0_1 = numberToDouble(0.0);
    var a20_0_1 = numberToDouble(0.0);
    var a21_0_1 = numberToDouble(0.0);
    var a22_0_1 = numberToDouble(0.0);
    this.KERNEL_IDENTITY = $receiver_0_1.setRows_8odxlg$(numberToDouble(a00_0_1), numberToDouble(a01_0_1), numberToDouble(a02_0_1), 0.0, numberToDouble(a10_0_1), numberToDouble(a11_0_1), numberToDouble(a12_0_1), 0.0, numberToDouble(a20_0_1), numberToDouble(a21_0_1), numberToDouble(a22_0_1), 0.0, 0.0, 0.0, 0.0, 1.0);
    Matrix3D.Companion;
    var a00 = -1.0;
    var a01 = -1.0;
    var a02 = -1.0;
    var a10 = -1.0;
    var a11 = +8.0;
    var a12 = -1.0;
    var a20 = -1.0;
    var a21 = -1.0;
    var a22 = -1.0;
    var $receiver_0_2 = new Matrix3D();
    var a00_0_2 = numberToDouble(a00);
    var a01_0_2 = numberToDouble(a01);
    var a02_0_2 = numberToDouble(a02);
    var a10_0_2 = numberToDouble(a10);
    var a11_0_2 = numberToDouble(a11);
    var a12_0_2 = numberToDouble(a12);
    var a20_0_2 = numberToDouble(a20);
    var a21_0_2 = numberToDouble(a21);
    var a22_0_2 = numberToDouble(a22);
    this.KERNEL_EDGE_DETECTION = $receiver_0_2.setRows_8odxlg$(numberToDouble(a00_0_2), numberToDouble(a01_0_2), numberToDouble(a02_0_2), 0.0, numberToDouble(a10_0_2), numberToDouble(a11_0_2), numberToDouble(a12_0_2), 0.0, numberToDouble(a20_0_2), numberToDouble(a21_0_2), numberToDouble(a22_0_2), 0.0, 0.0, 0.0, 0.0, 1.0);
    Matrix3D.Companion;
    var a01_1 = -1.0;
    var a10_1 = -1.0;
    var a11_1 = +4.0;
    var a12_1 = -1.0;
    var a21_1 = -1.0;
    var $receiver_0_3 = new Matrix3D();
    var a00_0_3 = numberToDouble(0.0);
    var a01_0_3 = numberToDouble(a01_1);
    var a02_0_3 = numberToDouble(0.0);
    var a10_0_3 = numberToDouble(a10_1);
    var a11_0_3 = numberToDouble(a11_1);
    var a12_0_3 = numberToDouble(a12_1);
    var a20_0_3 = numberToDouble(0.0);
    var a21_0_3 = numberToDouble(a21_1);
    var a22_0_3 = numberToDouble(0.0);
    this.KERNEL_SHARPEN = $receiver_0_3.setRows_8odxlg$(numberToDouble(a00_0_3), numberToDouble(a01_0_3), numberToDouble(a02_0_3), 0.0, numberToDouble(a10_0_3), numberToDouble(a11_0_3), numberToDouble(a12_0_3), 0.0, numberToDouble(a20_0_3), numberToDouble(a21_0_3), numberToDouble(a22_0_3), 0.0, 0.0, 0.0, 0.0, 1.0);
    this.FRAGMENT_SHADER_0 = FragmentShader(Convolute3Filter$Companion$FRAGMENT_SHADER$lambda(this));
  }
  function Convolute3Filter$Companion$FRAGMENT_SHADER$lambda(this$Convolute3Filter$) {
    return function ($receiver) {
      korag.DefaultShaders;
      var this$Convolute3Filter$_0 = this$Convolute3Filter$;
      $receiver.setTo_2oogdr$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0)]));
      for (var y = 0; y < 3; y++) {
        for (var x = 0; x < 3; x++) {
          var color = ShaderFilter$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.plus_2oogdr$(ShaderFilter$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.vec2_hywno3$([$receiver.times_2oogdr$($receiver.get_lit_81szk$(x - 1 | 0), this$Convolute3Filter$_0.u_Dist_0), $receiver.times_2oogdr$($receiver.get_lit_81szk$(y - 1 | 0), this$Convolute3Filter$_0.u_Dist_0)])));
          $receiver.setTo_2oogdr$($receiver.out, $receiver.plus_2oogdr$($receiver.out, $receiver.times_2oogdr$(color, $receiver.get_x14fz$($receiver.get_x14fz$(this$Convolute3Filter$_0.u_Weights_0, x), y))));
        }
      }
      var cond = $receiver.ne_2oogdr$(this$Convolute3Filter$_0.u_ApplyAlpha_0, $receiver.get_lit_81szk$(1.0));
      var body = new Program$Program$Builder_init($receiver.type);
      body.setTo_2oogdr$(body.get_hhgt4v$(body.out, 'a'), body.get_hhgt4v$(ShaderFilter$Companion_getInstance().tex_wu6wrd$(body, ShaderFilter$Companion_getInstance().get_fragmentCoords_mw8vo7$(body)), 'a'));
      var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
      $receiver.outputStms.add_11rb$(stmIf);
      return Unit;
    };
  }
  Convolute3Filter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Convolute3Filter$Companion_instance = null;
  function Convolute3Filter$Companion_getInstance() {
    if (Convolute3Filter$Companion_instance === null) {
      new Convolute3Filter$Companion();
    }return Convolute3Filter$Companion_instance;
  }
  var Convolute3Filter$weights_metadata = new PropertyMetadata('weights');
  Object.defineProperty(Convolute3Filter.prototype, 'weights', {
    get: function () {
      return this.weights_j736a6$_0.getValue_t0xcdd$(this, Convolute3Filter$weights_metadata);
    }
  });
  var Convolute3Filter$dist_metadata = new PropertyMetadata('dist');
  Object.defineProperty(Convolute3Filter.prototype, 'dist', {
    get: function () {
      return this.dist_i2vom9$_0.getValue_t0xcdd$(this, Convolute3Filter$dist_metadata);
    },
    set: function (dist) {
      this.dist_i2vom9$_0.setValue_zb7g25$(this, Convolute3Filter$dist_metadata, dist);
    }
  });
  var Convolute3Filter$applyAlpha_metadata = new PropertyMetadata('applyAlpha');
  Object.defineProperty(Convolute3Filter.prototype, 'applyAlpha', {
    get: function () {
      return this.applyAlpha_ryk0eh$_0.getValue_t0xcdd$(this, Convolute3Filter$applyAlpha_metadata);
    },
    set: function (applyAlpha) {
      this.applyAlpha_ryk0eh$_0.setValue_cegyfa$(this, Convolute3Filter$applyAlpha_metadata, applyAlpha);
    }
  });
  Object.defineProperty(Convolute3Filter.prototype, 'border', {
    get: function () {
      return numberToInt(this.dist);
    }
  });
  Object.defineProperty(Convolute3Filter.prototype, 'fragment', {
    get: function () {
      return this.fragment_scd2lz$_0;
    }
  });
  Convolute3Filter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Convolute3Filter',
    interfaces: [ShaderFilter]
  };
  function Filter() {
    Filter$Companion_getInstance();
  }
  function Filter$Companion() {
    Filter$Companion_instance = this;
    this.u_TextureSize = Uniform_init('effectTextureSize', VarType.Float2);
    this.DEFAULT_FRAGMENT = BatchBuilder2D$Companion_getInstance().buildTextureLookupFragment_6taknv$(false);
  }
  Filter$Companion.prototype.get_fragmentCoords01_mw8vo7$ = function ($receiver) {
    return $receiver.get_hhgt4v$(korag.DefaultShaders.v_Tex, 'xy');
  };
  Filter$Companion.prototype.get_fragmentCoords_mw8vo7$ = function ($receiver) {
    return $receiver.times_2oogdr$(this.get_fragmentCoords01_mw8vo7$($receiver), this.u_TextureSize);
  };
  Filter$Companion.prototype.tex_wu6wrd$ = function ($receiver, coords) {
    return $receiver.texture2D_q0hzsk$(korag.DefaultShaders.u_Tex, $receiver.div_2oogdr$(coords, this.u_TextureSize));
  };
  Filter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Filter$Companion_instance = null;
  function Filter$Companion_getInstance() {
    if (Filter$Companion_instance === null) {
      new Filter$Companion();
    }return Filter$Companion_instance;
  }
  Object.defineProperty(Filter.prototype, 'border', {
    get: function () {
      return 0;
    }
  });
  Filter.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Filter',
    interfaces: []
  };
  function IdentityFilter() {
    IdentityFilter_instance = this;
  }
  IdentityFilter.prototype.render_ricsvr$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode) {
    ctx.batch.drawQuad_w9nimi$(texture, void 0, void 0, void 0, void 0, matrix, true, renderColorMul, renderColorAdd, blendMode.factors, void 0, BatchBuilder2D$Companion_getInstance().getTextureLookupProgram_6taknv$(texture.premultiplied));
  };
  IdentityFilter.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'IdentityFilter',
    interfaces: [Filter]
  };
  var IdentityFilter_instance = null;
  function IdentityFilter_getInstance() {
    if (IdentityFilter_instance === null) {
      new IdentityFilter();
    }return IdentityFilter_instance;
  }
  function get_DummyFilter() {
    return IdentityFilter_getInstance();
  }
  function PageFilter(hratio, hamplitude0, hamplitude1, hamplitude2, vratio, vamplitude0, vamplitude1, vamplitude2) {
    PageFilter$Companion_getInstance();
    if (hratio === void 0)
      hratio = 0.5;
    if (hamplitude0 === void 0)
      hamplitude0 = 0.0;
    if (hamplitude1 === void 0)
      hamplitude1 = 10.0;
    if (hamplitude2 === void 0)
      hamplitude2 = 0.0;
    if (vratio === void 0)
      vratio = 0.5;
    if (vamplitude0 === void 0)
      vamplitude0 = 0.0;
    if (vamplitude1 === void 0)
      vamplitude1 = 0.0;
    if (vamplitude2 === void 0)
      vamplitude2 = 0.0;
    ShaderFilter.call(this);
    this.offset_0 = storageFor(this.uniforms, PageFilter$Companion_getInstance().u_Offset);
    this.hamplitude_0 = storageFor(this.uniforms, PageFilter$Companion_getInstance().u_HAmplitude);
    this.vamplitude_0 = storageFor(this.uniforms, PageFilter$Companion_getInstance().u_VAmplitude);
    this.hratio_d8qhkl$_0 = this.offset_0.doubleDelegateX_gjghr5$(hratio);
    this.hamplitude0_am5l5l$_0 = this.hamplitude_0.doubleDelegate_7qp2ad$(0, hamplitude0);
    this.hamplitude1_am5l4q$_0 = this.hamplitude_0.doubleDelegate_7qp2ad$(1, hamplitude1);
    this.hamplitude2_am5l3v$_0 = this.hamplitude_0.doubleDelegate_7qp2ad$(2, hamplitude2);
    this.vratio_5myarn$_0 = this.offset_0.doubleDelegateY_gjghr5$(vratio);
    this.vamplitude0_j9s2xl$_0 = this.vamplitude_0.doubleDelegate_7qp2ad$(0, vamplitude0);
    this.vamplitude1_j9s2yg$_0 = this.vamplitude_0.doubleDelegate_7qp2ad$(1, vamplitude1);
    this.vamplitude2_j9s2zb$_0 = this.vamplitude_0.doubleDelegate_7qp2ad$(2, vamplitude2);
    this.fragment_5ohwrc$_0 = PageFilter$Companion_getInstance().FRAGMENT_SHADER_0;
  }
  function PageFilter$Companion() {
    PageFilter$Companion_instance = this;
    this.u_Offset = Uniform_init('u_Offset', VarType.Float2);
    this.u_HAmplitude = Uniform_init('u_HAmplitude', VarType.Float3);
    this.u_VAmplitude = Uniform_init('u_VAmplitude', VarType.Float3);
    this.FRAGMENT_SHADER_0 = FragmentShader(PageFilter$Companion$FRAGMENT_SHADER$lambda(this));
  }
  PageFilter$Companion.prototype.sin01_0 = function ($receiver, arg) {
    return $receiver.sin_dq1c34$($receiver.times_2oogdr$(arg, $receiver.times_2oogdr$($receiver.get_lit_yrwdxr$(math.PI), $receiver.get_lit_yrwdxr$(0.5))));
  };
  function PageFilter$Companion$FRAGMENT_SHADER$lambda$lambda(closure$vr, closure$offset, closure$tmp, closure$amplitudes, this$PageFilter$) {
    return function ($receiver) {
      var ratio = $receiver.div_2oogdr$($receiver.minus_2oogdr$(closure$vr, closure$offset), $receiver.minus_2oogdr$($receiver.get_lit_yrwdxr$(1.0), closure$offset));
      $receiver.setTo_2oogdr$(closure$tmp, $receiver.mix_qzk4o8$($receiver.get_x14fz$(closure$amplitudes, 2), $receiver.get_x14fz$(closure$amplitudes, 1), this$PageFilter$.sin01_0($receiver, $receiver.plus_2oogdr$($receiver.get_lit_yrwdxr$(1.0), ratio))));
      return Unit;
    };
  }
  function PageFilter$Companion$FRAGMENT_SHADER$lambda(this$PageFilter$) {
    return function ($receiver) {
      for (var n = 0; n <= 1; n++) {
        var vr = $receiver.get_x14fz$(ShaderFilter$Companion_getInstance().get_fragmentCoords01_mw8vo7$($receiver), n);
        var offset = $receiver.get_x14fz$(this$PageFilter$.u_Offset, n);
        var amplitudes = n === 0 ? this$PageFilter$.u_HAmplitude : this$PageFilter$.u_VAmplitude;
        var tmp = $receiver.get_x14fz$(korag.DefaultShaders.t_Temp0, n);
        var cond = $receiver.lt_2oogdr$(vr, offset);
        var body = new Program$Program$Builder_init($receiver.type);
        var this$PageFilter$_0 = this$PageFilter$;
        var ratio = body.div_2oogdr$(body.minus_2oogdr$(vr, body.get_lit_yrwdxr$(0.0)), offset);
        body.setTo_2oogdr$(tmp, body.mix_qzk4o8$(body.get_x14fz$(amplitudes, 0), body.get_x14fz$(amplitudes, 1), this$PageFilter$_0.sin01_0(body, ratio)));
        var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
        $receiver.outputStms.add_11rb$(stmIf);
        $receiver.ELSE_q23b5m$(stmIf, PageFilter$Companion$FRAGMENT_SHADER$lambda$lambda(vr, offset, tmp, amplitudes, this$PageFilter$));
      }
      $receiver.setTo_2oogdr$($receiver.out, ShaderFilter$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.plus_2oogdr$(ShaderFilter$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.get_hhgt4v$(korag.DefaultShaders.t_Temp0, 'yx'))));
      return Unit;
    };
  }
  PageFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var PageFilter$Companion_instance = null;
  function PageFilter$Companion_getInstance() {
    if (PageFilter$Companion_instance === null) {
      new PageFilter$Companion();
    }return PageFilter$Companion_instance;
  }
  var PageFilter$hratio_metadata = new PropertyMetadata('hratio');
  Object.defineProperty(PageFilter.prototype, 'hratio', {
    get: function () {
      return this.hratio_d8qhkl$_0.getValue_t0xcdd$(this, PageFilter$hratio_metadata);
    },
    set: function (hratio) {
      this.hratio_d8qhkl$_0.setValue_zb7g25$(this, PageFilter$hratio_metadata, hratio);
    }
  });
  var PageFilter$hamplitude0_metadata = new PropertyMetadata('hamplitude0');
  Object.defineProperty(PageFilter.prototype, 'hamplitude0', {
    get: function () {
      return this.hamplitude0_am5l5l$_0.getValue_t0xcdd$(this, PageFilter$hamplitude0_metadata);
    },
    set: function (hamplitude0) {
      this.hamplitude0_am5l5l$_0.setValue_zb7g25$(this, PageFilter$hamplitude0_metadata, hamplitude0);
    }
  });
  var PageFilter$hamplitude1_metadata = new PropertyMetadata('hamplitude1');
  Object.defineProperty(PageFilter.prototype, 'hamplitude1', {
    get: function () {
      return this.hamplitude1_am5l4q$_0.getValue_t0xcdd$(this, PageFilter$hamplitude1_metadata);
    },
    set: function (hamplitude1) {
      this.hamplitude1_am5l4q$_0.setValue_zb7g25$(this, PageFilter$hamplitude1_metadata, hamplitude1);
    }
  });
  var PageFilter$hamplitude2_metadata = new PropertyMetadata('hamplitude2');
  Object.defineProperty(PageFilter.prototype, 'hamplitude2', {
    get: function () {
      return this.hamplitude2_am5l3v$_0.getValue_t0xcdd$(this, PageFilter$hamplitude2_metadata);
    },
    set: function (hamplitude2) {
      this.hamplitude2_am5l3v$_0.setValue_zb7g25$(this, PageFilter$hamplitude2_metadata, hamplitude2);
    }
  });
  var PageFilter$vratio_metadata = new PropertyMetadata('vratio');
  Object.defineProperty(PageFilter.prototype, 'vratio', {
    get: function () {
      return this.vratio_5myarn$_0.getValue_t0xcdd$(this, PageFilter$vratio_metadata);
    },
    set: function (vratio) {
      this.vratio_5myarn$_0.setValue_zb7g25$(this, PageFilter$vratio_metadata, vratio);
    }
  });
  var PageFilter$vamplitude0_metadata = new PropertyMetadata('vamplitude0');
  Object.defineProperty(PageFilter.prototype, 'vamplitude0', {
    get: function () {
      return this.vamplitude0_j9s2xl$_0.getValue_t0xcdd$(this, PageFilter$vamplitude0_metadata);
    },
    set: function (vamplitude0) {
      this.vamplitude0_j9s2xl$_0.setValue_zb7g25$(this, PageFilter$vamplitude0_metadata, vamplitude0);
    }
  });
  var PageFilter$vamplitude1_metadata = new PropertyMetadata('vamplitude1');
  Object.defineProperty(PageFilter.prototype, 'vamplitude1', {
    get: function () {
      return this.vamplitude1_j9s2yg$_0.getValue_t0xcdd$(this, PageFilter$vamplitude1_metadata);
    },
    set: function (vamplitude1) {
      this.vamplitude1_j9s2yg$_0.setValue_zb7g25$(this, PageFilter$vamplitude1_metadata, vamplitude1);
    }
  });
  var PageFilter$vamplitude2_metadata = new PropertyMetadata('vamplitude2');
  Object.defineProperty(PageFilter.prototype, 'vamplitude2', {
    get: function () {
      return this.vamplitude2_j9s2zb$_0.getValue_t0xcdd$(this, PageFilter$vamplitude2_metadata);
    },
    set: function (vamplitude2) {
      this.vamplitude2_j9s2zb$_0.setValue_zb7g25$(this, PageFilter$vamplitude2_metadata, vamplitude2);
    }
  });
  Object.defineProperty(PageFilter.prototype, 'border', {
    get: function () {
      var x = this.hamplitude0;
      var tmp$ = Math_0.abs(x);
      var x_0 = this.hamplitude1;
      var b = Math_0.abs(x_0);
      var tmp$_0 = Math_0.max(tmp$, b);
      var x_1 = this.hamplitude2;
      var b_0 = Math_0.abs(x_1);
      return numberToInt(Math_0.max(tmp$_0, b_0));
    }
  });
  Object.defineProperty(PageFilter.prototype, 'fragment', {
    get: function () {
      return this.fragment_5ohwrc$_0;
    }
  });
  PageFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PageFilter',
    interfaces: [ShaderFilter]
  };
  function ShaderFilter() {
    ShaderFilter$Companion_getInstance();
    this.filtering = true;
    this.textureSizeHolder_uuw3qa$_0 = new Float32Array(2);
    this.uniforms = AG$AG$UniformValues_init([to(Filter$Companion_getInstance().u_TextureSize, this.textureSizeHolder_uuw3qa$_0)]);
    this.border_ytwmzi$_0 = 0;
    this.vertex_u4l6fq$_0 = BatchBuilder2D$Companion_getInstance().VERTEX;
    this.fragment_dqqyo2$_0 = Filter$Companion_getInstance().DEFAULT_FRAGMENT;
    this.programPremult_c8rnjz$_g41kmz$_0 = lazy(ShaderFilter$programPremult$lambda(this));
    this.programNormal_79p5s5$_l2o39b$_0 = lazy(ShaderFilter$programNormal$lambda(this));
  }
  function ShaderFilter$Companion() {
    ShaderFilter$Companion_instance = this;
    this.u_TextureSize = Uniform_init('effectTextureSize', VarType.Float2);
    this.DEFAULT_FRAGMENT = BatchBuilder2D$Companion_getInstance().buildTextureLookupFragment_6taknv$(false);
  }
  ShaderFilter$Companion.prototype.get_fragmentCoords01_mw8vo7$ = function ($receiver) {
    return $receiver.get_hhgt4v$(korag.DefaultShaders.v_Tex, 'xy');
  };
  ShaderFilter$Companion.prototype.get_fragmentCoords_mw8vo7$ = function ($receiver) {
    return $receiver.times_2oogdr$(this.get_fragmentCoords01_mw8vo7$($receiver), this.u_TextureSize);
  };
  ShaderFilter$Companion.prototype.tex_wu6wrd$ = function ($receiver, coords) {
    return $receiver.texture2D_q0hzsk$(korag.DefaultShaders.u_Tex, $receiver.div_2oogdr$(coords, this.u_TextureSize));
  };
  function ShaderFilter$Companion$createProgram$lambda(closure$premultiplied) {
    return function ($receiver) {
      if (closure$premultiplied) {
        $receiver.setTo_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'rgb'), $receiver.div_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'rgb'), $receiver.get_hhgt4v$($receiver.out, 'a')));
      }$receiver.setTo_2oogdr$($receiver.out, $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.out, BatchBuilder2D$Companion_getInstance().v_ColMul), $receiver.times_2oogdr$($receiver.minus_2oogdr$(BatchBuilder2D$Companion_getInstance().v_ColAdd, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5)])), $receiver.get_lit_81szk$(2.0))));
      if (closure$premultiplied) {
        var cond = $receiver.le_2oogdr$($receiver.get_hhgt4v$($receiver.out, 'a'), $receiver.get_lit_81szk$(0.0));
        var body = new Program$Program$Builder_init($receiver.type);
        body.DISCARD();
        var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
        $receiver.outputStms.add_11rb$(stmIf);
      }return Unit;
    };
  }
  ShaderFilter$Companion.prototype.createProgram_0 = function (vertex, fragment, premultiplied) {
    return new Program(vertex, appending(fragment, ShaderFilter$Companion$createProgram$lambda(premultiplied)));
  };
  ShaderFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ShaderFilter$Companion_instance = null;
  function ShaderFilter$Companion_getInstance() {
    if (ShaderFilter$Companion_instance === null) {
      new ShaderFilter$Companion();
    }return ShaderFilter$Companion_instance;
  }
  Object.defineProperty(ShaderFilter.prototype, 'border', {
    get: function () {
      return this.border_ytwmzi$_0;
    }
  });
  Object.defineProperty(ShaderFilter.prototype, 'vertex', {
    get: function () {
      return this.vertex_u4l6fq$_0;
    }
  });
  Object.defineProperty(ShaderFilter.prototype, 'fragment', {
    get: function () {
      return this.fragment_dqqyo2$_0;
    }
  });
  Object.defineProperty(ShaderFilter.prototype, 'programPremult_c8rnjz$_0', {
    get: function () {
      return this.programPremult_c8rnjz$_g41kmz$_0.value;
    }
  });
  Object.defineProperty(ShaderFilter.prototype, 'programNormal_79p5s5$_0', {
    get: function () {
      return this.programNormal_79p5s5$_l2o39b$_0.value;
    }
  });
  ShaderFilter.prototype.updateUniforms = function () {
  };
  ShaderFilter.prototype.render_ricsvr$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode) {
    this.textureSizeHolder_uuw3qa$_0[0] = texture.base.width;
    this.textureSizeHolder_uuw3qa$_0[1] = texture.base.height;
    this.updateUniforms();
    var $this = ctx.batch;
    var uniforms = this.uniforms;
    $this.flush();
    $this.tempOldUniforms.setTo_huk8u$($this.uniforms);
    $this.uniforms.put_huk8u$(uniforms);
    try {
      ctx.batch.drawQuad_w9nimi$(texture, void 0, void 0, void 0, void 0, matrix, this.filtering, renderColorMul, renderColorAdd, blendMode.factors, void 0, texture.premultiplied ? this.programPremult_c8rnjz$_0 : this.programNormal_79p5s5$_0);
    }finally {
      $this.flush();
      $this.uniforms.setTo_huk8u$($this.tempOldUniforms);
    }
  };
  function ShaderFilter$programPremult$lambda(this$ShaderFilter) {
    return function () {
      return ShaderFilter$Companion_getInstance().createProgram_0(this$ShaderFilter.vertex, this$ShaderFilter.fragment, true);
    };
  }
  function ShaderFilter$programNormal$lambda(this$ShaderFilter) {
    return function () {
      return ShaderFilter$Companion_getInstance().createProgram_0(this$ShaderFilter.vertex, this$ShaderFilter.fragment, false);
    };
  }
  ShaderFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShaderFilter',
    interfaces: [Filter]
  };
  function SwizzleColorsFilter(initialSwizzle) {
    if (initialSwizzle === void 0)
      initialSwizzle = 'rgba';
    this.proxy_0 = new SwizzleColorsFilter$ProxySwizzle(initialSwizzle);
    this.swizzle_tmud8p$_0 = initialSwizzle;
  }
  function SwizzleColorsFilter$ProxySwizzle(swizzle) {
    if (swizzle === void 0)
      swizzle = 'rgba';
    ShaderFilter.call(this);
    this.swizzle = swizzle;
    this.fragment_x25mjr$_0 = appending(Filter$Companion_getInstance().DEFAULT_FRAGMENT, SwizzleColorsFilter$ProxySwizzle$fragment$lambda(this));
  }
  Object.defineProperty(SwizzleColorsFilter$ProxySwizzle.prototype, 'fragment', {
    get: function () {
      return this.fragment_x25mjr$_0;
    }
  });
  function SwizzleColorsFilter$ProxySwizzle$fragment$lambda(this$ProxySwizzle) {
    return function ($receiver) {
      $receiver.setTo_2oogdr$($receiver.out, $receiver.get_hhgt4v$($receiver.out, this$ProxySwizzle.swizzle));
      return Unit;
    };
  }
  SwizzleColorsFilter$ProxySwizzle.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProxySwizzle',
    interfaces: [ShaderFilter]
  };
  Object.defineProperty(SwizzleColorsFilter.prototype, 'swizzle', {
    get: function () {
      return this.swizzle_tmud8p$_0;
    },
    set: function (value) {
      this.swizzle_tmud8p$_0 = value;
      this.proxy_0 = new SwizzleColorsFilter$ProxySwizzle(value);
    }
  });
  SwizzleColorsFilter.prototype.render_ricsvr$ = function (ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode) {
    this.proxy_0.render_ricsvr$(ctx, matrix, texture, texWidth, texHeight, renderColorAdd, renderColorMul, blendMode);
  };
  SwizzleColorsFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SwizzleColorsFilter',
    interfaces: [Filter]
  };
  function WaveFilter(amplitudeX, amplitudeY, crestCountX, crestCountY, cyclesPerSecondX, cyclesPerSecondY, time) {
    WaveFilter$Companion_getInstance();
    if (amplitudeX === void 0)
      amplitudeX = 10;
    if (amplitudeY === void 0)
      amplitudeY = 10;
    if (crestCountX === void 0)
      crestCountX = 2.0;
    if (crestCountY === void 0)
      crestCountY = 2.0;
    if (cyclesPerSecondX === void 0)
      cyclesPerSecondX = 1.0;
    if (cyclesPerSecondY === void 0)
      cyclesPerSecondY = 1.0;
    if (time === void 0) {
      time = TimeSpan.Companion.fromSeconds_14dthe$(0);
    }ShaderFilter.call(this);
    this.amplitude_0 = storageFor(this.uniforms, WaveFilter$Companion_getInstance().u_Amplitude);
    this.crestCount_0 = storageFor(this.uniforms, WaveFilter$Companion_getInstance().u_crestCount);
    this.cyclesPerSecond_0 = storageFor(this.uniforms, WaveFilter$Companion_getInstance().u_cyclesPerSecond);
    this.amplitudeX_kn4643$_0 = this.amplitude_0.intDelegateX_8b5ljp$(amplitudeX);
    this.amplitudeY_kn4638$_0 = this.amplitude_0.intDelegateY_8b5ljp$(amplitudeY);
    this.crestCountX_cv5gxa$_0 = this.crestCount_0.doubleDelegateX_gjghr5$(crestCountX);
    this.crestCountY_cv5gwf$_0 = this.crestCount_0.doubleDelegateY_gjghr5$(crestCountY);
    this.cyclesPerSecondX_hr1awe$_0 = this.cyclesPerSecond_0.doubleDelegateX_gjghr5$(cyclesPerSecondX);
    this.cyclesPerSecondY_hr1ax9$_0 = this.cyclesPerSecond_0.doubleDelegateY_gjghr5$(cyclesPerSecondY);
    this.timeSeconds_cecahs$_0 = storageFor(this.uniforms, WaveFilter$Companion_getInstance().u_Time).doubleDelegateX_gjghr5$(time.seconds);
    this.fragment_g8c5ny$_0 = WaveFilter$Companion_getInstance().FRAGMENT_SHADER_0;
  }
  function WaveFilter$Companion() {
    WaveFilter$Companion_instance = this;
    this.u_Time = Uniform_init('time', VarType.Float1);
    this.u_Amplitude = Uniform_init('amplitude', VarType.Float2);
    this.u_crestCount = Uniform_init('crestCount', VarType.Float2);
    this.u_cyclesPerSecond = Uniform_init('cyclesPerSecond', VarType.Float2);
    this.FRAGMENT_SHADER_0 = FragmentShader(WaveFilter$Companion$FRAGMENT_SHADER$lambda(this));
  }
  function WaveFilter$Companion$FRAGMENT_SHADER$lambda(this$WaveFilter$) {
    return function ($receiver) {
      var this$WaveFilter$_0 = this$WaveFilter$;
      var tmpx = $receiver.get_x_rix7j$(korag.DefaultShaders.t_Temp0);
      var tmpy = $receiver.get_y_rix7j$(korag.DefaultShaders.t_Temp0);
      $receiver.setTo_2oogdr$(tmpx, $receiver.sin_dq1c34$($receiver.times_2oogdr$($receiver.get_lit_yrwdxr$(math.PI), $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.get_x_rix7j$(ShaderFilter$Companion_getInstance().get_fragmentCoords01_mw8vo7$($receiver)), $receiver.get_x_rix7j$(this$WaveFilter$_0.u_crestCount)), $receiver.times_2oogdr$(this$WaveFilter$_0.u_Time, $receiver.get_x_rix7j$(this$WaveFilter$_0.u_cyclesPerSecond))))));
      $receiver.setTo_2oogdr$(tmpy, $receiver.sin_dq1c34$($receiver.times_2oogdr$($receiver.get_lit_yrwdxr$(math.PI), $receiver.plus_2oogdr$($receiver.times_2oogdr$($receiver.get_y_rix7j$(ShaderFilter$Companion_getInstance().get_fragmentCoords01_mw8vo7$($receiver)), $receiver.get_y_rix7j$(this$WaveFilter$_0.u_crestCount)), $receiver.times_2oogdr$(this$WaveFilter$_0.u_Time, $receiver.get_y_rix7j$(this$WaveFilter$_0.u_cyclesPerSecond))))));
      $receiver.setTo_2oogdr$($receiver.out, ShaderFilter$Companion_getInstance().tex_wu6wrd$($receiver, $receiver.minus_2oogdr$(ShaderFilter$Companion_getInstance().get_fragmentCoords_mw8vo7$($receiver), $receiver.vec2_hywno3$([$receiver.times_2oogdr$(tmpy, $receiver.get_x_rix7j$(this$WaveFilter$_0.u_Amplitude)), $receiver.times_2oogdr$(tmpx, $receiver.get_y_rix7j$(this$WaveFilter$_0.u_Amplitude))]))));
      return Unit;
    };
  }
  WaveFilter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var WaveFilter$Companion_instance = null;
  function WaveFilter$Companion_getInstance() {
    if (WaveFilter$Companion_instance === null) {
      new WaveFilter$Companion();
    }return WaveFilter$Companion_instance;
  }
  var WaveFilter$amplitudeX_metadata = new PropertyMetadata('amplitudeX');
  Object.defineProperty(WaveFilter.prototype, 'amplitudeX', {
    get: function () {
      return this.amplitudeX_kn4643$_0.getValue_t0xcdd$(this, WaveFilter$amplitudeX_metadata);
    },
    set: function (amplitudeX) {
      this.amplitudeX_kn4643$_0.setValue_imo3cj$(this, WaveFilter$amplitudeX_metadata, amplitudeX);
    }
  });
  var WaveFilter$amplitudeY_metadata = new PropertyMetadata('amplitudeY');
  Object.defineProperty(WaveFilter.prototype, 'amplitudeY', {
    get: function () {
      return this.amplitudeY_kn4638$_0.getValue_t0xcdd$(this, WaveFilter$amplitudeY_metadata);
    },
    set: function (amplitudeY) {
      this.amplitudeY_kn4638$_0.setValue_imo3cj$(this, WaveFilter$amplitudeY_metadata, amplitudeY);
    }
  });
  var WaveFilter$crestCountX_metadata = new PropertyMetadata('crestCountX');
  Object.defineProperty(WaveFilter.prototype, 'crestCountX', {
    get: function () {
      return this.crestCountX_cv5gxa$_0.getValue_t0xcdd$(this, WaveFilter$crestCountX_metadata);
    },
    set: function (crestCountX) {
      this.crestCountX_cv5gxa$_0.setValue_zb7g25$(this, WaveFilter$crestCountX_metadata, crestCountX);
    }
  });
  var WaveFilter$crestCountY_metadata = new PropertyMetadata('crestCountY');
  Object.defineProperty(WaveFilter.prototype, 'crestCountY', {
    get: function () {
      return this.crestCountY_cv5gwf$_0.getValue_t0xcdd$(this, WaveFilter$crestCountY_metadata);
    },
    set: function (crestCountY) {
      this.crestCountY_cv5gwf$_0.setValue_zb7g25$(this, WaveFilter$crestCountY_metadata, crestCountY);
    }
  });
  var WaveFilter$cyclesPerSecondX_metadata = new PropertyMetadata('cyclesPerSecondX');
  Object.defineProperty(WaveFilter.prototype, 'cyclesPerSecondX', {
    get: function () {
      return this.cyclesPerSecondX_hr1awe$_0.getValue_t0xcdd$(this, WaveFilter$cyclesPerSecondX_metadata);
    },
    set: function (cyclesPerSecondX) {
      this.cyclesPerSecondX_hr1awe$_0.setValue_zb7g25$(this, WaveFilter$cyclesPerSecondX_metadata, cyclesPerSecondX);
    }
  });
  var WaveFilter$cyclesPerSecondY_metadata = new PropertyMetadata('cyclesPerSecondY');
  Object.defineProperty(WaveFilter.prototype, 'cyclesPerSecondY', {
    get: function () {
      return this.cyclesPerSecondY_hr1ax9$_0.getValue_t0xcdd$(this, WaveFilter$cyclesPerSecondY_metadata);
    },
    set: function (cyclesPerSecondY) {
      this.cyclesPerSecondY_hr1ax9$_0.setValue_zb7g25$(this, WaveFilter$cyclesPerSecondY_metadata, cyclesPerSecondY);
    }
  });
  var WaveFilter$timeSeconds_metadata = new PropertyMetadata('timeSeconds');
  Object.defineProperty(WaveFilter.prototype, 'timeSeconds', {
    get: function () {
      return this.timeSeconds_cecahs$_0.getValue_t0xcdd$(this, WaveFilter$timeSeconds_metadata);
    },
    set: function (timeSeconds) {
      this.timeSeconds_cecahs$_0.setValue_zb7g25$(this, WaveFilter$timeSeconds_metadata, timeSeconds);
    }
  });
  Object.defineProperty(WaveFilter.prototype, 'time', {
    get: function () {
      var $receiver = this.timeSeconds;
      return TimeSpan.Companion.fromSeconds_14dthe$($receiver);
    },
    set: function (value) {
      this.timeSeconds = value.seconds;
    }
  });
  Object.defineProperty(WaveFilter.prototype, 'border', {
    get: function () {
      var a = this.amplitudeX;
      var b = this.amplitudeY;
      return Math_0.max(a, b);
    }
  });
  Object.defineProperty(WaveFilter.prototype, 'fragment', {
    get: function () {
      return this.fragment_g8c5ny$_0;
    }
  });
  WaveFilter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WaveFilter',
    interfaces: [ShaderFilter]
  };
  var tileMap = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.tiles.tileMap_n9xbc2$', wrapFunction(function () {
    var TileMap$Repeat = _.com.soywiz.korge.view.tiles.TileMap.Repeat;
    var Unit = Kotlin.kotlin.Unit;
    var TileMap_init = _.com.soywiz.korge.view.tiles.TileMap;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    var repeat = _.com.soywiz.korge.view.tiles.repeat_i0bign$;
    function tileMap$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, map, tileset, repeatX, repeatY, callback) {
      if (repeatX === void 0)
        repeatX = TileMap$Repeat.NONE;
      if (repeatY === void 0)
        repeatY = repeatX;
      if (callback === void 0)
        callback = tileMap$lambda;
      var $receiver_0 = repeat(addTo(new TileMap_init(map, tileset), $receiver), repeatX, repeatY);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  var tileMap_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.tiles.tileMap_t4lmgv$', wrapFunction(function () {
    var TileMap$Repeat = _.com.soywiz.korge.view.tiles.TileMap.Repeat;
    var Unit = Kotlin.kotlin.Unit;
    var toIntArray2 = _.com.soywiz.korge.util.toIntArray2_leuab8$;
    var TileMap_init = _.com.soywiz.korge.view.tiles.TileMap;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    var repeat = _.com.soywiz.korge.view.tiles.repeat_i0bign$;
    function tileMap$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, map, tileset, repeatX, repeatY, callback) {
      if (repeatX === void 0)
        repeatX = TileMap$Repeat.NONE;
      if (repeatY === void 0)
        repeatY = repeatX;
      if (callback === void 0)
        callback = tileMap$lambda;
      var $receiver_0 = repeat(addTo(new TileMap_init(toIntArray2(map), tileset), $receiver), repeatX, repeatY);
      callback($receiver_0);
      return $receiver_0;
    };
  }));
  function TileMap(intMap, tileset) {
    TileMap$Companion_getInstance();
    View_init(this);
    this.intMap = intMap;
    this.tileset = tileset;
    this._map = new Bitmap32(this.intMap.width, this.intMap.height, new RgbaArray(this.intMap.data));
    this.tileWidth = this.tileset.width;
    this.tileHeight = this.tileset.height;
    this.smoothing = true;
    this.repeatX = TileMap$Repeat$NONE_getInstance();
    this.repeatY = TileMap$Repeat$NONE_getInstance();
    this.t0_wzivzw$_0 = new Point(0, 0);
    this.tt0_s5ne0s$_0 = new Point(0, 0);
    this.tt1_s5ndzx$_0 = new Point(0, 0);
    this.cachedContentVersion_bjqarj$_0 = 0;
    this.verticesPerTex_56stj7$_0 = FastIdentityMap();
    this.infos_1b9coh$_0 = ArrayList_init_1();
    this.infosPool_ge6unh$_0 = Pool_init(void 0, TileMap$infosPool$lambda);
    this.lastVirtualRect_w4fsaj$_0 = new Rectangle(-1, -1, -1, -1);
    this.currentVirtualRect_eyqno6$_0 = new Rectangle(-1, -1, -1, -1);
  }
  Object.defineProperty(TileMap.prototype, 'map', {
    get: function () {
      return this._map;
    }
  });
  function TileMap$Repeat(name, ordinal, get) {
    Enum.call(this);
    this.get = get;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function TileMap$Repeat_initFields() {
    TileMap$Repeat_initFields = function () {
    };
    TileMap$Repeat$NONE_instance = new TileMap$Repeat('NONE', 0, TileMap$Repeat$TileMap$Repeat$NONE_init$lambda);
    TileMap$Repeat$REPEAT_instance = new TileMap$Repeat('REPEAT', 1, TileMap$Repeat$TileMap$Repeat$REPEAT_init$lambda);
    TileMap$Repeat$MIRROR_instance = new TileMap$Repeat('MIRROR', 2, TileMap$Repeat$TileMap$Repeat$MIRROR_init$lambda);
  }
  function TileMap$Repeat$TileMap$Repeat$NONE_init$lambda(v, max) {
    return v;
  }
  var TileMap$Repeat$NONE_instance;
  function TileMap$Repeat$NONE_getInstance() {
    TileMap$Repeat_initFields();
    return TileMap$Repeat$NONE_instance;
  }
  function TileMap$Repeat$TileMap$Repeat$REPEAT_init$lambda(v, max) {
    return umod(v, max);
  }
  var TileMap$Repeat$REPEAT_instance;
  function TileMap$Repeat$REPEAT_getInstance() {
    TileMap$Repeat_initFields();
    return TileMap$Repeat$REPEAT_instance;
  }
  function TileMap$Repeat$TileMap$Repeat$MIRROR_init$lambda(v, max) {
    var r = umod(v, max);
    return (v / max | 0) % 2 === 0 ? r : max - 1 - r | 0;
  }
  var TileMap$Repeat$MIRROR_instance;
  function TileMap$Repeat$MIRROR_getInstance() {
    TileMap$Repeat_initFields();
    return TileMap$Repeat$MIRROR_instance;
  }
  TileMap$Repeat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Repeat',
    interfaces: [Enum]
  };
  function TileMap$Repeat$values() {
    return [TileMap$Repeat$NONE_getInstance(), TileMap$Repeat$REPEAT_getInstance(), TileMap$Repeat$MIRROR_getInstance()];
  }
  TileMap$Repeat.values = TileMap$Repeat$values;
  function TileMap$Repeat$valueOf(name) {
    switch (name) {
      case 'NONE':
        return TileMap$Repeat$NONE_getInstance();
      case 'REPEAT':
        return TileMap$Repeat$REPEAT_getInstance();
      case 'MIRROR':
        return TileMap$Repeat$MIRROR_getInstance();
      default:throwISE('No enum constant com.soywiz.korge.view.tiles.TileMap.Repeat.' + name);
    }
  }
  TileMap$Repeat.valueOf_61zpoe$ = TileMap$Repeat$valueOf;
  TileMap.prototype.lock = function () {
    this._map.lock();
  };
  TileMap.prototype.unlock = function () {
    return this._map.unlock_2epnwg$();
  };
  TileMap.prototype.lock_o14v8n$ = defineInlineFunction('korge-root-korge.com.soywiz.korge.view.tiles.TileMap.lock_o14v8n$', function (block) {
    var $this = this._map;
    $this.lock();
    try {
      block();
    }finally {
      $this.unlock_2epnwg$(null);
    }
  });
  TileMap.prototype.computeVertexIfRequired_clnvp8$_0 = function (ctx) {
    var tmp$;
    if (!this.dirtyVertices && this.cachedContentVersion_bjqarj$_0 === this._map.contentVersion)
      return;
    this.cachedContentVersion_bjqarj$_0 = this._map.contentVersion;
    this.dirtyVertices = false;
    var m = this.globalMatrix;
    var renderTilesCounter = ctx.stats.counter_61zpoe$('renderedTiles');
    var posX = fastTransformX(m, 0.0, 0.0);
    var posY = fastTransformY(m, 0.0, 0.0);
    var dUX = fastTransformX(m, this.tileWidth, 0.0) - posX;
    var dUY = fastTransformY(m, this.tileWidth, 0.0) - posY;
    var dVX = fastTransformX(m, 0.0, this.tileHeight) - posX;
    var dVY = fastTransformY(m, 0.0, this.tileHeight) - posY;
    var colMul = this.renderColorMul;
    var colAdd = this.renderColorAdd;
    var pp0 = this.globalToLocal_jhva45$(this.t0_wzivzw$_0.setTo_lu1900$(this.currentVirtualRect_eyqno6$_0.left, this.currentVirtualRect_eyqno6$_0.top), this.tt0_s5ne0s$_0);
    var pp1 = this.globalToLocal_jhva45$(this.t0_wzivzw$_0.setTo_lu1900$(this.currentVirtualRect_eyqno6$_0.right, this.currentVirtualRect_eyqno6$_0.bottom), this.tt1_s5ndzx$_0);
    var mx0 = numberToInt(pp0.x / this.tileWidth - 1);
    var mx1 = numberToInt(pp1.x / this.tileWidth + 1);
    var my0 = numberToInt(pp0.y / this.tileHeight - 1);
    var my1 = numberToInt(pp1.y / this.tileHeight + 1);
    var yheight = my1 - my0 | 0;
    var xwidth = mx1 - mx0 | 0;
    var ntiles = Kotlin.imul(xwidth, yheight);
    var allocTiles = get_nextPowerOfTwo(ntiles);
    var $receiver = this.infos_1b9coh$_0;
    var tmp$_0;
    var n = 0;
    while (n < $receiver.size) {
      this.infosPool_ge6unh$_0.free_11rb$($receiver.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0)));
    }
    clear(this.verticesPerTex_56stj7$_0);
    this.infos_1b9coh$_0.clear();
    var count = 0;
    for (var y = my0; y < my1; y++) {
      loop_label: for (var x = mx0; x < mx1; x++) {
        var rx = this.repeatX.get(x, this.intMap.width);
        var ry = this.repeatY.get(y, this.intMap.height);
        if (rx < 0 || rx >= this.intMap.width)
          continue loop_label;
        if (ry < 0 || ry >= this.intMap.height)
          continue loop_label;
        tmp$ = this.tileset.get_za3lpa$(this.intMap.get_vux9f0$(rx, ry));
        if (tmp$ == null) {
          continue loop_label;
        }var tex = tmp$;
        var $receiver_0 = this.verticesPerTex_56stj7$_0;
        var key = tex.bmp;
        var getOrPut$result;
        getOrPut$break: do {
          var res = get_0($receiver_0, key);
          if (res != null) {
            getOrPut$result = res;
            break getOrPut$break;
          }var $receiver_1 = this.infosPool_ge6unh$_0.alloc();
          $receiver_1.tex = tex.bmp;
          if ($receiver_1.vertices.initialVcount < (allocTiles * 4 | 0)) {
            $receiver_1.vertices = new TexturedVertexArray(allocTiles * 4 | 0, TexturedVertexArray$Companion_getInstance().quadIndices_za3lpa$(allocTiles));
          }$receiver_1.vcount = 0;
          $receiver_1.icount = 0;
          this.infos_1b9coh$_0.add_11rb$($receiver_1);
          var out = $receiver_1;
          set($receiver_0, key, out);
          getOrPut$result = out;
        }
         while (false);
        var info = getOrPut$result;
        var tmp$_1, tmp$_2, tmp$_3, tmp$_4;
        var p0X = posX + dUX * x + dVX * y;
        var p0Y = posY + dUY * x + dVY * y;
        var p1X = p0X + dUX;
        var p1Y = p0Y + dUY;
        var p2X = p0X + dUX + dVX;
        var p2Y = p0Y + dUY + dVY;
        var p3X = p0X + dVX;
        var p3Y = p0Y + dVY;
        info.vertices.quadV_24mhcz$((tmp$_1 = info.vcount, info.vcount = tmp$_1 + 1 | 0, tmp$_1), p0X, p0Y, tex.tl_x, tex.tl_y, colMul, colAdd);
        info.vertices.quadV_24mhcz$((tmp$_2 = info.vcount, info.vcount = tmp$_2 + 1 | 0, tmp$_2), p1X, p1Y, tex.tr_x, tex.tr_y, colMul, colAdd);
        info.vertices.quadV_24mhcz$((tmp$_3 = info.vcount, info.vcount = tmp$_3 + 1 | 0, tmp$_3), p2X, p2Y, tex.br_x, tex.br_y, colMul, colAdd);
        info.vertices.quadV_24mhcz$((tmp$_4 = info.vcount, info.vcount = tmp$_4 + 1 | 0, tmp$_4), p3X, p3Y, tex.bl_x, tex.bl_y, colMul, colAdd);
        info.icount = info.icount + 6 | 0;
        count = count + 1 | 0;
      }
    }
    renderTilesCounter != null ? (renderTilesCounter.increment_za3lpa$(count), Unit) : null;
  };
  function TileMap$Info(tex, vertices) {
    this.tex = tex;
    this.vertices = vertices;
    this.vcount = 0;
    this.icount = 0;
  }
  TileMap$Info.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Info',
    interfaces: []
  };
  function TileMap$Companion() {
    TileMap$Companion_instance = this;
    this.dummyTexturedVertexArray_0 = new TexturedVertexArray(0, new Int32Array(0));
  }
  TileMap$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TileMap$Companion_instance = null;
  function TileMap$Companion_getInstance() {
    if (TileMap$Companion_instance === null) {
      new TileMap$Companion();
    }return TileMap$Companion_instance;
  }
  TileMap.prototype.renderInternal_8isv09$ = function (ctx) {
    var tmp$;
    if (!this.visible)
      return;
    this.currentVirtualRect_eyqno6$_0.setBounds_6y0v78$(ctx.virtualLeft, ctx.virtualTop, ctx.virtualRight, ctx.virtualBottom);
    if (!((tmp$ = this.currentVirtualRect_eyqno6$_0) != null ? tmp$.equals(this.lastVirtualRect_w4fsaj$_0) : null)) {
      this.dirtyVertices = true;
      this.lastVirtualRect_w4fsaj$_0.copyFrom_2da8yn$(this.currentVirtualRect_eyqno6$_0);
    }this.computeVertexIfRequired_clnvp8$_0(ctx);
    var $receiver = this.infos_1b9coh$_0;
    var tmp$_0;
    var n = 0;
    while (n < $receiver.size) {
      var buffer = $receiver.get_za3lpa$((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0));
      ctx.batch.drawVertices_8go32q$(buffer.vertices, ctx.getTex_uler2c$(buffer.tex), this.smoothing, this.renderBlendMode.factors, buffer.vcount, buffer.icount);
    }
    ctx.flush();
  };
  TileMap.prototype.getLocalBoundsInternal_2da8yn$$default = function (out) {
    var width = this.tileWidth * this.intMap.width;
    var height = this.tileHeight * this.intMap.height;
    out.setTo_6y0v78$(numberToDouble(0), numberToDouble(0), numberToDouble(width), numberToDouble(height));
  };
  function TileMap$infosPool$lambda(it) {
    return new TileMap$Info(bitmap.Bitmaps.transparent.bmp, TileMap$Companion_getInstance().dummyTexturedVertexArray_0);
  }
  TileMap.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TileMap',
    interfaces: [View]
  };
  function TileMap_init(map, tileset, $this) {
    $this = $this || Object.create(TileMap.prototype);
    TileMap.call($this, toIntArray2(map), tileset);
    return $this;
  }
  function repeat($receiver, repeatX, repeatY) {
    if (repeatY === void 0)
      repeatY = repeatX;
    $receiver.repeatX = repeatX;
    $receiver.repeatY = repeatY;
    return $receiver;
  }
  function TileSet(textures, width, height, base) {
    TileSet$Companion_getInstance();
    var tmp$, tmp$_0;
    if (base === void 0)
      base = (tmp$_0 = (tmp$ = firstOrNull_0(filterNotNull(textures))) != null ? tmp$.bmp : null) != null ? tmp$_0 : bitmap.Bitmaps.transparent.bmp;
    this.textures = textures;
    this.width = width;
    this.height = height;
    this.base = base;
    var $receiver = this.textures;
    var any$result;
    any$break: do {
      var tmp$_1;
      if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
        any$result = false;
        break any$break;
      }tmp$_1 = $receiver.iterator();
      while (tmp$_1.hasNext()) {
        var element = tmp$_1.next();
        if (element != null && !equals(element.bmp, this.base)) {
          any$result = true;
          break any$break;
        }}
      any$result = false;
    }
     while (false);
    this.hasMultipleBaseBitmaps = any$result;
  }
  TileSet.prototype.get_za3lpa$ = function (index) {
    return getOrNull(this.textures, index);
  };
  function TileSet$Companion() {
    TileSet$Companion_instance = this;
  }
  TileSet$Companion.prototype.invoke_gx7gyo$ = function (textureMap) {
    var tmp$, tmp$_0;
    var maxKey = (tmp$ = max(textureMap.keys)) != null ? tmp$ : 0;
    var $receiver = new IntRange(0, maxKey);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(textureMap.get_11rb$(item));
    }
    var textures = destination;
    var firstTexture = (tmp$_0 = first_0(textures)) != null ? tmp$_0 : bitmap.Bitmaps.transparent;
    return new TileSet(textures, firstTexture.width, firstTexture.height, firstTexture.bmp);
  };
  TileSet$Companion.prototype.invoke_le1w3n$ = function (base, tileWidth, tileHeight, columns, totalTiles) {
    if (columns === void 0)
      columns = -1;
    if (totalTiles === void 0)
      totalTiles = -1;
    var out = ArrayList_init_1();
    var rows = base.height / tileHeight | 0;
    var actualColumns = columns < 0 ? base.width / tileWidth | 0 : columns;
    var actualTotalTiles = totalTiles < 0 ? Kotlin.imul(rows, actualColumns) : totalTiles;
    complete: for (var y = 0; y < rows; y++) {
      for (var x = 0; x < actualColumns; x++) {
        var element = base.sliceWithSize_tjonv8$(Kotlin.imul(x, tileWidth), Kotlin.imul(y, tileHeight), tileWidth, tileHeight);
        out.add_11rb$(element);
        if (out.size >= actualTotalTiles)
          break complete;
      }
    }
    return new TileSet(out, tileWidth, tileHeight);
  };
  TileSet$Companion.prototype.extractBmpSlices_jiywit$ = function (bmp, tilewidth, tileheight, columns, tilecount, spacing, margin) {
    var $receiver = ArrayList_init_1();
    var tmp$;
    tmp$ = bmp.height / tileheight | 0;
    loop: for (var y = 0; y < tmp$; y++) {
      for (var x = 0; x < columns; x++) {
        $receiver.add_11rb$(sliceWithSize(bmp, margin + Kotlin.imul(x, tilewidth + spacing | 0) | 0, margin + Kotlin.imul(y, tileheight + spacing | 0) | 0, tilewidth, tileheight));
        if ($receiver.size >= tilecount)
          break loop;
      }
    }
    return $receiver;
  };
  TileSet$Companion.prototype.extractBitmaps_jiywit$ = function (bmp, tilewidth, tileheight, columns, tilecount, spacing, margin) {
    var $receiver = this.extractBmpSlices_jiywit$(bmp, tilewidth, tileheight, columns, tilecount, spacing, margin);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(item.extract());
    }
    return destination;
  };
  TileSet$Companion.prototype.fromBitmaps_m8cj3d$ = function (tilewidth, tileheight, bitmaps, border, mipmaps_0) {
    if (border === void 0)
      border = 1;
    if (mipmaps_0 === void 0)
      mipmaps_0 = false;
    var tmp$;
    var all$result;
    all$break: do {
      var tmp$_0;
      if (Kotlin.isType(bitmaps, Collection) && bitmaps.isEmpty()) {
        all$result = true;
        break all$break;
      }tmp$_0 = bitmaps.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (!(element.width === tilewidth && element.height === tileheight)) {
          all$result = false;
          break all$break;
        }}
      all$result = true;
    }
     while (false);
    if (!all$result) {
      var message = 'Check failed.';
      throw IllegalStateException_init_0(message.toString());
    }if (bitmaps.isEmpty()) {
      return new TileSet(emptyList(), tilewidth, tileheight);
    }var border2 = border * 2 | 0;
    var btilewidth = tilewidth + border2 | 0;
    var btileheight = tileheight + border2 | 0;
    var barea = Kotlin.imul(btilewidth, btileheight);
    var fullArea = Kotlin.imul(get_nextPowerOfTwo(bitmaps.size), barea);
    var expectedSide = get_nextPowerOfTwo(toIntCeil(Math_0.sqrt(fullArea)));
    var out = mipmaps(new Bitmap32(expectedSide, expectedSide), mipmaps_0);
    var texs = ArrayList_init_1();
    var columns = out.width / btilewidth | 0;
    var tex;
    for (var m = 0; m < 2; m++) {
      tmp$ = bitmaps.size;
      for (var n = 0; n < tmp$; n++) {
        var y = n / columns | 0;
        var x = n % columns;
        var px = Kotlin.imul(x, btilewidth) + border | 0;
        var py = Kotlin.imul(y, btileheight) + border | 0;
        if (m === 0) {
          putWithBorder(out, px, py, bitmaps.get_za3lpa$(n), border);
        } else {
          var element_0 = sliceWithSize(tex == null ? throwUPAE('tex') : tex, px, py, tilewidth, tileheight);
          texs.add_11rb$(element_0);
        }
      }
      if (m === 0) {
        tex = out;
      }}
    return new TileSet(texs, tilewidth, tileheight, tex == null ? throwUPAE('tex') : tex);
  };
  TileSet$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TileSet$Companion_instance = null;
  function TileSet$Companion_getInstance() {
    if (TileSet$Companion_instance === null) {
      new TileSet$Companion();
    }return TileSet$Companion_instance;
  }
  TileSet.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TileSet',
    interfaces: []
  };
  function Camera3D() {
    View3D.call(this);
    this.projMat_98gxeg$_0 = new Matrix3D();
    this.width_bd6uth$_0 = 0.0;
    this.height_boxlxa$_0 = 0.0;
    this.dirty = true;
  }
  Camera3D.prototype.dirty_4dnyui$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Camera3D.dirty_4dnyui$', wrapFunction(function () {
    function Camera3D$dirty$lambda() {
      return true;
    }
    return function (cond, callback) {
      if (cond === void 0)
        cond = Camera3D$dirty$lambda;
      if (cond()) {
        this.dirty = true;
        callback();
      }};
  }));
  Camera3D.prototype.getProjMatrix_lu1900$ = function (width, height) {
    if (this.width_bd6uth$_0 !== width || this.height_boxlxa$_0 !== height) {
      this.dirty = true;
      this.width_bd6uth$_0 = width;
      this.height_boxlxa$_0 = height;
    }if (this.dirty) {
      this.dirty = false;
      this.updateMatrix_cd09cq$(this.projMat_98gxeg$_0, this.width_bd6uth$_0, this.height_boxlxa$_0);
    }return this.projMat_98gxeg$_0;
  };
  Camera3D.prototype.render_uzyfj7$ = function (ctx) {
  };
  function Camera3D$Perspective(fov, near, far) {
    if (fov === void 0)
      fov = get_degrees_1(60);
    if (near === void 0)
      near = 0.3;
    if (far === void 0)
      far = 1000.0;
    Camera3D.call(this);
    this.fov_v3i75c$_0 = fov;
    this.near_uap1dd$_0 = near;
    this.far_v3hwo6$_0 = far;
  }
  Object.defineProperty(Camera3D$Perspective.prototype, 'fov', {
    get: function () {
      return this.fov_v3i75c$_0;
    },
    set: function (value) {
      var tmp$;
      if (!((tmp$ = this.fov_v3i75c$_0) != null ? tmp$.equals(value) : null)) {
        this.dirty = true;
        this.fov_v3i75c$_0 = value;
      }}
  });
  Object.defineProperty(Camera3D$Perspective.prototype, 'near', {
    get: function () {
      return this.near_uap1dd$_0;
    },
    set: function (value) {
      if (this.near_uap1dd$_0 !== value) {
        this.dirty = true;
        this.near_uap1dd$_0 = value;
      }}
  });
  Object.defineProperty(Camera3D$Perspective.prototype, 'far', {
    get: function () {
      return this.far_v3hwo6$_0;
    },
    set: function (value) {
      if (this.far_v3hwo6$_0 !== value) {
        this.dirty = true;
        this.far_v3hwo6$_0 = value;
      }}
  });
  Camera3D$Perspective.prototype.set_g0149z$ = function (fov, near, far) {
    if (fov === void 0)
      fov = this.fov;
    if (near === void 0)
      near = this.near;
    if (far === void 0)
      far = this.far;
    this.fov = fov;
    this.near = near;
    this.far = far;
    return this;
  };
  Camera3D$Perspective.prototype.updateMatrix_cd09cq$ = function (mat, width, height) {
    mat.setToPerspective_gwtwuf$(this.fov, height !== 0.0 ? width / height : 1.0, this.near, this.far);
  };
  Camera3D$Perspective.prototype.clone = function () {
    var $receiver = new Camera3D$Perspective(this.fov, this.near, this.far);
    $receiver.transform.copyFrom_opirrq$(this.transform);
    return $receiver;
  };
  Camera3D$Perspective.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Perspective',
    interfaces: [Camera3D]
  };
  Camera3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Camera3D',
    interfaces: [View3D]
  };
  function Container3D() {
    View3D.call(this);
    this.children = ArrayList_init_1();
  }
  Container3D.prototype.removeChild_ltgqv1$ = function (child) {
    this.children.remove_11rb$(child);
  };
  Container3D.prototype.addChild_ltgqv1$ = function (child) {
    removeFromParent(child);
    this.children.add_11rb$(child);
    child._parent_8be2vx$ = this;
    child.transform.parent = this.transform;
  };
  Container3D.prototype.plusAssign_ltgqv1$ = function (child) {
    this.addChild_ltgqv1$(child);
  };
  Container3D.prototype.render_uzyfj7$ = function (ctx) {
    var $receiver = this.children;
    var tmp$;
    var n = 0;
    while (n < $receiver.size) {
      $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)).render_uzyfj7$(ctx);
    }
  };
  Container3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Container3D',
    interfaces: [View3D]
  };
  function Korge3DExperimental() {
  }
  Korge3DExperimental.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Korge3DExperimental',
    interfaces: [Annotation]
  };
  function Library3D(cameraDefs, lightDefs, materialDefs, effectDefs, imageDefs, geometryDefs, skinDefs, animationDefs) {
    if (cameraDefs === void 0)
      cameraDefs = FastStringMap();
    if (lightDefs === void 0)
      lightDefs = FastStringMap();
    if (materialDefs === void 0)
      materialDefs = FastStringMap();
    if (effectDefs === void 0)
      effectDefs = FastStringMap();
    if (imageDefs === void 0)
      imageDefs = FastStringMap();
    if (geometryDefs === void 0)
      geometryDefs = FastStringMap();
    if (skinDefs === void 0)
      skinDefs = FastStringMap();
    if (animationDefs === void 0)
      animationDefs = FastStringMap();
    this.cameraDefs = cameraDefs;
    this.lightDefs = lightDefs;
    this.materialDefs = materialDefs;
    this.effectDefs = effectDefs;
    this.imageDefs = imageDefs;
    this.geometryDefs = geometryDefs;
    this.skinDefs = skinDefs;
    this.animationDefs = animationDefs;
    this.boneDefs = FastStringMap();
    this.library = this;
    var $receiver = new Library3D$Scene3D(this);
    $receiver.id = 'MainScene';
    $receiver.name = 'MainScene';
    this.mainScene = $receiver;
    this.scenes = FastStringMap();
  }
  function Coroutine$loadTextures($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$mapIterator = void 0;
    this.local$v = void 0;
    this.local$image = void 0;
  }
  Coroutine$loadTextures.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadTextures.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadTextures.prototype.constructor = Coroutine$loadTextures;
  Coroutine$loadTextures.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = this.$this.imageDefs;
            this.local$mapIterator = this.local$$receiver.keys();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$v = this.local$mapIterator.next();
            if (this.local$v.done) {
              this.state_0 = 5;
              continue;
            } else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.local$image = ensureNotNull(this.local$$receiver.get(this.local$v.value));
            this.state_0 = 4;
            this.result_0 = readBitmap(std.resourcesVfs.get_61zpoe$(this.local$image.initFrom), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$image.texure = this.result_0;
            this.state_0 = 2;
            continue;
          case 5:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Library3D.prototype.loadTextures = function (continuation_0, suspended) {
    var instance = new Coroutine$loadTextures(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  Library3D.prototype.instantiateMaterials = function () {
    var $receiver = this.geometryDefs;
    var mapIterator = $receiver.keys();
    while (true) {
      var v = mapIterator.next();
      if (v.done)
        break;
      var geom = ensureNotNull($receiver.get(v.value));
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      tmp$_1 = ((tmp$_0 = (tmp$ = geom.skin) != null ? tmp$.bones : null) != null ? tmp$_0 : emptyList()).iterator();
      while (tmp$_1.hasNext()) {
        var bone = tmp$_1.next();
        var $receiver_0 = this.boneDefs;
        var key = bone.name;
        $receiver_0.set(key, bone);
      }
      geom.mesh.material = (tmp$_2 = geom.material) != null ? instantiate_1(tmp$_2) : null;
    }
  };
  function Library3D$Instance3D(library) {
    this.library = library;
    this.transform = new Matrix3D();
    this.def = null;
    this.children = ArrayList_init_1();
    this.id = '';
    this.sid = null;
    this.name = '';
    this.type = '';
    this.skin = null;
    this.skeleton = null;
    this.skeletonId = null;
  }
  Library3D$Instance3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Instance3D',
    interfaces: []
  };
  function Library3D$Scene3D(library) {
    Library3D$Instance3D.call(this, library);
  }
  Library3D$Scene3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Scene3D',
    interfaces: [Library3D$Instance3D]
  };
  function Library3D$Def() {
  }
  Library3D$Def.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Def',
    interfaces: []
  };
  function Library3D$Pong() {
  }
  Library3D$Pong.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Pong',
    interfaces: []
  };
  function Library3D$ImageDef(id, name, initFrom, texure) {
    if (texure === void 0)
      texure = null;
    Library3D$Def.call(this);
    this.id = id;
    this.name = name;
    this.initFrom = initFrom;
    this.texure = texure;
  }
  Library3D$ImageDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ImageDef',
    interfaces: [Library3D$Def]
  };
  function Library3D$ObjectDef() {
    Library3D$Def.call(this);
  }
  Library3D$ObjectDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ObjectDef',
    interfaces: [Library3D$Def]
  };
  function Library3D$MaterialDef(id, name, effects) {
    Library3D$Def.call(this);
    this.id = id;
    this.name = name;
    this.effects = effects;
  }
  Library3D$MaterialDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MaterialDef',
    interfaces: [Library3D$Def]
  };
  function Library3D$LightDef() {
    Library3D$ObjectDef.call(this);
  }
  Library3D$LightDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightDef',
    interfaces: [Library3D$ObjectDef]
  };
  function Library3D$CameraDef() {
    Library3D$ObjectDef.call(this);
  }
  Library3D$CameraDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CameraDef',
    interfaces: [Library3D$ObjectDef]
  };
  function Library3D$PerspectiveCameraDef(xfov, zmin, zmax) {
    Library3D$CameraDef.call(this);
    this.xfov = xfov;
    this.zmin = zmin;
    this.zmax = zmax;
  }
  Library3D$PerspectiveCameraDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PerspectiveCameraDef',
    interfaces: [Library3D$CameraDef]
  };
  Library3D$PerspectiveCameraDef.prototype.component1 = function () {
    return this.xfov;
  };
  Library3D$PerspectiveCameraDef.prototype.component2 = function () {
    return this.zmin;
  };
  Library3D$PerspectiveCameraDef.prototype.component3 = function () {
    return this.zmax;
  };
  Library3D$PerspectiveCameraDef.prototype.copy_g0149z$ = function (xfov, zmin, zmax) {
    return new Library3D$PerspectiveCameraDef(xfov === void 0 ? this.xfov : xfov, zmin === void 0 ? this.zmin : zmin, zmax === void 0 ? this.zmax : zmax);
  };
  Library3D$PerspectiveCameraDef.prototype.toString = function () {
    return 'PerspectiveCameraDef(xfov=' + Kotlin.toString(this.xfov) + (', zmin=' + Kotlin.toString(this.zmin)) + (', zmax=' + Kotlin.toString(this.zmax)) + ')';
  };
  Library3D$PerspectiveCameraDef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.xfov) | 0;
    result = result * 31 + Kotlin.hashCode(this.zmin) | 0;
    result = result * 31 + Kotlin.hashCode(this.zmax) | 0;
    return result;
  };
  Library3D$PerspectiveCameraDef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.xfov, other.xfov) && Kotlin.equals(this.zmin, other.zmin) && Kotlin.equals(this.zmax, other.zmax)))));
  };
  function Library3D$LightKindDef() {
  }
  Library3D$LightKindDef.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'LightKindDef',
    interfaces: []
  };
  function Library3D$LightTexDef(sid, texture, lightKind) {
    this.sid_teaj0v$_0 = sid;
    this.texture = texture;
    this.lightKind = lightKind;
  }
  Object.defineProperty(Library3D$LightTexDef.prototype, 'sid', {
    get: function () {
      return this.sid_teaj0v$_0;
    }
  });
  Library3D$LightTexDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightTexDef',
    interfaces: [Library3D$LightKindDef]
  };
  function Library3D$LightColorDef(sid, color, lightKind) {
    this.sid_gpl9aj$_0 = sid;
    this.color = color;
    this.lightKind = lightKind;
  }
  Object.defineProperty(Library3D$LightColorDef.prototype, 'sid', {
    get: function () {
      return this.sid_gpl9aj$_0;
    }
  });
  Library3D$LightColorDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightColorDef',
    interfaces: [Library3D$LightKindDef]
  };
  function Library3D$EffectParamSurface(surfaceType, initFrom) {
    this.surfaceType = surfaceType;
    this.initFrom = initFrom;
  }
  Library3D$EffectParamSurface.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EffectParamSurface',
    interfaces: []
  };
  Library3D$EffectParamSurface.prototype.component1 = function () {
    return this.surfaceType;
  };
  Library3D$EffectParamSurface.prototype.component2 = function () {
    return this.initFrom;
  };
  Library3D$EffectParamSurface.prototype.copy_sp2rfq$ = function (surfaceType, initFrom) {
    return new Library3D$EffectParamSurface(surfaceType === void 0 ? this.surfaceType : surfaceType, initFrom === void 0 ? this.initFrom : initFrom);
  };
  Library3D$EffectParamSurface.prototype.toString = function () {
    return 'EffectParamSurface(surfaceType=' + Kotlin.toString(this.surfaceType) + (', initFrom=' + Kotlin.toString(this.initFrom)) + ')';
  };
  Library3D$EffectParamSurface.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.surfaceType) | 0;
    result = result * 31 + Kotlin.hashCode(this.initFrom) | 0;
    return result;
  };
  Library3D$EffectParamSurface.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.surfaceType, other.surfaceType) && Kotlin.equals(this.initFrom, other.initFrom)))));
  };
  function Library3D$EffectParamSampler2D(surface) {
    this.surface = surface;
  }
  Library3D$EffectParamSampler2D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EffectParamSampler2D',
    interfaces: []
  };
  Library3D$EffectParamSampler2D.prototype.component1 = function () {
    return this.surface;
  };
  Library3D$EffectParamSampler2D.prototype.copy_1tvpaz$ = function (surface) {
    return new Library3D$EffectParamSampler2D(surface === void 0 ? this.surface : surface);
  };
  Library3D$EffectParamSampler2D.prototype.toString = function () {
    return 'EffectParamSampler2D(surface=' + Kotlin.toString(this.surface) + ')';
  };
  Library3D$EffectParamSampler2D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.surface) | 0;
    return result;
  };
  Library3D$EffectParamSampler2D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.surface, other.surface))));
  };
  function Library3D$EffectDef() {
    Library3D$Def.call(this);
  }
  Library3D$EffectDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EffectDef',
    interfaces: [Library3D$Def]
  };
  function Library3D$StandardEffectDef(id, name, emission, ambient, diffuse, specular, shiness, index_of_refraction) {
    Library3D$EffectDef.call(this);
    this.id = id;
    this.name = name;
    this.emission = emission;
    this.ambient = ambient;
    this.diffuse = diffuse;
    this.specular = specular;
    this.shiness = shiness;
    this.index_of_refraction = index_of_refraction;
  }
  Library3D$StandardEffectDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StandardEffectDef',
    interfaces: [Library3D$EffectDef]
  };
  Library3D$StandardEffectDef.prototype.component1 = function () {
    return this.id;
  };
  Library3D$StandardEffectDef.prototype.component2 = function () {
    return this.name;
  };
  Library3D$StandardEffectDef.prototype.component3 = function () {
    return this.emission;
  };
  Library3D$StandardEffectDef.prototype.component4 = function () {
    return this.ambient;
  };
  Library3D$StandardEffectDef.prototype.component5 = function () {
    return this.diffuse;
  };
  Library3D$StandardEffectDef.prototype.component6 = function () {
    return this.specular;
  };
  Library3D$StandardEffectDef.prototype.component7 = function () {
    return this.shiness;
  };
  Library3D$StandardEffectDef.prototype.component8 = function () {
    return this.index_of_refraction;
  };
  Library3D$StandardEffectDef.prototype.copy_c2ocrs$ = function (id, name, emission, ambient, diffuse, specular, shiness, index_of_refraction) {
    return new Library3D$StandardEffectDef(id === void 0 ? this.id : id, name === void 0 ? this.name : name, emission === void 0 ? this.emission : emission, ambient === void 0 ? this.ambient : ambient, diffuse === void 0 ? this.diffuse : diffuse, specular === void 0 ? this.specular : specular, shiness === void 0 ? this.shiness : shiness, index_of_refraction === void 0 ? this.index_of_refraction : index_of_refraction);
  };
  Library3D$StandardEffectDef.prototype.toString = function () {
    return 'StandardEffectDef(id=' + Kotlin.toString(this.id) + (', name=' + Kotlin.toString(this.name)) + (', emission=' + Kotlin.toString(this.emission)) + (', ambient=' + Kotlin.toString(this.ambient)) + (', diffuse=' + Kotlin.toString(this.diffuse)) + (', specular=' + Kotlin.toString(this.specular)) + (', shiness=' + Kotlin.toString(this.shiness)) + (', index_of_refraction=' + Kotlin.toString(this.index_of_refraction)) + ')';
  };
  Library3D$StandardEffectDef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.emission) | 0;
    result = result * 31 + Kotlin.hashCode(this.ambient) | 0;
    result = result * 31 + Kotlin.hashCode(this.diffuse) | 0;
    result = result * 31 + Kotlin.hashCode(this.specular) | 0;
    result = result * 31 + Kotlin.hashCode(this.shiness) | 0;
    result = result * 31 + Kotlin.hashCode(this.index_of_refraction) | 0;
    return result;
  };
  Library3D$StandardEffectDef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.emission, other.emission) && Kotlin.equals(this.ambient, other.ambient) && Kotlin.equals(this.diffuse, other.diffuse) && Kotlin.equals(this.specular, other.specular) && Kotlin.equals(this.shiness, other.shiness) && Kotlin.equals(this.index_of_refraction, other.index_of_refraction)))));
  };
  function Library3D$GeometryDef(mesh, skin, material) {
    if (skin === void 0)
      skin = null;
    if (material === void 0)
      material = null;
    Library3D$ObjectDef.call(this);
    this.mesh = mesh;
    this.skin = skin;
    this.material = material;
  }
  Library3D$GeometryDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeometryDef',
    interfaces: [Library3D$ObjectDef]
  };
  Library3D$GeometryDef.prototype.component1 = function () {
    return this.mesh;
  };
  Library3D$GeometryDef.prototype.component2 = function () {
    return this.skin;
  };
  Library3D$GeometryDef.prototype.component3 = function () {
    return this.material;
  };
  Library3D$GeometryDef.prototype.copy_2pvjd$ = function (mesh, skin, material) {
    return new Library3D$GeometryDef(mesh === void 0 ? this.mesh : mesh, skin === void 0 ? this.skin : skin, material === void 0 ? this.material : material);
  };
  Library3D$GeometryDef.prototype.toString = function () {
    return 'GeometryDef(mesh=' + Kotlin.toString(this.mesh) + (', skin=' + Kotlin.toString(this.skin)) + (', material=' + Kotlin.toString(this.material)) + ')';
  };
  Library3D$GeometryDef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.mesh) | 0;
    result = result * 31 + Kotlin.hashCode(this.skin) | 0;
    result = result * 31 + Kotlin.hashCode(this.material) | 0;
    return result;
  };
  Library3D$GeometryDef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.mesh, other.mesh) && Kotlin.equals(this.skin, other.skin) && Kotlin.equals(this.material, other.material)))));
  };
  function Library3D$BoneDef(index, name, invBindMatrix) {
    Library3D$Def.call(this);
    this.index = index;
    this.name = name;
    this.invBindMatrix = invBindMatrix;
    this.skin_83eu8p$_0 = this.skin_83eu8p$_0;
  }
  Object.defineProperty(Library3D$BoneDef.prototype, 'skin', {
    get: function () {
      if (this.skin_83eu8p$_0 == null)
        return throwUPAE('skin');
      return this.skin_83eu8p$_0;
    },
    set: function (skin) {
      this.skin_83eu8p$_0 = skin;
    }
  });
  Library3D$BoneDef.prototype.toBone = function () {
    return new Bone3D(this.index, this.name, this.invBindMatrix.clone());
  };
  Library3D$BoneDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BoneDef',
    interfaces: [Library3D$Def]
  };
  Library3D$BoneDef.prototype.component1 = function () {
    return this.index;
  };
  Library3D$BoneDef.prototype.component2 = function () {
    return this.name;
  };
  Library3D$BoneDef.prototype.component3 = function () {
    return this.invBindMatrix;
  };
  Library3D$BoneDef.prototype.copy_96caii$ = function (index, name, invBindMatrix) {
    return new Library3D$BoneDef(index === void 0 ? this.index : index, name === void 0 ? this.name : name, invBindMatrix === void 0 ? this.invBindMatrix : invBindMatrix);
  };
  Library3D$BoneDef.prototype.toString = function () {
    return 'BoneDef(index=' + Kotlin.toString(this.index) + (', name=' + Kotlin.toString(this.name)) + (', invBindMatrix=' + Kotlin.toString(this.invBindMatrix)) + ')';
  };
  Library3D$BoneDef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.index) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.invBindMatrix) | 0;
    return result;
  };
  Library3D$BoneDef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.index, other.index) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.invBindMatrix, other.invBindMatrix)))));
  };
  function Library3D$SkinDef(controllerId, controllerName, bindShapeMatrix, skinSource, bones) {
    Library3D$Def.call(this);
    this.controllerId = controllerId;
    this.controllerName = controllerName;
    this.bindShapeMatrix = bindShapeMatrix;
    this.skinSource = skinSource;
    this.bones = bones;
  }
  Library3D$SkinDef.prototype.toSkin = function () {
    var tmp$ = this.bindShapeMatrix;
    var $receiver = this.bones;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item.toBone());
    }
    return new Skin3D(tmp$, destination);
  };
  Library3D$SkinDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SkinDef',
    interfaces: [Library3D$Def]
  };
  Library3D$SkinDef.prototype.component1 = function () {
    return this.controllerId;
  };
  Library3D$SkinDef.prototype.component2 = function () {
    return this.controllerName;
  };
  Library3D$SkinDef.prototype.component3 = function () {
    return this.bindShapeMatrix;
  };
  Library3D$SkinDef.prototype.component4 = function () {
    return this.skinSource;
  };
  Library3D$SkinDef.prototype.component5 = function () {
    return this.bones;
  };
  Library3D$SkinDef.prototype.copy_3zdzkh$ = function (controllerId, controllerName, bindShapeMatrix, skinSource, bones) {
    return new Library3D$SkinDef(controllerId === void 0 ? this.controllerId : controllerId, controllerName === void 0 ? this.controllerName : controllerName, bindShapeMatrix === void 0 ? this.bindShapeMatrix : bindShapeMatrix, skinSource === void 0 ? this.skinSource : skinSource, bones === void 0 ? this.bones : bones);
  };
  Library3D$SkinDef.prototype.toString = function () {
    return 'SkinDef(controllerId=' + Kotlin.toString(this.controllerId) + (', controllerName=' + Kotlin.toString(this.controllerName)) + (', bindShapeMatrix=' + Kotlin.toString(this.bindShapeMatrix)) + (', skinSource=' + Kotlin.toString(this.skinSource)) + (', bones=' + Kotlin.toString(this.bones)) + ')';
  };
  Library3D$SkinDef.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.controllerId) | 0;
    result = result * 31 + Kotlin.hashCode(this.controllerName) | 0;
    result = result * 31 + Kotlin.hashCode(this.bindShapeMatrix) | 0;
    result = result * 31 + Kotlin.hashCode(this.skinSource) | 0;
    result = result * 31 + Kotlin.hashCode(this.bones) | 0;
    return result;
  };
  Library3D$SkinDef.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.controllerId, other.controllerId) && Kotlin.equals(this.controllerName, other.controllerName) && Kotlin.equals(this.bindShapeMatrix, other.bindShapeMatrix) && Kotlin.equals(this.skinSource, other.skinSource) && Kotlin.equals(this.bones, other.bones)))));
  };
  function Library3D$PointLightDef(color, constantAttenuation, linearAttenuation, quadraticAttenuation) {
    Library3D$LightDef.call(this);
    this.color = color;
    this.constantAttenuation = constantAttenuation;
    this.linearAttenuation = linearAttenuation;
    this.quadraticAttenuation = quadraticAttenuation;
  }
  Library3D$PointLightDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PointLightDef',
    interfaces: [Library3D$LightDef]
  };
  function Library3D$AmbientLightDef(color) {
    Library3D$LightDef.call(this);
    this.color = color;
  }
  Library3D$AmbientLightDef.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AmbientLightDef',
    interfaces: [Library3D$LightDef]
  };
  Library3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Library3D',
    interfaces: []
  };
  Library3D.prototype.component1 = function () {
    return this.cameraDefs;
  };
  Library3D.prototype.component2 = function () {
    return this.lightDefs;
  };
  Library3D.prototype.component3 = function () {
    return this.materialDefs;
  };
  Library3D.prototype.component4 = function () {
    return this.effectDefs;
  };
  Library3D.prototype.component5 = function () {
    return this.imageDefs;
  };
  Library3D.prototype.component6 = function () {
    return this.geometryDefs;
  };
  Library3D.prototype.component7 = function () {
    return this.skinDefs;
  };
  Library3D.prototype.component8 = function () {
    return this.animationDefs;
  };
  Library3D.prototype.copy_b54p31$ = function (cameraDefs, lightDefs, materialDefs, effectDefs, imageDefs, geometryDefs, skinDefs, animationDefs) {
    return new Library3D(cameraDefs === void 0 ? this.cameraDefs : cameraDefs, lightDefs === void 0 ? this.lightDefs : lightDefs, materialDefs === void 0 ? this.materialDefs : materialDefs, effectDefs === void 0 ? this.effectDefs : effectDefs, imageDefs === void 0 ? this.imageDefs : imageDefs, geometryDefs === void 0 ? this.geometryDefs : geometryDefs, skinDefs === void 0 ? this.skinDefs : skinDefs, animationDefs === void 0 ? this.animationDefs : animationDefs);
  };
  Library3D.prototype.toString = function () {
    return 'Library3D(cameraDefs=' + Kotlin.toString(this.cameraDefs) + (', lightDefs=' + Kotlin.toString(this.lightDefs)) + (', materialDefs=' + Kotlin.toString(this.materialDefs)) + (', effectDefs=' + Kotlin.toString(this.effectDefs)) + (', imageDefs=' + Kotlin.toString(this.imageDefs)) + (', geometryDefs=' + Kotlin.toString(this.geometryDefs)) + (', skinDefs=' + Kotlin.toString(this.skinDefs)) + (', animationDefs=' + Kotlin.toString(this.animationDefs)) + ')';
  };
  Library3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.cameraDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.lightDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.materialDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.effectDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.imageDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.geometryDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.skinDefs) | 0;
    result = result * 31 + Kotlin.hashCode(this.animationDefs) | 0;
    return result;
  };
  Library3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.cameraDefs, other.cameraDefs) && Kotlin.equals(this.lightDefs, other.lightDefs) && Kotlin.equals(this.materialDefs, other.materialDefs) && Kotlin.equals(this.effectDefs, other.effectDefs) && Kotlin.equals(this.imageDefs, other.imageDefs) && Kotlin.equals(this.geometryDefs, other.geometryDefs) && Kotlin.equals(this.skinDefs, other.skinDefs) && Kotlin.equals(this.animationDefs, other.animationDefs)))));
  };
  function LibraryInstantiateContext() {
    this.viewsById = FastStringMap();
  }
  LibraryInstantiateContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LibraryInstantiateContext',
    interfaces: []
  };
  function instantiate($receiver, jointParent, ctx) {
    if (jointParent === void 0)
      jointParent = null;
    if (ctx === void 0)
      ctx = new LibraryInstantiateContext();
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    var def = $receiver.def;
    if (def == null)
      if (equals_0($receiver.type, 'JOINT', true)) {
        var it = new Joint3D($receiver.id, $receiver.name, (tmp$ = $receiver.sid) != null ? tmp$ : 'unknownSid', jointParent, $receiver.transform);
        (tmp$_0 = jointParent != null ? jointParent.childJoints : null) != null ? tmp$_0.add_11rb$(it) : null;
        (tmp$_1 = jointParent != null ? jointParent.children : null) != null ? tmp$_1.add_11rb$(it) : null;
        tmp$_3 = it;
      } else {
        tmp$_3 = new Container3D();
      }
     else if (Kotlin.isType(def, Library3D$GeometryDef)) {
      var tmp$_6;
      if ($receiver.skeletonId != null) {
        var $receiver_0 = ctx.viewsById;
        var key = ensureNotNull($receiver.skeletonId);
        tmp$_6 = (tmp$_2 = $receiver_0.get(key)) == null || Kotlin.isType(tmp$_2, Joint3D) ? tmp$_2 : null;
      } else
        tmp$_6 = null;
      var skeletonInstance = tmp$_6;
      tmp$_3 = new ViewWithMesh3D(def.mesh, skeletonInstance != null ? new Skeleton3D(ensureNotNull(def.mesh.skin), skeletonInstance) : null);
    } else if (Kotlin.isType(def, Library3D$PerspectiveCameraDef))
      tmp$_3 = new Camera3D$Perspective(def.xfov, def.zmin, def.zmax);
    else if (Kotlin.isType(def, Library3D$PointLightDef))
      tmp$_3 = new Light3D(def.color, def.constantAttenuation, def.linearAttenuation, def.quadraticAttenuation);
    else if (Kotlin.isType(def, Library3D$AmbientLightDef))
      tmp$_3 = new Light3D(def.color, 1.0E-5, 1.0E-5, 1.0E-5);
    else {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('def=' + toString(def)));
    }
    var view = tmp$_3;
    view.id = $receiver.id;
    var $receiver_1 = ctx.viewsById;
    var key_0 = $receiver.id;
    $receiver_1.set(key_0, view);
    view.name = $receiver.name;
    view.transform.setMatrix_p62hku$($receiver.transform);
    if (Kotlin.isType(view, Joint3D)) {
      tmp$_4 = $receiver.children.iterator();
      while (tmp$_4.hasNext()) {
        var child = tmp$_4.next();
        instantiate(child, view, ctx);
      }
    } else if (Kotlin.isType(view, Container3D)) {
      tmp$_5 = $receiver.children.iterator();
      while (tmp$_5.hasNext()) {
        var child_0 = tmp$_5.next();
        view.addChild_ltgqv1$(instantiate(child_0, null, ctx));
      }
    }return view;
  }
  function instantiate_0($receiver) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    if (Kotlin.isType($receiver, Library3D$LightTexDef)) {
      tmp$_2 = new Material3D$LightTexture((tmp$_1 = (tmp$_0 = (tmp$ = $receiver.texture) != null ? tmp$.surface : null) != null ? tmp$_0.initFrom : null) != null ? tmp$_1.texure : null);
    } else if (Kotlin.isType($receiver, Library3D$LightColorDef))
      tmp$_2 = new Material3D$LightColor($receiver.color);
    else {
      throw IllegalStateException_init_0(('Unsupported ' + $receiver).toString());
    }
    return tmp$_2;
  }
  function instantiate_1($receiver) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9;
    var effect = (tmp$ = firstOrNull_0($receiver.effects)) == null || Kotlin.isType(tmp$, Library3D$StandardEffectDef) ? tmp$ : null;
    return new Material3D((tmp$_1 = (tmp$_0 = effect != null ? effect.emission : null) != null ? instantiate_0(tmp$_0) : null) != null ? tmp$_1 : new Material3D$LightColor(color.Colors.BLACK), (tmp$_3 = (tmp$_2 = effect != null ? effect.ambient : null) != null ? instantiate_0(tmp$_2) : null) != null ? tmp$_3 : new Material3D$LightColor(color.Colors.BLACK), (tmp$_5 = (tmp$_4 = effect != null ? effect.diffuse : null) != null ? instantiate_0(tmp$_4) : null) != null ? tmp$_5 : new Material3D$LightColor(color.Colors.BLACK), (tmp$_7 = (tmp$_6 = effect != null ? effect.specular : null) != null ? instantiate_0(tmp$_6) : null) != null ? tmp$_7 : new Material3D$LightColor(color.Colors.BLACK), (tmp$_8 = effect != null ? effect.shiness : null) != null ? tmp$_8 : 0.5, (tmp$_9 = effect != null ? effect.index_of_refraction : null) != null ? tmp$_9 : 1.0);
  }
  function light$lambda($receiver) {
    return Unit;
  }
  function light($receiver, color_0, constantAttenuation, linearAttenuation, quadraticAttenuation, callback) {
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (constantAttenuation === void 0)
      constantAttenuation = 1.0;
    if (linearAttenuation === void 0)
      linearAttenuation = 0.0;
    if (quadraticAttenuation === void 0)
      quadraticAttenuation = 0.00111109;
    if (callback === void 0)
      callback = light$lambda;
    var $receiver_0 = new Light3D(color_0, constantAttenuation, linearAttenuation, quadraticAttenuation);
    callback($receiver_0);
    return addTo_0($receiver_0, $receiver);
  }
  function Light3D(color_0, constantAttenuation, linearAttenuation, quadraticAttenuation) {
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (constantAttenuation === void 0)
      constantAttenuation = 1.0;
    if (linearAttenuation === void 0)
      linearAttenuation = 0.0;
    if (quadraticAttenuation === void 0)
      quadraticAttenuation = 0.00111109;
    View3D.call(this);
    this.color = color_0;
    this.constantAttenuation = constantAttenuation;
    this.linearAttenuation = linearAttenuation;
    this.quadraticAttenuation = quadraticAttenuation;
    this.colorVec_8be2vx$ = new Vector3D();
    this.attenuationVec_8be2vx$ = new Vector3D();
  }
  Light3D.prototype.setTo_g0wkav$ = function (color_0, constantAttenuation, linearAttenuation, quadraticAttenuation) {
    if (color_0 === void 0)
      color_0 = color.Colors.WHITE;
    if (constantAttenuation === void 0)
      constantAttenuation = 1.0;
    if (linearAttenuation === void 0)
      linearAttenuation = 0.0;
    if (quadraticAttenuation === void 0)
      quadraticAttenuation = 0.00111109;
    this.color = color_0;
    this.constantAttenuation = constantAttenuation;
    this.linearAttenuation = linearAttenuation;
    this.quadraticAttenuation = quadraticAttenuation;
    return this;
  };
  Light3D.prototype.render_uzyfj7$ = function (ctx) {
  };
  Light3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Light3D',
    interfaces: [View3D]
  };
  function Material3D(emission, ambient, diffuse, specular, shiness, indexOfRefraction) {
    if (emission === void 0)
      emission = new Material3D$LightColor(color.Colors.BLACK);
    if (ambient === void 0)
      ambient = new Material3D$LightColor(color.Colors.BLACK);
    if (diffuse === void 0)
      diffuse = new Material3D$LightColor(color.Colors.BLACK);
    if (specular === void 0)
      specular = new Material3D$LightColor(color.Colors.BLACK);
    if (shiness === void 0)
      shiness = 0.5;
    if (indexOfRefraction === void 0)
      indexOfRefraction = 1.0;
    this.emission = emission;
    this.ambient = ambient;
    this.diffuse = diffuse;
    this.specular = specular;
    this.shiness = shiness;
    this.indexOfRefraction = indexOfRefraction;
    this.kind = this.emission.kind + '_' + this.ambient.kind + '_' + this.diffuse.kind + '_' + this.specular.kind;
  }
  function Material3D$Light(kind) {
    this.kind = kind;
  }
  Material3D$Light.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Light',
    interfaces: []
  };
  function Material3D$LightColor(color) {
    Material3D$Light.call(this, 'color');
    this.color = color;
    this.colorVec = setToColor(new Vector3D(), this.color);
  }
  Material3D$LightColor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightColor',
    interfaces: [Material3D$Light]
  };
  Material3D$LightColor.prototype.component1 = function () {
    return this.color;
  };
  Material3D$LightColor.prototype.copy_md34sx$ = function (color) {
    return new Material3D$LightColor(color === void 0 ? this.color : color);
  };
  Material3D$LightColor.prototype.toString = function () {
    return 'LightColor(color=' + Kotlin.toString(this.color) + ')';
  };
  Material3D$LightColor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.color) | 0;
    return result;
  };
  Material3D$LightColor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.color, other.color))));
  };
  function Material3D$LightTexture(bitmap) {
    Material3D$Light.call(this, 'texture');
    this.bitmap = bitmap;
    this.textureUnit = new AG$TextureUnit();
  }
  Material3D$LightTexture.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightTexture',
    interfaces: [Material3D$Light]
  };
  Material3D$LightTexture.prototype.component1 = function () {
    return this.bitmap;
  };
  Material3D$LightTexture.prototype.copy_p18la5$ = function (bitmap) {
    return new Material3D$LightTexture(bitmap === void 0 ? this.bitmap : bitmap);
  };
  Material3D$LightTexture.prototype.toString = function () {
    return 'LightTexture(bitmap=' + Kotlin.toString(this.bitmap) + ')';
  };
  Material3D$LightTexture.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.bitmap) | 0;
    return result;
  };
  Material3D$LightTexture.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.bitmap, other.bitmap))));
  };
  Material3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Material3D',
    interfaces: []
  };
  Material3D.prototype.component1 = function () {
    return this.emission;
  };
  Material3D.prototype.component2 = function () {
    return this.ambient;
  };
  Material3D.prototype.component3 = function () {
    return this.diffuse;
  };
  Material3D.prototype.component4 = function () {
    return this.specular;
  };
  Material3D.prototype.component5 = function () {
    return this.shiness;
  };
  Material3D.prototype.component6 = function () {
    return this.indexOfRefraction;
  };
  Material3D.prototype.copy_e00s8o$ = function (emission, ambient, diffuse, specular, shiness, indexOfRefraction) {
    return new Material3D(emission === void 0 ? this.emission : emission, ambient === void 0 ? this.ambient : ambient, diffuse === void 0 ? this.diffuse : diffuse, specular === void 0 ? this.specular : specular, shiness === void 0 ? this.shiness : shiness, indexOfRefraction === void 0 ? this.indexOfRefraction : indexOfRefraction);
  };
  Material3D.prototype.toString = function () {
    return 'Material3D(emission=' + Kotlin.toString(this.emission) + (', ambient=' + Kotlin.toString(this.ambient)) + (', diffuse=' + Kotlin.toString(this.diffuse)) + (', specular=' + Kotlin.toString(this.specular)) + (', shiness=' + Kotlin.toString(this.shiness)) + (', indexOfRefraction=' + Kotlin.toString(this.indexOfRefraction)) + ')';
  };
  Material3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.emission) | 0;
    result = result * 31 + Kotlin.hashCode(this.ambient) | 0;
    result = result * 31 + Kotlin.hashCode(this.diffuse) | 0;
    result = result * 31 + Kotlin.hashCode(this.specular) | 0;
    result = result * 31 + Kotlin.hashCode(this.shiness) | 0;
    result = result * 31 + Kotlin.hashCode(this.indexOfRefraction) | 0;
    return result;
  };
  Material3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.emission, other.emission) && Kotlin.equals(this.ambient, other.ambient) && Kotlin.equals(this.diffuse, other.diffuse) && Kotlin.equals(this.specular, other.specular) && Kotlin.equals(this.shiness, other.shiness) && Kotlin.equals(this.indexOfRefraction, other.indexOfRefraction)))));
  };
  function Mesh3D(fbuffer, layout, program, drawType, hasTexture, maxWeights, skin, material) {
    if (hasTexture === void 0)
      hasTexture = false;
    if (maxWeights === void 0)
      maxWeights = 0;
    if (skin === void 0)
      skin = null;
    if (material === void 0)
      material = null;
    this.fbuffer = fbuffer;
    this.layout = layout;
    this.program = program;
    this.drawType = drawType;
    this.hasTexture = hasTexture;
    this.maxWeights = maxWeights;
    this.skin = skin;
    this.material = material;
    this.vertexSizeInBytes = this.layout.totalSize;
    this.vertexSizeInFloats = this.vertexSizeInBytes / 4 | 0;
    this.vertexCount = (this.fbuffer.size / 4 | 0) / this.vertexSizeInFloats | 0;
  }
  Mesh3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Mesh3D',
    interfaces: []
  };
  Mesh3D.prototype.component1 = function () {
    return this.fbuffer;
  };
  Mesh3D.prototype.component2 = function () {
    return this.layout;
  };
  Mesh3D.prototype.component3 = function () {
    return this.program;
  };
  Mesh3D.prototype.component4 = function () {
    return this.drawType;
  };
  Mesh3D.prototype.component5 = function () {
    return this.hasTexture;
  };
  Mesh3D.prototype.component6 = function () {
    return this.maxWeights;
  };
  Mesh3D.prototype.component7 = function () {
    return this.skin;
  };
  Mesh3D.prototype.component8 = function () {
    return this.material;
  };
  Mesh3D.prototype.copy_uaf2ii$ = function (fbuffer, layout, program, drawType, hasTexture, maxWeights, skin, material) {
    return new Mesh3D(fbuffer === void 0 ? this.fbuffer : fbuffer, layout === void 0 ? this.layout : layout, program === void 0 ? this.program : program, drawType === void 0 ? this.drawType : drawType, hasTexture === void 0 ? this.hasTexture : hasTexture, maxWeights === void 0 ? this.maxWeights : maxWeights, skin === void 0 ? this.skin : skin, material === void 0 ? this.material : material);
  };
  Mesh3D.prototype.toString = function () {
    return 'Mesh3D(fbuffer=' + Kotlin.toString(this.fbuffer) + (', layout=' + Kotlin.toString(this.layout)) + (', program=' + Kotlin.toString(this.program)) + (', drawType=' + Kotlin.toString(this.drawType)) + (', hasTexture=' + Kotlin.toString(this.hasTexture)) + (', maxWeights=' + Kotlin.toString(this.maxWeights)) + (', skin=' + Kotlin.toString(this.skin)) + (', material=' + Kotlin.toString(this.material)) + ')';
  };
  Mesh3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.fbuffer) | 0;
    result = result * 31 + Kotlin.hashCode(this.layout) | 0;
    result = result * 31 + Kotlin.hashCode(this.program) | 0;
    result = result * 31 + Kotlin.hashCode(this.drawType) | 0;
    result = result * 31 + Kotlin.hashCode(this.hasTexture) | 0;
    result = result * 31 + Kotlin.hashCode(this.maxWeights) | 0;
    result = result * 31 + Kotlin.hashCode(this.skin) | 0;
    result = result * 31 + Kotlin.hashCode(this.material) | 0;
    return result;
  };
  Mesh3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.fbuffer, other.fbuffer) && Kotlin.equals(this.layout, other.layout) && Kotlin.equals(this.program, other.program) && Kotlin.equals(this.drawType, other.drawType) && Kotlin.equals(this.hasTexture, other.hasTexture) && Kotlin.equals(this.maxWeights, other.maxWeights) && Kotlin.equals(this.skin, other.skin) && Kotlin.equals(this.material, other.material)))));
  };
  function MeshBuilder3D() {
    MeshBuilder3D$Companion_getInstance();
    var $receiver = ArrayList_init_1();
    $receiver.add_11rb$(Shaders3D$Companion_getInstance().a_pos);
    $receiver.add_11rb$(Shaders3D$Companion_getInstance().a_norm);
    $receiver.add_11rb$(Shaders3D$Companion_getInstance().a_tex);
    this.layout = VertexLayout_init_0($receiver);
    this.data = floatArrayListOf(new Float32Array([]));
  }
  MeshBuilder3D.prototype.invoke_ypxwxr$ = function (callback) {
    callback(this);
    return this.build();
  };
  function MeshBuilder3D$Companion() {
    MeshBuilder3D$Companion_instance = this;
  }
  MeshBuilder3D$Companion.prototype.invoke_ypxwxr$ = function (callback) {
    var $receiver = new MeshBuilder3D();
    callback($receiver);
    return $receiver.build();
  };
  MeshBuilder3D$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MeshBuilder3D$Companion_instance = null;
  function MeshBuilder3D$Companion_getInstance() {
    if (MeshBuilder3D$Companion_instance === null) {
      new MeshBuilder3D$Companion();
    }return MeshBuilder3D$Companion_instance;
  }
  MeshBuilder3D.prototype.vertex_5arqf8$ = function (pos, normal, texcoords) {
    this.vertex_nkj9yk$(pos.x, pos.y, pos.z, normal.x, normal.y, normal.z, texcoords.x, texcoords.y);
  };
  MeshBuilder3D.prototype.vertex_nkj9yk$ = function (px, py, pz, nx, ny, nz, u, v) {
    if (nx === void 0)
      nx = 0.0;
    if (ny === void 0)
      ny = 0.0;
    if (nz === void 0)
      nz = 1.0;
    if (u === void 0)
      u = 0.0;
    if (v === void 0)
      v = 0.0;
    this.data.add_mx4ult$(px);
    this.data.add_mx4ult$(py);
    this.data.add_mx4ult$(pz);
    this.data.add_mx4ult$(nx);
    this.data.add_mx4ult$(ny);
    this.data.add_mx4ult$(nz);
    this.data.add_mx4ult$(u);
    this.data.add_mx4ult$(v);
  };
  MeshBuilder3D.prototype.build = function () {
    return new Mesh3D(toFBuffer(this.data), this.layout, null, AG$DrawType.TRIANGLES, true);
  };
  MeshBuilder3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MeshBuilder3D',
    interfaces: []
  };
  function RenderContext3D() {
    this.ag_kux8cp$_0 = this.ag_kux8cp$_0;
    this.rctx_f0npwa$_0 = this.rctx_f0npwa$_0;
    this.shaders = new Shaders3D();
    this.textureUnit = new AG$TextureUnit();
    this.bindMat4 = new Matrix3D();
    var array = Array_0(128);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new Matrix3D();
    }
    this.bones = array;
    this.tmepMat = new Matrix3D();
    this.projMat = new Matrix3D();
    this.lights = ArrayList_init_1();
    this.projCameraMat = new Matrix3D();
    this.cameraMat = new Matrix3D();
    this.cameraMatInv = new Matrix3D();
    this.dynamicVertexBufferPool = Pool_init(void 0, RenderContext3D$dynamicVertexBufferPool$lambda(this));
    this.ambientColor = new Vector3D();
  }
  Object.defineProperty(RenderContext3D.prototype, 'ag', {
    get: function () {
      if (this.ag_kux8cp$_0 == null)
        return throwUPAE('ag');
      return this.ag_kux8cp$_0;
    },
    set: function (ag) {
      this.ag_kux8cp$_0 = ag;
    }
  });
  Object.defineProperty(RenderContext3D.prototype, 'rctx', {
    get: function () {
      if (this.rctx_f0npwa$_0 == null)
        return throwUPAE('rctx');
      return this.rctx_f0npwa$_0;
    },
    set: function (rctx) {
      this.rctx_f0npwa$_0 = rctx;
    }
  });
  function RenderContext3D$dynamicVertexBufferPool$lambda(this$RenderContext3D) {
    return function (it) {
      return this$RenderContext3D.ag.createVertexBuffer();
    };
  }
  RenderContext3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RenderContext3D',
    interfaces: []
  };
  function Shaders3D() {
    Shaders3D$Companion_getInstance();
    this.programCache_2gsddy$_0 = LinkedHashMap_init();
    this.printShaders = false;
  }
  Shaders3D.prototype.getProgram3D_trpdrb$ = function (nlights, nweights, meshMaterial, hasTexture) {
    var $receiver = this.programCache_2gsddy$_0;
    var key = 'program_L' + nlights + '_W' + nweights + '_M' + toString(meshMaterial != null ? meshMaterial.kind : null) + '_T' + hasTexture;
    var tmp$;
    var value = $receiver.get_11rb$(key);
    if (value == null) {
      var $receiver_0 = (new StandardShader3D(nlights, nweights, meshMaterial, hasTexture)).program;
      if (this.printShaders) {
        println((new GlslGenerator(ShaderType.VERTEX)).generate_57b21j$($receiver_0.vertex.stm));
        println((new GlslGenerator(ShaderType.FRAGMENT)).generate_57b21j$($receiver_0.fragment.stm));
      }var answer = $receiver_0;
      $receiver.put_xwzc9p$(key, answer);
      tmp$ = answer;
    } else {
      tmp$ = value;
    }
    return tmp$;
  };
  function Shaders3D$Companion() {
    Shaders3D$Companion_instance = this;
    this.u_Shiness = Uniform_init('u_shiness', VarType.Float1);
    this.u_IndexOfRefraction = Uniform_init('u_indexOfRefraction', VarType.Float1);
    this.u_AmbientColor = Uniform_init('u_ambientColor', VarType.Float4);
    this.u_ProjMat = Uniform_init('u_ProjMat', VarType.Mat4);
    this.u_ViewMat = Uniform_init('u_ViewMat', VarType.Mat4);
    this.u_BindShapeMatrix = Uniform_init('u_BindShapeMat', VarType.Mat4);
    this.u_BindShapeMatrixInv = Uniform_init('u_BindShapeMatInv', VarType.Mat4);
    this.u_ModMat = Uniform_init('u_ModMat', VarType.Mat4);
    this.u_NormMat = Uniform_init('u_NormMat', VarType.Mat4);
    this.MAX_BONE_MATS = 64;
    this.u_BoneMats = new Uniform('u_BoneMats', VarType.Mat4, this.MAX_BONE_MATS);
    this.u_TexUnit = Uniform_init('u_TexUnit', VarType.TextureUnit);
    this.a_pos = Attribute_init('a_Pos', VarType.Float3, false);
    this.a_norm = Attribute_init('a_Norm', VarType.Float3, false);
    this.a_tex = Attribute_init('a_TexCoords', VarType.Float2, false);
    var array = Array_0(4);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = Attribute_init('a_BoneIndex' + i, VarType.Float4, false);
    }
    this.a_boneIndex = array;
    var array_0 = Array_0(4);
    var tmp$_0;
    tmp$_0 = array_0.length - 1 | 0;
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      array_0[i_0] = Attribute_init('a_Weight' + i_0, VarType.Float4, false);
    }
    this.a_weight = array_0;
    this.a_col = Attribute_init('a_Col', VarType.Float3, true);
    this.v_col = Varying_init('v_Col', VarType.Float3);
    this.v_Pos = Varying_init('v_Pos', VarType.Float3);
    this.v_Norm = Varying_init('v_Norm', VarType.Float3);
    this.v_TexCoords = Varying_init('v_TexCoords', VarType.Float2);
    this.v_Temp1 = Varying_init('v_Temp1', VarType.Float4);
    this.programColor3D = new Program(VertexShader(Shaders3D$Companion$programColor3D$lambda(this)), FragmentShader(Shaders3D$Companion$programColor3D$lambda_0(this)), 'programColor3D');
    var $receiver = until(0, 4);
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_1;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      destination.add_11rb$(new Shaders3D$LightAttributes(item));
    }
    this.lights = destination;
    this.emission = new Shaders3D$MaterialLightUniform('emission');
    this.ambient = new Shaders3D$MaterialLightUniform('ambient');
    this.diffuse = new Shaders3D$MaterialLightUniform('diffuse');
    this.specular = new Shaders3D$MaterialLightUniform('specular');
    this.layoutPosCol = VertexLayout_init([this.a_pos, this.a_col]);
    this.FLOATS_PER_VERTEX_0 = this.layoutPosCol.totalSize / 4 | 0;
  }
  function Shaders3D$Companion$programColor3D$lambda(this$Shaders3D$) {
    return function ($receiver) {
      $receiver.SET_q0hzsk$(this$Shaders3D$.v_col, this$Shaders3D$.a_col);
      $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$($receiver.times_2oogdr$($receiver.times_2oogdr$(this$Shaders3D$.u_ProjMat, this$Shaders3D$.u_ModMat), this$Shaders3D$.u_ViewMat), $receiver.vec4_hywno3$([this$Shaders3D$.a_pos, $receiver.get_lit_81szk$(1.0)])));
      return Unit;
    };
  }
  function Shaders3D$Companion$programColor3D$lambda_0(this$Shaders3D$) {
    return function ($receiver) {
      $receiver.SET_q0hzsk$($receiver.out, $receiver.vec4_hywno3$([this$Shaders3D$.v_col, $receiver.get_lit_81szk$(1.0)]));
      return Unit;
    };
  }
  Shaders3D$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Shaders3D$Companion_instance = null;
  function Shaders3D$Companion_getInstance() {
    if (Shaders3D$Companion_instance === null) {
      new Shaders3D$Companion();
    }return Shaders3D$Companion_instance;
  }
  function Shaders3D$LightAttributes(id) {
    this.id = id;
    this.u_sourcePos = Uniform_init('light' + this.id + '_pos', VarType.Float3);
    this.u_color = Uniform_init('light' + this.id + '_color', VarType.Float4);
    this.u_attenuation = Uniform_init('light' + this.id + '_attenuation', VarType.Float3);
  }
  Shaders3D$LightAttributes.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LightAttributes',
    interfaces: []
  };
  function Shaders3D$MaterialLightUniform(kind) {
    this.kind = kind;
    this.u_color = Uniform_init('u_' + this.kind + '_color', VarType.Float4);
    this.u_texUnit = Uniform_init('u_' + this.kind + '_texUnit', VarType.TextureUnit);
  }
  Shaders3D$MaterialLightUniform.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MaterialLightUniform',
    interfaces: []
  };
  Shaders3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Shaders3D',
    interfaces: []
  };
  function StandardShader3D(nlights, nweights, meshMaterial, hasTexture) {
    AbstractStandardShader3D.call(this);
    this.nlights_xqnc3$_0 = nlights;
    this.nweights_473ss9$_0 = nweights;
    this.meshMaterial_nb8z66$_0 = meshMaterial;
    this.hasTexture_thatln$_0 = hasTexture;
  }
  Object.defineProperty(StandardShader3D.prototype, 'nlights', {
    get: function () {
      return this.nlights_xqnc3$_0;
    }
  });
  Object.defineProperty(StandardShader3D.prototype, 'nweights', {
    get: function () {
      return this.nweights_473ss9$_0;
    }
  });
  Object.defineProperty(StandardShader3D.prototype, 'meshMaterial', {
    get: function () {
      return this.meshMaterial_nb8z66$_0;
    }
  });
  Object.defineProperty(StandardShader3D.prototype, 'hasTexture', {
    get: function () {
      return this.hasTexture_thatln$_0;
    }
  });
  StandardShader3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StandardShader3D',
    interfaces: [AbstractStandardShader3D]
  };
  StandardShader3D.prototype.component1 = function () {
    return this.nlights;
  };
  StandardShader3D.prototype.component2 = function () {
    return this.nweights;
  };
  StandardShader3D.prototype.component3 = function () {
    return this.meshMaterial;
  };
  StandardShader3D.prototype.component4 = function () {
    return this.hasTexture;
  };
  StandardShader3D.prototype.copy_trpdrb$ = function (nlights, nweights, meshMaterial, hasTexture) {
    return new StandardShader3D(nlights === void 0 ? this.nlights : nlights, nweights === void 0 ? this.nweights : nweights, meshMaterial === void 0 ? this.meshMaterial : meshMaterial, hasTexture === void 0 ? this.hasTexture : hasTexture);
  };
  StandardShader3D.prototype.toString = function () {
    return 'StandardShader3D(nlights=' + Kotlin.toString(this.nlights) + (', nweights=' + Kotlin.toString(this.nweights)) + (', meshMaterial=' + Kotlin.toString(this.meshMaterial)) + (', hasTexture=' + Kotlin.toString(this.hasTexture)) + ')';
  };
  StandardShader3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.nlights) | 0;
    result = result * 31 + Kotlin.hashCode(this.nweights) | 0;
    result = result * 31 + Kotlin.hashCode(this.meshMaterial) | 0;
    result = result * 31 + Kotlin.hashCode(this.hasTexture) | 0;
    return result;
  };
  StandardShader3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nlights, other.nlights) && Kotlin.equals(this.nweights, other.nweights) && Kotlin.equals(this.meshMaterial, other.meshMaterial) && Kotlin.equals(this.hasTexture, other.hasTexture)))));
  };
  function AbstractStandardShader3D() {
    BaseShader3D.call(this);
  }
  AbstractStandardShader3D.prototype.vertex_mw8vo7$ = function ($receiver) {
    var $receiver_0 = Shaders3D$Companion_getInstance();
    var tmp$;
    var modelViewMat = $receiver.createTemp_b2kxjc$(VarType.Mat4);
    var normalMat = $receiver.createTemp_b2kxjc$(VarType.Mat4);
    var boneMatrix = $receiver.createTemp_b2kxjc$(VarType.Mat4);
    var localPos = $receiver.createTemp_b2kxjc$(VarType.Float4);
    var localNorm = $receiver.createTemp_b2kxjc$(VarType.Float4);
    var skinPos = $receiver.createTemp_b2kxjc$(VarType.Float4);
    if (this.nweights === 0) {
      $receiver.SET_q0hzsk$(localPos, $receiver.vec4_hywno3$([$receiver_0.a_pos, $receiver.get_lit_81szk$(1.0)]));
      $receiver.SET_q0hzsk$(localNorm, $receiver.vec4_hywno3$([$receiver_0.a_norm, $receiver.get_lit_81szk$(0.0)]));
    } else {
      $receiver.SET_q0hzsk$(localPos, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.0)]));
      $receiver.SET_q0hzsk$(localNorm, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.0)]));
      $receiver.SET_q0hzsk$(skinPos, $receiver.times_2oogdr$($receiver_0.u_BindShapeMatrix, $receiver.vec4_hywno3$([$receiver.get_hhgt4v$($receiver_0.a_pos, 'xyz'), $receiver.get_lit_81szk$(1.0)])));
      tmp$ = this.nweights;
      for (var wIndex = 0; wIndex < tmp$; wIndex++) {
        var cond = $receiver.ge_2oogdr$(this.getBoneIndex_qrcgs9$($receiver, wIndex), $receiver.get_lit_s8ev3n$(0));
        var body = new Program$Program$Builder_init($receiver.type);
        body.SET_q0hzsk$(boneMatrix, this.getBone_qrcgs9$(body, wIndex));
        body.SET_q0hzsk$(localPos, body.plus_2oogdr$(localPos, body.times_2oogdr$(body.times_2oogdr$(boneMatrix, body.vec4_hywno3$([body.get_hhgt4v$(skinPos, 'xyz'), body.get_lit_81szk$(1.0)])), this.getWeight_qrcgs9$(body, wIndex))));
        body.SET_q0hzsk$(localNorm, body.plus_2oogdr$(localNorm, body.times_2oogdr$(body.times_2oogdr$(boneMatrix, body.vec4_hywno3$([$receiver_0.a_norm, body.get_lit_81szk$(0.0)])), this.getWeight_qrcgs9$(body, wIndex))));
        var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
        $receiver.outputStms.add_11rb$(stmIf);
      }
      $receiver.SET_q0hzsk$(localPos, $receiver.times_2oogdr$($receiver_0.u_BindShapeMatrixInv, localPos));
    }
    $receiver.SET_q0hzsk$(modelViewMat, $receiver.times_2oogdr$($receiver_0.u_ModMat, $receiver_0.u_ViewMat));
    $receiver.SET_q0hzsk$(normalMat, $receiver_0.u_NormMat);
    $receiver.SET_q0hzsk$($receiver_0.v_Pos, $receiver.vec3_hywno3$([$receiver.times_2oogdr$(modelViewMat, $receiver.vec4_hywno3$([$receiver.get_hhgt4v$(localPos, 'xyz'), $receiver.get_lit_81szk$(1.0)]))]));
    $receiver.SET_q0hzsk$($receiver_0.v_Norm, $receiver.vec3_hywno3$([$receiver.times_2oogdr$(normalMat, $receiver.normalize_dq1c34$($receiver.vec4_hywno3$([$receiver.get_hhgt4v$(localNorm, 'xyz'), $receiver.get_lit_81szk$(1.0)])))]));
    if (this.hasTexture)
      $receiver.SET_q0hzsk$($receiver_0.v_TexCoords, $receiver.get_hhgt4v$($receiver_0.a_tex, 'xy'));
    $receiver.SET_q0hzsk$($receiver.out, $receiver.times_2oogdr$($receiver_0.u_ProjMat, $receiver.vec4_hywno3$([$receiver_0.v_Pos, $receiver.get_lit_81szk$(1.0)])));
  };
  AbstractStandardShader3D.prototype.fragment_mw8vo7$ = function ($receiver) {
    var tmp$;
    var meshMaterial = this.meshMaterial;
    if (meshMaterial != null) {
      this.computeMaterialLightColor_kpjd1f$($receiver, $receiver.out, Shaders3D$Companion_getInstance().diffuse, meshMaterial.diffuse);
    } else {
      $receiver.SET_q0hzsk$($receiver.out, $receiver.vec4_hywno3$([$receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(0.5), $receiver.get_lit_81szk$(1.0)]));
    }
    tmp$ = this.nlights;
    for (var n = 0; n < tmp$; n++) {
      this.addLight_wfxaoi$($receiver, Shaders3D$Companion_getInstance().lights.get_za3lpa$(n), $receiver.out);
    }
  };
  AbstractStandardShader3D.prototype.computeMaterialLightColor_kpjd1f$ = function ($receiver, out, uniform, light) {
    if (Kotlin.isType(light, Material3D$LightColor))
      $receiver.SET_q0hzsk$(out, uniform.u_color);
    else if (Kotlin.isType(light, Material3D$LightTexture))
      $receiver.SET_q0hzsk$(out, $receiver.vec4_hywno3$([$receiver.get_hhgt4v$($receiver.texture2D_q0hzsk$(uniform.u_texUnit, $receiver.get_hhgt4v$(Shaders3D$Companion_getInstance().v_TexCoords, 'xy')), 'rgb'), $receiver.get_lit_81szk$(1.0)]));
    else {
      throw IllegalStateException_init_0(('Unsupported MateriaList: ' + light).toString());
    }
  };
  AbstractStandardShader3D.prototype.mat4Identity_mw8vo7$ = function ($receiver) {
    return Program$Program$Func_init('mat4', [$receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(0.0), $receiver.get_lit_81szk$(1.0)]);
  };
  AbstractStandardShader3D.prototype.addLight_wfxaoi$ = function ($receiver, light, out) {
    var v = Shaders3D$Companion_getInstance().v_Pos;
    var N = Shaders3D$Companion_getInstance().v_Norm;
    var L = $receiver.createTemp_b2kxjc$(VarType.Float3);
    var E = $receiver.createTemp_b2kxjc$(VarType.Float3);
    var R = $receiver.createTemp_b2kxjc$(VarType.Float3);
    var attenuation = $receiver.createTemp_b2kxjc$(VarType.Float1);
    var dist = $receiver.createTemp_b2kxjc$(VarType.Float1);
    var NdotL = $receiver.createTemp_b2kxjc$(VarType.Float1);
    var lightDir = $receiver.createTemp_b2kxjc$(VarType.Float3);
    $receiver.SET_q0hzsk$(L, $receiver.normalize_dq1c34$($receiver.minus_2oogdr$($receiver.get_hhgt4v$(light.u_sourcePos, 'xyz'), v)));
    $receiver.SET_q0hzsk$(E, $receiver.normalize_dq1c34$($receiver.unaryMinus_rix7j$(v)));
    $receiver.SET_q0hzsk$(R, $receiver.normalize_dq1c34$($receiver.unaryMinus_rix7j$($receiver.reflect_q0hzsk$(L, N))));
    var constantAttenuation = $receiver.get_x_rix7j$(light.u_attenuation);
    var linearAttenuation = $receiver.get_y_rix7j$(light.u_attenuation);
    var quadraticAttenuation = $receiver.get_z_rix7j$(light.u_attenuation);
    $receiver.SET_q0hzsk$(lightDir, $receiver.minus_2oogdr$($receiver.get_hhgt4v$(light.u_sourcePos, 'xyz'), Shaders3D$Companion_getInstance().v_Pos));
    $receiver.SET_q0hzsk$(dist, $receiver.length_dq1c34$(lightDir));
    $receiver.SET_q0hzsk$(attenuation, $receiver.div_2oogdr$($receiver.get_lit_81szk$(1.0), $receiver.plus_2oogdr$($receiver.plus_2oogdr$(constantAttenuation, $receiver.times_2oogdr$(linearAttenuation, dist)), $receiver.times_2oogdr$($receiver.times_2oogdr$(quadraticAttenuation, dist), dist))));
    $receiver.SET_q0hzsk$(NdotL, $receiver.max_q0hzsk$($receiver.dot_q0hzsk$($receiver.normalize_dq1c34$(N), $receiver.normalize_dq1c34$(lightDir)), $receiver.get_lit_81szk$(0.0)));
    var cond = $receiver.ge_2oogdr$(NdotL, $receiver.get_lit_81szk$(0.0));
    var body = new Program$Program$Builder_init($receiver.type);
    body.SET_q0hzsk$(body.get_hhgt4v$(out, 'rgb'), body.plus_2oogdr$(body.get_hhgt4v$(out, 'rgb'), body.times_2oogdr$(body.times_2oogdr$(body.plus_2oogdr$(body.times_2oogdr$(body.get_hhgt4v$(light.u_color, 'rgb'), NdotL), body.get_hhgt4v$(Shaders3D$Companion_getInstance().u_AmbientColor, 'rgb')), attenuation), Shaders3D$Companion_getInstance().u_Shiness)));
    var stmIf = new Program$Stm$Program$Stm$If_init(cond, new Program$Stm$Program$Stm$Stms_init(body.outputStms));
    $receiver.outputStms.add_11rb$(stmIf);
  };
  AbstractStandardShader3D.prototype.getBoneIndex_qrcgs9$ = function ($receiver, index) {
    return int($receiver, $receiver.get_x14fz$(Shaders3D$Companion_getInstance().a_boneIndex[index / 4 | 0], index % 4));
  };
  AbstractStandardShader3D.prototype.getWeight_qrcgs9$ = function ($receiver, index) {
    return $receiver.get_x14fz$(Shaders3D$Companion_getInstance().a_weight[index / 4 | 0], index % 4);
  };
  AbstractStandardShader3D.prototype.getBone_qrcgs9$ = function ($receiver, index) {
    return get_20(Shaders3D$Companion_getInstance().u_BoneMats, this.getBoneIndex_qrcgs9$($receiver, index));
  };
  AbstractStandardShader3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AbstractStandardShader3D',
    interfaces: [BaseShader3D]
  };
  function BaseShader3D() {
    this.program_4ubqve$_0 = lazy(BaseShader3D$program$lambda(this));
  }
  Object.defineProperty(BaseShader3D.prototype, 'program', {
    get: function () {
      return this.program_4ubqve$_0.value;
    }
  });
  function BaseShader3D$program$lambda$lambda(this$BaseShader3D) {
    return function ($receiver) {
      this$BaseShader3D.vertex_mw8vo7$($receiver);
      return Unit;
    };
  }
  function BaseShader3D$program$lambda$lambda_0(this$BaseShader3D) {
    return function ($receiver) {
      this$BaseShader3D.fragment_mw8vo7$($receiver);
      return Unit;
    };
  }
  function BaseShader3D$program$lambda(this$BaseShader3D) {
    return function () {
      return new Program(VertexShader(BaseShader3D$program$lambda$lambda(this$BaseShader3D)), FragmentShader(BaseShader3D$program$lambda$lambda_0(this$BaseShader3D)), this$BaseShader3D.toString());
    };
  }
  BaseShader3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseShader3D',
    interfaces: []
  };
  function transpose($receiver, a) {
    return Program$Program$Func_init('transpose', [a]);
  }
  function inverse($receiver, a) {
    return Program$Program$Func_init('inverse', [a]);
  }
  function int($receiver, a) {
    return Program$Program$Func_init('int', [a]);
  }
  function get_20($receiver, index) {
    return new Program$ArrayAccess($receiver, index);
  }
  var box = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.box_nb0ziu$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var numberToDouble = Kotlin.numberToDouble;
    var Cube3D_init = _.com.soywiz.korge3d.Cube3D;
    var addTo = _.com.soywiz.korge3d.addTo_ptnjq7$;
    function box$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, depth, callback) {
      if (callback === void 0)
        callback = box$lambda;
      var $receiver_0 = new Cube3D_init(numberToDouble(width), numberToDouble(height), numberToDouble(depth));
      callback($receiver_0);
      return addTo($receiver_0, $receiver);
    };
  }));
  var box_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.box_xe8nma$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var Cube3D_init = _.com.soywiz.korge3d.Cube3D;
    var addTo = _.com.soywiz.korge3d.addTo_ptnjq7$;
    function box$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, width, height, depth, callback) {
      if (width === void 0)
        width = 1.0;
      if (height === void 0)
        height = width;
      if (depth === void 0)
        depth = height;
      if (callback === void 0)
        callback = box$lambda;
      var $receiver_0 = new Cube3D_init(width, height, depth);
      callback($receiver_0);
      return addTo($receiver_0, $receiver);
    };
  }));
  function Cube3D(width, height, depth) {
    Cube3D$Companion_getInstance();
    ViewWithMesh3D.call(this, Cube3D$Companion_getInstance().mesh.copy_uaf2ii$());
    this.width = width;
    this.height = height;
    this.depth = depth;
  }
  Cube3D.prototype.prepareExtraModelMatrix_p62hku$ = function (mat) {
    scale(mat.identity(), this.width, this.height, this.depth, 1.0, geom.tempMat3D);
  };
  Object.defineProperty(Cube3D.prototype, 'material', {
    get: function () {
      return this.mesh.material;
    },
    set: function (value) {
      this.mesh.material = value;
    }
  });
  Cube3D.prototype.material_fekqe8$ = function (material) {
    this.material = material;
    return this;
  };
  function Cube3D$Companion() {
    Cube3D$Companion_instance = this;
    this.mesh = MeshBuilder3D$Companion_getInstance().invoke_ypxwxr$(Cube3D$Companion$mesh$lambda);
  }
  function Cube3D$Companion$mesh$lambda$lambda$face(this$, this$_0) {
    return function (pos) {
      var $receiver = until(0, 3);
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (pos.get_za3lpa$(element) === 0.0)
          destination.add_11rb$(element);
      }
      var dims = destination;
      var normal = (new Vector3D()).setTo_7b5o5w$(pos.get_za3lpa$(0) !== 0.0 ? 1.0 : 0.0, pos.get_za3lpa$(1) !== 0.0 ? 1.0 : 0.0, pos.get_za3lpa$(2) !== 0.0 ? 1.0 : 0.0, pos.get_za3lpa$(3) !== 0.0 ? 1.0 : 0.0);
      var array = Array_0(2);
      var tmp$_0;
      tmp$_0 = array.length - 1 | 0;
      for (var i = 0; i <= tmp$_0; i++) {
        array[i] = (new Vector3D()).setTo_7b5o5w$(0 === dims.get_za3lpa$(i) ? 0.5 : 0.0, 1 === dims.get_za3lpa$(i) ? 0.5 : 0.0, 2 === dims.get_za3lpa$(i) ? 0.5 : 0.0, 3 === dims.get_za3lpa$(i) ? 0.5 : 0.0);
      }
      var dirs = array;
      var dx = dirs[0];
      var dy = dirs[1];
      this$_0.vertex_5arqf8$(this$.minus_y0ay5r$(this$.minus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(0.0, 0.0, 0.0));
      this$_0.vertex_5arqf8$(this$.minus_y0ay5r$(this$.plus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(1.0, 0.0, 0.0));
      this$_0.vertex_5arqf8$(this$.plus_y0ay5r$(this$.minus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(0.0, 1.0, 0.0));
      this$_0.vertex_5arqf8$(this$.plus_y0ay5r$(this$.minus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(0.0, 1.0, 0.0));
      this$_0.vertex_5arqf8$(this$.minus_y0ay5r$(this$.plus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(1.0, 0.0, 0.0));
      this$_0.vertex_5arqf8$(this$.plus_y0ay5r$(this$.plus_y0ay5r$(pos, dx), dy), normal, Vector3D.Companion.invoke_7b5o5w$(1.0, 1.0, 0.0));
    };
  }
  function Cube3D$Companion$mesh$lambda($receiver) {
    var $this = vector3DTemps;
    var oldPos = $this.pos;
    try {
      var face = Cube3D$Companion$mesh$lambda$lambda$face($this, $receiver);
      face(Vector3D.Companion.invoke_7b5o5w$(0.0, +0.5, 0.0));
      face(Vector3D.Companion.invoke_7b5o5w$(0.0, -0.5, 0.0));
      face(Vector3D.Companion.invoke_7b5o5w$(+0.5, 0.0, 0.0));
      face(Vector3D.Companion.invoke_7b5o5w$(-0.5, 0.0, 0.0));
      face(Vector3D.Companion.invoke_7b5o5w$(0.0, 0.0, +0.5));
      face(Vector3D.Companion.invoke_7b5o5w$(0.0, 0.0, -0.5));
    }finally {
      $this.pos = oldPos;
    }
    return Unit;
  }
  Cube3D$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Cube3D$Companion_instance = null;
  function Cube3D$Companion_getInstance() {
    if (Cube3D$Companion_instance === null) {
      new Cube3D$Companion();
    }return Cube3D$Companion_instance;
  }
  Cube3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Cube3D',
    interfaces: [ViewWithMesh3D]
  };
  function Joint3D(jid, jname, jsid, jointParent, initialMatrix) {
    if (jointParent === void 0)
      jointParent = null;
    Container3D.call(this);
    this.jid = jid;
    this.jname = jname;
    this.jsid = jsid;
    this.jointParent = jointParent;
    this.transform.setMatrix_p62hku$(initialMatrix);
    this.name = this.jname;
    this.id = this.jid;
    if (this.jointParent != null) {
      this.parent = this.jointParent;
    }this.poseMatrix = this.transform.globalMatrix.clone();
    this.poseMatrixInv = invert(this.poseMatrix.clone());
    this.childJoints = ArrayList_init_1();
  }
  Object.defineProperty(Joint3D.prototype, 'descendants', {
    get: function () {
      var $receiver = this.childJoints;
      var destination = ArrayList_init_1();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var list = element.descendantsAndThis;
        addAll(destination, list);
      }
      return destination;
    }
  });
  Object.defineProperty(Joint3D.prototype, 'descendantsAndThis', {
    get: function () {
      return plus_2(listOf_0(this), this.descendants);
    }
  });
  Joint3D.prototype.render_uzyfj7$ = function (ctx) {
  };
  Joint3D.prototype.toString = function () {
    return 'Joint3D(id=' + this.jid + ', name=' + toString(this.name) + ', sid=' + this.jsid + ')';
  };
  Joint3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Joint3D',
    interfaces: [Container3D]
  };
  function Bone3D(index, name, invBindMatrix) {
    this.index = index;
    this.name = name;
    this.invBindMatrix = invBindMatrix;
  }
  Bone3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bone3D',
    interfaces: []
  };
  Bone3D.prototype.component1 = function () {
    return this.index;
  };
  Bone3D.prototype.component2 = function () {
    return this.name;
  };
  Bone3D.prototype.component3 = function () {
    return this.invBindMatrix;
  };
  Bone3D.prototype.copy_96caii$ = function (index, name, invBindMatrix) {
    return new Bone3D(index === void 0 ? this.index : index, name === void 0 ? this.name : name, invBindMatrix === void 0 ? this.invBindMatrix : invBindMatrix);
  };
  Bone3D.prototype.toString = function () {
    return 'Bone3D(index=' + Kotlin.toString(this.index) + (', name=' + Kotlin.toString(this.name)) + (', invBindMatrix=' + Kotlin.toString(this.invBindMatrix)) + ')';
  };
  Bone3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.index) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.invBindMatrix) | 0;
    return result;
  };
  Bone3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.index, other.index) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.invBindMatrix, other.invBindMatrix)))));
  };
  function Skin3D(bindShapeMatrix, bones) {
    this.bindShapeMatrix = bindShapeMatrix;
    this.bones = bones;
    this.bindShapeMatrixInv = invert(this.bindShapeMatrix.clone());
    var array = Array_0(this.bones.size);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new Matrix3D();
    }
    this.matrices = array;
  }
  Skin3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Skin3D',
    interfaces: []
  };
  Skin3D.prototype.component1 = function () {
    return this.bindShapeMatrix;
  };
  Skin3D.prototype.component2 = function () {
    return this.bones;
  };
  Skin3D.prototype.copy_j0uk6j$ = function (bindShapeMatrix, bones) {
    return new Skin3D(bindShapeMatrix === void 0 ? this.bindShapeMatrix : bindShapeMatrix, bones === void 0 ? this.bones : bones);
  };
  Skin3D.prototype.toString = function () {
    return 'Skin3D(bindShapeMatrix=' + Kotlin.toString(this.bindShapeMatrix) + (', bones=' + Kotlin.toString(this.bones)) + ')';
  };
  Skin3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.bindShapeMatrix) | 0;
    result = result * 31 + Kotlin.hashCode(this.bones) | 0;
    return result;
  };
  Skin3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.bindShapeMatrix, other.bindShapeMatrix) && Kotlin.equals(this.bones, other.bones)))));
  };
  function Skeleton3D(skin, headJoint) {
    View3D.call(this);
    this.skin = skin;
    this.headJoint = headJoint;
    this.allJoints = this.headJoint.descendantsAndThis;
    var $receiver = this.allJoints;
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver, 10)), 16);
    var destination = LinkedHashMap_init_0(capacity);
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      destination.put_xwzc9p$(element.jname, element);
    }
    this.jointsByName = toFast_0(destination);
    var $receiver_0 = this.allJoints;
    var capacity_0 = coerceAtLeast(mapCapacity(collectionSizeOrDefault($receiver_0, 10)), 16);
    var destination_0 = LinkedHashMap_init_0(capacity_0);
    var tmp$_0;
    tmp$_0 = $receiver_0.iterator();
    while (tmp$_0.hasNext()) {
      var element_0 = tmp$_0.next();
      destination_0.put_xwzc9p$(element_0.jsid, element_0);
    }
    this.jointsBySid = toFast_0(destination_0);
  }
  Skeleton3D.prototype.render_uzyfj7$ = function (ctx) {
  };
  Skeleton3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Skeleton3D',
    interfaces: [View3D]
  };
  var scene3D = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.scene3D_oy1ld2$', wrapFunction(function () {
    var Views3D_init = _.com.soywiz.korge3d.Views3D;
    var Unit = Kotlin.kotlin.Unit;
    var Stage3D_init = _.com.soywiz.korge3d.Stage3D;
    var Stage3DView_init = _.com.soywiz.korge3d.Stage3DView;
    var addTo = _.com.soywiz.korge.view.addTo_fct211$;
    function scene3D$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, views, callback) {
      if (views === void 0)
        views = new Views3D_init();
      if (callback === void 0)
        callback = scene3D$lambda;
      var $receiver_0 = new Stage3D_init(views);
      callback($receiver_0);
      return addTo(new Stage3DView_init($receiver_0), $receiver);
    };
  }));
  function Views3D() {
  }
  Views3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Views3D',
    interfaces: []
  };
  function Stage3D(views) {
    Container3D.call(this);
    this.views = views;
    this.view_s40ya9$_0 = this.view_s40ya9$_0;
    this.ambientColor = color.Colors.BLACK;
    this.ambientPower = 0.3;
    var $receiver = new Camera3D$Perspective();
    positionLookingAt_2($receiver, 0, 1, -10, 0, 0, 0);
    this.camera = $receiver;
  }
  Object.defineProperty(Stage3D.prototype, 'view', {
    get: function () {
      if (this.view_s40ya9$_0 == null)
        return throwUPAE('view');
      return this.view_s40ya9$_0;
    },
    set: function (view) {
      this.view_s40ya9$_0 = view;
    }
  });
  Stage3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stage3D',
    interfaces: [Container3D]
  };
  function Stage3DView(stage3D) {
    View_init(this);
    this.stage3D = stage3D;
    this.stage3D.view = this;
    this.ctx3D_0 = new RenderContext3D();
  }
  function Stage3DView$renderInternal$lambda(this$Stage3DView) {
    return function (it) {
      if (Kotlin.isType(it, Light3D)) {
        if (it.active)
          this$Stage3DView.ctx3D_0.lights.add_11rb$(it);
      }return Unit;
    };
  }
  Stage3DView.prototype.renderInternal_8isv09$ = function (ctx) {
    ctx.flush();
    ctx.ag.clear_yvqa77$(void 0, 1.0, void 0, false);
    this.ctx3D_0.ag = ctx.ag;
    this.ctx3D_0.rctx = ctx;
    this.ctx3D_0.projMat.copyFrom_p62hku$(this.stage3D.camera.getProjMatrix_lu1900$(ctx.ag.backWidth, ctx.ag.backHeight));
    this.ctx3D_0.cameraMat.copyFrom_p62hku$(this.stage3D.camera.transform.matrix);
    scale_0(setToColorPremultiplied(this.ctx3D_0.ambientColor, this.stage3D.ambientColor), this.stage3D.ambientPower);
    invert(this.ctx3D_0.cameraMatInv, this.stage3D.camera.transform.matrix);
    this.ctx3D_0.projCameraMat.multiply_lb2hp0$(this.ctx3D_0.projMat, this.ctx3D_0.cameraMatInv);
    this.ctx3D_0.lights.clear();
    foreachDescendant_0(this.stage3D, Stage3DView$renderInternal$lambda(this));
    this.stage3D.render_uzyfj7$(this.ctx3D_0);
  };
  Stage3DView.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Stage3DView',
    interfaces: [View]
  };
  function Transform3D() {
    Transform3D$Companion_getInstance();
    this.matrixDirty = false;
    this.transformDirty = false;
    this.globalMatrixUncached_t5ph43$_0 = new Matrix3D();
    this.matrix_9co24h$_0 = new Matrix3D();
    this.children = ArrayList_init_1();
    this.parent_hokxl4$_0 = null;
    this._translation_0 = Vector3D.Companion.invoke_tjonv8$(0, 0, 0);
    this._rotation_0 = new Quaternion();
    this._scale_0 = Vector3D.Companion.invoke_tjonv8$(1, 1, 1);
    this._eulerRotationDirty = true;
    this.rotationEuler_fz2w2v$_0 = new EulerRotation();
    this.UP = Vector3D.Companion.invoke_7b5o5w$(0.0, 1.0, 0.0);
    this.tempMat1 = new Matrix3D();
    this.tempMat2 = new Matrix3D();
    this.tempVec1 = new Vector3D();
    this.tempVec2 = new Vector3D();
    this.tempEuler_0 = new EulerRotation();
  }
  function Transform3D$Companion() {
    Transform3D$Companion_instance = this;
    this.identityMat_0 = new Matrix3D();
  }
  Transform3D$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Transform3D$Companion_instance = null;
  function Transform3D$Companion_getInstance() {
    if (Transform3D$Companion_instance === null) {
      new Transform3D$Companion();
    }return Transform3D$Companion_instance;
  }
  Object.defineProperty(Transform3D.prototype, 'globalMatrixUncached', {
    get: function () {
      var tmp$, tmp$_0;
      var parent = (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.globalMatrixUncached : null) != null ? tmp$_0 : Transform3D$Companion_getInstance().identityMat_0;
      this.globalMatrixUncached_t5ph43$_0.multiply_lb2hp0$(parent, this.matrix);
      return this.globalMatrixUncached_t5ph43$_0;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'globalMatrix', {
    get: function () {
      return this.globalMatrixUncached;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'matrix', {
    get: function () {
      if (this.matrixDirty) {
        this.matrixDirty = false;
        setTRS(this.matrix_9co24h$_0, this.translation, this.rotation, this.scale);
      }return this.matrix_9co24h$_0;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'parent', {
    get: function () {
      return this.parent_hokxl4$_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      (tmp$_0 = (tmp$ = this.parent_hokxl4$_0) != null ? tmp$.children : null) != null ? tmp$_0.remove_11rb$(this) : null;
      this.parent_hokxl4$_0 = value;
      (tmp$_2 = (tmp$_1 = this.parent_hokxl4$_0) != null ? tmp$_1.children : null) != null ? tmp$_2.add_11rb$(this) : null;
    }
  });
  Transform3D.prototype.updateTRS_0 = function () {
    this.transformDirty = false;
    getTRS(this.matrix, this._translation_0, this.rotation, this._scale_0);
    this._eulerRotationDirty = true;
    this.transformDirty = false;
  };
  Transform3D.prototype.updateTRSIfRequired = function () {
    if (this.transformDirty)
      this.updateTRS_0();
    return this;
  };
  Object.defineProperty(Transform3D.prototype, 'translation', {
    get: function () {
      return this.updateTRSIfRequired()._translation_0;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'rotation', {
    get: function () {
      return this.updateTRSIfRequired()._rotation_0;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'scale', {
    get: function () {
      return this.updateTRSIfRequired()._scale_0;
    }
  });
  Object.defineProperty(Transform3D.prototype, 'rotationEuler', {
    get: function () {
      if (this._eulerRotationDirty) {
        this._eulerRotationDirty = false;
        setQuaternion(this.rotationEuler_fz2w2v$_0, this.rotation);
      }return this.rotationEuler_fz2w2v$_0;
    },
    set: function (rotationEuler) {
      this.rotationEuler_fz2w2v$_0 = rotationEuler;
    }
  });
  Transform3D.prototype.setMatrix_p62hku$ = function (mat) {
    this.transformDirty = true;
    this.matrix.copyFrom_p62hku$(mat);
    return this;
  };
  Transform3D.prototype.setTranslation_7b5o5w$ = function (x, y, z, w) {
    if (w === void 0)
      w = 1.0;
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this.translation.setTo_7b5o5w$(x, y, z, w);
    return this;
  };
  Transform3D.prototype.setTranslation_1ugm5o$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.setTranslation_1ugm5o$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (x, y, z, w) {
      if (w === void 0)
        w = 1.0;
      return this.setTranslation_7b5o5w$(numberToDouble(x), numberToDouble(y), numberToDouble(z), numberToDouble(w));
    };
  }));
  Transform3D.prototype.setTranslation_6y0v78$ = function (x, y, z, w) {
    if (w === void 0)
      w = 1.0;
    return this.setTranslation_7b5o5w$(x, y, z, w);
  };
  Transform3D.prototype.setRotation_v317bm$ = function (quat) {
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this._eulerRotationDirty = true;
    this.rotation.setTo_6y0v78$(quat.x, quat.y, quat.z, quat.w);
    return this;
  };
  Transform3D.prototype.setRotation_7b5o5w$ = function (x, y, z, w) {
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this._eulerRotationDirty = true;
    setTo_1(this.rotation, x, y, z, w);
    return this;
  };
  Transform3D.prototype.setRotation_1ugm5o$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.setRotation_1ugm5o$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (x, y, z, w) {
      return this.setRotation_7b5o5w$(numberToDouble(x), numberToDouble(y), numberToDouble(z), numberToDouble(w));
    };
  }));
  Transform3D.prototype.setRotation_6y0v78$ = function (x, y, z, w) {
    return this.setRotation_7b5o5w$(x, y, z, w);
  };
  Transform3D.prototype.setRotation_kud6yx$ = function (euler) {
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this._eulerRotationDirty = true;
    setEuler(this.rotation, euler);
    return this;
  };
  Transform3D.prototype.setRotation_p5makv$ = function (x, y, z) {
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this._eulerRotationDirty = true;
    setEuler_0(this.rotation, x, y, z);
    return this;
  };
  Transform3D.prototype.setScale_7b5o5w$ = function (x, y, z, w) {
    if (x === void 0)
      x = 1.0;
    if (y === void 0)
      y = 1.0;
    if (z === void 0)
      z = 1.0;
    if (w === void 0)
      w = 1.0;
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    this.scale.setTo_7b5o5w$(x, y, z, w);
    return this;
  };
  Transform3D.prototype.setScale_1ugm5o$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.setScale_1ugm5o$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (x, y, z, w) {
      return this.setScale_7b5o5w$(numberToDouble(x), numberToDouble(y), numberToDouble(z), numberToDouble(w));
    };
  }));
  Transform3D.prototype.setScale_6y0v78$ = function (x, y, z, w) {
    return this.setScale_7b5o5w$(x, y, z, w);
  };
  Transform3D.prototype.updatingTRS_o14v8n$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.updatingTRS_o14v8n$', function (callback) {
    this.updateTRSIfRequired();
    this.matrixDirty = true;
    callback();
    return this;
  });
  Transform3D.prototype.lookAt_umzdy7$ = function (tx, ty, tz, up) {
    if (up === void 0)
      up = this.UP;
    setToLookAt(this.tempMat1, this.translation, this.tempVec1.setTo_7b5o5w$(tx, ty, tz, 1.0), up);
    setFromRotationMatrix(this.rotation, this.tempMat1);
    return this;
  };
  Transform3D.prototype.lookAt_aqxsbe$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.lookAt_aqxsbe$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (tx, ty, tz, up) {
      if (up === void 0)
        up = this.UP;
      return this.lookAt_umzdy7$(numberToDouble(tx), numberToDouble(ty), numberToDouble(tz), up);
    };
  }));
  Transform3D.prototype.lookAt_1kblma$ = function (tx, ty, tz, up) {
    if (up === void 0)
      up = this.UP;
    return this.lookAt_umzdy7$(tx, ty, tz, up);
  };
  Transform3D.prototype.setTranslationAndLookAt_i6yeas$ = function (px, py, pz, tx, ty, tz, up) {
    if (up === void 0)
      up = this.UP;
    return this.setMatrix_p62hku$(this.matrix.multiply_lb2hp0$(this.tempMat1.setToTranslation_7b5o5w$(px, py, pz), setToLookAt(this.tempMat2, this.tempVec1.setTo_y2kzbl$(px, py, pz), this.tempVec2.setTo_y2kzbl$(tx, ty, tz), up)));
  };
  Transform3D.prototype.setTranslationAndLookAt_l82i88$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.Transform3D.setTranslationAndLookAt_l82i88$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    return function (px, py, pz, tx, ty, tz, up) {
      if (up === void 0)
        up = this.UP;
      return this.setTranslationAndLookAt_i6yeas$(numberToDouble(px), numberToDouble(py), numberToDouble(pz), numberToDouble(tx), numberToDouble(ty), numberToDouble(tz), up);
    };
  }));
  Transform3D.prototype.setTranslationAndLookAt_15zvc8$ = function (px, py, pz, tx, ty, tz, up) {
    if (up === void 0)
      up = this.UP;
    return this.setTranslationAndLookAt_i6yeas$(px, py, pz, tx, ty, tz, up);
  };
  Transform3D.prototype.rotate_p5makv$ = function (x, y, z) {
    setQuaternion(this.tempEuler_0, this.rotation);
    this.setRotation_p5makv$(plus(this.tempEuler_0.x, x), plus(this.tempEuler_0.y, y), plus(this.tempEuler_0.z, z));
    return this;
  };
  Transform3D.prototype.copyFrom_opirrq$ = function (localTransform) {
    this.setMatrix_p62hku$(localTransform.matrix);
  };
  Transform3D.prototype.setToInterpolated_hwljuq$ = function (a, b, t) {
    setToInterpolated_0(this._translation_0, a.translation, b.translation, t);
    setToInterpolated_1(this._rotation_0, a.rotation, b.rotation, t);
    setToInterpolated_0(this._scale_0, a.scale, b.scale, t);
    this.matrixDirty = true;
    return this;
  };
  Transform3D.prototype.toString = function () {
    return 'Transform3D(translation=' + this.translation + ',rotation=' + this.rotation + ',scale=' + this.scale + ')';
  };
  Transform3D.prototype.clone = function () {
    return (new Transform3D()).setMatrix_p62hku$(this.matrix);
  };
  Transform3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Transform3D',
    interfaces: []
  };
  function View3D() {
    this.active = true;
    this.id = null;
    this.name = null;
    this.transform = new Transform3D();
    this._parent_8be2vx$ = null;
    this.modelMat = new Matrix3D();
  }
  Object.defineProperty(View3D.prototype, 'x', {
    get: function () {
      return this.transform.translation.x;
    },
    set: function (localX) {
      this.transform.setTranslation_6y0v78$(localX, this.y, this.z, this.localW);
    }
  });
  Object.defineProperty(View3D.prototype, 'y', {
    get: function () {
      return this.transform.translation.y;
    },
    set: function (localY) {
      this.transform.setTranslation_6y0v78$(this.x, localY, this.z, this.localW);
    }
  });
  Object.defineProperty(View3D.prototype, 'z', {
    get: function () {
      return this.transform.translation.z;
    },
    set: function (localZ) {
      this.transform.setTranslation_6y0v78$(this.x, this.y, localZ, this.localW);
    }
  });
  Object.defineProperty(View3D.prototype, 'localW', {
    get: function () {
      return this.transform.translation.w;
    },
    set: function (localW) {
      this.transform.setTranslation_6y0v78$(this.x, this.y, this.z, localW);
    }
  });
  Object.defineProperty(View3D.prototype, 'scaleX', {
    get: function () {
      return this.transform.scale.x;
    },
    set: function (scaleX) {
      this.transform.setScale_6y0v78$(scaleX, this.scaleY, this.scaleZ, this.localScaleW);
    }
  });
  Object.defineProperty(View3D.prototype, 'scaleY', {
    get: function () {
      return this.transform.scale.y;
    },
    set: function (scaleY) {
      this.transform.setScale_6y0v78$(this.scaleX, scaleY, this.scaleZ, this.localScaleW);
    }
  });
  Object.defineProperty(View3D.prototype, 'scaleZ', {
    get: function () {
      return this.transform.scale.z;
    },
    set: function (scaleZ) {
      this.transform.setScale_6y0v78$(this.scaleX, this.scaleY, scaleZ, this.localScaleW);
    }
  });
  Object.defineProperty(View3D.prototype, 'localScaleW', {
    get: function () {
      return this.transform.scale.w;
    },
    set: function (scaleW) {
      this.transform.setScale_6y0v78$(this.scaleX, this.scaleY, this.scaleZ, scaleW);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationX', {
    get: function () {
      return this.transform.rotationEuler.x;
    },
    set: function (rotationX) {
      this.transform.setRotation_p5makv$(rotationX, this.rotationY, this.rotationZ);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationY', {
    get: function () {
      return this.transform.rotationEuler.y;
    },
    set: function (rotationY) {
      this.transform.setRotation_p5makv$(this.rotationX, rotationY, this.rotationZ);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationZ', {
    get: function () {
      return this.transform.rotationEuler.z;
    },
    set: function (rotationZ) {
      this.transform.setRotation_p5makv$(this.rotationX, this.rotationY, rotationZ);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationQuatX', {
    get: function () {
      return this.transform.rotation.x;
    },
    set: function (rotationQuatX) {
      this.transform.setRotation_6y0v78$(rotationQuatX, this.rotationQuatY, this.rotationQuatZ, this.rotationQuatW);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationQuatY', {
    get: function () {
      return this.transform.rotation.y;
    },
    set: function (rotationQuatY) {
      this.transform.setRotation_6y0v78$(this.rotationQuatX, rotationQuatY, this.rotationQuatZ, this.rotationQuatW);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationQuatZ', {
    get: function () {
      return this.transform.rotation.z;
    },
    set: function (rotationQuatZ) {
      this.transform.setRotation_6y0v78$(this.rotationQuatX, this.rotationQuatY, rotationQuatZ, this.rotationQuatW);
    }
  });
  Object.defineProperty(View3D.prototype, 'rotationQuatW', {
    get: function () {
      return this.transform.rotation.w;
    },
    set: function (rotationQuatW) {
      this.transform.setRotation_6y0v78$(this.rotationQuatX, this.rotationQuatY, this.rotationQuatZ, rotationQuatW);
    }
  });
  Object.defineProperty(View3D.prototype, 'parent', {
    get: function () {
      return this._parent_8be2vx$;
    },
    set: function (value) {
      var tmp$;
      this._parent_8be2vx$ = value;
      (tmp$ = this._parent_8be2vx$) != null ? (tmp$.addChild_ltgqv1$(this), Unit) : null;
    }
  });
  View3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'View3D',
    interfaces: []
  };
  function removeFromParent($receiver) {
    var tmp$;
    (tmp$ = $receiver.parent) != null ? (tmp$.removeChild_ltgqv1$($receiver), Unit) : null;
    $receiver.parent = null;
  }
  function foreachDescendant_0($receiver, handler) {
    if ($receiver != null) {
      handler($receiver);
      if (Kotlin.isType($receiver, Container3D)) {
        var $receiver_0 = $receiver.children;
        var tmp$;
        var n = 0;
        while (n < $receiver_0.size) {
          foreachDescendant_0($receiver_0.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)), handler);
        }
      }}}
  var findByType = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.findByType_fh1jzc$', wrapFunction(function () {
    var descendants = _.com.soywiz.korge3d.descendants_dfsx3h$;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var sequence = Kotlin.kotlin.sequences.sequence_o0x0bg$;
    function Coroutine$findByType$lambda(this$findByType_0, typeClosure$T_0, isT_0, $receiver_0, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$this$findByType = this$findByType_0;
      this.local$isT = isT_0;
      this.local$tmp$ = void 0;
      this.local$$receiver = $receiver_0;
    }
    Coroutine$findByType$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$findByType$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$findByType$lambda.prototype.constructor = Coroutine$findByType$lambda;
    Coroutine$findByType$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.local$tmp$ = descendants(this.local$this$findByType).iterator();
              this.state_0 = 2;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              if (!this.local$tmp$.hasNext()) {
                this.state_0 = 5;
                continue;
              }
              var it = this.local$tmp$.next();
              if (this.local$isT(it)) {
                this.state_0 = 3;
                this.result_0 = this.local$$receiver.yield_11rb$(it, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              } else {
                this.state_0 = 4;
                continue;
              }

            case 3:
              this.state_0 = 4;
              continue;
            case 4:
              this.state_0 = 2;
              continue;
            case 5:
              return Unit;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function findByType$lambda(this$findByType_0, typeClosure$T_0, isT_0) {
      return function ($receiver_0, continuation_0, suspended) {
        var instance = new Coroutine$findByType$lambda(this$findByType_0, typeClosure$T_0, isT_0, $receiver_0, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    return function (T_0, isT, $receiver) {
      return sequence(findByType$lambda($receiver, T_0, isT));
    };
  }));
  var findByTypeWithName = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.findByTypeWithName_ulfn6s$', wrapFunction(function () {
    var descendants = _.com.soywiz.korge3d.descendants_dfsx3h$;
    var equals = Kotlin.equals;
    var Unit = Kotlin.kotlin.Unit;
    var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
    var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
    var sequence = Kotlin.kotlin.sequences.sequence_o0x0bg$;
    function Coroutine$findByTypeWithName$lambda(this$findByTypeWithName_0, typeClosure$T_0, isT_0, closure$name_0, $receiver_0, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$this$findByTypeWithName = this$findByTypeWithName_0;
      this.local$isT = isT_0;
      this.local$closure$name = closure$name_0;
      this.local$tmp$ = void 0;
      this.local$$receiver = $receiver_0;
    }
    Coroutine$findByTypeWithName$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$findByTypeWithName$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$findByTypeWithName$lambda.prototype.constructor = Coroutine$findByTypeWithName$lambda;
    Coroutine$findByTypeWithName$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.local$tmp$ = descendants(this.local$this$findByTypeWithName).iterator();
              this.state_0 = 2;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              if (!this.local$tmp$.hasNext()) {
                this.state_0 = 5;
                continue;
              }
              var it = this.local$tmp$.next();
              if (this.local$isT(it) && equals(it.name, this.local$closure$name)) {
                this.state_0 = 3;
                this.result_0 = this.local$$receiver.yield_11rb$(it, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              } else {
                this.state_0 = 4;
                continue;
              }

            case 3:
              this.state_0 = 4;
              continue;
            case 4:
              this.state_0 = 2;
              continue;
            case 5:
              return Unit;
            default:this.state_0 = 1;
              throw new Error('State Machine Unreachable execution');
          }
        } catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          } else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    function findByTypeWithName$lambda(this$findByTypeWithName_0, typeClosure$T_0, isT_0, closure$name_0) {
      return function ($receiver_0, continuation_0, suspended) {
        var instance = new Coroutine$findByTypeWithName$lambda(this$findByTypeWithName_0, typeClosure$T_0, isT_0, closure$name_0, $receiver_0, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    return function (T_0, isT, $receiver, name) {
      return sequence(findByTypeWithName$lambda($receiver, T_0, isT, name));
    };
  }));
  function Coroutine$descendants$lambda(this$descendants_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$descendants = this$descendants_0;
    this.local$view = void 0;
    this.local$$receiver_0 = void 0;
    this.local$n = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$descendants$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$descendants$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$descendants$lambda.prototype.constructor = Coroutine$descendants$lambda;
  Coroutine$descendants$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$this$descendants == null) {
              return;
            } else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$view = this.local$this$descendants;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$view, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (Kotlin.isType(this.local$view, Container3D)) {
              this.local$$receiver_0 = this.local$view.children;
              var tmp$;
              this.local$n = 0;
              this.state_0 = 4;
              continue;
            } else {
              this.state_0 = 7;
              continue;
            }

          case 4:
            if (this.local$n >= this.local$$receiver_0.size) {
              this.state_0 = 6;
              continue;
            }
            this.state_0 = 5;
            this.result_0 = this.local$$receiver.yieldAll_swo9gw$(descendants(this.local$$receiver_0.get_za3lpa$((tmp$ = this.local$n, this.local$n = tmp$ + 1 | 0, tmp$))), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 4;
            continue;
          case 6:
            return Unit;
          case 7:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function descendants$lambda(this$descendants_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$descendants$lambda(this$descendants_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function descendants($receiver) {
    return sequence(descendants$lambda($receiver));
  }
  function get_21($receiver, name) {
    if (equals($receiver != null ? $receiver.id : null, name))
      return $receiver;
    if (equals($receiver != null ? $receiver.name : null, name))
      return $receiver;
    if (Kotlin.isType($receiver, Container3D)) {
      var $receiver_0 = $receiver.children;
      var tmp$;
      var n = 0;
      while (n < $receiver_0.size) {
        var result = get_21($receiver_0.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$)), name);
        if (result != null)
          return result;
      }
    }return null;
  }
  function name_1($receiver, name) {
    $receiver.name = name;
    return $receiver;
  }
  function position_3($receiver, x, y, z, w) {
    if (w === void 0)
      w = 1.0;
    $receiver.transform.setTranslation_7b5o5w$(x, y, z, w);
    return $receiver;
  }
  var position_4 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.position_v1g5ca$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var position = _.com.soywiz.korge3d.position_w8x88i$;
    return function ($receiver, x, y, z, w) {
      if (w === void 0)
        w = 1.0;
      return position($receiver, numberToDouble(x), numberToDouble(y), numberToDouble(z), numberToDouble(w));
    };
  }));
  function position_5($receiver, x, y, z, w) {
    if (w === void 0)
      w = 1.0;
    return position_3($receiver, x, y, z, w);
  }
  function position_6($receiver, x, y, z, w) {
    if (w === void 0)
      w = 1;
    return position_3($receiver, x, y, z, w);
  }
  function rotation_1($receiver, x, y, z) {
    if (x === void 0)
      x = get_degrees_1(0);
    if (y === void 0)
      y = get_degrees_1(0);
    if (z === void 0)
      z = get_degrees_1(0);
    $receiver.transform.setRotation_p5makv$(x, y, z);
    return $receiver;
  }
  function scale_3($receiver, x, y, z, w) {
    if (x === void 0)
      x = 1.0;
    if (y === void 0)
      y = 1.0;
    if (z === void 0)
      z = 1.0;
    if (w === void 0)
      w = 1.0;
    $receiver.transform.setScale_7b5o5w$(x, y, z, w);
    return $receiver;
  }
  var scale_4 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.scale_v1g5ca$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var scale = _.com.soywiz.korge3d.scale_w8x88i$;
    return function ($receiver, x, y, z, w) {
      if (x === void 0)
        x = 1;
      if (y === void 0)
        y = 1;
      if (z === void 0)
        z = 1;
      if (w === void 0)
        w = 1;
      return scale($receiver, numberToDouble(x), numberToDouble(y), numberToDouble(z), numberToDouble(w));
    };
  }));
  var scale_5 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.scale_eh7g2e$', wrapFunction(function () {
    var scale = _.com.soywiz.korge3d.scale_w8x88i$;
    return function ($receiver, x, y, z, w) {
      if (x === void 0)
        x = 1.0;
      if (y === void 0)
        y = 1.0;
      if (z === void 0)
        z = 1.0;
      if (w === void 0)
        w = 1.0;
      return scale($receiver, x, y, z, w);
    };
  }));
  var scale_6 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.scale_tkgenm$', wrapFunction(function () {
    var scale = _.com.soywiz.korge3d.scale_w8x88i$;
    return function ($receiver, x, y, z, w) {
      if (x === void 0)
        x = 1;
      if (y === void 0)
        y = 1;
      if (z === void 0)
        z = 1;
      if (w === void 0)
        w = 1;
      return scale($receiver, x, y, z, w);
    };
  }));
  function lookAt($receiver, x, y, z) {
    $receiver.transform.lookAt_umzdy7$(x, y, z);
    return $receiver;
  }
  var lookAt_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.lookAt_g5a430$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var lookAt = _.com.soywiz.korge3d.lookAt_gie8gz$;
    return function ($receiver, x, y, z) {
      return lookAt($receiver, numberToDouble(x), numberToDouble(y), numberToDouble(z));
    };
  }));
  var lookAt_1 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.lookAt_6ynxdw$', wrapFunction(function () {
    var lookAt = _.com.soywiz.korge3d.lookAt_gie8gz$;
    return function ($receiver, x, y, z) {
      return lookAt($receiver, x, y, z);
    };
  }));
  var lookAt_2 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.lookAt_7c1zey$', wrapFunction(function () {
    var lookAt = _.com.soywiz.korge3d.lookAt_gie8gz$;
    return function ($receiver, x, y, z) {
      return lookAt($receiver, x, y, z);
    };
  }));
  function positionLookingAt($receiver, px, py, pz, tx, ty, tz) {
    $receiver.transform.setTranslationAndLookAt_i6yeas$(px, py, pz, tx, ty, tz);
    return $receiver;
  }
  var positionLookingAt_0 = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.positionLookingAt_7l26mi$', wrapFunction(function () {
    var numberToDouble = Kotlin.numberToDouble;
    var positionLookingAt = _.com.soywiz.korge3d.positionLookingAt_z8rqaa$;
    return function ($receiver, px, py, pz, tx, ty, tz) {
      return positionLookingAt($receiver, numberToDouble(px), numberToDouble(py), numberToDouble(pz), numberToDouble(tx), numberToDouble(ty), numberToDouble(tz));
    };
  }));
  function positionLookingAt_1($receiver, px, py, pz, tx, ty, tz) {
    return positionLookingAt($receiver, px, py, pz, tx, ty, tz);
  }
  function positionLookingAt_2($receiver, px, py, pz, tx, ty, tz) {
    return positionLookingAt($receiver, px, py, pz, tx, ty, tz);
  }
  function addTo_0($receiver, container) {
    container.addChild_ltgqv1$($receiver);
    return $receiver;
  }
  var mesh = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.mesh_4jy304$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var ViewWithMesh3D_init = _.com.soywiz.korge3d.ViewWithMesh3D;
    var addTo = _.com.soywiz.korge3d.addTo_ptnjq7$;
    function mesh$lambda($receiver) {
      return Unit;
    }
    return function ($receiver, mesh, callback) {
      if (callback === void 0)
        callback = mesh$lambda;
      var $receiver_0 = new ViewWithMesh3D_init(mesh);
      callback($receiver_0);
      return addTo($receiver_0, $receiver);
    };
  }));
  function ViewWithMesh3D(mesh, skeleton) {
    if (skeleton === void 0)
      skeleton = null;
    View3D.call(this);
    this.mesh = mesh;
    this.skeleton = skeleton;
    this.uniformValues_ascjm$_0 = new AG$UniformValues();
    this.rs_n8k1id$_0 = new AG$RenderState(AG$CompareMode.LESS_EQUAL);
    this.tempMat1_1rm33d$_0 = new Matrix3D();
    this.tempMat2_1rm32i$_0 = new Matrix3D();
    this.tempMat3_1rm31n$_0 = new Matrix3D();
    this.identity_wn0v7m$_0 = new Matrix3D();
    this.identityInv_mz9a63$_0 = invert(this.identity_wn0v7m$_0.clone());
  }
  ViewWithMesh3D.prototype.prepareExtraModelMatrix_p62hku$ = function (mat) {
    mat.identity();
  };
  ViewWithMesh3D.prototype.setMaterialLight_nfl6gy$ = function ($receiver, ctx, uniform, actual) {
    var tmp$;
    if (Kotlin.isType(actual, Material3D$LightColor))
      $receiver.set_8gg9u8$(uniform.u_color, actual.colorVec);
    else if (Kotlin.isType(actual, Material3D$LightTexture)) {
      actual.textureUnit.texture = (tmp$ = actual.bitmap) != null ? ctx.rctx.agBitmapTextureManager.getTextureBase_uler2c$(tmp$).base : null;
      actual.textureUnit.linear = true;
      $receiver.set_8gg9u8$(uniform.u_texUnit, actual.textureUnit);
    }};
  ViewWithMesh3D.prototype.render_uzyfj7$ = function (ctx) {
    var ag = ctx.ag;
    var $this = ctx.dynamicVertexBufferPool;
    var temp = $this.alloc();
    try {
      temp.upload_khrw8o$(this.mesh.fbuffer);
      var $receiver = Shaders3D$Companion_getInstance();
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      var meshMaterial = this.mesh.material;
      tmp$ = this.mesh.drawType;
      tmp$_1 = (tmp$_0 = this.mesh.program) != null ? tmp$_0 : ctx.shaders.getProgram3D_trpdrb$(clamp(ctx.lights.size, 0, 4), this.mesh.maxWeights, meshMaterial, this.mesh.hasTexture);
      tmp$_2 = this.mesh.layout;
      tmp$_3 = this.mesh.vertexCount;
      tmp$_4 = AG$Blending.Companion.NONE;
      var $receiver_0 = this.uniformValues_ascjm$_0;
      var tmp$_5, tmp$_6;
      $receiver_0.set_8gg9u8$($receiver.u_ProjMat, ctx.projCameraMat);
      $receiver_0.set_8gg9u8$($receiver.u_ViewMat, this.transform.globalMatrix);
      var tmp$_7 = $receiver.u_ModMat;
      var tmp$_8 = this.tempMat2_1rm32i$_0;
      var $receiver_1 = this.tempMat1_1rm33d$_0;
      this.prepareExtraModelMatrix_p62hku$($receiver_1);
      $receiver_0.set_8gg9u8$(tmp$_7, tmp$_8.multiply_lb2hp0$($receiver_1, this.modelMat));
      $receiver_0.set_8gg9u8$($receiver.u_NormMat, invert(this.tempMat3_1rm31n$_0.multiply_lb2hp0$(this.tempMat2_1rm32i$_0, this.transform.globalMatrix)));
      $receiver_0.set_8gg9u8$($receiver.u_Shiness, (tmp$_5 = meshMaterial != null ? meshMaterial.shiness : null) != null ? tmp$_5 : 0.5);
      $receiver_0.set_8gg9u8$($receiver.u_IndexOfRefraction, (tmp$_6 = meshMaterial != null ? meshMaterial.indexOfRefraction : null) != null ? tmp$_6 : 1.0);
      if (meshMaterial != null) {
        this.setMaterialLight_nfl6gy$($receiver_0, ctx, $receiver.ambient, meshMaterial.ambient);
        this.setMaterialLight_nfl6gy$($receiver_0, ctx, $receiver.diffuse, meshMaterial.diffuse);
        this.setMaterialLight_nfl6gy$($receiver_0, ctx, $receiver.emission, meshMaterial.emission);
        this.setMaterialLight_nfl6gy$($receiver_0, ctx, $receiver.specular, meshMaterial.specular);
      }var skeleton = this.skeleton;
      var skin = this.mesh.skin;
      $receiver_0.set_8gg9u8$($receiver.u_BindShapeMatrix, this.identity_wn0v7m$_0);
      $receiver_0.set_8gg9u8$($receiver.u_BindShapeMatrixInv, this.identity_wn0v7m$_0);
      if (skeleton != null && skin != null) {
        var $receiver_2 = skin.bones;
        var tmp$_9;
        var n = 0;
        while (n < $receiver_2.size) {
          var bone = $receiver_2.get_za3lpa$((tmp$_9 = n, n = tmp$_9 + 1 | 0, tmp$_9));
          var jointsBySid = skeleton.jointsBySid;
          var key = bone.name;
          var joint = jointsBySid.get(key);
          if (joint != null) {
            skin.matrices[bone.index].multiply_lb2hp0$(joint.transform.globalMatrix, joint.poseMatrixInv);
          } else {
            throw IllegalStateException_init_0(("Can't find joint with name '" + bone.name + "'").toString());
          }
        }
        $receiver_0.set_8gg9u8$($receiver.u_BindShapeMatrix, skin.bindShapeMatrix);
        $receiver_0.set_8gg9u8$($receiver.u_BindShapeMatrixInv, skin.bindShapeMatrixInv);
        $receiver_0.set_8gg9u8$($receiver.u_BoneMats, skin.matrices);
      }$receiver_0.set_8gg9u8$($receiver.u_AmbientColor, ctx.ambientColor);
      var $receiver_3 = ctx.lights;
      var n_0 = 0;
      while (n_0 < $receiver_3.size) {
        var index = n_0;
        var light = $receiver_3.get_za3lpa$(n_0);
        var lightColor = light.color;
        $receiver_0.set_8gg9u8$($receiver.lights.get_za3lpa$(index).u_sourcePos, light.transform.translation);
        $receiver_0.set_8gg9u8$($receiver.lights.get_za3lpa$(index).u_color, light.colorVec_8be2vx$.setTo_7b5o5w$(lightColor.rf, lightColor.gf, lightColor.bf, 1.0));
        $receiver_0.set_8gg9u8$($receiver.lights.get_za3lpa$(index).u_attenuation, light.attenuationVec_8be2vx$.setTo_yvo9jy$(light.constantAttenuation, light.linearAttenuation, light.quadraticAttenuation));
        n_0 = n_0 + 1 | 0;
      }
      ag.draw_36194n$(temp, tmp$_1, tmp$, tmp$_2, tmp$_3, void 0, void 0, tmp$_4, $receiver_0, void 0, void 0, this.rs_n8k1id$_0);
    }finally {
      $this.free_11rb$(temp);
    }
  };
  ViewWithMesh3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ViewWithMesh3D',
    interfaces: [View3D]
  };
  function Animator3D(animations, rootView) {
    this.animations = animations;
    this.rootView = rootView;
    this.currentTime = TimeSpan.Companion.fromMilliseconds_14dthe$(0);
  }
  Animator3D.prototype.update_za3lpa$ = function (ms) {
    this.currentTime = this.currentTime.plus_fv8bff$(TimeSpan.Companion.fromMilliseconds_14dthe$(ms));
    var $receiver = this.animations;
    var tmp$;
    var n = 0;
    loop_label: while (n < $receiver.size) {
      var animation = $receiver.get_za3lpa$((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      callback$break: do {
        var tmp$_0, tmp$_1;
        var keyFrames = animation.keyFrames;
        var fseconds = keyFrames.seconds;
        var ftransforms = keyFrames.transforms;
        var ffloats = keyFrames.floats;
        var aproperty = animation.property;
        var elapsedTimeInAnimation = this.currentTime.rem_fv8bff$(animation.totalTime);
        var n_0 = keyFrames.findIndex_fv8bff$(elapsedTimeInAnimation);
        if (n_0 < 0)
          break callback$break;
        var $receiver_0 = fseconds[n_0];
        var startTime = TimeSpan.Companion.fromSeconds_14dthe$($receiver_0);
        var endTime = (tmp$_1 = (tmp$_0 = getOrNull_0(fseconds, n_0 + 1 | 0)) != null ? TimeSpan.Companion.fromSeconds_14dthe$(tmp$_0) : null) != null ? tmp$_1 : startTime;
        var fragmentTime = endTime.minus_fv8bff$(startTime);
        if (fragmentTime.compareTo_11rb$(TimeSpan.Companion.fromMilliseconds_14dthe$(0)) <= 0)
          break callback$break;
        var ratio = elapsedTimeInAnimation.minus_fv8bff$(startTime).div_fv8bff$(fragmentTime);
        var aview = get_21(this.rootView, animation.target);
        if (aview != null) {
          switch (aproperty) {
            case 'transform':
              if (ftransforms != null) {
                if (n_0 >= ftransforms.length) {
                  throw IllegalStateException_init_0('Unexpected'.toString());
                }aview.transform.setToInterpolated_hwljuq$(ftransforms[n_0], getCyclic(ftransforms, n_0 + 1 | 0), ratio);
              }
              break;
            case 'location.X':
            case 'location.Y':
            case 'location.Z':
            case 'scale.X':
            case 'scale.Y':
            case 'scale.Z':
            case 'rotationX.ANGLE':
            case 'rotationY.ANGLE':
            case 'rotationZ.ANGLE':
              if (ffloats != null) {
                var value = interpolate_0(ratio, ffloats[n_0], ffloats[n_0 % ffloats.length]);
                switch (aproperty) {
                  case 'location.X':
                    aview.x = value;
                    break;
                  case 'location.Y':
                    aview.y = value;
                    break;
                  case 'location.Z':
                    aview.z = value;
                    break;
                  case 'scale.X':
                    aview.scaleX = value;
                    break;
                  case 'scale.Y':
                    aview.scaleY = value;
                    break;
                  case 'scale.Z':
                    aview.scaleZ = value;
                    break;
                  case 'rotationX.ANGLE':
                    aview.rotationX = get_degrees(value);
                    break;
                  case 'rotationY.ANGLE':
                    aview.rotationY = get_degrees(value);
                    break;
                  case 'rotationZ.ANGLE':
                    aview.rotationZ = get_degrees(value);
                    break;
                }
              }
              break;
            default:println('WARNING: animation.property=' + animation.property + ' not implemented');
              break;
          }
        }}
       while (false);
    }
  };
  Animator3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Animator3D',
    interfaces: []
  };
  function Animation3D(id, target, property, keyFrames) {
    Library3D$Def.call(this);
    this.id = id;
    this.target = target;
    this.property = property;
    this.keyFrames = keyFrames;
    this.totalTime = this.keyFrames.totalTime;
  }
  function Animation3D$Frames(seconds, interpolations, floats, matrices) {
    if (seconds === void 0)
      seconds = new Float32Array([]);
    if (interpolations === void 0)
      interpolations = [];
    if (floats === void 0)
      floats = null;
    if (matrices === void 0)
      matrices = null;
    this.seconds = seconds;
    this.interpolations = interpolations;
    this.floats = floats;
    this.matrices = matrices;
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var tmp$_3;
    if ((tmp$ = this.matrices) != null) {
      var destination = ArrayList_init_0(tmp$.length);
      var tmp$_4;
      for (tmp$_4 = 0; tmp$_4 !== tmp$.length; ++tmp$_4) {
        var item = tmp$[tmp$_4];
        destination.add_11rb$((new Transform3D()).setMatrix_p62hku$(item));
      }
      tmp$_3 = destination;
    } else
      tmp$_3 = null;
    this.transforms = (tmp$_0 = tmp$_3) != null ? copyToArray(tmp$_0) : null;
    this.totalFrames = this.seconds.length;
    this.totalTime = (tmp$_2 = (tmp$_1 = max_1(this.seconds)) != null ? TimeSpan.Companion.fromSeconds_14dthe$(tmp$_1) : null) != null ? tmp$_2 : TimeSpan.Companion.fromSeconds_14dthe$(0);
  }
  Animation3D$Frames.prototype.findIndex_fv8bff$ = function (time) {
    var tmp$;
    var elapsedSeconds = time.seconds;
    tmp$ = this.totalFrames - 1 | 0;
    for (var n = 0; n < tmp$; n++) {
      if (elapsedSeconds >= this.seconds[n] && elapsedSeconds < this.seconds[n + 1 | 0]) {
        return n;
      }}
    return this.totalFrames - 1 | 0;
  };
  Animation3D$Frames.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Frames',
    interfaces: []
  };
  Animation3D.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Animation3D',
    interfaces: [Library3D$Def]
  };
  Animation3D.prototype.component1 = function () {
    return this.id;
  };
  Animation3D.prototype.component2 = function () {
    return this.target;
  };
  Animation3D.prototype.component3 = function () {
    return this.property;
  };
  Animation3D.prototype.component4 = function () {
    return this.keyFrames;
  };
  Animation3D.prototype.copy_q4ckdi$ = function (id, target, property, keyFrames) {
    return new Animation3D(id === void 0 ? this.id : id, target === void 0 ? this.target : target, property === void 0 ? this.property : property, keyFrames === void 0 ? this.keyFrames : keyFrames);
  };
  Animation3D.prototype.toString = function () {
    return 'Animation3D(id=' + Kotlin.toString(this.id) + (', target=' + Kotlin.toString(this.target)) + (', property=' + Kotlin.toString(this.property)) + (', keyFrames=' + Kotlin.toString(this.keyFrames)) + ')';
  };
  Animation3D.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.target) | 0;
    result = result * 31 + Kotlin.hashCode(this.property) | 0;
    result = result * 31 + Kotlin.hashCode(this.keyFrames) | 0;
    return result;
  };
  Animation3D.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.target, other.target) && Kotlin.equals(this.property, other.property) && Kotlin.equals(this.keyFrames, other.keyFrames)))));
  };
  function Coroutine$readColladaLibrary($receiver_0, loadTextures_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver_0 = void 0;
    this.local$$receiver = $receiver_0;
    this.local$loadTextures = loadTextures_0;
  }
  Coroutine$readColladaLibrary.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readColladaLibrary.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readColladaLibrary.prototype.constructor = Coroutine$readColladaLibrary;
  Coroutine$readColladaLibrary.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$loadTextures === void 0)
              this.local$loadTextures = true;
            this.local$tmp$ = ColladaParser$Companion_getInstance();
            this.state_0 = 2;
            this.result_0 = readXml(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$$receiver_0 = this.local$tmp$.parse_473e7m$(this.result_0);
            if (this.local$loadTextures) {
              this.state_0 = 3;
              this.result_0 = this.local$$receiver_0.loadTextures(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            } else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.local$$receiver_0.instantiateMaterials();
            return this.local$$receiver_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readColladaLibrary($receiver_0, loadTextures_0, continuation_0, suspended) {
    var instance = new Coroutine$readColladaLibrary($receiver_0, loadTextures_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function ColladaParser() {
    ColladaParser$Companion_getInstance();
    this.sourceArrayParams = FastStringMap();
    this.sources = FastStringMap();
  }
  function ColladaParser$SourceParam() {
  }
  ColladaParser$SourceParam.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SourceParam',
    interfaces: []
  };
  function ColladaParser$MatrixSourceParam(name, matrices) {
    this.name_8drb17$_0 = name;
    this.matrices = matrices;
  }
  Object.defineProperty(ColladaParser$MatrixSourceParam.prototype, 'name', {
    get: function () {
      return this.name_8drb17$_0;
    }
  });
  ColladaParser$MatrixSourceParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MatrixSourceParam',
    interfaces: [ColladaParser$SourceParam]
  };
  ColladaParser$MatrixSourceParam.prototype.component1 = function () {
    return this.name;
  };
  ColladaParser$MatrixSourceParam.prototype.component2 = function () {
    return this.matrices;
  };
  ColladaParser$MatrixSourceParam.prototype.copy_o2lbie$ = function (name, matrices) {
    return new ColladaParser$MatrixSourceParam(name === void 0 ? this.name : name, matrices === void 0 ? this.matrices : matrices);
  };
  ColladaParser$MatrixSourceParam.prototype.toString = function () {
    return 'MatrixSourceParam(name=' + Kotlin.toString(this.name) + (', matrices=' + Kotlin.toString(this.matrices)) + ')';
  };
  ColladaParser$MatrixSourceParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.matrices) | 0;
    return result;
  };
  ColladaParser$MatrixSourceParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.matrices, other.matrices)))));
  };
  function ColladaParser$FloatSourceParam(name, floats) {
    this.name_6xk0mc$_0 = name;
    this.floats = floats;
  }
  Object.defineProperty(ColladaParser$FloatSourceParam.prototype, 'name', {
    get: function () {
      return this.name_6xk0mc$_0;
    }
  });
  ColladaParser$FloatSourceParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FloatSourceParam',
    interfaces: [ColladaParser$SourceParam]
  };
  ColladaParser$FloatSourceParam.prototype.component1 = function () {
    return this.name;
  };
  ColladaParser$FloatSourceParam.prototype.component2 = function () {
    return this.floats;
  };
  ColladaParser$FloatSourceParam.prototype.copy_x1t3w7$ = function (name, floats) {
    return new ColladaParser$FloatSourceParam(name === void 0 ? this.name : name, floats === void 0 ? this.floats : floats);
  };
  ColladaParser$FloatSourceParam.prototype.toString = function () {
    return 'FloatSourceParam(name=' + Kotlin.toString(this.name) + (', floats=' + Kotlin.toString(this.floats)) + ')';
  };
  ColladaParser$FloatSourceParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.floats) | 0;
    return result;
  };
  ColladaParser$FloatSourceParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.floats, other.floats)))));
  };
  function ColladaParser$NamesSourceParam(name, names) {
    this.name_s51fi0$_0 = name;
    this.names = names;
  }
  Object.defineProperty(ColladaParser$NamesSourceParam.prototype, 'name', {
    get: function () {
      return this.name_s51fi0$_0;
    }
  });
  ColladaParser$NamesSourceParam.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NamesSourceParam',
    interfaces: [ColladaParser$SourceParam]
  };
  ColladaParser$NamesSourceParam.prototype.component1 = function () {
    return this.name;
  };
  ColladaParser$NamesSourceParam.prototype.component2 = function () {
    return this.names;
  };
  ColladaParser$NamesSourceParam.prototype.copy_pqzef7$ = function (name, names) {
    return new ColladaParser$NamesSourceParam(name === void 0 ? this.name : name, names === void 0 ? this.names : names);
  };
  ColladaParser$NamesSourceParam.prototype.toString = function () {
    return 'NamesSourceParam(name=' + Kotlin.toString(this.name) + (', names=' + Kotlin.toString(this.names)) + ')';
  };
  ColladaParser$NamesSourceParam.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.names) | 0;
    return result;
  };
  ColladaParser$NamesSourceParam.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.names, other.names)))));
  };
  function ColladaParser$Source(id, params) {
    this.id = id;
    this.params = params;
  }
  ColladaParser$Source.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Source',
    interfaces: []
  };
  ColladaParser$Source.prototype.component1 = function () {
    return this.id;
  };
  ColladaParser$Source.prototype.component2 = function () {
    return this.params;
  };
  ColladaParser$Source.prototype.copy_u2hlmq$ = function (id, params) {
    return new ColladaParser$Source(id === void 0 ? this.id : id, params === void 0 ? this.params : params);
  };
  ColladaParser$Source.prototype.toString = function () {
    return 'Source(id=' + Kotlin.toString(this.id) + (', params=' + Kotlin.toString(this.params)) + ')';
  };
  ColladaParser$Source.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.params) | 0;
    return result;
  };
  ColladaParser$Source.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.params, other.params)))));
  };
  function ColladaParser$Input(semantic, offset, source, indices) {
    this.semantic = semantic;
    this.offset = offset;
    this.source = source;
    this.indices = indices;
  }
  ColladaParser$Input.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Input',
    interfaces: []
  };
  ColladaParser$Input.prototype.component1 = function () {
    return this.semantic;
  };
  ColladaParser$Input.prototype.component2 = function () {
    return this.offset;
  };
  ColladaParser$Input.prototype.component3 = function () {
    return this.source;
  };
  ColladaParser$Input.prototype.component4 = function () {
    return this.indices;
  };
  ColladaParser$Input.prototype.copy_rmt8ty$ = function (semantic, offset, source, indices) {
    return new ColladaParser$Input(semantic === void 0 ? this.semantic : semantic, offset === void 0 ? this.offset : offset, source === void 0 ? this.source : source, indices === void 0 ? this.indices : indices);
  };
  ColladaParser$Input.prototype.toString = function () {
    return 'Input(semantic=' + Kotlin.toString(this.semantic) + (', offset=' + Kotlin.toString(this.offset)) + (', source=' + Kotlin.toString(this.source)) + (', indices=' + Kotlin.toString(this.indices)) + ')';
  };
  ColladaParser$Input.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.semantic) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    result = result * 31 + Kotlin.hashCode(this.source) | 0;
    result = result * 31 + Kotlin.hashCode(this.indices) | 0;
    return result;
  };
  ColladaParser$Input.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.semantic, other.semantic) && Kotlin.equals(this.offset, other.offset) && Kotlin.equals(this.source, other.source) && Kotlin.equals(this.indices, other.indices)))));
  };
  function ColladaParser$Geometry(id, name, inputs, materialId) {
    if (inputs === void 0)
      inputs = FastStringMap();
    if (materialId === void 0)
      materialId = null;
    this.id = id;
    this.name = name;
    this.inputs = inputs;
    this.materialId = materialId;
  }
  ColladaParser$Geometry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Geometry',
    interfaces: []
  };
  ColladaParser$Geometry.prototype.component1 = function () {
    return this.id;
  };
  ColladaParser$Geometry.prototype.component2 = function () {
    return this.name;
  };
  ColladaParser$Geometry.prototype.component3 = function () {
    return this.inputs;
  };
  ColladaParser$Geometry.prototype.component4 = function () {
    return this.materialId;
  };
  ColladaParser$Geometry.prototype.copy_a0s1fz$ = function (id, name, inputs, materialId) {
    return new ColladaParser$Geometry(id === void 0 ? this.id : id, name === void 0 ? this.name : name, inputs === void 0 ? this.inputs : inputs, materialId === void 0 ? this.materialId : materialId);
  };
  ColladaParser$Geometry.prototype.toString = function () {
    return 'Geometry(id=' + Kotlin.toString(this.id) + (', name=' + Kotlin.toString(this.name)) + (', inputs=' + Kotlin.toString(this.inputs)) + (', materialId=' + Kotlin.toString(this.materialId)) + ')';
  };
  ColladaParser$Geometry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.inputs) | 0;
    result = result * 31 + Kotlin.hashCode(this.materialId) | 0;
    return result;
  };
  ColladaParser$Geometry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.inputs, other.inputs) && Kotlin.equals(this.materialId, other.materialId)))));
  };
  function ColladaParser$Skin(controllerId, controllerName, inputs, vcounts, bindShapeMatrix, jointInputs, skinSource) {
    this.controllerId = controllerId;
    this.controllerName = controllerName;
    this.inputs = inputs;
    this.vcounts = vcounts;
    this.bindShapeMatrix = bindShapeMatrix;
    this.jointInputs = jointInputs;
    this.skinSource = skinSource;
    var tmp$;
    var $receiver = this.vcounts;
    var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination.add_11rb$(item);
    }
    this.maxVcount = (tmp$ = max(destination)) != null ? tmp$ : 0;
  }
  ColladaParser$Skin.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Skin',
    interfaces: []
  };
  ColladaParser$Skin.prototype.component1 = function () {
    return this.controllerId;
  };
  ColladaParser$Skin.prototype.component2 = function () {
    return this.controllerName;
  };
  ColladaParser$Skin.prototype.component3 = function () {
    return this.inputs;
  };
  ColladaParser$Skin.prototype.component4 = function () {
    return this.vcounts;
  };
  ColladaParser$Skin.prototype.component5 = function () {
    return this.bindShapeMatrix;
  };
  ColladaParser$Skin.prototype.component6 = function () {
    return this.jointInputs;
  };
  ColladaParser$Skin.prototype.component7 = function () {
    return this.skinSource;
  };
  ColladaParser$Skin.prototype.copy_shvjyu$ = function (controllerId, controllerName, inputs, vcounts, bindShapeMatrix, jointInputs, skinSource) {
    return new ColladaParser$Skin(controllerId === void 0 ? this.controllerId : controllerId, controllerName === void 0 ? this.controllerName : controllerName, inputs === void 0 ? this.inputs : inputs, vcounts === void 0 ? this.vcounts : vcounts, bindShapeMatrix === void 0 ? this.bindShapeMatrix : bindShapeMatrix, jointInputs === void 0 ? this.jointInputs : jointInputs, skinSource === void 0 ? this.skinSource : skinSource);
  };
  ColladaParser$Skin.prototype.toString = function () {
    return 'Skin(controllerId=' + Kotlin.toString(this.controllerId) + (', controllerName=' + Kotlin.toString(this.controllerName)) + (', inputs=' + Kotlin.toString(this.inputs)) + (', vcounts=' + Kotlin.toString(this.vcounts)) + (', bindShapeMatrix=' + Kotlin.toString(this.bindShapeMatrix)) + (', jointInputs=' + Kotlin.toString(this.jointInputs)) + (', skinSource=' + Kotlin.toString(this.skinSource)) + ')';
  };
  ColladaParser$Skin.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.controllerId) | 0;
    result = result * 31 + Kotlin.hashCode(this.controllerName) | 0;
    result = result * 31 + Kotlin.hashCode(this.inputs) | 0;
    result = result * 31 + Kotlin.hashCode(this.vcounts) | 0;
    result = result * 31 + Kotlin.hashCode(this.bindShapeMatrix) | 0;
    result = result * 31 + Kotlin.hashCode(this.jointInputs) | 0;
    result = result * 31 + Kotlin.hashCode(this.skinSource) | 0;
    return result;
  };
  ColladaParser$Skin.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.controllerId, other.controllerId) && Kotlin.equals(this.controllerName, other.controllerName) && Kotlin.equals(this.inputs, other.inputs) && Kotlin.equals(this.vcounts, other.vcounts) && Kotlin.equals(this.bindShapeMatrix, other.bindShapeMatrix) && Kotlin.equals(this.jointInputs, other.jointInputs) && Kotlin.equals(this.skinSource, other.skinSource)))));
  };
  function ColladaParser$Companion() {
    ColladaParser$Companion_instance = this;
  }
  ColladaParser$Companion.prototype.parse_473e7m$ = function (xml) {
    return (new ColladaParser()).parse_473e7m$(xml);
  };
  ColladaParser$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ColladaParser$Companion_instance = null;
  function ColladaParser$Companion_getInstance() {
    if (ColladaParser$Companion_instance === null) {
      new ColladaParser$Companion();
    }return ColladaParser$Companion_instance;
  }
  ColladaParser.prototype.parse_473e7m$ = function (xml) {
    var $receiver = new Library3D();
    this.parseCameras_k8gauc$($receiver, xml);
    this.parseLights_k8gauc$($receiver, xml);
    this.parseImages_k8gauc$($receiver, xml);
    this.parseEffects_k8gauc$($receiver, xml);
    this.parseMaterials_k8gauc$($receiver, xml);
    var geometries = this.parseGeometries_k8gauc$($receiver, xml);
    this.parseAnimations_k8gauc$($receiver, xml);
    var skins = this.parseControllers_473e7m$(xml);
    this.generateGeometries_7ouonr$($receiver, geometries, skins);
    this.parseVisualScenes_k8gauc$($receiver, xml);
    this.parseScene_k8gauc$($receiver, xml);
    return $receiver;
  };
  ColladaParser.prototype.generateGeometries_7ouonr$ = function ($receiver, geometries, skins) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17, tmp$_18, tmp$_19, tmp$_20, tmp$_21, tmp$_22, tmp$_23, tmp$_24, tmp$_25, tmp$_26, tmp$_27, tmp$_28, tmp$_29, tmp$_30, tmp$_31, tmp$_32, tmp$_33;
    var geomIdToSkin = FastStringMap();
    tmp$ = skins.iterator();
    while (tmp$.hasNext()) {
      var skin = tmp$.next();
      var key = skin.skinSource;
      geomIdToSkin.set(key, skin);
    }
    tmp$_0 = geometries.iterator();
    while (tmp$_0.hasNext()) {
      var geom = tmp$_0.next();
      var px = new FloatArrayList();
      var py = new FloatArrayList();
      var pz = new FloatArrayList();
      var nx = new FloatArrayList();
      var ny = new FloatArrayList();
      var nz = new FloatArrayList();
      var u0 = new FloatArrayList();
      var v0 = new FloatArrayList();
      var array = Array_0(16);
      var tmp$_34;
      tmp$_34 = array.length - 1 | 0;
      for (var i = 0; i <= tmp$_34; i++) {
        array[i] = new FloatArrayList();
      }
      var weightIndices = array;
      var array_0 = Array_0(16);
      var tmp$_35;
      tmp$_35 = array_0.length - 1 | 0;
      for (var i_0 = 0; i_0 <= tmp$_35; i_0++) {
        array_0[i_0] = new FloatArrayList();
      }
      var weightWeights = array_0;
      var tmp$_36;
      if ((tmp$_1 = geom.inputs.get('VERTEX')) != null)
        tmp$_36 = tmp$_1;
      else {
        println('WARNING.ColladaParser.Library3D.generateGeometries: Do not have vertices!');
        tmp$_36 = null;
      }
      tmp$_2 = tmp$_36;
      if (tmp$_2 == null) {
        return;
      }var VERTEX = tmp$_2;
      var VERTEX_indices = VERTEX.indices;
      tmp$_3 = listOf(['X', 'Y', 'Z']).iterator();
      while (tmp$_3.hasNext()) {
        var pname = tmp$_3.next();
        var p = (tmp$_5 = Kotlin.isType(tmp$_4 = VERTEX.source.params.get(pname), ColladaParser$FloatSourceParam) ? tmp$_4 : null) != null ? tmp$_5.floats : null;
        switch (pname) {
          case 'X':
            tmp$_6 = px;
            break;
          case 'Y':
            tmp$_6 = py;
            break;
          case 'Z':
            tmp$_6 = pz;
            break;
          default:throw new NotImplementedError_init();
        }
        var array_1 = tmp$_6;
        if (p != null) {
          var $receiver_0 = VERTEX.indices;
          var tmp$_37;
          var n = 0;
          while (n < $receiver_0.size) {
            array_1.add_mx4ult$(p.get_za3lpa$($receiver_0.getAt_za3lpa$((tmp$_37 = n, n = tmp$_37 + 1 | 0, tmp$_37))));
          }
        }}
      var NORMAL = geom.inputs.get('NORMAL');
      if (NORMAL != null) {
        tmp$_7 = listOf(['X', 'Y', 'Z']).iterator();
        while (tmp$_7.hasNext()) {
          var pname_0 = tmp$_7.next();
          var p_0 = (tmp$_9 = Kotlin.isType(tmp$_8 = NORMAL.source.params.get(pname_0), ColladaParser$FloatSourceParam) ? tmp$_8 : null) != null ? tmp$_9.floats : null;
          switch (pname_0) {
            case 'X':
              tmp$_10 = nx;
              break;
            case 'Y':
              tmp$_10 = ny;
              break;
            case 'Z':
              tmp$_10 = nz;
              break;
            default:throw new NotImplementedError_init();
          }
          var array_2 = tmp$_10;
          if (p_0 != null) {
            var $receiver_1 = NORMAL.indices;
            var tmp$_38;
            var n_0 = 0;
            while (n_0 < $receiver_1.size) {
              array_2.add_mx4ult$(p_0.get_za3lpa$($receiver_1.getAt_za3lpa$((tmp$_38 = n_0, n_0 = tmp$_38 + 1 | 0, tmp$_38))));
            }
          }}
      }var $receiver_2 = geom.inputs;
      var key_0 = 'TEXCOORD';
      var TEXCOORD = $receiver_2.get(key_0);
      if (TEXCOORD != null) {
        tmp$_11 = listOf(['S', 'T']).iterator();
        while (tmp$_11.hasNext()) {
          var pname_1 = tmp$_11.next();
          var p_1 = (tmp$_13 = Kotlin.isType(tmp$_12 = TEXCOORD.source.params.get(pname_1), ColladaParser$FloatSourceParam) ? tmp$_12 : null) != null ? tmp$_13.floats : null;
          switch (pname_1) {
            case 'S':
              tmp$_14 = u0;
              break;
            case 'T':
              tmp$_14 = v0;
              break;
            default:throw new NotImplementedError_init();
          }
          var array_3 = tmp$_14;
          if (p_1 != null) {
            var $receiver_3 = TEXCOORD.indices;
            var tmp$_39;
            var n_1 = 0;
            while (n_1 < $receiver_3.size) {
              array_3.add_mx4ult$(p_1.get_za3lpa$($receiver_3.getAt_za3lpa$((tmp$_39 = n_1, n_1 = tmp$_39 + 1 | 0, tmp$_39))));
            }
          }}
      }var key_1 = geom.id;
      var skin_0 = geomIdToSkin.get(key_1);
      var maxWeights;
      if (skin_0 != null) {
        var tmp$_40;
        if ((tmp$_15 = skin_0.inputs.get('JOINT')) != null)
          tmp$_40 = tmp$_15;
        else {
          throw IllegalStateException_init_0("Can't find JOINT".toString());
        }
        var joint = tmp$_40;
        var tmp$_41;
        if ((tmp$_16 = skin_0.inputs.get('WEIGHT')) != null)
          tmp$_41 = tmp$_16;
        else {
          throw IllegalStateException_init_0("Can't find WEIGHT".toString());
        }
        var weight = tmp$_41;
        maxWeights = nextMultipleOf(skin_0.maxVcount, 4);
        var pos = 0;
        var jointSrcParam = Kotlin.isType(tmp$_17 = joint.source.params.get('JOINT'), ColladaParser$NamesSourceParam) ? tmp$_17 : throwCCE();
        var weightSrcParam = Kotlin.isType(tmp$_18 = weight.source.params.get('WEIGHT'), ColladaParser$FloatSourceParam) ? tmp$_18 : throwCCE();
        var jointsToIndex = FastStringMap();
        var $receiver_4 = jointSrcParam.names;
        var n_2 = 0;
        while (n_2 < $receiver_4.size) {
          var index = n_2;
          var value = $receiver_4.get_za3lpa$(n_2);
          jointsToIndex.set(value, index);
          n_2 = n_2 + 1 | 0;
        }
        tmp$_19 = skin_0.vcounts.iterator();
        while (tmp$_19.hasNext()) {
          var vcount = tmp$_19.next();
          var weightSum = 0.0;
          for (var n_3 = 0; n_3 < vcount; n_3++) {
            var jointIndex = joint.indices.get_za3lpa$(pos);
            var w = weightSrcParam.floats.get_za3lpa$(weight.indices.get_za3lpa$(pos));
            weightIndices[n_3].add_mx4ult$(jointIndex);
            weightWeights[n_3].add_mx4ult$(w);
            weightSum += w;
            pos = pos + 1 | 0;
          }
          tmp$_20 = maxWeights;
          for (var n_4 = vcount; n_4 < tmp$_20; n_4++) {
            weightIndices[n_4].add_mx4ult$(0.0);
            weightWeights[n_4].add_mx4ult$(0.0);
          }
          var x = weightSum - 1.0;
          if (Math_0.abs(x) > 1.0E-4) {
            println('Not normalized weights: weightSum=' + weightSum + ', weightWeights=' + toList(weightWeights));
          }}
      } else {
        maxWeights = 0;
      }
      if (skin_0 != null) {
        var tmp$_42;
        if ((tmp$_21 = skin_0.jointInputs.get('JOINT')) != null)
          tmp$_42 = tmp$_21;
        else {
          throw IllegalStateException_init_0("Can't find JOINT".toString());
        }
        var JOINT = tmp$_42;
        var tmp$_43;
        var $receiver_5 = skin_0.jointInputs;
        var key_2 = 'INV_BIND_MATRIX';
        if ((tmp$_22 = $receiver_5.get(key_2)) != null)
          tmp$_43 = tmp$_22;
        else {
          throw IllegalStateException_init_0("Can't find INV_BIND_MATRIX".toString());
        }
        var INV_BIND_MATRIX = tmp$_43;
        var tmp$_44;
        if ((tmp$_25 = (tmp$_24 = Kotlin.isType(tmp$_23 = JOINT.source.params.get('JOINT'), ColladaParser$NamesSourceParam) ? tmp$_23 : null) != null ? tmp$_24.names : null) != null)
          tmp$_44 = tmp$_25;
        else {
          throw IllegalStateException_init_0("Can't find JOINT.JOINT".toString());
        }
        var JOINT_NAMES = tmp$_44;
        var tmp$_45;
        var $receiver_6 = INV_BIND_MATRIX.source.params;
        var key_3 = 'TRANSFORM';
        if ((tmp$_28 = (tmp$_27 = Kotlin.isType(tmp$_26 = $receiver_6.get(key_3), ColladaParser$MatrixSourceParam) ? tmp$_26 : null) != null ? tmp$_27.matrices : null) != null)
          tmp$_45 = tmp$_28;
        else {
          throw IllegalStateException_init_0("Can't find INV_BIND_MATRIX.TRANSFORM".toString());
        }
        var TRANSFORM = tmp$_45;
        var tmp$_46 = skin_0.controllerId;
        var tmp$_47 = skin_0.controllerName;
        var tmp$_48 = skin_0.bindShapeMatrix;
        var tmp$_49 = skin_0.skinSource;
        var $receiver_7 = withIndex(zip_0(JOINT_NAMES, TRANSFORM));
        var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_7, 10));
        var tmp$_50;
        tmp$_50 = $receiver_7.iterator();
        while (tmp$_50.hasNext()) {
          var item = tmp$_50.next();
          destination.add_11rb$(new Library3D$BoneDef(item.index, item.value.first, item.value.second));
        }
        var skin_1 = new Library3D$SkinDef(tmp$_46, tmp$_47, tmp$_48, tmp$_49, destination);
        var $receiver_8 = skin_1.bones;
        var tmp$_51;
        var n_5 = 0;
        while (n_5 < $receiver_8.size) {
          $receiver_8.get_za3lpa$((tmp$_51 = n_5, n_5 = tmp$_51 + 1 | 0, tmp$_51)).skin = skin_1;
        }
        var $receiver_9 = $receiver.skinDefs;
        var key_4 = skin_1.controllerId;
        $receiver_9.set(key_4, skin_1);
        tmp$_29 = skin_1;
      } else {
        tmp$_29 = null;
      }
      var skinDef = tmp$_29;
      var combinedData = floatArrayListOf(new Float32Array([]));
      var hasNormals = nx.size >= px.size;
      var hasTexture = TEXCOORD != null;
      tmp$_30 = px.size;
      for (var n_6 = 0; n_6 < tmp$_30; n_6++) {
        combinedData.add_mx4ult$(px.get_za3lpa$(n_6));
        combinedData.add_mx4ult$(py.get_za3lpa$(n_6));
        combinedData.add_mx4ult$(pz.get_za3lpa$(n_6));
        if (hasNormals) {
          combinedData.add_mx4ult$(nx.get_za3lpa$(n_6));
          combinedData.add_mx4ult$(ny.get_za3lpa$(n_6));
          combinedData.add_mx4ult$(nz.get_za3lpa$(n_6));
        }if (hasTexture) {
          combinedData.add_mx4ult$(u0.get_za3lpa$(n_6));
          combinedData.add_mx4ult$(1.0 - v0.get_za3lpa$(n_6));
        }if (maxWeights > 0) {
          tmp$_31 = maxWeights;
          for (var m = 0; m < tmp$_31; m++) {
            combinedData.add_mx4ult$(weightIndices[m].get_za3lpa$(VERTEX_indices.get_za3lpa$(n_6)));
          }
        }if (maxWeights > 0) {
          tmp$_32 = maxWeights;
          for (var m_0 = 0; m_0 < tmp$_32; m_0++) {
            combinedData.add_mx4ult$(weightWeights[m_0].get_za3lpa$(VERTEX_indices.get_za3lpa$(n_6)));
          }
        }}
      var materialDef = (tmp$_33 = geom.materialId) != null ? $receiver.materialDefs.get(tmp$_33) : null;
      var tmp$_52 = $receiver.geometryDefs;
      var tmp$_53 = geom.id;
      var tmp$_54 = toFBuffer(combinedData);
      var $receiver_10 = ArrayList_init_1();
      var closure$maxWeights = maxWeights;
      $receiver_10.add_11rb$(Shaders3D$Companion_getInstance().a_pos);
      if (hasNormals)
        $receiver_10.add_11rb$(Shaders3D$Companion_getInstance().a_norm);
      if (hasTexture)
        $receiver_10.add_11rb$(Shaders3D$Companion_getInstance().a_tex);
      for (var n_7 = 0; n_7 < 4; n_7++)
        if (closure$maxWeights > (n_7 * 4 | 0))
          $receiver_10.add_11rb$(Shaders3D$Companion_getInstance().a_boneIndex[n_7]);
      for (var n_8 = 0; n_8 < 4; n_8++)
        if (closure$maxWeights > (n_8 * 4 | 0))
          $receiver_10.add_11rb$(Shaders3D$Companion_getInstance().a_weight[n_8]);
      var $receiver_11 = new Mesh3D(tmp$_54, VertexLayout_init_0($receiver_10), null, AG$DrawType.TRIANGLES, hasTexture, maxWeights);
      if (skinDef != null) {
        $receiver_11.skin = skinDef.toSkin();
      }var value_0 = new Library3D$GeometryDef($receiver_11, skinDef, materialDef);
      tmp$_52.set(tmp$_53, value_0);
    }
  };
  ColladaParser.prototype.parseScene_k8gauc$ = function ($receiver, xml) {
    var tmp$;
    var scene = xml.get_61zpoe$('scene');
    tmp$ = get_1(scene, 'instance_visual_scene').iterator();
    while (tmp$.hasNext()) {
      var instance_visual_scene = tmp$.next();
      var id = trim_0(instance_visual_scene.str_puj7f4$('url'), Kotlin.charArrayOf(35));
      var scene_0 = $receiver.scenes.get(id);
      if (scene_0 != null) {
        $receiver.mainScene.children.add_11rb$(scene_0);
      }}
  };
  ColladaParser.prototype.parseControllers_473e7m$ = function (xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15;
    var skins = ArrayList_init_1();
    tmp$ = get_1(xml.get_61zpoe$('library_controllers'), 'controller').iterator();
    while (tmp$.hasNext()) {
      var controller = tmp$.next();
      var controllerId = controller.str_puj7f4$('id');
      var controllerName = controller.str_puj7f4$('name');
      var skin = firstOrNull(controller.get_61zpoe$('skin'));
      if (skin != null) {
        var skinSource = skin.str_puj7f4$('source');
        var bindShapeMatrix = (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$_0 = firstOrNull(skin.get_61zpoe$('bind_shape_matrix'))) != null ? tmp$_0.text : null) != null ? reader(tmp$_1) : null) != null ? readMatrix3D(tmp$_2) : null) != null ? tmp$_3 : new Matrix3D();
        tmp$_4 = this.parseSources_figk0a$(skin, this.sourceArrayParams).iterator();
        while (tmp$_4.hasNext()) {
          var source = tmp$_4.next();
          var $receiver = this.sources;
          var key = source.id;
          $receiver.set(key, source);
        }
        var jointsXml = firstOrNull(skin.get_61zpoe$('joints'));
        var jointInputs = FastStringMap();
        if (jointsXml != null) {
          tmp$_5 = jointsXml.get_61zpoe$('input').iterator();
          while (tmp$_5.hasNext()) {
            var input = tmp$_5.next();
            var semantic = input.str_puj7f4$('semantic');
            var sourceId = trim_0(input.str_puj7f4$('source'), Kotlin.charArrayOf(35));
            var offset = input.int_bm4lxs$('offset');
            tmp$_6 = this.sources.get(sourceId);
            if (tmp$_6 == null) {
              continue;
            }var source_0 = tmp$_6;
            var value = new ColladaParser$Input(semantic, offset, source_0, intArrayListOf(new Int32Array([])));
            jointInputs.set(semantic, value);
          }
        }var vertexWeightsXml = firstOrNull(skin.get_61zpoe$('vertex_weights'));
        var inputs = ArrayList_init_1();
        if (vertexWeightsXml != null) {
          var count = vertexWeightsXml.int_bm4lxs$('count');
          var vcount = reader((tmp$_8 = (tmp$_7 = firstOrNull(vertexWeightsXml.get_61zpoe$('vcount'))) != null ? tmp$_7.text : null) != null ? tmp$_8 : '').readInts_38vc8i$();
          var v = reader((tmp$_10 = (tmp$_9 = firstOrNull(vertexWeightsXml.get_61zpoe$('v'))) != null ? tmp$_9.text : null) != null ? tmp$_10 : '').readInts_38vc8i$();
          tmp$_11 = vertexWeightsXml.get_61zpoe$('input').iterator();
          while (tmp$_11.hasNext()) {
            var input_0 = tmp$_11.next();
            var semantic_0 = input_0.str_puj7f4$('semantic');
            var sourceId_0 = trim_0(input_0.str_puj7f4$('source'), Kotlin.charArrayOf(35));
            var offset_0 = input_0.int_bm4lxs$('offset');
            tmp$_12 = this.sources.get(sourceId_0);
            if (tmp$_12 == null) {
              continue;
            }var source_1 = tmp$_12;
            var element = new ColladaParser$Input(semantic_0, offset_0, source_1, intArrayListOf(new Int32Array([])));
            inputs.add_11rb$(element);
          }
          var destination = ArrayList_init_0(collectionSizeOrDefault(inputs, 10));
          var tmp$_16;
          tmp$_16 = inputs.iterator();
          while (tmp$_16.hasNext()) {
            var item = tmp$_16.next();
            destination.add_11rb$(item.offset);
          }
          var stride = ((tmp$_13 = max(destination)) != null ? tmp$_13 : 0) + 1 | 0;
          tmp$_14 = inputs.iterator();
          while (tmp$_14.hasNext()) {
            var i = tmp$_14.next();
            tmp$_15 = v.size / stride | 0;
            for (var n = 0; n < tmp$_15; n++) {
              i.indices.plusAssign_za3lpa$(v.get_za3lpa$(Kotlin.imul(n, stride) + i.offset | 0));
            }
          }
          var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(inputs, 10)), 16);
          var destination_0 = LinkedHashMap_init_0(capacity);
          var tmp$_17;
          tmp$_17 = inputs.iterator();
          while (tmp$_17.hasNext()) {
            var element_0 = tmp$_17.next();
            var pair = to(element_0.semantic, element_0);
            destination_0.put_xwzc9p$(pair.first, pair.second);
          }
          var element_1 = new ColladaParser$Skin(controllerId, controllerName, toFast(toMap_0(destination_0)), vcount, bindShapeMatrix, jointInputs, trim_0(skinSource, Kotlin.charArrayOf(35)));
          skins.add_11rb$(element_1);
        }}}
    return skins;
  };
  ColladaParser.prototype.parseMaterials_k8gauc$ = function ($receiver, xml) {
    var tmp$;
    tmp$ = get_1(xml.get_61zpoe$('library_materials'), 'material').iterator();
    while (tmp$.hasNext()) {
      var materialXml = tmp$.next();
      var materialId = materialXml.str_puj7f4$('id');
      var materialName = materialXml.str_puj7f4$('name');
      var $receiver_0 = materialXml.get_61zpoe$('instance_effect');
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        var tmp$_1 = destination.add_11rb$;
        var $receiver_1 = $receiver.effectDefs;
        var key = trim_0(item.str_puj7f4$('url'), Kotlin.charArrayOf(35));
        tmp$_1.call(destination, $receiver_1.get(key));
      }
      var effects = filterNotNull(destination);
      var material = new Library3D$MaterialDef(materialId, materialName, effects);
      $receiver.materialDefs.set(materialId, material);
    }
  };
  ColladaParser.prototype.parseLightKindType_29fo0v$ = function ($receiver, xml, lightKind, params) {
    var tmp$;
    if (xml == null)
      return null;
    var nodeName = xml.nameLC;
    var colorXml = firstOrNull(xml.get_61zpoe$('color'));
    if (colorXml != null) {
      var sid = colorXml.str_puj7f4$('sid');
      var f = reader(colorXml.text).readFloats_7u0t7$();
      return new Library3D$LightColorDef(sid, RGBA.Companion.float_7b5o5w$(f.get_za3lpa$(0), f.get_za3lpa$(1), f.get_za3lpa$(2), f.get_za3lpa$(3)), lightKind);
    }var textureXml = firstOrNull(xml.get_61zpoe$('texture'));
    if (textureXml != null) {
      var key = textureXml.str_puj7f4$('texture');
      return new Library3D$LightTexDef(nodeName, (tmp$ = params.get(key)) == null || Kotlin.isType(tmp$, Library3D$EffectParamSampler2D) ? tmp$ : null, lightKind);
    }return null;
  };
  ColladaParser.prototype.parseEffects_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11;
    tmp$ = get_1(xml.get_61zpoe$('library_effects'), 'effect').iterator();
    while (tmp$.hasNext()) {
      var effectXml = tmp$.next();
      var effectId = effectXml.str_puj7f4$('id');
      var effectName = effectXml.str_puj7f4$('name');
      var profile_COMMONXml = firstOrNull(effectXml.get_61zpoe$('profile_COMMON'));
      if (profile_COMMONXml != null) {
        var emission = null;
        var ambient = null;
        var diffuse = null;
        var specular = null;
        var shiness = null;
        var index_of_refraction = null;
        var params = FastStringMap();
        tmp$_0 = profile_COMMONXml.allNodeChildren.iterator();
        while (tmp$_0.hasNext()) {
          var nodeXml = tmp$_0.next();
          switch (nodeXml.nameLC) {
            case 'newparam':
              var sid = nodeXml.str_puj7f4$('sid');
              var surfaceXml = firstOrNull(nodeXml.get_61zpoe$('surface'));
              if (surfaceXml != null) {
                var surfaceType = surfaceXml.str_puj7f4$('type');
                var initFrom = get_text(surfaceXml.get_61zpoe$('init_from'));
                var image = $receiver.imageDefs.get(initFrom);
                var value = new Library3D$EffectParamSurface(surfaceType, image);
                params.set(sid, value);
              }
              var sampler2DSource = get_firstText(get_1(nodeXml.get_61zpoe$('sampler2D'), 'source'));
              if (sampler2DSource != null) {
                var value_0 = new Library3D$EffectParamSampler2D((tmp$_1 = params.get(sampler2DSource)) == null || Kotlin.isType(tmp$_1, Library3D$EffectParamSurface) ? tmp$_1 : null);
                params.set(sid, value_0);
              }
              break;
            case 'technique':
              var sid_0 = nodeXml.str_puj7f4$('sid');
              tmp$_2 = nodeXml.allNodeChildren.iterator();
              while (tmp$_2.hasNext()) {
                var tech = tmp$_2.next();
                switch (tech.nameLC) {
                  case 'gouraud':
                  case 'phong':
                  case 'lambert':
                    emission = (tmp$_3 = this.parseLightKindType_29fo0v$($receiver, firstOrNull(tech.get_61zpoe$('emission')), tech.nameLC, params)) != null ? tmp$_3 : emission;
                    ambient = (tmp$_4 = this.parseLightKindType_29fo0v$($receiver, firstOrNull(tech.get_61zpoe$('ambient')), tech.nameLC, params)) != null ? tmp$_4 : ambient;
                    diffuse = (tmp$_5 = this.parseLightKindType_29fo0v$($receiver, firstOrNull(tech.get_61zpoe$('diffuse')), tech.nameLC, params)) != null ? tmp$_5 : diffuse;
                    specular = (tmp$_6 = this.parseLightKindType_29fo0v$($receiver, firstOrNull(tech.get_61zpoe$('specular')), tech.nameLC, params)) != null ? tmp$_6 : specular;
                    shiness = (tmp$_9 = (tmp$_8 = (tmp$_7 = get_firstText(get_1(tech.get_61zpoe$('shiness'), 'float'))) != null ? toDoubleOrNull(tmp$_7) : null) != null ? tmp$_8 / 100.0 : null) != null ? tmp$_9 : shiness;
                    index_of_refraction = (tmp$_11 = (tmp$_10 = get_firstText(get_1(tech.get_61zpoe$('index_of_refraction'), 'float'))) != null ? toDoubleOrNull(tmp$_10) : null) != null ? tmp$_11 : index_of_refraction;
                    break;
                  case 'extra':
                    break;
                  default:println('WARNING: Unsupported library_effects.effect.profile_COMMON.technique.' + tech.nameLC);
                    break;
                }
              }

              break;
            case 'extra':
              break;
            default:println('WARNING: Unsupported library_effects.effect.profile_COMMON.' + nodeXml.nameLC);
              break;
          }
        }
        var $receiver_0 = $receiver.effectDefs;
        var value_1 = new Library3D$StandardEffectDef(effectId, effectName, emission, ambient, diffuse, specular, shiness, index_of_refraction);
        $receiver_0.set(effectId, value_1);
      }}
  };
  ColladaParser.prototype.parseImages_k8gauc$ = function ($receiver, xml) {
    var tmp$;
    tmp$ = get_1(xml.get_61zpoe$('library_images'), 'image').iterator();
    while (tmp$.hasNext()) {
      var image = tmp$.next();
      var imageId = image.str_puj7f4$('id');
      var imageName = image.str_puj7f4$('name');
      var $receiver_0 = get_text(image.get_61zpoe$('init_from'));
      var tmp$_0;
      var initFrom = trim(Kotlin.isCharSequence(tmp$_0 = $receiver_0) ? tmp$_0 : throwCCE()).toString();
      var $receiver_1 = $receiver.imageDefs;
      var value = new Library3D$ImageDef(imageId, imageName, initFrom);
      $receiver_1.set(imageId, value);
    }
  };
  ColladaParser.prototype.parseAnimations_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10;
    var sources = FastStringMap();
    tmp$ = get_1(xml.get_61zpoe$('library_animations'), 'animation').iterator();
    while (tmp$.hasNext()) {
      var animationXml = tmp$.next();
      var srcs = this.parseSources_figk0a$(animationXml, sources);
      var animationId = animationXml.str_puj7f4$('id');
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(srcs, 10)), 16);
      var destination = LinkedHashMap_init_0(capacity);
      var tmp$_11;
      tmp$_11 = srcs.iterator();
      while (tmp$_11.hasNext()) {
        var element = tmp$_11.next();
        destination.put_xwzc9p$(element.id, element);
      }
      var sourcesById = destination;
      var samplerXml = firstOrNull(animationXml.get_61zpoe$('sampler'));
      var inputParams = FastStringMap();
      if (samplerXml != null) {
        var samplerId = samplerXml.str_puj7f4$('id');
        tmp$_0 = samplerXml.get_61zpoe$('input').iterator();
        while (tmp$_0.hasNext()) {
          var inputXml = tmp$_0.next();
          var inputSemantic = inputXml.str_puj7f4$('semantic');
          var inputSourceId = trim_0(inputXml.str_puj7f4$('source'), Kotlin.charArrayOf(35));
          var value = sourcesById.get_11rb$(inputSourceId);
          inputParams.set(inputSemantic, value);
        }
      }var channelXml = firstOrNull(animationXml.get_61zpoe$('channel'));
      if (channelXml != null) {
        var channelSource = trim_0(channelXml.str_puj7f4$('source'), Kotlin.charArrayOf(35));
        var channelTargetInfo = split_0(channelXml.str_puj7f4$('target'), Kotlin.charArrayOf(47), void 0, 2);
        var channelTarget = 0 >= 0 && 0 <= get_lastIndex_1(channelTargetInfo) ? channelTargetInfo.get_za3lpa$(0) : '';
        var channelProp = 1 >= 0 && 1 <= get_lastIndex_1(channelTargetInfo) ? channelTargetInfo.get_za3lpa$(1) : '';
        var tmp$_12;
        if ((tmp$_1 = this.getFloats_vlhee9$(inputParams, 'INPUT', 'TIME')) != null)
          tmp$_12 = tmp$_1;
        else {
          throw IllegalStateException_init_0(("Can't find INPUT.TIME for animationId=" + animationId).toString());
        }
        var times = tmp$_12;
        var tmp$_13;
        if ((tmp$_2 = this.getStrings_vlhee9$(inputParams, 'INTERPOLATION', 'INTERPOLATION')) != null)
          tmp$_13 = tmp$_2;
        else {
          throw IllegalStateException_init_0(("Can't find INTERPOLATION.INTERPOLATION for animationId=" + animationId).toString());
        }
        var interpolations = tmp$_13;
        var outputSourceParam = (tmp$_5 = (tmp$_4 = (tmp$_3 = inputParams.get('OUTPUT')) != null ? tmp$_3.params : null) != null ? get_values(tmp$_4) : null) != null ? first_0(tmp$_5) : null;
        var matrices = (tmp$_7 = (tmp$_6 = outputSourceParam) == null || Kotlin.isType(tmp$_6, ColladaParser$MatrixSourceParam) ? tmp$_6 : null) != null ? tmp$_7.matrices : null;
        var floats = (tmp$_10 = (tmp$_9 = (tmp$_8 = outputSourceParam) == null || Kotlin.isType(tmp$_8, ColladaParser$FloatSourceParam) ? tmp$_8 : null) != null ? tmp$_9.floats : null) != null ? tmp$_10.toFloatArray() : null;
        var frames = new Animation3D$Frames(times, interpolations, floats, matrices);
        var $receiver_0 = $receiver.animationDefs;
        var value_0 = new Animation3D(animationId, channelTarget, channelProp, frames);
        $receiver_0.set(animationId, value_0);
      }}
  };
  ColladaParser.prototype.getMatrices_vlhee9$ = function ($receiver, a, b) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    return (tmp$_2 = (tmp$_1 = (tmp$_0 = (tmp$ = $receiver.get(a)) != null ? tmp$.params : null) != null ? tmp$_0.get(b) : null) == null || Kotlin.isType(tmp$_1, ColladaParser$MatrixSourceParam) ? tmp$_1 : null) != null ? tmp$_2.matrices : null;
  };
  ColladaParser.prototype.getStrings_vlhee9$ = function ($receiver, a, b) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$_0 = (tmp$ = $receiver.get(a)) != null ? tmp$.params : null) != null ? tmp$_0.get(b) : null) == null || Kotlin.isType(tmp$_1, ColladaParser$NamesSourceParam) ? tmp$_1 : null) != null ? tmp$_2.names : null) != null ? copyToArray(tmp$_3) : null;
  };
  ColladaParser.prototype.getFloats_vlhee9$ = function ($receiver, a, b) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$_0 = (tmp$ = $receiver.get(a)) != null ? tmp$.params : null) != null ? tmp$_0.get(b) : null) == null || Kotlin.isType(tmp$_1, ColladaParser$FloatSourceParam) ? tmp$_1 : null) != null ? tmp$_2.floats : null) != null ? tmp$_3.toFloatArray() : null;
  };
  ColladaParser.prototype.parseLights_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17;
    tmp$ = get_1(xml.get_61zpoe$('library_lights'), 'light').iterator();
    while (tmp$.hasNext()) {
      var light = tmp$.next();
      var lightDef = null;
      var id = light.str_puj7f4$('id');
      var name = light.str_puj7f4$('name');
      tmp$_0 = get_allNodeChildren(light.get_61zpoe$('technique_common')).iterator();
      while (tmp$_0.hasNext()) {
        var technique = tmp$_0.next();
        switch (technique.nameLC) {
          case 'point':
            var color = (tmp$_4 = (tmp$_3 = (tmp$_2 = (tmp$_1 = firstOrNull(technique.get_61zpoe$('color'))) != null ? tmp$_1.text : null) != null ? reader(tmp$_2) : null) != null ? readVector3D(tmp$_3) : null) != null ? tmp$_4 : Vector3D.Companion.invoke_tjonv8$(1, 1, 1);
            var constant_attenuation = (tmp$_7 = (tmp$_6 = (tmp$_5 = firstOrNull(technique.get_61zpoe$('constant_attenuation'))) != null ? tmp$_5.text : null) != null ? toDoubleOrNull(tmp$_6) : null) != null ? tmp$_7 : 1.0;
            var linear_attenuation = (tmp$_10 = (tmp$_9 = (tmp$_8 = firstOrNull(technique.get_61zpoe$('linear_attenuation'))) != null ? tmp$_8.text : null) != null ? toDoubleOrNull(tmp$_9) : null) != null ? tmp$_10 : 0.0;
            var quadratic_attenuation = (tmp$_13 = (tmp$_12 = (tmp$_11 = firstOrNull(technique.get_61zpoe$('quadratic_attenuation'))) != null ? tmp$_11.text : null) != null ? toDoubleOrNull(tmp$_12) : null) != null ? tmp$_13 : 0.00111109;
            lightDef = new Library3D$PointLightDef(RGBA.Companion.float_7b5o5w$(color.x, color.y, color.z, 1.0), constant_attenuation, linear_attenuation, quadratic_attenuation);
            break;
          case 'ambient':
            var color_0 = (tmp$_17 = (tmp$_16 = (tmp$_15 = (tmp$_14 = firstOrNull(technique.get_61zpoe$('color'))) != null ? tmp$_14.text : null) != null ? reader(tmp$_15) : null) != null ? readVector3D(tmp$_16) : null) != null ? tmp$_17 : Vector3D.Companion.invoke_tjonv8$(1, 1, 1);
            lightDef = new Library3D$AmbientLightDef(RGBA.Companion.float_7b5o5w$(color_0.x, color_0.y, color_0.z, 1.0));
            break;
          default:println('WARNING: Unsupported light.technique_common.' + technique.nameLC);
            break;
        }
      }
      if (lightDef != null) {
        var $receiver_0 = $receiver.lightDefs;
        var value = lightDef;
        $receiver_0.set(id, value);
      }}
  };
  ColladaParser.prototype.parseCameras_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12;
    tmp$ = get_1(xml.get_61zpoe$('library_cameras'), 'camera').iterator();
    while (tmp$.hasNext()) {
      var camera = tmp$.next();
      var id = (tmp$_0 = camera.getString_61zpoe$('id')) != null ? tmp$_0 : 'Unknown';
      var name = (tmp$_1 = camera.getString_61zpoe$('name')) != null ? tmp$_1 : 'Unknown';
      var persp = {v: null};
      tmp$_2 = get_allChildren(get_1(camera.get_61zpoe$('optics'), 'technique_common')).iterator();
      while (tmp$_2.hasNext()) {
        var v = tmp$_2.next();
        switch (v.nameLC) {
          case '_text_':
            break;
          case 'perspective':
            var xfov = (tmp$_5 = (tmp$_4 = (tmp$_3 = firstOrNull(v.get_61zpoe$('xfov'))) != null ? tmp$_3.text : null) != null ? toDoubleOrNull(tmp$_4) : null) != null ? tmp$_5 : 45.0;
            var znear = (tmp$_8 = (tmp$_7 = (tmp$_6 = firstOrNull(v.get_61zpoe$('znear'))) != null ? tmp$_6.text : null) != null ? toDoubleOrNull(tmp$_7) : null) != null ? tmp$_8 : 0.01;
            var zfar = (tmp$_11 = (tmp$_10 = (tmp$_9 = firstOrNull(v.get_61zpoe$('zfar'))) != null ? tmp$_9.text : null) != null ? toDoubleOrNull(tmp$_10) : null) != null ? tmp$_11 : 100.0;
            persp.v = new Library3D$PerspectiveCameraDef(get_degrees(xfov), znear, zfar);
            break;
          default:break;
        }
      }
      var $receiver_0 = $receiver.cameraDefs;
      var value = (tmp$_12 = persp.v) != null ? tmp$_12 : new Library3D$CameraDef();
      $receiver_0.set(id, value);
    }
  };
  ColladaParser.prototype.parseGeometries_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13, tmp$_14, tmp$_15, tmp$_16, tmp$_17, tmp$_18, tmp$_19, tmp$_20, tmp$_21, tmp$_22, tmp$_23, tmp$_24;
    var geometries = ArrayList_init_1();
    tmp$ = get_1(xml.get_61zpoe$('library_geometries'), 'geometry').iterator();
    while (tmp$.hasNext()) {
      var geometry = tmp$.next();
      var id = (tmp$_0 = geometry.getString_61zpoe$('id')) != null ? tmp$_0 : 'unknown';
      var name = (tmp$_1 = geometry.getString_61zpoe$('name')) != null ? tmp$_1 : 'unknown';
      var geom = new ColladaParser$Geometry(id, name);
      geometries.add_11rb$(geom);
      tmp$_2 = geometry.get_61zpoe$('mesh').iterator();
      while (tmp$_2.hasNext()) {
        var mesh = tmp$_2.next();
        tmp$_3 = this.parseSources_figk0a$(mesh, this.sourceArrayParams).iterator();
        while (tmp$_3.hasNext()) {
          var source = tmp$_3.next();
          var $receiver_0 = this.sources;
          var key = source.id;
          $receiver_0.set(key, source);
        }
        tmp$_4 = mesh.get_61zpoe$('vertices').iterator();
        while (tmp$_4.hasNext()) {
          var vertices = tmp$_4.next();
          var verticesId = (tmp$_6 = (tmp$_5 = vertices.getString_61zpoe$('id')) != null ? tmp$_5 : vertices.getString_61zpoe$('name')) != null ? tmp$_6 : 'unknown';
          tmp$_7 = vertices.get_61zpoe$('input').iterator();
          while (tmp$_7.hasNext()) {
            var input = tmp$_7.next();
            var semantic = input.str_puj7f4$('semantic', 'UNKNOWN');
            var source_0 = (tmp$_9 = (tmp$_8 = input.getString_61zpoe$('source')) != null ? trim_0(tmp$_8, Kotlin.charArrayOf(35)) : null) != null ? tmp$_9 : 'unknown';
            var rsource = this.sources.get(source_0);
            if (rsource != null) {
              this.sources.set(verticesId, rsource);
            }}
        }
        var triangles = (tmp$_12 = (tmp$_10 = mesh.get_61zpoe$('triangles')) != null ? firstOrNull(tmp$_10) : null) != null ? tmp$_12 : (tmp$_11 = mesh.get_61zpoe$('polylist')) != null ? firstOrNull(tmp$_11) : null;
        if (triangles != null) {
          if (!equals(triangles.nameLC, 'triangles')) {
            println('WARNING: polylist instead of triangles not fully implemented!');
          }var trianglesCount = (tmp$_13 = triangles.getInt_61zpoe$('count')) != null ? tmp$_13 : 0;
          geom.materialId = triangles.getString_61zpoe$('material');
          var stride = {v: 1};
          var inputs = ArrayList_init_1();
          tmp$_14 = triangles.get_61zpoe$('input').iterator();
          while (tmp$_14.hasNext()) {
            var input_0 = tmp$_14.next();
            var offset = (tmp$_15 = input_0.getInt_61zpoe$('offset')) != null ? tmp$_15 : 0;
            var a = stride.v;
            var b = offset + 1 | 0;
            stride.v = Math_0.max(a, b);
            var semantic_0 = (tmp$_16 = input_0.getString_61zpoe$('semantic')) != null ? tmp$_16 : 'unknown';
            var source_1 = (tmp$_18 = (tmp$_17 = input_0.getString_61zpoe$('source')) != null ? trim_0(tmp$_17, Kotlin.charArrayOf(35)) : null) != null ? tmp$_18 : 'unknown';
            tmp$_19 = this.sources.get(source_1);
            if (tmp$_19 == null) {
              continue;
            }var rsource_0 = tmp$_19;
            var element = new ColladaParser$Input(semantic_0, offset, rsource_0, intArrayListOf(new Int32Array([])));
            inputs.add_11rb$(element);
          }
          var pdata = reader((tmp$_21 = (tmp$_20 = firstOrNull(triangles.get_61zpoe$('p'))) != null ? tmp$_20.text : null) != null ? tmp$_21 : '').readInts_38vc8i$();
          tmp$_22 = inputs.iterator();
          while (tmp$_22.hasNext()) {
            var input_1 = tmp$_22.next();
            tmp$_23 = trianglesCount * 3 | 0;
            for (var n = 0; n < tmp$_23; n++) {
              input_1.indices.add_za3lpa$(pdata.get_za3lpa$(input_1.offset + Kotlin.imul(n, stride.v) | 0));
            }
          }
          tmp$_24 = inputs.iterator();
          while (tmp$_24.hasNext()) {
            var input_2 = tmp$_24.next();
            var $receiver_1 = geom.inputs;
            var key_0 = input_2.semantic;
            $receiver_1.set(key_0, input_2);
          }
        }}
    }
    return geometries;
  };
  ColladaParser.prototype.parseVisualScenes_k8gauc$ = function ($receiver, xml) {
    var tmp$, tmp$_0;
    var instancesById = FastStringMap();
    tmp$ = get_1(xml.get_61zpoe$('library_visual_scenes'), 'visual_scene').iterator();
    while (tmp$.hasNext()) {
      var vscene = tmp$.next();
      var scene = new Library3D$Scene3D($receiver);
      scene.id = vscene.str_puj7f4$('id');
      scene.name = vscene.str_puj7f4$('name');
      tmp$_0 = vscene.get_61zpoe$('node').iterator();
      while (tmp$_0.hasNext()) {
        var node = tmp$_0.next();
        var instance = this.parseVisualSceneNode_jbcuvq$($receiver, node, instancesById);
        scene.children.add_11rb$(instance);
      }
      var $receiver_0 = $receiver.scenes;
      var key = scene.id;
      $receiver_0.set(key, scene);
    }
  };
  ColladaParser.prototype.parseVisualSceneNode_jbcuvq$ = function ($receiver, node, instancesById) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    var instance = new Library3D$Instance3D($receiver);
    var location = null;
    var scale = null;
    var rotationX = null;
    var rotationY = null;
    var rotationZ = null;
    instance.id = node.str_puj7f4$('id');
    instance.sid = node.getString_61zpoe$('sid');
    instance.name = node.str_puj7f4$('name');
    instance.type = node.str_puj7f4$('type');
    var key = instance.id;
    instancesById.set(key, instance);
    tmp$ = node.allNodeChildren.iterator();
    while (tmp$.hasNext()) {
      var child = tmp$.next();
      switch (child.nameLC) {
        case 'matrix':
          var sid = child.str_puj7f4$('sid');
          if (equals(sid, 'transform'))
            instance.transform.copyFrom_p62hku$(readMatrix3D(reader(child.text)));
          else
            println('WARNING: Unsupported node.matrix.sid=' + sid);
          break;
        case 'translate':
          var sid_0 = child.str_puj7f4$('sid');
          if (equals(sid_0, 'location'))
            location = readVector3D(reader(child.text));
          else
            println('WARNING: Unsupported node.translate.sid=' + sid_0);
          break;
        case 'rotate':
          var sid_1 = child.str_puj7f4$('sid');
          switch (sid_1) {
            case 'rotationX':
              rotationX = readVector3D(reader(child.text));
              break;
            case 'rotationY':
              rotationY = readVector3D(reader(child.text));
              break;
            case 'rotationZ':
              rotationZ = readVector3D(reader(child.text));
              break;
            default:println('WARNING: Unsupported node.rotate.sid=' + sid_1);
              break;
          }

          break;
        case 'scale':
          var sid_2 = child.str_puj7f4$('sid');
          if (equals(sid_2, 'scale'))
            scale = readVector3D(reader(child.text));
          else
            println('WARNING: Unsupported node.scale.sid=' + sid_2);
          break;
        case 'instance_camera':
          var cameraId = trim_0(child.str_puj7f4$('url'), Kotlin.charArrayOf(35));
          instance.def = $receiver.cameraDefs.get(cameraId);
          break;
        case 'instance_light':
          var lightId = trim_0(child.str_puj7f4$('url'), Kotlin.charArrayOf(35));
          instance.def = $receiver.lightDefs.get(lightId);
          break;
        case 'instance_geometry':
          var geometryId = trim_0(child.str_puj7f4$('url'), Kotlin.charArrayOf(35));
          var geometryName = child.str_puj7f4$('name');
          instance.def = $receiver.geometryDefs.get(geometryId);
          break;
        case 'node':
          var childInstance = this.parseVisualSceneNode_jbcuvq$($receiver, child, instancesById);
          instance.children.add_11rb$(childInstance);
          break;
        case 'instance_controller':
          var skinId = trim_0(child.str_puj7f4$('url'), Kotlin.charArrayOf(35));
          var skeletonId = (tmp$_1 = (tmp$_0 = get_firstText(child.get_61zpoe$('skeleton'))) != null ? trim_0(tmp$_0, Kotlin.charArrayOf(35)) : null) != null ? tmp$_1 : '';
          var skin = $receiver.skinDefs.get(skinId);
          var skeleton = instancesById.get(skeletonId);
          tmp$_3 = $receiver.geometryDefs;
          var key_0 = (tmp$_2 = skin != null ? skin.skinSource : null) != null ? tmp$_2 : '';
          instance.def = tmp$_3.get(key_0);
          instance.skin = skin;
          instance.skeleton = skeleton;
          instance.skeletonId = skeletonId;
          break;
        case 'extra':
          break;
        default:println('WARNING: Unsupported node.' + child.nameLC);
          break;
      }
    }
    if (location != null || scale != null || rotationX != null || rotationY != null || rotationZ != null) {
      var trns = location != null ? location : Vector3D.Companion.invoke_tjonv8$(0, 0, 0, 1);
      var scl = scale != null ? scale : Vector3D.Companion.invoke_tjonv8$(1, 1, 1);
      var rotX = rotationX != null ? rotationX : Vector3D.Companion.invoke_tjonv8$(1, 0, 0, 0);
      var rotY = rotationY != null ? rotationY : Vector3D.Companion.invoke_tjonv8$(0, 1, 0, 0);
      var rotZ = rotationZ != null ? rotationZ : Vector3D.Companion.invoke_tjonv8$(0, 0, 1, 0);
      this.rotationVectorToEulerRotation_0(rotX);
      setTRS(instance.transform, trns, setTo_2(new Quaternion(), this.combine_0(this.rotationVectorToEulerRotation_0(rotX), this.rotationVectorToEulerRotation_0(rotY), this.rotationVectorToEulerRotation_0(rotZ))), scl);
    }return instance;
  };
  ColladaParser.prototype.combine_0 = function (a, b, c, out) {
    if (out === void 0)
      out = new EulerRotation();
    return setTo_3(out, plus(plus(a.x, b.x), c.x), plus(plus(a.y, b.y), c.y), plus(plus(a.z, b.z), c.z));
  };
  ColladaParser.prototype.rotationVectorToEulerRotation_0 = function (vec, out) {
    if (out === void 0)
      out = new EulerRotation();
    var degrees = get_degrees_2(vec.w);
    return setTo_3(out, times_0(degrees, numberToDouble(vec.x)), times_0(degrees, numberToDouble(vec.y)), times_0(degrees, numberToDouble(vec.z)));
  };
  ColladaParser.prototype.parseSources_figk0a$ = function (xml, arraySourceParams) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var sources = ArrayList_init_1();
    tmp$ = xml.get_61zpoe$('source').iterator();
    while (tmp$.hasNext()) {
      var source = tmp$.next();
      var sourceId = source.str_puj7f4$('id');
      var sourceParams = FastStringMap();
      tmp$_0 = source.allNodeChildren.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        switch (item.nameLC) {
          case 'float_array':
          case 'name_array':
            var arrayId = item.str_puj7f4$('id');
            var arrayCount = item.int_bm4lxs$('count');
            var arrayDataStr = item.text;
            var arrayDataReader = reader(arrayDataStr);
            switch (item.nameLC) {
              case 'float_array':
                tmp$_1 = new ColladaParser$FloatSourceParam(arrayId, arrayDataReader.readFloats_7u0t7$(new FloatArrayList(arrayCount)));
                break;
              case 'name_array':
                tmp$_1 = new ColladaParser$NamesSourceParam(arrayId, arrayDataReader.readIds_un5gdn$(ArrayList_init_0(arrayCount)));
                break;
              default:throw new NotImplementedError_init();
            }

            var arraySourceParam = tmp$_1;
            var key = arraySourceParam.name;
            arraySourceParams.set(key, arraySourceParam);
            break;
          case 'technique_common':
            tmp$_2 = item.get_61zpoe$('accessor').iterator();
            while (tmp$_2.hasNext()) {
              var accessor = tmp$_2.next();
              var accessorArrayId = trim_0(accessor.str_puj7f4$('source'), Kotlin.charArrayOf(35));
              var offset = accessor.int_bm4lxs$('offset');
              var count = accessor.int_bm4lxs$('count');
              var stride = accessor.int_bm4lxs$('stride');
              var data = arraySourceParams.get(accessorArrayId);
              if (data != null) {
                var index = 0;
                for (var tmp$_3 = accessor.get_61zpoe$('param').iterator(); tmp$_3.hasNext(); ++index) {
                  var param = tmp$_3.next();
                  var tmp$_4, tmp$_5, tmp$_6;
                  var paramName = param.str_puj7f4$('name');
                  var paramType = param.str_puj7f4$('type');
                  var paramOffset = param.int_bm4lxs$('offset', index);
                  var totalOffset = offset + paramOffset | 0;
                  switch (paramType) {
                    case 'float':
                      var floats = (Kotlin.isType(tmp$_4 = data, ColladaParser$FloatSourceParam) ? tmp$_4 : throwCCE()).floats.data;
                      var out = new Float32Array(count);
                      for (var n = 0; n < count; n++)
                        out[n] = floats[Kotlin.imul(n, stride) + totalOffset | 0];
                      var value = new ColladaParser$FloatSourceParam(paramName, FloatArrayList_init(out.slice()));
                      sourceParams.set(paramName, value);
                      break;
                    case 'float4x4':
                      var floats_0 = (Kotlin.isType(tmp$_5 = data, ColladaParser$FloatSourceParam) ? tmp$_5 : throwCCE()).floats.data;
                      var array = Array_0(count);
                      var tmp$_7;
                      tmp$_7 = array.length - 1 | 0;
                      for (var i = 0; i <= tmp$_7; i++) {
                        array[i] = new Matrix3D();
                      }

                      var out_0 = array;
                      for (var n_0 = 0; n_0 < count; n_0++) {
                        setFromColladaData(out_0[n_0], floats_0, Kotlin.imul(n_0, stride) + totalOffset | 0);
                      }

                      var value_0 = new ColladaParser$MatrixSourceParam(paramName, out_0);
                      sourceParams.set(paramName, value_0);
                      break;
                    case 'name':
                      var data_0 = (Kotlin.isType(tmp$_6 = data, ColladaParser$NamesSourceParam) ? tmp$_6 : throwCCE()).names;
                      var out_1 = ArrayList_init_0(count);
                      for (var n_1 = 0; n_1 < count; n_1++)
                        out_1.add_11rb$(data_0.get_za3lpa$(Kotlin.imul(n_1, stride) + totalOffset | 0));
                      var value_1 = new ColladaParser$NamesSourceParam(paramName, out_1);
                      sourceParams.set(paramName, value_1);
                      break;
                    default:throw IllegalStateException_init_0(('Unsupported paramType=' + paramType).toString());
                  }
                }
              }}

            break;
          case 'extra':
            break;
          default:throw IllegalStateException_init_0(('Unsupported tag <' + item.nameLC + '> in <source>').toString());
        }
      }
      var element = new ColladaParser$Source(sourceId, sourceParams);
      sources.add_11rb$(element);
    }
    return sources;
  };
  ColladaParser.prototype.log_h4ejuu$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.format.ColladaParser.log_h4ejuu$', function (str) {
  });
  ColladaParser.prototype.log_61zpoe$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.format.ColladaParser.log_61zpoe$', function (str) {
  });
  ColladaParser.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ColladaParser',
    interfaces: []
  };
  function setFromColladaData($receiver, f, o) {
    return $receiver.setRows4x4_9752rg$(f, o);
  }
  function readVector3D($receiver) {
    var tmp$;
    var f = $receiver.readFloats_7u0t7$(new FloatArrayList());
    if (f.size === 4)
      tmp$ = Vector3D.Companion.invoke_7b5o5w$(f.get_za3lpa$(0), f.get_za3lpa$(1), f.get_za3lpa$(2), f.get_za3lpa$(3));
    else
      tmp$ = Vector3D.Companion.invoke_7b5o5w$(f.get_za3lpa$(0), f.get_za3lpa$(1), f.get_za3lpa$(2));
    return tmp$;
  }
  function readMatrix3D($receiver) {
    var f = $receiver.readFloats_7u0t7$(new FloatArrayList());
    if (f.size === 16) {
      return setFromColladaData(new Matrix3D(), f.data, 0);
    } else {
      throw IllegalStateException_init_0(('Invalid matrix size ' + f.size + " : str='" + $receiver.str + "'").toString());
    }
  }
  function toFast($receiver) {
    var $receiver_0 = FastStringMap();
    var tmp$;
    tmp$ = $receiver.keys.iterator();
    while (tmp$.hasNext()) {
      var k = tmp$.next();
      var value = ensureNotNull($receiver.get_11rb$(k));
      $receiver_0.set(k, value);
    }
    return $receiver_0;
  }
  function KS3D() {
    KS3D_instance = this;
  }
  KS3D.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KS3D',
    interfaces: []
  };
  var KS3D_instance = null;
  function KS3D_getInstance() {
    if (KS3D_instance === null) {
      new KS3D();
    }return KS3D_instance;
  }
  function Coroutine$writeKs3d($receiver_0, library_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$library = library_0;
  }
  Coroutine$writeKs3d.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeKs3d.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeKs3d.prototype.constructor = Coroutine$writeKs3d;
  Coroutine$writeKs3d.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var names = new IndexedTable();
            var $receiver = this.local$library.geometryDefs;
            var mapIterator = $receiver.keys();
            while (true) {
              var v = mapIterator.next();
              if (v.done)
                break;
              var it = v.value;
              ensureNotNull($receiver.get(it));
              names.add_11rb$(it);
            }

            var buffer = ByteArrayBuilder_init(4096);
            var s = MemorySyncStream(buffer);
            var tmp$;
            writeString(s, 'KS3D');
            write32LE(s, 0);
            write32LE(s, names.size);
            tmp$ = names.instances.iterator();
            while (tmp$.hasNext()) {
              var name = tmp$.next();
              writeStringVL(s, name);
            }

            var $receiver_0 = this.local$library.geometryDefs;
            var mapIterator_0 = $receiver_0.keys();
            while (true) {
              var v_0 = mapIterator_0.next();
              if (v_0.done)
                break;
              var it_0 = v_0.value;
              var mesh = ensureNotNull($receiver_0.get(it_0)).mesh;
              writeU_VL(s, names.get_11rb$(it_0));
              writeU_VL(s, mesh.fbuffer.size);
              writeU_VL(s, mesh.hasTexture ? 1 : 0);
              writeU_VL(s, mesh.maxWeights);
              writeU_VL(s, mesh.vertexCount);
              mesh.fbuffer.getAlignedArrayInt8_3fge6q$(0, new Int8Array(mesh.fbuffer.size), 0, mesh.fbuffer.size);
            }

            this.state_0 = 2;
            this.result_0 = this.local$$receiver.writeBytes_bdsgvo$(buffer.toByteArray(), [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      } catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        } else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeKs3d($receiver_0, library_0, continuation_0, suspended) {
    var instance = new Coroutine$writeKs3d($receiver_0, library_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function readKs3d($receiver, continuation) {
    throw new NotImplementedError_init();
  }
  function toFast_0($receiver) {
    var $receiver_0 = FastStringMap();
    var tmp$;
    tmp$ = $receiver.keys.iterator();
    while (tmp$.hasNext()) {
      var k = tmp$.next();
      var value = ensureNotNull($receiver.get_11rb$(k));
      $receiver_0.set(k, value);
    }
    return $receiver_0;
  }
  function get_22($receiver, char) {
    switch (char) {
      case 120:
      case 114:
        return $receiver.get_za3lpa$(0);
      case 121:
      case 103:
        return $receiver.get_za3lpa$(1);
      case 122:
      case 98:
        return $receiver.get_za3lpa$(2);
      case 119:
      case 97:
        return $receiver.get_za3lpa$(3);
      case 48:
        return 0.0;
      case 49:
        return 1.0;
      default:return kotlin_js_internal_FloatCompanionObject.NaN;
    }
  }
  function swizzle($receiver, name, input) {
    if (input === void 0)
      input = $receiver;
    var x = 0 >= 0 && 0 <= get_lastIndex_2(name) ? name.charCodeAt(0) : unboxChar(toBoxedChar(48));
    var y = 1 >= 0 && 1 <= get_lastIndex_2(name) ? name.charCodeAt(1) : unboxChar(toBoxedChar(48));
    var z = 2 >= 0 && 2 <= get_lastIndex_2(name) ? name.charCodeAt(2) : unboxChar(toBoxedChar(48));
    var w = 3 >= 0 && 3 <= get_lastIndex_2(name) ? name.charCodeAt(3) : unboxChar(toBoxedChar(49));
    return $receiver.setTo_7b5o5w$(get_22(input, x), get_22(input, y), get_22(input, z), get_22(input, w));
  }
  function get_23($receiver, name) {
    return swizzle((new Vector3D()).copyFrom_t4ex0$($receiver), name);
  }
  var vector3DTemps;
  function Vector3DTemps() {
    this.pos = 0;
    this.items = arrayListOf([new Vector3D(), new Vector3D(), new Vector3D()]);
  }
  Vector3DTemps.prototype.alloc = function () {
    var tmp$, tmp$_0;
    var npos = (tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$);
    if (npos < this.items.size) {
      tmp$_0 = this.items.get_za3lpa$(npos);
    } else {
      var item = new Vector3D();
      this.items.add_11rb$(item);
      tmp$_0 = item;
    }
    return tmp$_0;
  };
  Vector3DTemps.prototype.invoke_nsfwt7$ = defineInlineFunction('korge-root-korge.com.soywiz.korge3d.internal.Vector3DTemps.invoke_nsfwt7$', function (callback) {
    var oldPos = this.pos;
    try {
      return callback(this);
    }finally {
      this.pos = oldPos;
    }
  });
  Vector3DTemps.prototype.plus_y0ay5r$ = function ($receiver, that) {
    return this.alloc().setTo_7b5o5w$($receiver.get_za3lpa$(0) + that.get_za3lpa$(0), $receiver.get_za3lpa$(1) + that.get_za3lpa$(1), $receiver.get_za3lpa$(2) + that.get_za3lpa$(2), $receiver.get_za3lpa$(3) + that.get_za3lpa$(3));
  };
  Vector3DTemps.prototype.minus_y0ay5r$ = function ($receiver, that) {
    return this.alloc().setTo_7b5o5w$($receiver.get_za3lpa$(0) - that.get_za3lpa$(0), $receiver.get_za3lpa$(1) - that.get_za3lpa$(1), $receiver.get_za3lpa$(2) - that.get_za3lpa$(2), $receiver.get_za3lpa$(3) - that.get_za3lpa$(3));
  };
  Vector3DTemps.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Vector3DTemps',
    interfaces: []
  };
  function toFBuffer($receiver) {
    return toFBuffer_0($receiver.toFloatArray());
  }
  function toFBuffer_0($receiver) {
    var $receiver_0 = FBuffer.Companion.alloc_za3lpa$($receiver.length * 4 | 0);
    $receiver_0.setAlignedArrayFloat32_3hvitc$(0, $receiver, 0, $receiver.length);
    return $receiver_0;
  }
  function NativeStorage() {
    NativeStorage_instance = this;
  }
  NativeStorage.prototype.set_puj7f4$ = function (key, value) {
    localStorage.setItem(key, value);
  };
  NativeStorage.prototype.getOrNull_61zpoe$ = function (key) {
    return localStorage.getItem(key);
  };
  NativeStorage.prototype.remove_61zpoe$ = function (key) {
    localStorage.removeItem(key);
  };
  NativeStorage.prototype.removeAll = function () {
    localStorage.clear();
  };
  NativeStorage.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'NativeStorage',
    interfaces: [IStorage]
  };
  var NativeStorage_instance = null;
  function NativeStorage_getInstance() {
    if (NativeStorage_instance === null) {
      new NativeStorage();
    }return NativeStorage_instance;
  }
  function NativeVibration(views) {
    this.views = views;
  }
  NativeVibration.prototype.vibratePattern_7i16ct$ = function (timings, amplitudes) {
    if (amplitudes === void 0) {
      amplitudes = [];
    }var tmp$ = window.navigator;
    var destination = ArrayList_init_0(timings.length);
    var tmp$_0;
    for (tmp$_0 = 0; tmp$_0 !== timings.length; ++tmp$_0) {
      var item = timings[tmp$_0];
      destination.add_11rb$(item.milliseconds);
    }
    tmp$.vibrate(copyToArray(destination));
  };
  NativeVibration.prototype.vibrate_s7tctz$ = function (time, amplitude) {
    if (amplitude === void 0)
      amplitude = 1.0;
    window.navigator.vibrate(time.milliseconds);
  };
  NativeVibration.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeVibration',
    interfaces: []
  };
  $$importsForInline$$['klock-root-klock'] = $module$klock_root_klock;
  $$importsForInline$$['korge-root-korge'] = _;
  $$importsForInline$$['klogger-root-klogger'] = $module$klogger_root_klogger;
  $$importsForInline$$['korio-root-korio'] = $module$korio_root_korio;
  $$importsForInline$$['korinject-root-korinject'] = $module$korinject_root_korinject;
  $$importsForInline$$['korgw-root-korgw'] = $module$korgw_root_korgw;
  $$importsForInline$$['kds-root-kds'] = $module$kds_root_kds;
  Korge.prototype.Config = Korge$Config;
  Korge.prototype.ModuleArgs = Korge$ModuleArgs;
  var package$com = _.com || (_.com = {});
  var package$soywiz = package$com.soywiz || (package$com.soywiz = {});
  var package$korge = package$soywiz.korge || (package$soywiz.korge = {});
  Object.defineProperty(package$korge, 'Korge', {
    get: Korge_getInstance
  });
  KorgeHeadless.prototype.HeadlessGameWindow = KorgeHeadless$HeadlessGameWindow;
  Object.defineProperty(package$korge, 'KorgeHeadless', {
    get: KorgeHeadless_getInstance
  });
  package$korge.get_VERSION_d7zoyj$ = get_VERSION;
  var package$animate = package$korge.animate || (package$korge.animate = {});
  package$animate.AnElement = AnElement;
  package$animate.createDuplicated_vkl01n$ = createDuplicated;
  package$animate.createDuplicatedView_vkl01n$ = createDuplicatedView;
  package$animate.AnBaseShape = AnBaseShape;
  package$animate.AnShape = AnShape;
  package$animate.AnMorphShape = AnMorphShape;
  package$animate.AnEmptyView = AnEmptyView;
  package$animate.AnTextField = AnTextField;
  package$animate.get_stencilIndex_jxline$ = get_stencilIndex;
  package$animate.set_stencilIndex_t8v26g$ = set_stencilIndex;
  package$animate.TimelineRunner = TimelineRunner;
  package$animate.AnPlayable = AnPlayable;
  package$animate.AnSimpleAnimation = AnSimpleAnimation;
  AnMovieClip$Companion.prototype.RenderState = AnMovieClip$Companion$RenderState;
  Object.defineProperty(AnMovieClip, 'Companion', {
    get: AnMovieClip$Companion_getInstance
  });
  $$importsForInline$$['kmem-root-kmem'] = $module$kmem_root_kmem;
  package$animate.AnMovieClip = AnMovieClip;
  package$animate.play_4h3qbs$ = play;
  package$animate.playAndWaitStop_4h3qbs$ = playAndWaitStop;
  package$animate.playAndWaitEvent_3rvitr$ = playAndWaitEvent;
  package$animate.waitStop_jv7z46$ = waitStop;
  package$animate.waitEvent_z2n0m7$ = waitEvent;
  package$animate.get_playingName_jv7z46$ = get_playingName;
  package$animate.seekStill_3hzepi$ = seekStill;
  package$animate.AnSymbol = AnSymbol;
  Object.defineProperty(package$animate, 'AnSymbolEmpty', {
    get: AnSymbolEmpty_getInstance
  });
  package$animate.AnSymbolSound = AnSymbolSound;
  package$animate.AnTextFieldSymbol = AnTextFieldSymbol;
  package$animate.AnSymbolBaseShape = AnSymbolBaseShape;
  package$animate.AnSymbolShape = AnSymbolShape;
  package$animate.AnSymbolMorphShape = AnSymbolMorphShape;
  package$animate.AnSymbolBitmap = AnSymbolBitmap;
  package$animate.AnConstantPool = AnConstantPool;
  Object.defineProperty(AnSymbolTimelineFrame, 'Companion', {
    get: AnSymbolTimelineFrame$Companion_getInstance
  });
  $$importsForInline$$['korim-root-korim'] = $module$korim_root_korim;
  package$animate.AnSymbolTimelineFrame = AnSymbolTimelineFrame;
  package$animate.AnAction = AnAction;
  package$animate.AnPlaySoundAction = AnPlaySoundAction;
  package$animate.AnEventAction = AnEventAction;
  package$animate.AnDepthTimeline = AnDepthTimeline;
  package$animate.AnSymbolLimits = AnSymbolLimits;
  package$animate.AnSymbolUidDef = AnSymbolUidDef;
  package$animate.AnSymbolMovieClipSubTimeline = AnSymbolMovieClipSubTimeline;
  package$animate.AnSymbolMovieClipState = AnSymbolMovieClipState;
  package$animate.AnSymbolMovieClip = AnSymbolMovieClip;
  package$animate.get_animateLibraryLoaders_jv80cy$ = get_animateLibraryLoaders;
  package$animate.AnLibrary = AnLibrary;
  package$animate.AnimatorDslMarker = AnimatorDslMarker;
  package$animate.BaseAnimatorNode = BaseAnimatorNode;
  Object.defineProperty(Animator, 'Companion', {
    get: Animator$Companion_getInstance
  });
  Object.defineProperty(Animator$NodeKind, 'Parallel', {
    get: Animator$NodeKind$Parallel_getInstance
  });
  Object.defineProperty(Animator$NodeKind, 'Sequence', {
    get: Animator$NodeKind$Sequence_getInstance
  });
  Animator.NodeKind = Animator$NodeKind;
  Animator.TweenNode = Animator$TweenNode;
  package$animate.Animator = Animator;
  package$animate.animator_l0hrkb$ = animator;
  package$animate.launchAnimate_l0hrkb$ = launchAnimate;
  package$animate.animate_l0hrkb$ = animate;
  package$animate.animateSequence_rjsuvn$ = animateSequence;
  package$animate.animateParallel_rjsuvn$ = animateParallel;
  Timed.RangeResult = Timed$RangeResult;
  Timed.Result = Timed$Result;
  package$animate.Timed = Timed;
  var package$serialization = package$animate.serialization || (package$animate.serialization = {});
  package$serialization.readAni_dptvkb$ = readAni;
  AnLibraryDeserializer.prototype.ExternalReaders = AnLibraryDeserializer$ExternalReaders;
  Object.defineProperty(package$serialization, 'AnLibraryDeserializer', {
    get: AnLibraryDeserializer_getInstance
  });
  package$serialization.writeTo_sjlbpa$ = writeTo;
  AnLibrarySerializer.prototype.ExternalWriters = AnLibrarySerializer$ExternalWriters;
  AnLibrarySerializer.prototype.Config = AnLibrarySerializer$Config;
  Object.defineProperty(package$serialization, 'AnLibrarySerializer', {
    get: AnLibrarySerializer_getInstance
  });
  Object.defineProperty(package$serialization, 'AniFile', {
    get: AniFile_getInstance
  });
  package$serialization.OptimizedStringAllocator = OptimizedStringAllocator;
  var package$annotations = package$korge.annotations || (package$korge.annotations = {});
  package$annotations.KorgeExperimental = KorgeExperimental;
  Atlas.Entry = Atlas$Entry;
  var package$atlas = package$korge.atlas || (package$korge.atlas = {});
  package$atlas.Atlas = Atlas;
  package$atlas.readAtlas_s70ap7$ = readAtlas;
  package$atlas.readAtlas_yirdke$ = readAtlas_0;
  package$atlas.readAtlas2_s70ap7$ = readAtlas2;
  Atlas2.Entry = Atlas2$Entry;
  package$atlas.Atlas2 = Atlas2;
  $$importsForInline$$['korma-root-korma'] = $module$korma_root_korma;
  AtlasInfo.Rect = AtlasInfo$Rect;
  AtlasInfo.Size = AtlasInfo$Size;
  Object.defineProperty(AtlasInfo$Meta, 'Companion', {
    get: AtlasInfo$Meta$Companion_getInstance
  });
  AtlasInfo.Meta = AtlasInfo$Meta;
  AtlasInfo.Entry = AtlasInfo$Entry;
  Object.defineProperty(AtlasInfo, 'Companion', {
    get: AtlasInfo$Companion_getInstance
  });
  package$atlas.AtlasInfo = AtlasInfo;
  var package$bitmapfont = package$korge.bitmapfont || (package$korge.bitmapfont = {});
  package$bitmapfont.getBounds_wzpkhc$ = getBounds;
  package$bitmapfont.drawText_6la791$ = drawText;
  package$bitmapfont.drawText_k8w4kh$ = drawText_0;
  var package$bus = package$korge.bus || (package$korge.bus = {});
  package$bus.Bus = Bus;
  package$bus.GlobalBus = GlobalBus;
  var package$component = package$korge.component || (package$korge.component = {});
  package$component.Component = Component;
  package$component.attach_w53ov9$ = attach;
  package$component.attach_a3yy2a$ = attach_0;
  package$component.attach_suvax4$ = attach_1;
  package$component.attach_t181di$ = attach_2;
  package$component.attach_txeajc$ = attach_3;
  package$component.attach_7mkth9$ = attach_4;
  package$component.attach_ly6n66$ = attach_5;
  package$component.attach_rgk6sc$ = attach_6;
  package$component.attach_1mg6y9$ = attach_7;
  package$component.detach_w53ov9$ = detach;
  package$component.detach_a3yy2a$ = detach_0;
  package$component.detach_suvax4$ = detach_1;
  package$component.detach_t181di$ = detach_2;
  package$component.detach_txeajc$ = detach_3;
  package$component.detach_7mkth9$ = detach_4;
  package$component.detach_ly6n66$ = detach_5;
  package$component.detach_rgk6sc$ = detach_6;
  package$component.detach_1mg6y9$ = detach_7;
  package$component.removeFromView_tez5q3$ = removeFromView;
  package$component.TouchComponent = TouchComponent;
  package$component.MouseComponent = MouseComponent;
  package$component.KeyComponent = KeyComponent;
  package$component.GamepadComponent = GamepadComponent;
  package$component.EventComponent = EventComponent;
  package$component.UpdateComponentWithViews = UpdateComponentWithViews;
  package$component.UpdateComponent = UpdateComponent;
  package$component.UpdateComponentV2 = UpdateComponentV2;
  package$component.ResizeComponent = ResizeComponent;
  package$component.Components = Components;
  package$component.StageComponent = StageComponent;
  package$component.registerStageComponent_jv80cy$ = registerStageComponent;
  var package$docking = package$component.docking || (package$component.docking = {});
  package$docking.dockedTo_xt4qwz$ = dockedTo;
  package$docking.DockingComponent = DockingComponent;
  package$docking.JellyButton = JellyButton;
  package$docking.jellyButton_bnh9hk$ = jellyButton;
  package$docking.SortedChildrenByComponent = SortedChildrenByComponent;
  package$docking.toComparator_s64sm4$ = toComparator;
  package$docking.sortChildrenBy_c413dr$ = sortChildrenBy;
  package$docking.sortChildrenByY_st8p7j$ = sortChildrenByY;
  package$docking.keepChildrenSortedBy_q1v4n6$ = keepChildrenSortedBy;
  package$docking.keepChildrenSortedBy_wgyu3k$ = keepChildrenSortedBy_0;
  package$docking.keepChildrenSortedByY_8rk341$ = keepChildrenSortedByY;
  var package$list = package$component.list || (package$component.list = {});
  package$list.GridViewList = GridViewList;
  ViewList.ChangeEvent = ViewList$ChangeEvent;
  package$list.ViewList = ViewList;
  var package$font = package$korge.font || (package$korge.font = {});
  package$font.readBitmapFontWithMipmaps_c6jndg$ = readBitmapFontWithMipmaps;
  Object.defineProperty(Html$Alignment, 'Companion', {
    get: Html$Alignment$Companion_getInstance
  });
  Html.prototype.Alignment = Html$Alignment;
  Html$FontFace.Named = Html$FontFace$Named;
  Html$FontFace.Bitmap = Html$FontFace$Bitmap;
  Html.prototype.FontFace = Html$FontFace;
  Html.prototype.Format = Html$Format;
  Object.defineProperty(Html$MetricsProvider, 'Identity', {
    get: Html$MetricsProvider$Identity_getInstance
  });
  Html.prototype.MetricsProvider = Html$MetricsProvider;
  Html.prototype.PositionContext = Html$PositionContext;
  Html.prototype.Span = Html$Span;
  Html.prototype.Line = Html$Line;
  Html.prototype.Paragraph = Html$Paragraph;
  Html.prototype.Document = Html$Document;
  Html.prototype.HtmlParser = Html$HtmlParser;
  var package$html = package$korge.html || (package$korge.html = {});
  Object.defineProperty(package$html, 'Html', {
    get: Html_getInstance
  });
  var package$i18n = package$korge.i18n || (package$korge.i18n = {});
  package$i18n.ConstantTextSource = ConstantTextSource;
  package$i18n.TextContainer = TextContainer;
  package$i18n.TextSource = TextSource;
  package$i18n.toTextSource_pdl1vz$ = toTextSource;
  package$i18n.get_language_jv80cy$ = get_language;
  package$i18n.set_language_4eo892$ = set_language;
  var package$image = package$korge.image || (package$korge.image = {});
  package$image.toExtString_6jcgbd$ = toExtString;
  var package$input = package$korge.input || (package$korge.input = {});
  package$input.get_drag_gohfi1$ = get_drag;
  package$input.onDragStart_75bvmw$ = onDragStart;
  package$input.onDragEnd_75bvmw$ = onDragEnd;
  package$input.onDragMove_75bvmw$ = onDragMove;
  DragComponent.Info = DragComponent$Info;
  package$input.DragComponent = DragComponent;
  package$input.GamePadEvents = GamePadEvents;
  package$input.get_gamepad_gohfi1$ = get_gamepad;
  package$input.gamepad_hynbqt$ = gamepad_0;
  Object.defineProperty(Gestures$Direction, 'Companion', {
    get: Gestures$Direction$Companion_getInstance
  });
  Gestures.Direction_init_vux9f0$ = Gestures$Gestures$Direction_init;
  Gestures.Direction = Gestures$Direction;
  package$input.Gestures = Gestures;
  package$input.get_gestures_gohfi1$ = get_gestures;
  Object.defineProperty(Input, 'Companion', {
    get: Input$Companion_getInstance
  });
  package$input.Input = Input;
  package$input.InputKeys = InputKeys;
  package$input.KeysEvents = KeysEvents;
  package$input.get_keys_gohfi1$ = get_keys;
  package$input.keys_xhqbsk$ = keys_0;
  package$input._keyEvent_vuxcw4$ = _keyEvent;
  package$input.onKeyDown_tj6ps7$ = onKeyDown;
  package$input.onKeyUp_tj6ps7$ = onKeyUp;
  package$input.onKeyTyped_tj6ps7$ = onKeyTyped;
  package$input.MouseDragInfo = MouseDragInfo;
  package$input.onMouseDrag_ylcuxg$ = onMouseDrag;
  package$input.draggable_ca4c2v$ = draggable;
  MouseEvents.MouseEventsUpdate = MouseEvents$MouseEventsUpdate;
  package$input.MouseEvents = MouseEvents;
  package$input.get_mouse_gohfi1$ = get_mouse;
  package$input.mouse_cr2qe1$ = mouse_0;
  package$input.doMouseEvent_26os55$ = doMouseEvent;
  package$input.onClick_j1eskf$ = onClick;
  package$input.onOver_j1eskf$ = onOver;
  package$input.onOut_j1eskf$ = onOut;
  package$input.onDown_j1eskf$ = onDown;
  package$input.onDownFromOutside_j1eskf$ = onDownFromOutside;
  package$input.onUp_j1eskf$ = onUp;
  package$input.onUpOutside_j1eskf$ = onUpOutside;
  package$input.onUpAnywhere_j1eskf$ = onUpAnywhere;
  package$input.onMove_j1eskf$ = onMove;
  package$input.SwipeInfo = SwipeInfo;
  Object.defineProperty(SwipeDirection, 'LEFT', {
    get: SwipeDirection$LEFT_getInstance
  });
  Object.defineProperty(SwipeDirection, 'RIGHT', {
    get: SwipeDirection$RIGHT_getInstance
  });
  Object.defineProperty(SwipeDirection, 'TOP', {
    get: SwipeDirection$TOP_getInstance
  });
  Object.defineProperty(SwipeDirection, 'BOTTOM', {
    get: SwipeDirection$BOTTOM_getInstance
  });
  package$input.SwipeDirection = SwipeDirection;
  package$input.onSwipe_p71tsf$ = onSwipe;
  var package$internal = package$korge.internal || (package$korge.internal = {});
  Object.defineProperty(package$internal, 'DefaultViewport', {
    get: DefaultViewport_getInstance
  });
  package$internal.KorgeDeprecated = KorgeDeprecated;
  package$internal.KorgeInternal = KorgeInternal;
  package$internal.KorgeUntested = KorgeUntested;
  package$internal.KorgeUnused = KorgeUnused;
  Object.defineProperty(package$internal, 'KORGE_VERSION_8be2vx$', {
    get: function () {
      return KORGE_VERSION;
    }
  });
  package$internal.fastTransformX_68xflb$ = fastTransformX;
  package$internal.fastTransformY_68xflb$ = fastTransformY;
  package$internal.fastTransformX_b02ly9$ = fastTransformX_0;
  package$internal.fastTransformY_b02ly9$ = fastTransformY_0;
  package$internal.fastTransformXf_68xflb$ = fastTransformXf;
  package$internal.fastTransformYf_68xflb$ = fastTransformYf;
  package$internal.fastTransformXf_fm8eol$ = fastTransformXf_0;
  package$internal.fastTransformYf_fm8eol$ = fastTransformYf_0;
  var package$lipsync = package$korge.lipsync || (package$korge.lipsync = {});
  package$lipsync.LipSync = LipSync;
  package$lipsync.Voice = Voice;
  package$lipsync.LipSyncEvent = LipSyncEvent;
  package$lipsync.LipSyncComponent = LipSyncComponent;
  package$lipsync.lipsync_gohfi1$ = lipsync;
  package$lipsync.readVoice_yirdke$ = readVoice;
  var package$logger = package$korge.logger || (package$korge.logger = {});
  package$logger.configureLoggerFromProperties_61zpoe$ = configureLoggerFromProperties;
  package$logger.configureLoggerFromProperties_3ekr7n$ = configureLoggerFromProperties_0;
  Object.defineProperty(ParticleEmitter$Type, 'GRAVITY', {
    get: ParticleEmitter$Type$GRAVITY_getInstance
  });
  Object.defineProperty(ParticleEmitter$Type, 'RADIAL', {
    get: ParticleEmitter$Type$RADIAL_getInstance
  });
  ParticleEmitter.Type = ParticleEmitter$Type;
  ParticleEmitter.Particle = ParticleEmitter$Particle;
  ParticleEmitter.Simulator = ParticleEmitter$Simulator;
  var package$particle = package$korge.particle || (package$korge.particle = {});
  package$particle.ParticleEmitter = ParticleEmitter;
  package$particle.readParticle_yirdke$ = readParticle;
  package$particle.attachParticleAndWait_n8drz7$ = attachParticleAndWait;
  var package$view = package$korge.view || (package$korge.view = {});
  package$view.addTo_fct211$ = addTo;
  package$particle.particleEmitter_pe1xey$ = particleEmitter;
  package$particle.ParticleEmitterView = ParticleEmitterView;
  var package$render = package$korge.render || (package$korge.render = {});
  package$render.get_texMipmaps_p18lal$ = get_texMipmaps;
  package$render.set_texMipmaps_p7kutq$ = set_texMipmaps;
  package$render.mipmaps_6tbmt4$ = mipmaps_0;
  package$render.AgBitmapTextureManager = AgBitmapTextureManager;
  Object.defineProperty(BatchBuilder2D, 'Companion', {
    get: BatchBuilder2D$Companion_getInstance
  });
  package$render.BatchBuilder2D_init_nrac08$ = BatchBuilder2D_init;
  package$render.BatchBuilder2D = BatchBuilder2D;
  Object.defineProperty(TexturedVertexArray, 'Companion', {
    get: TexturedVertexArray$Companion_getInstance
  });
  package$render.TexturedVertexArray = TexturedVertexArray;
  package$render.TexturedVertexArrayBuilder = TexturedVertexArrayBuilder;
  package$render.buildQuads_w76r0e$ = buildQuads;
  package$render.ensurePowerOfTwo_leuab8$ = ensurePowerOfTwo;
  package$render.get_debugLineRenderContext_jxline$ = get_debugLineRenderContext;
  package$render.DebugLineRenderContext = DebugLineRenderContext;
  package$render.Texture = Texture;
  package$render.RenderContext = RenderContext;
  package$render.testRenderContext_ydou38$ = testRenderContext;
  package$render.testRenderContext_zbj47c$ = testRenderContext_0;
  package$render.RenderContext2D = RenderContext2D;
  package$render.copyFrom_trfzrb$ = copyFrom_0;
  package$render.setTo_5hlsvz$ = setTo_4;
  Object.defineProperty(Texture, 'Companion', {
    get: Texture$Companion_getInstance
  });
  Texture.Base = Texture$Base;
  package$render.TextureWithBitmapSlice = TextureWithBitmapSlice;
  package$render.TransformedTexture = TransformedTexture;
  package$render.VertexInfo = VertexInfo;
  var package$resources = package$korge.resources || (package$korge.resources = {});
  package$resources.Cached = Cached;
  package$resources.VPath = VPath;
  package$resources.getPath_ufosyu$ = getPath;
  package$resources.Resource = Resource;
  package$resources.resource_61zpoe$ = resource;
  package$resources.ResourcesRoot = ResourcesRoot;
  var package$scene = package$korge.scene || (package$korge.scene = {});
  package$scene.CompletableScene = CompletableScene;
  Object.defineProperty(package$scene, 'DebugBitmapFont', {
    get: DebugBitmapFont_getInstance
  });
  Object.defineProperty(package$scene, 'debugBmpFont', {
    get: get_debugBmpFont
  });
  package$scene.getDebugBmpFontOnce = getDebugBmpFontOnce;
  package$scene.KorgeModule = KorgeModule;
  package$scene.Module = Module;
  package$scene.Scene = Scene;
  package$scene.ScaledScene = ScaledScene;
  package$scene.EmptyScene = EmptyScene;
  package$scene.LogScene = LogScene;
  package$scene.sleep_bfzdjs$ = sleep;
  package$scene.sleepMs_j3nem9$ = sleepMs;
  package$scene.withEasing_npde8n$ = withEasing;
  package$scene.sceneContainer_1q3n1h$ = sceneContainer;
  $$importsForInline$$['kotlinx-coroutines-core'] = $module$kotlinx_coroutines_core;
  Object.defineProperty(SceneContainer, 'Companion', {
    get: SceneContainer$Companion_getInstance
  });
  package$scene.SceneContainer = SceneContainer;
  package$scene.TransitionView = TransitionView;
  package$scene.Transition = Transition;
  Object.defineProperty(package$scene, 'AlphaTransition', {
    get: function () {
      return AlphaTransition;
    }
  });
  var package$service = package$korge.service || (package$korge.service = {});
  package$service.Achievements = Achievements;
  package$service.Ads = Ads;
  package$service.Analytics = Analytics;
  package$service.CloudSave = CloudSave;
  package$service.InAppPayments = InAppPayments;
  package$service.RateApp = RateApp;
  package$service.Share = Share;
  package$service.Store = Store;
  var package$process = package$service.process || (package$service.process = {});
  package$process.NativeProcess = NativeProcess;
  package$process.NativeProcessBase = NativeProcessBase;
  var package$storage = package$service.storage || (package$service.storage = {});
  package$storage.IStorage = IStorage;
  package$storage.contains_3mep8b$ = contains;
  package$storage.get_3mep8b$ = get_2;
  package$storage.InmemoryStorage = InmemoryStorage;
  package$storage.Storage = Storage;
  package$storage.StorageBase = StorageBase;
  package$storage.StorageItem = StorageItem;
  Stats.Named = Stats$Named;
  Stats.Counter = Stats$Counter;
  Stats.Value = Stats$Value;
  Stats.RCollection = Stats$RCollection;
  var package$stat = package$korge.stat || (package$korge.stat = {});
  package$stat.Stats = Stats;
  var package$tests = package$korge.tests || (package$korge.tests = {});
  package$tests.KorgeTest = KorgeTest;
  TestCoroutineDispatcher.TimedTask = TestCoroutineDispatcher$TimedTask;
  package$tests.TestCoroutineDispatcher = TestCoroutineDispatcher;
  ViewsForTesting.FastGameWindowCoroutineDispatcher = ViewsForTesting$FastGameWindowCoroutineDispatcher;
  package$tests.ViewsForTesting = ViewsForTesting;
  var package$tiled = package$korge.tiled || (package$korge.tiled = {});
  package$tiled.get_patterns_b7bx3x$ = get_patterns;
  package$tiled.get_images_b7bx3x$ = get_images;
  package$tiled.get_objects_b7bx3x$ = get_objects;
  package$tiled.TiledMapData = TiledMapData;
  package$tiled.getPos_5b2yhr$ = getPos;
  package$tiled.getObjectPosByName_y56jle$ = getObjectPosByName;
  package$tiled.TileSetData = TileSetData;
  TiledMap.TiledTileset = TiledMap$TiledTileset;
  TiledMap$Layer.Patterns = TiledMap$Layer$Patterns;
  TiledMap$Layer.ObjectInfo = TiledMap$Layer$ObjectInfo;
  TiledMap$Layer$Objects.Object = TiledMap$Layer$Objects$Object;
  TiledMap$Layer$Objects.Poly = TiledMap$Layer$Objects$Poly;
  TiledMap$Layer$Objects.PPoint = TiledMap$Layer$Objects$PPoint;
  TiledMap$Layer$Objects.Rect = TiledMap$Layer$Objects$Rect;
  TiledMap$Layer$Objects.Ellipse = TiledMap$Layer$Objects$Ellipse;
  TiledMap$Layer$Objects.Polyline = TiledMap$Layer$Objects$Polyline;
  TiledMap$Layer$Objects.Polygon = TiledMap$Layer$Objects$Polygon;
  TiledMap$Layer.Objects = TiledMap$Layer$Objects;
  TiledMap$Layer.Image = TiledMap$Layer$Image;
  TiledMap.Layer = TiledMap$Layer;
  package$tiled.TiledMap = TiledMap;
  package$tiled.get_id_65mzvj$ = get_id;
  package$tiled.get_name_65mzvj$ = get_name;
  package$tiled.get_bounds_65mzvj$ = get_bounds;
  package$tiled.get_objprops_65mzvj$ = get_objprops;
  Object.defineProperty(package$tiled, 'tilemapLog', {
    get: function () {
      return tilemapLog;
    }
  });
  package$tiled.TiledFile = TiledFile;
  package$tiled.readTiledMapData_yirdke$ = readTiledMapData;
  package$tiled.readTiledMap_utz4xw$ = readTiledMap;
  package$tiled.tiledMapView_ursl2q$ = tiledMapView;
  package$tiled.TiledMapView = TiledMapView;
  package$tiled.createView_h64rfr$ = createView;
  var package$time = package$korge.time || (package$korge.time = {});
  package$time.toTimeProvider_m8pc6n$ = toTimeProvider;
  package$time.TimerRef = TimerRef;
  package$time.TimerComponents = TimerComponents;
  package$time.get_timers_gohfi1$ = get_timers;
  package$time.waitMs_7s4zx7$ = waitMs;
  package$time.wait_f287ec$ = wait;
  package$time.waitFrame_gohfi1$ = waitFrame;
  package$time.sleepMs_7s4zx7$ = sleepMs_0;
  package$time.sleep_f287ec$ = sleep_0;
  package$time.sleepFrame_gohfi1$ = sleepFrame;
  package$time.timer_7ghvt3$ = timer;
  package$time.timeout_7ghvt3$ = timeout;
  package$time.interval_7ghvt3$ = interval;
  package$time.delay_f287ec$ = delay_1;
  package$time.delayFrame_gohfi1$ = delayFrame;
  var package$tween = package$korge.tween || (package$korge.tween = {});
  package$tween.TweenComponent = TweenComponent;
  package$tween.tween_t8t7it$ = tween;
  package$tween.tweenAsync_t8t7it$ = tweenAsync;
  package$tween.tweenAsync_gvlwiw$ = tweenAsync_0;
  package$tween.show_yz29kn$ = show;
  package$tween.hide_yz29kn$ = hide;
  package$tween.get_6g74bb$ = get_5;
  package$tween.moveTo_mo66qj$ = moveTo;
  package$tween.moveBy_mo66qj$ = moveBy;
  package$tween.scaleTo_mo66qj$ = scaleTo;
  package$tween.moveTo_58is8l$ = moveTo_0;
  package$tween.moveBy_58is8l$ = moveBy_0;
  package$tween.scaleTo_58is8l$ = scaleTo_0;
  package$tween.rotateTo_ei9i4u$ = rotateTo;
  package$tween.rotateBy_ei9i4u$ = rotateBy;
  package$tween.V2_init_7a027f$ = V2_init;
  package$tween.V2 = V2;
  package$tween.get_k1tobx$ = get_3;
  package$tween.get_75isb1$ = get_4;
  package$tween._interpolate_yvo9jy$ = _interpolate;
  package$tween._interpolateFloat_ldbw0u$ = _interpolateFloat;
  package$tween._interpolateAny_bt5wt8$ = _interpolateAny;
  package$tween._interpolateColor_ax9ryg$ = _interpolateColor;
  package$tween._interpolateAngle_a0zjys$ = _interpolateAngle;
  package$tween._interpolateTimeSpan_1syhps$ = _interpolateTimeSpan;
  package$tween.get_d5t5z9$ = get_6;
  package$tween.get_rsnrrr$ = get_7;
  package$tween.get_1q95j$ = get_8;
  package$tween.get_4ej004$ = get_9;
  package$tween.get_kkvgtz$ = get_10;
  package$tween.get_1ml8v3$ = get_11;
  package$tween.get_8jpm3$ = get_12;
  package$tween.get_qupvg7$ = get_13;
  package$tween.get_kj4p66$ = get_14;
  package$tween.get_5z2m6h$ = get_15;
  package$tween.get_er01ls$ = get_16;
  package$tween.get_g76o3t$ = get_17;
  package$tween.get_eqgkw2$ = get_18;
  package$tween.easing_lr91g1$ = easing;
  package$tween.delay_obe6bn$ = delay_2;
  package$tween.duration_obe6bn$ = duration;
  package$tween.delay_fdiuq5$ = delay_3;
  package$tween.duration_fdiuq5$ = duration_0;
  package$tween.linear_2stsxw$ = linear;
  package$tween.smooth_2stsxw$ = smooth;
  package$tween.easeIn_2stsxw$ = easeIn;
  package$tween.easeOut_2stsxw$ = easeOut;
  package$tween.easeInOut_2stsxw$ = easeInOut;
  package$tween.easeOutIn_2stsxw$ = easeOutIn;
  package$tween.easeInBack_2stsxw$ = easeInBack;
  package$tween.easeOutBack_2stsxw$ = easeOutBack;
  package$tween.easeInOutBack_2stsxw$ = easeInOutBack;
  package$tween.easeOutInBack_2stsxw$ = easeOutInBack;
  package$tween.easeInElastic_2stsxw$ = easeInElastic;
  package$tween.easeOutElastic_2stsxw$ = easeOutElastic;
  package$tween.easeInOutElastic_2stsxw$ = easeInOutElastic;
  package$tween.easeOutInElastic_2stsxw$ = easeOutInElastic;
  package$tween.easeInBounce_2stsxw$ = easeInBounce;
  package$tween.easeOutBounce_2stsxw$ = easeOutBounce;
  package$tween.easeInOutBounce_2stsxw$ = easeInOutBounce;
  package$tween.easeOutInBounce_2stsxw$ = easeOutInBounce;
  package$tween.easeInQuad_2stsxw$ = easeInQuad;
  package$tween.easeOutQuad_2stsxw$ = easeOutQuad;
  package$tween.easeInOutQuad_2stsxw$ = easeInOutQuad;
  package$tween.easeSine_2stsxw$ = easeSine;
  var package$ui = package$korge.ui || (package$korge.ui = {});
  package$ui.get_defaultUISkin_gohfi1$ = get_defaultUISkin;
  package$ui.get_defaultCheckSkin_gohfi1$ = get_defaultCheckSkin;
  package$ui.iconButton_392ti1$ = iconButton_0;
  package$ui.iconButton_2pt8on$ = iconButton;
  package$ui.IconButton = IconButton;
  package$ui.get_defaultUIFont_gohfi1$ = get_defaultUIFont;
  package$ui.textButton_fibi1u$ = textButton_0;
  package$ui.textButton_r0qvm$ = textButton;
  package$ui.TextButton = TextButton;
  package$ui.uiButton_paiay9$ = uiButton_0;
  package$ui.uiButton_vxni81$ = uiButton;
  package$ui.UIButton = UIButton;
  package$ui.uiCheckBox_lvts0n$ = uiCheckBox_0;
  package$ui.uiCheckBox_ydbvhj$ = uiCheckBox;
  package$ui.UICheckBox = UICheckBox;
  package$ui.get_defaultComboBoxSkin_gohfi1$ = get_defaultComboBoxSkin;
  package$ui.uiComboBox_ceke0l$ = uiComboBox_0;
  package$ui.uiComboBox_wpdnfp$ = uiComboBox;
  package$ui.UIComboBox = UIComboBox;
  package$ui.uiObservable_7uhc0p$ = uiObservable;
  package$ui.UIObservable = UIObservable;
  package$ui.uiProgressBar_nezu8z$ = uiProgressBar_0;
  package$ui.uiProgressBar_qqs6v7$ = uiProgressBar;
  package$ui.UIProgressBar = UIProgressBar;
  UIScrollBar.Direction = UIScrollBar$Direction;
  package$ui.get_defaultHorScrollBarSkin_gohfi1$ = get_defaultHorScrollBarSkin;
  package$ui.get_defaultVerScrollBarSkin_gohfi1$ = get_defaultVerScrollBarSkin;
  package$ui.uiScrollBar_xq768o$ = uiScrollBar_0;
  package$ui.uiScrollBar_wq53w0$ = uiScrollBar;
  Object.defineProperty(UIScrollBar$Direction, 'Vertical', {
    get: UIScrollBar$Direction$Vertical_getInstance
  });
  Object.defineProperty(UIScrollBar$Direction, 'Horizontal', {
    get: UIScrollBar$Direction$Horizontal_getInstance
  });
  Object.defineProperty(UIScrollBar$Direction, 'Companion', {
    get: UIScrollBar$Direction$Companion_getInstance
  });
  package$ui.UIScrollBar = UIScrollBar;
  package$ui.uiScrollableArea_g817i9$ = uiScrollableArea_0;
  package$ui.uiScrollableArea_fclc0n$ = uiScrollableArea;
  package$ui.UIScrollableArea = UIScrollableArea;
  package$ui.get_defaultTextSkin_gohfi1$ = get_defaultTextSkin;
  package$ui.uiText_1ezp37$ = uiText_0;
  package$ui.uiText_585i6l$ = uiText;
  package$ui.UIText = UIText;
  package$ui.UIView = UIView;
  package$ui.DummyUpdateComponentWithViews = DummyUpdateComponentWithViews;
  package$ui.set_defaultTextSkin_95nlvp$ = set_defaultTextSkin;
  package$ui.set_defaultUIFont_frgr9n$ = set_defaultUIFont;
  package$ui.set_defaultUISkin_yen6rw$ = set_defaultUISkin;
  package$ui.set_defaultCheckSkin_djuqj5$ = set_defaultCheckSkin;
  package$ui.get_defaultUpSkin_gohfi1$ = get_defaultUpSkin;
  package$ui.set_defaultUpSkin_djuqj5$ = set_defaultUpSkin;
  package$ui.get_defaultDownSkin_gohfi1$ = get_defaultDownSkin;
  package$ui.set_defaultDownSkin_djuqj5$ = set_defaultDownSkin;
  package$ui.get_defaultLeftSkin_gohfi1$ = get_defaultLeftSkin;
  package$ui.set_defaultLeftSkin_djuqj5$ = set_defaultLeftSkin;
  package$ui.get_defaultRightSkin_gohfi1$ = get_defaultRightSkin;
  package$ui.set_defaultRightSkin_djuqj5$ = set_defaultRightSkin;
  package$ui.set_defaultComboBoxSkin_3brned$ = set_defaultComboBoxSkin;
  package$ui.set_defaultVerScrollBarSkin_c5ycso$ = set_defaultVerScrollBarSkin;
  package$ui.set_defaultHorScrollBarSkin_c5ycso$ = set_defaultHorScrollBarSkin;
  Object.defineProperty(package$ui, 'DefaultTextSkin', {
    get: get_DefaultTextSkin
  });
  Object.defineProperty(package$ui, 'DefaultUIFont', {
    get: get_DefaultUIFont
  });
  Object.defineProperty(package$ui, 'DEFAULT_UI_SKIN_IMG', {
    get: get_DEFAULT_UI_SKIN_IMG
  });
  Object.defineProperty(package$ui, 'DefaultUISkin', {
    get: get_DefaultUISkin
  });
  Object.defineProperty(package$ui, 'DefaultCheckSkin', {
    get: get_DefaultCheckSkin
  });
  Object.defineProperty(package$ui, 'DefaultUpSkin', {
    get: get_DefaultUpSkin
  });
  Object.defineProperty(package$ui, 'DefaultDownSkin', {
    get: get_DefaultDownSkin
  });
  Object.defineProperty(package$ui, 'DefaultLeftSkin', {
    get: get_DefaultLeftSkin
  });
  Object.defineProperty(package$ui, 'DefaultRightSkin', {
    get: get_DefaultRightSkin
  });
  Object.defineProperty(package$ui, 'DefaultComboBoxSkin', {
    get: get_DefaultComboBoxSkin
  });
  Object.defineProperty(package$ui, 'DefaultVerScrollBarSkin', {
    get: get_DefaultVerScrollBarSkin
  });
  Object.defineProperty(package$ui, 'DefaultHorScrollBarSkin', {
    get: get_DefaultHorScrollBarSkin
  });
  package$ui.TextFormat = TextFormat;
  package$ui.TextSkin = TextSkin;
  package$ui.UISkin = UISkin;
  package$ui.ComboBoxSkin = ComboBoxSkin;
  package$ui.ScrollBarSkin = ScrollBarSkin;
  package$ui.IconSkin = IconSkin;
  package$ui.calculateWidth_m4915$ = calculateWidth;
  package$ui.calculateHeight_m4915$ = calculateHeight;
  package$ui.paddingLeft_m4915$ = paddingLeft;
  package$ui.paddingRight_m4915$ = paddingRight;
  package$ui.paddingTop_m4915$ = paddingTop;
  package$ui.paddingBottom_m4915$ = paddingBottom;
  var package$util = package$korge.util || (package$korge.util = {});
  package$util.CancellableGroup = CancellableGroup;
  package$util.AutoClose_bzevgd$ = AutoClose;
  package$util.toIntArray2_leuab8$ = toIntArray2;
  package$view.Anchorable = Anchorable;
  package$view.anchor_11wmr3$ = anchor;
  package$view.anchor_sjrorj$ = anchor_0;
  package$view.anchor_l68kgm$ = anchor_1;
  package$view.center_bgcay7$ = center;
  package$view.get_centered_bgcay7$ = get_centered;
  Object.defineProperty(BlendMode, 'INHERIT', {
    get: BlendMode$INHERIT_getInstance
  });
  Object.defineProperty(BlendMode, 'NONE', {
    get: BlendMode$NONE_getInstance
  });
  Object.defineProperty(BlendMode, 'NORMAL', {
    get: BlendMode$NORMAL_getInstance
  });
  Object.defineProperty(BlendMode, 'ADD', {
    get: BlendMode$ADD_getInstance
  });
  Object.defineProperty(BlendMode, 'MULTIPLY', {
    get: BlendMode$MULTIPLY_getInstance
  });
  Object.defineProperty(BlendMode, 'SCREEN', {
    get: BlendMode$SCREEN_getInstance
  });
  Object.defineProperty(BlendMode, 'ERASE', {
    get: BlendMode$ERASE_getInstance
  });
  Object.defineProperty(BlendMode, 'MASK', {
    get: BlendMode$MASK_getInstance
  });
  Object.defineProperty(BlendMode, 'BELOW', {
    get: BlendMode$BELOW_getInstance
  });
  Object.defineProperty(BlendMode, 'SUBTRACT', {
    get: BlendMode$SUBTRACT_getInstance
  });
  Object.defineProperty(BlendMode, 'LIGHTEN', {
    get: BlendMode$LIGHTEN_getInstance
  });
  Object.defineProperty(BlendMode, 'DARKEN', {
    get: BlendMode$DARKEN_getInstance
  });
  Object.defineProperty(BlendMode, 'DIFFERENCE', {
    get: BlendMode$DIFFERENCE_getInstance
  });
  Object.defineProperty(BlendMode, 'INVERT', {
    get: BlendMode$INVERT_getInstance
  });
  Object.defineProperty(BlendMode, 'ALPHA', {
    get: BlendMode$ALPHA_getInstance
  });
  Object.defineProperty(BlendMode, 'HARDLIGHT', {
    get: BlendMode$HARDLIGHT_getInstance
  });
  Object.defineProperty(BlendMode, 'Companion', {
    get: BlendMode$Companion_getInstance
  });
  package$view.BlendMode = BlendMode;
  package$view.camera_crl2ny$ = camera;
  package$view.Camera = Camera;
  package$view.circle_7rp01f$ = circle_0;
  package$view.Circle = Circle;
  package$view.clipContainer_cir104$ = clipContainer_0;
  package$view.clipContainer_kxyfno$ = clipContainer;
  package$view.ClipContainer = ClipContainer;
  package$view.container_exzb34$ = container;
  package$view.Container = Container;
  package$view.plusAssign_5hnngd$ = plusAssign;
  package$view.dummyView_st8p7j$ = dummyView;
  package$view.DummyView = DummyView;
  package$view.ellipse_neop41$ = ellipse_0;
  package$view.Ellipse = Ellipse;
  package$view.FilteredContainer = FilteredContainer;
  package$view.fixedSizeContainer_rcks04$ = fixedSizeContainer;
  package$view.fixedSizeContainer_xzpz9w$ = fixedSizeContainer_0;
  package$view.FixedSizeContainer = FixedSizeContainer;
  Object.defineProperty(Fonts, 'Companion', {
    get: Fonts$Companion_getInstance
  });
  package$view.Fonts = Fonts;
  package$view.graphics_x4ijcn$ = graphics;
  package$view.sgraphics_gtcasc$ = sgraphics;
  package$view.Graphics = Graphics;
  package$view.image_bsvffa$ = image;
  package$view.Image_init_8drxwf$ = Image_init;
  package$view.image_aw59w$ = image_0;
  package$view.Image = Image;
  Object.defineProperty(Mesh$DrawModes, 'Triangles', {
    get: Mesh$DrawModes$Triangles_getInstance
  });
  Object.defineProperty(Mesh$DrawModes, 'TriangleStrip', {
    get: Mesh$DrawModes$TriangleStrip_getInstance
  });
  Mesh.DrawModes = Mesh$DrawModes;
  package$view.Mesh = Mesh;
  package$view.pivot_2c5zt9$ = pivot;
  package$view.ninePatch_yck3qr$ = ninePatch;
  package$view.NinePatch = NinePatch;
  package$view.ninePatch_acklyn$ = ninePatch_0;
  package$view.NinePatchEx = NinePatchEx;
  package$view.ninePatch_qlcbrr$ = ninePatch_1;
  Object.defineProperty(NinePatchEx, 'Companion', {
    get: NinePatchEx$Companion_getInstance
  });
  NinePatchEx.Tex_init_hdw37b$ = NinePatchEx$NinePatchEx$Tex_init;
  NinePatchEx.Tex = NinePatchEx$Tex;
  package$view.RectBase = RectBase;
  package$view.Renderable = Renderable;
  package$view.roundRect_iy0hdd$ = roundRect_1;
  package$view.roundRect_9wto9d$ = roundRect_0;
  package$view.RoundRect = RoundRect;
  package$view.scaleView_pzl28r$ = scaleView;
  package$view.ScaleView = ScaleView;
  package$view.solidRect_8ma1ih$ = solidRect_0;
  package$view.solidRect_gl3y1$ = solidRect;
  Object.defineProperty(SolidRect, 'Companion', {
    get: SolidRect$Companion_getInstance
  });
  package$view.SolidRect = SolidRect;
  package$view.Sprite_init_i2lxqn$ = Sprite_init_0;
  package$view.sprite_cmvtbc$ = sprite;
  package$view.Sprite_init_lr3c3n$ = Sprite_init;
  package$view.sprite_i7smvm$ = sprite_0;
  package$view.sprite_gvz644$ = sprite_1;
  package$view.Sprite = Sprite;
  Object.defineProperty(AnimationType, 'STANDARD', {
    get: AnimationType$STANDARD_getInstance
  });
  Object.defineProperty(AnimationType, 'LOOPED', {
    get: AnimationType$LOOPED_getInstance
  });
  Object.defineProperty(AnimationType, 'DURATION', {
    get: AnimationType$DURATION_getInstance
  });
  package$view.AnimationType = AnimationType;
  Object.defineProperty(SpriteAnimation, 'Companion', {
    get: SpriteAnimation$Companion_getInstance
  });
  package$view.SpriteAnimation = SpriteAnimation;
  package$view.getSpriteAnimation_ca5iko$ = getSpriteAnimation;
  package$view.getSpriteAnimation_gh7y3x$ = getSpriteAnimation_0;
  package$view.Stage = Stage;
  package$view.Text = Text;
  package$view.text_bm8mfi$ = text;
  Object.defineProperty(Text, 'Companion', {
    get: Text$Companion_getInstance
  });
  package$view.IText = IText;
  package$view.IHtml = IHtml;
  package$view.setText_4h3qbs$ = setText;
  package$view.setHtml_4h3qbs$ = setHtml;
  package$view.text2_cccbd8$ = text2;
  package$view.Text2 = Text2;
  package$view.Text2TextRendererActions = Text2TextRendererActions;
  package$view.ViewsDslMarker = ViewsDslMarker;
  View.Reference = View$Reference;
  Object.defineProperty(View$HitTestType, 'BOUNDING', {
    get: View$HitTestType$BOUNDING_getInstance
  });
  Object.defineProperty(View$HitTestType, 'SHAPE', {
    get: View$HitTestType$SHAPE_getInstance
  });
  View.HitTestType = View$HitTestType;
  Object.defineProperty(View, 'Companion', {
    get: View$Companion_getInstance
  });
  View.DeferWithViewsUpdateComponentWithViews = View$DeferWithViewsUpdateComponentWithViews;
  package$view.View_init = View_init;
  package$view.View = View;
  package$view.hitTest_pxcafn$ = hitTest;
  package$view.hitTest_bavgy8$ = hitTest_0;
  package$view.hasAncestor_ow9aoh$ = hasAncestor;
  package$view.replaceWith_ow9aoh$ = replaceWith;
  package$view.addUpdater_t24ukx$ = addUpdater;
  package$view.addHrUpdater_klr9dr$ = addHrUpdater;
  package$view.addFixedUpdater_ns2cui$ = addFixedUpdater;
  package$view.addFixedUpdater_7q9vgb$ = addFixedUpdater_0;
  package$view.addFixedUpdater_z8z5pu$ = addFixedUpdater_1;
  package$view.onNextFrame_20foxz$ = onNextFrame;
  package$view.get_ancestorCount_jv7z46$ = get_ancestorCount;
  package$view.ancestorsUpTo_5hnngd$ = ancestorsUpTo;
  package$view.get_ancestors_jv7z46$ = get_ancestors;
  package$view.dump_ryd74p$ = dump;
  package$view.dumpToString_jv7z46$ = dumpToString;
  package$view.foreachDescendant_1m112d$ = foreachDescendant;
  package$view.descendantsWithProp_s229vv$ = descendantsWithProp;
  package$view.descendantsWithPropString_s229vv$ = descendantsWithPropString;
  package$view.descendantsWithPropInt_obdzzd$ = descendantsWithPropInt;
  package$view.descendantsWithPropDouble_xkqg1h$ = descendantsWithPropDouble;
  package$view.descendantsWith_yd6hk$ = descendantsWith;
  package$view.get_4h3qbs$ = get_19;
  package$view.position_2cbtc5$ = position_1;
  package$view.position_ynacpq$ = position;
  package$view.visible_gngpky$ = visible;
  package$view.name_kzw694$ = name_0;
  package$view.hitShape_p3mz7x$ = hitShape;
  package$view.size_2cbtc5$ = size;
  package$view.size_ajix5r$ = size_0;
  package$view.firstDescendantWithName_4h3qbs$ = firstDescendantWithName;
  package$view.get_allDescendantNames_jv7z46$ = get_allDescendantNames;
  package$view.firstDescendantWith_tm69th$ = firstDescendantWith;
  package$view.xy_2cbtc5$ = xy;
  package$view.xy_ajix5r$ = xy_0;
  package$view.position_ajix5r$ = position_0;
  package$view.positionX_k0wlkj$ = positionX;
  package$view.positionY_k0wlkj$ = positionY;
  package$view.positionX_bfm155$ = positionX_0;
  package$view.positionY_bfm155$ = positionY_0;
  package$view.centerXBetween_2cbtc5$ = centerXBetween;
  package$view.centerYBetween_2cbtc5$ = centerYBetween;
  package$view.centerBetween_wgq76x$ = centerBetween;
  package$view.centerXOn_apzp43$ = centerXOn;
  package$view.centerYOn_apzp43$ = centerYOn;
  package$view.centerOn_apzp43$ = centerOn;
  package$view.alignLeftToLeftOf_qcv975$ = alignLeftToLeftOf;
  package$view.alignLeftToRightOf_qcv975$ = alignLeftToRightOf;
  package$view.alignRightToLeftOf_qcv975$ = alignRightToLeftOf;
  package$view.alignRightToRightOf_qcv975$ = alignRightToRightOf;
  package$view.alignTopToTopOf_qcv975$ = alignTopToTopOf;
  package$view.alignTopToBottomOf_qcv975$ = alignTopToBottomOf;
  package$view.alignBottomToTopOf_qcv975$ = alignBottomToTopOf;
  package$view.alignBottomToBottomOf_qcv975$ = alignBottomToBottomOf;
  package$view.rotation_17knrc$ = rotation;
  package$view.skew_2cbtc5$ = skew;
  package$view.scale_2cbtc5$ = scale_1;
  package$view.alpha_k0wlkj$ = alpha;
  package$view.skew_t6upcb$ = skew_0;
  package$view.scale_t6upcb$ = scale_2;
  package$view.alpha_q8hyz9$ = alpha_0;
  package$view.rotation_q8hyz9$ = rotation_0;
  package$view.rotationDegrees_q8hyz9$ = rotationDegrees;
  package$view.xy_t6upcb$ = xy_1;
  package$view.position_t6upcb$ = position_2;
  package$view.positionX_q8hyz9$ = positionX_1;
  package$view.positionY_q8hyz9$ = positionY_1;
  package$view.size_t6upcb$ = size_1;
  package$view.hitTest_s453s7$ = hitTest_1;
  package$view.centerXBetween_t6upcb$ = centerXBetween_0;
  package$view.centerYBetween_t6upcb$ = centerYBetween_0;
  package$view.centerBetween_mwsjbd$ = centerBetween_0;
  package$view.alignLeftToLeftOf_1l5rrt$ = alignLeftToLeftOf_0;
  package$view.alignLeftToRightOf_1l5rrt$ = alignLeftToRightOf_0;
  package$view.alignRightToLeftOf_1l5rrt$ = alignRightToLeftOf_0;
  package$view.alignRightToRightOf_1l5rrt$ = alignRightToRightOf_0;
  package$view.alignTopToTopOf_1l5rrt$ = alignTopToTopOf_0;
  package$view.alignTopToBottomOf_1l5rrt$ = alignTopToBottomOf_0;
  package$view.alignBottomToTopOf_1l5rrt$ = alignBottomToTopOf_0;
  package$view.alignBottomToBottomOf_1l5rrt$ = alignBottomToBottomOf_0;
  package$view.ViewCollisionContext = ViewCollisionContext;
  Object.defineProperty(CollisionKind, 'GLOBAL_RECT', {
    get: CollisionKind$GLOBAL_RECT_getInstance
  });
  Object.defineProperty(CollisionKind, 'SHAPE', {
    get: CollisionKind$SHAPE_getInstance
  });
  package$view.CollisionKind = CollisionKind;
  package$view.collidesWith_qjuya0$ = collidesWith;
  package$view.collidesWith_lvkevd$ = collidesWith_0;
  package$view.collidesWithGlobalBoundingBox_ow9aoh$ = collidesWithGlobalBoundingBox;
  package$view.collidesWithGlobalBoundingBox_3oz3te$ = collidesWithGlobalBoundingBox_0;
  package$view.collidesWithShape_ow9aoh$ = collidesWithShape;
  package$view.collidesWithShape_3oz3te$ = collidesWithShape_0;
  package$view.findCollision_2rv4n1$ = findCollision_0;
  package$view.onCollision_1uywuz$ = onCollision;
  package$view.onCollisionShape_awcm7m$ = onCollisionShape;
  package$view.onDescendantCollision_dudxxb$ = onDescendantCollision;
  package$view.renderToBitmap_9k8eqs$ = renderToBitmap;
  package$view.Views = Views;
  package$view.viewsLog_kwiduj$ = viewsLog;
  package$view.GameWindowLog = GameWindowLog;
  package$view.ViewsLog = ViewsLog;
  package$view.texture_q2u7nr$ = texture;
  package$view.texture_icneeg$ = texture_0;
  package$view.texture_tgw6oz$ = texture_1;
  package$view.texture_h60gx9$ = texture_2;
  package$view.texture_jlutv3$ = texture_3;
  package$view.ViewsContainer = ViewsContainer;
  package$view.get_ag_okreqd$ = get_ag;
  package$view.KorgeFileLoaderTester = KorgeFileLoaderTester;
  package$view.KorgeFileLoader = KorgeFileLoader;
  package$view.getAllDescendantViews_flvfyk$ = getAllDescendantViews;
  package$view.updateSingleView_5yy1gc$ = updateSingleView;
  package$view.updateSingleViewWithViews_vsr2nn$ = updateSingleViewWithViews;
  package$view.updateSingleViewWithViewsAll_r9jz0q$ = updateSingleViewWithViewsAll;
  Object.defineProperty(BoundsProvider, 'Dummy', {
    get: BoundsProvider$Dummy_getInstance
  });
  package$view.BoundsProvider = BoundsProvider;
  package$view.ViewsScope = ViewsScope;
  Object.defineProperty(BlurEffectView, 'Companion', {
    get: BlurEffectView$Companion_getInstance
  });
  var package$effect = package$view.effect || (package$view.effect = {});
  package$effect.BlurEffectView = BlurEffectView;
  package$effect.blurEffectView_pvuwqz$ = blurEffectView;
  Object.defineProperty(ColorMatrixEffectView, 'Companion', {
    get: ColorMatrixEffectView$Companion_getInstance
  });
  package$effect.ColorMatrixEffectView = ColorMatrixEffectView;
  package$effect.colorMatrixEffectView_wmhcxu$ = colorMatrixEffectView;
  Object.defineProperty(Convolute3EffectView, 'Companion', {
    get: Convolute3EffectView$Companion_getInstance
  });
  package$effect.Convolute3EffectView = Convolute3EffectView;
  package$effect.convolute3EffectView_71gsis$ = convolute3EffectView;
  Object.defineProperty(EffectView, 'Companion', {
    get: EffectView$Companion_getInstance
  });
  package$effect.EffectView = EffectView;
  package$effect.effectView_1ac47i$ = effectView;
  package$effect.SwizzleColorsEffectView = SwizzleColorsEffectView;
  package$effect.swizzleColorsEffectView_g9fr6a$ = swizzleColorsEffectView;
  Object.defineProperty(WaveEffectView, 'Companion', {
    get: WaveEffectView$Companion_getInstance
  });
  package$effect.WaveEffectView = WaveEffectView;
  package$effect.waveEffectView_2x85aj$ = waveEffectView;
  var package$filter = package$view.filter || (package$view.filter = {});
  package$filter.BlurFilter = BlurFilter;
  Object.defineProperty(ColorMatrixFilter, 'Companion', {
    get: ColorMatrixFilter$Companion_getInstance
  });
  package$filter.ColorMatrixFilter = ColorMatrixFilter;
  package$filter.ComposedFilter_init_80fe2u$ = ComposedFilter_init;
  package$filter.ComposedFilter = ComposedFilter;
  Object.defineProperty(Convolute3Filter, 'Companion', {
    get: Convolute3Filter$Companion_getInstance
  });
  package$filter.Convolute3Filter = Convolute3Filter;
  Object.defineProperty(Filter, 'Companion', {
    get: Filter$Companion_getInstance
  });
  package$filter.Filter = Filter;
  Object.defineProperty(package$filter, 'IdentityFilter', {
    get: IdentityFilter_getInstance
  });
  Object.defineProperty(package$filter, 'DummyFilter', {
    get: get_DummyFilter
  });
  Object.defineProperty(PageFilter, 'Companion', {
    get: PageFilter$Companion_getInstance
  });
  package$filter.PageFilter = PageFilter;
  Object.defineProperty(ShaderFilter, 'Companion', {
    get: ShaderFilter$Companion_getInstance
  });
  package$filter.ShaderFilter = ShaderFilter;
  SwizzleColorsFilter.ProxySwizzle = SwizzleColorsFilter$ProxySwizzle;
  package$filter.SwizzleColorsFilter = SwizzleColorsFilter;
  Object.defineProperty(WaveFilter, 'Companion', {
    get: WaveFilter$Companion_getInstance
  });
  package$filter.WaveFilter = WaveFilter;
  TileMap.Repeat = TileMap$Repeat;
  var package$tiles = package$view.tiles || (package$view.tiles = {});
  package$tiles.repeat_i0bign$ = repeat;
  package$tiles.tileMap_n9xbc2$ = tileMap;
  package$tiles.tileMap_t4lmgv$ = tileMap_0;
  Object.defineProperty(TileMap$Repeat, 'NONE', {
    get: TileMap$Repeat$NONE_getInstance
  });
  Object.defineProperty(TileMap$Repeat, 'REPEAT', {
    get: TileMap$Repeat$REPEAT_getInstance
  });
  Object.defineProperty(TileMap$Repeat, 'MIRROR', {
    get: TileMap$Repeat$MIRROR_getInstance
  });
  Object.defineProperty(TileMap, 'Companion', {
    get: TileMap$Companion_getInstance
  });
  package$tiles.TileMap_init_kdl9rd$ = TileMap_init;
  package$tiles.TileMap = TileMap;
  Object.defineProperty(TileSet, 'Companion', {
    get: TileSet$Companion_getInstance
  });
  package$tiles.TileSet = TileSet;
  Camera3D.Perspective = Camera3D$Perspective;
  var package$korge3d = package$soywiz.korge3d || (package$soywiz.korge3d = {});
  package$korge3d.Camera3D = Camera3D;
  package$korge3d.Container3D = Container3D;
  package$korge3d.Korge3DExperimental = Korge3DExperimental;
  Library3D.Instance3D = Library3D$Instance3D;
  Library3D.Scene3D = Library3D$Scene3D;
  Library3D.Def = Library3D$Def;
  Library3D.Pong = Library3D$Pong;
  Library3D.ImageDef = Library3D$ImageDef;
  Library3D.ObjectDef = Library3D$ObjectDef;
  Library3D.MaterialDef = Library3D$MaterialDef;
  Library3D.LightDef = Library3D$LightDef;
  Library3D.CameraDef = Library3D$CameraDef;
  Library3D.PerspectiveCameraDef = Library3D$PerspectiveCameraDef;
  Library3D.LightKindDef = Library3D$LightKindDef;
  Library3D.LightTexDef = Library3D$LightTexDef;
  Library3D.LightColorDef = Library3D$LightColorDef;
  Library3D.EffectParamSurface = Library3D$EffectParamSurface;
  Library3D.EffectParamSampler2D = Library3D$EffectParamSampler2D;
  Library3D.EffectDef = Library3D$EffectDef;
  Library3D.StandardEffectDef = Library3D$StandardEffectDef;
  Library3D.GeometryDef = Library3D$GeometryDef;
  Library3D.BoneDef = Library3D$BoneDef;
  Library3D.SkinDef = Library3D$SkinDef;
  Library3D.PointLightDef = Library3D$PointLightDef;
  Library3D.AmbientLightDef = Library3D$AmbientLightDef;
  package$korge3d.Library3D = Library3D;
  package$korge3d.LibraryInstantiateContext = LibraryInstantiateContext;
  package$korge3d.instantiate_8cj4sm$ = instantiate;
  package$korge3d.instantiate_7lbx3f$ = instantiate_0;
  package$korge3d.instantiate_gequp2$ = instantiate_1;
  package$korge3d.light_brnosy$ = light;
  package$korge3d.Light3D = Light3D;
  Material3D.Light = Material3D$Light;
  Material3D.LightColor = Material3D$LightColor;
  Material3D.LightTexture = Material3D$LightTexture;
  package$korge3d.Material3D = Material3D;
  package$korge3d.Mesh3D = Mesh3D;
  Object.defineProperty(MeshBuilder3D, 'Companion', {
    get: MeshBuilder3D$Companion_getInstance
  });
  package$korge3d.MeshBuilder3D = MeshBuilder3D;
  package$korge3d.RenderContext3D = RenderContext3D;
  Object.defineProperty(Shaders3D, 'Companion', {
    get: Shaders3D$Companion_getInstance
  });
  Shaders3D.LightAttributes = Shaders3D$LightAttributes;
  Shaders3D.MaterialLightUniform = Shaders3D$MaterialLightUniform;
  package$korge3d.Shaders3D = Shaders3D;
  package$korge3d.StandardShader3D = StandardShader3D;
  package$korge3d.AbstractStandardShader3D = AbstractStandardShader3D;
  package$korge3d.BaseShader3D = BaseShader3D;
  package$korge3d.box_xe8nma$ = box_0;
  package$korge3d.box_nb0ziu$ = box;
  package$korge3d.addTo_ptnjq7$ = addTo_0;
  Object.defineProperty(Cube3D, 'Companion', {
    get: Cube3D$Companion_getInstance
  });
  package$korge3d.Cube3D = Cube3D;
  package$korge3d.Joint3D = Joint3D;
  package$korge3d.Bone3D = Bone3D;
  package$korge3d.Skin3D = Skin3D;
  package$korge3d.Skeleton3D = Skeleton3D;
  package$korge3d.scene3D_oy1ld2$ = scene3D;
  package$korge3d.Views3D = Views3D;
  package$korge3d.Stage3D = Stage3D;
  package$korge3d.Stage3DView = Stage3DView;
  Object.defineProperty(Transform3D, 'Companion', {
    get: Transform3D$Companion_getInstance
  });
  package$korge3d.Transform3D = Transform3D;
  package$korge3d.View3D = View3D;
  package$korge3d.removeFromParent_xxpezy$ = removeFromParent;
  package$korge3d.foreachDescendant_31zpun$ = foreachDescendant_0;
  package$korge3d.descendants_dfsx3h$ = descendants;
  package$korge3d.get_c7c78v$ = get_21;
  package$korge3d.name_x8c7q8$ = name_1;
  package$korge3d.position_w8x88i$ = position_3;
  package$korge3d.position_v1g5ca$ = position_4;
  package$korge3d.position_eh7g2e$ = position_5;
  package$korge3d.position_tkgenm$ = position_6;
  package$korge3d.rotation_75um9f$ = rotation_1;
  package$korge3d.scale_w8x88i$ = scale_3;
  package$korge3d.scale_v1g5ca$ = scale_4;
  package$korge3d.scale_eh7g2e$ = scale_5;
  package$korge3d.scale_tkgenm$ = scale_6;
  package$korge3d.lookAt_gie8gz$ = lookAt;
  package$korge3d.lookAt_g5a430$ = lookAt_0;
  package$korge3d.lookAt_6ynxdw$ = lookAt_1;
  package$korge3d.lookAt_7c1zey$ = lookAt_2;
  package$korge3d.positionLookingAt_z8rqaa$ = positionLookingAt;
  package$korge3d.positionLookingAt_7l26mi$ = positionLookingAt_0;
  package$korge3d.positionLookingAt_tz4k6y$ = positionLookingAt_1;
  package$korge3d.positionLookingAt_c5n7y$ = positionLookingAt_2;
  package$korge3d.mesh_4jy304$ = mesh;
  package$korge3d.ViewWithMesh3D = ViewWithMesh3D;
  var package$animation = package$korge3d.animation || (package$korge3d.animation = {});
  package$animation.Animator3D = Animator3D;
  Animation3D.Frames = Animation3D$Frames;
  package$animation.Animation3D = Animation3D;
  var package$format = package$korge3d.format || (package$korge3d.format = {});
  package$format.readColladaLibrary_thwgyb$ = readColladaLibrary;
  ColladaParser.SourceParam = ColladaParser$SourceParam;
  ColladaParser.MatrixSourceParam = ColladaParser$MatrixSourceParam;
  ColladaParser.FloatSourceParam = ColladaParser$FloatSourceParam;
  ColladaParser.NamesSourceParam = ColladaParser$NamesSourceParam;
  ColladaParser.Source = ColladaParser$Source;
  ColladaParser.Input = ColladaParser$Input;
  ColladaParser.Geometry = ColladaParser$Geometry;
  ColladaParser.Skin = ColladaParser$Skin;
  Object.defineProperty(ColladaParser, 'Companion', {
    get: ColladaParser$Companion_getInstance
  });
  package$format.ColladaParser = ColladaParser;
  Object.defineProperty(package$format, 'KS3D', {
    get: KS3D_getInstance
  });
  package$format.writeKs3d_wdewzb$ = writeKs3d;
  package$format.readKs3d_yirdke$ = readKs3d;
  var package$internal_0 = package$korge3d.internal || (package$korge3d.internal = {});
  package$internal_0.toFast_vghki2$ = toFast_0;
  package$internal_0.get_zfsvsb$ = get_22;
  package$internal_0.swizzle_wqmu8w$ = swizzle;
  package$internal_0.get_p9g06o$ = get_23;
  Object.defineProperty(package$internal_0, 'vector3DTemps_8be2vx$', {
    get: function () {
      return vector3DTemps;
    }
  });
  package$internal_0.Vector3DTemps = Vector3DTemps;
  package$internal_0.toFBuffer_8zurzt$ = toFBuffer;
  package$internal_0.toFBuffer_bzsts2$ = toFBuffer_0;
  Object.defineProperty(package$storage, 'NativeStorage', {
    get: NativeStorage_getInstance
  });
  var package$vibration = package$service.vibration || (package$service.vibration = {});
  package$vibration.NativeVibration = NativeVibration;
  DockingComponent.prototype.resized_m5tlkz$ = ResizeComponent.prototype.resized_m5tlkz$;
  SortedChildrenByComponent.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  MouseEvents$MouseEventsUpdate.prototype.update_xp3vpi$ = UpdateComponentWithViews.prototype.update_xp3vpi$;
  TestCoroutineDispatcher.prototype.delay_s8cxhz$ = Delay.prototype.delay_s8cxhz$;
  TestCoroutineDispatcher.prototype.invokeOnTimeout_8irseu$ = Delay.prototype.invokeOnTimeout_8irseu$;
  TimerComponents.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  TweenComponent.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  DummyUpdateComponentWithViews.prototype.update_xp3vpi$ = UpdateComponentWithViews.prototype.update_xp3vpi$;
  CancellableGroup.prototype.cancel_tcv7n7$ = Cancellable.prototype.cancel_tcv7n7$;
  View$addUpdatable$ObjectLiteral.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  View$DeferWithViewsUpdateComponentWithViews.prototype.update_xp3vpi$ = UpdateComponentWithViews.prototype.update_xp3vpi$;
  addUpdater$ObjectLiteral.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  addHrUpdater$ObjectLiteral.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  addFixedUpdater$ObjectLiteral.prototype.update_14dthe$ = UpdateComponentV2.prototype.update_14dthe$;
  onNextFrame$ObjectLiteral.prototype.update_xp3vpi$ = UpdateComponentWithViews.prototype.update_xp3vpi$;
  Views.prototype.openFileDialog_r0su5d$ = DialogInterface.prototype.openFileDialog_r0su5d$;
  Views.prototype.prompt_puj7f4$ = DialogInterface.prototype.prompt_puj7f4$;
  Object.defineProperty(IdentityFilter.prototype, 'border', Object.getOwnPropertyDescriptor(Filter.prototype, 'border'));
  Object.defineProperty(SwizzleColorsFilter.prototype, 'border', Object.getOwnPropertyDescriptor(Filter.prototype, 'border'));
  stencilIndex = new Extra$Property(void 0, stencilIndex$lambda);
  animateLibraryLoaders = new Extra$Property(void 0, animateLibraryLoaders$lambda);
  extraLanguage = new Extra$Property(void 0, extraLanguage$lambda);
  drag = new Extra$PropertyThis(void 0, drag$lambda);
  gamepad = new Extra$PropertyThis(void 0, gamepad$lambda);
  keys = new Extra$PropertyThis(void 0, keys$lambda);
  mouse = new Extra$PropertyThis(void 0, mouse$lambda);
  KORGE_VERSION = '1.13.2';
  logger = Logger.Companion.invoke_61zpoe$('BatchBuilder2D');
  debugLineRenderContext = new Extra$PropertyThis(void 0, debugLineRenderContext$lambda);
  logger_0 = Logger.Companion.invoke_61zpoe$('RenderContext2D');
  debugBmpFont = lazy(debugBmpFont$lambda);
  AlphaTransition = new Transition(AlphaTransition$lambda);
  spaces = Regex_init('\\s+');
  tilemapLog = Logger.Companion.invoke_61zpoe$('tilemap');
  emptyCallback = emptyCallback$lambda;
  defaultTextSkin = new Extra$Property(null, defaultTextSkin$lambda);
  defaultUIFont = new Extra$Property(null, defaultUIFont$lambda);
  defaultUISkin = new Extra$Property(null, defaultUISkin$lambda);
  defaultCheckSkin = new Extra$Property(null, defaultCheckSkin$lambda);
  defaultUpSkin = new Extra$Property(null, defaultUpSkin$lambda);
  defaultDownSkin = new Extra$Property(null, defaultDownSkin$lambda);
  defaultLeftSkin = new Extra$Property(null, defaultLeftSkin$lambda);
  defaultRightSkin = new Extra$Property(null, defaultRightSkin$lambda);
  defaultComboBoxSkin = new Extra$Property(null, defaultComboBoxSkin$lambda);
  defaultVerScrollBarSkin = new Extra$Property(null, defaultVerScrollBarSkin$lambda);
  defaultHorScrollBarSkin = new Extra$Property(null, defaultHorScrollBarSkin$lambda);
  DefaultTextSkin = lazy(DefaultTextSkin$lambda);
  DefaultUIFont = lazy(DefaultUIFont$lambda);
  DEFAULT_UI_SKIN_IMG = lazy(DEFAULT_UI_SKIN_IMG$lambda);
  DefaultUISkin = lazy(DefaultUISkin$lambda);
  DefaultCheckSkin = lazy(DefaultCheckSkin$lambda);
  DefaultUpSkin = lazy(DefaultUpSkin$lambda);
  DefaultDownSkin = lazy(DefaultDownSkin$lambda);
  DefaultLeftSkin = lazy(DefaultLeftSkin$lambda);
  DefaultRightSkin = lazy(DefaultRightSkin$lambda);
  DefaultComboBoxSkin = lazy(DefaultComboBoxSkin$lambda);
  DefaultVerScrollBarSkin = lazy(DefaultVerScrollBarSkin$lambda);
  DefaultHorScrollBarSkin = lazy(DefaultHorScrollBarSkin$lambda);
  Fonts_fonts = lazy(Fonts_fonts$lambda);
  collisionContext = new threadLocal(collisionContext$lambda);
  vector3DTemps = new Vector3DTemps();
  Kotlin.defineModule('korge-root-korge', _);
  return _;
}));

//# sourceMappingURL=korge-root-korge.js.map
